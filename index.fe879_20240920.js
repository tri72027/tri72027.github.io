System.register("chunks:///_virtual/ActionBase.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ActionState.ts"], (function(t) {
  var n, e, i;
  return {
      setters: [function(t) {
          n = t.createClass
      }
      , function(t) {
          e = t.cclegacy
      }
      , function(t) {
          i = t.ActionState
      }
      ],
      execute: function() {
          e._RF.push({}, "a2a04zvcSJE46jkWYzVSVVc", "ActionBase", void 0),
          t("default", function() {
              function t() {
                  this._uuid = 0,
                  this.actState = i.Prepare
              }
              var e = t.prototype;
              return e.reset = function() {
                  this._uuid = t.UUID_INDEX,
                  t.UUID_INDEX += 1,
                  this.actState = i.Prepare
              }
              ,
              e.update = function(t) {
                  return this.actState == i.Prepare && this.onPrepare() && (this.actState = i.Start),
                  this.actState == i.Start && (this.onStart(),
                  this.actState = i.Update),
                  this.actState == i.Update && this.onUpdate(t) && (this.actState = i.Finish),
                  this.actState == i.Finish
              }
              ,
              e.onPrepare = function() {
                  return !0
              }
              ,
              e.onStart = function() {}
              ,
              e.onUpdate = function(t) {
                  return !0
              }
              ,
              e.onFinish = function() {}
              ,
              e.finish = function() {
                  this.onFinish()
              }
              ,
              n(t, [{
                  key: "uuid",
                  get: function() {
                      return this._uuid
                  }
              }]),
              t
          }()).UUID_INDEX = 1,
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ActionState.ts", ["cc"], (function(t) {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "d3e6azHVrFF3YCzFP8QZn0l", "ActionState", void 0);
          t("ActionState", function(t) {
              return t[t.Prepare = 0] = "Prepare",
              t[t.Start = 1] = "Start",
              t[t.Update = 2] = "Update",
              t[t.Finish = 3] = "Finish",
              t
          }({}));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ActionSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts", "./TimeSystem.ts"], (function(e) {
  var u, i, t, n, s;
  return {
      setters: [function(e) {
          u = e.inheritsLoose,
          i = e.assertThisInitialized
      }
      , function(e) {
          t = e.cclegacy
      }
      , function(e) {
          n = e.default
      }
      , function(e) {
          s = e.default
      }
      ],
      execute: function() {
          t._RF.push({}, "b58f129urZFQahvZ+9CF64h", "ActionSystem", void 0);
          e("default", function(e) {
              function t() {
                  var u;
                  return (u = e.call(this) || this).runQueue = new Array,
                  u.addQueue = new Array,
                  u.delQueue = new Array,
                  u.isRuning = !1,
                  s.ins.addUpdate(i(u)),
                  u
              }
              u(t, e);
              var n = t.prototype;
              return n.update = function(e) {
                  var u, i = 1e3 * e;
                  if (this.delQueue.length > 0) {
                      for (var t = 0; t < this.delQueue.length; ++t) {
                          var n = this.delQueue[t];
                          this.killByUUID(n)
                      }
                      this.delQueue.splice(0, this.delQueue.length)
                  }
                  (this.isRuning = !0,
                  this.addQueue.length > 0) && ((u = this.runQueue).push.apply(u, this.addQueue),
                  this.addQueue.splice(0, this.addQueue.length));
                  if (this.runQueue.length > 0)
                      for (var s = 0; s < this.runQueue.length; )
                          this.runQueue[s].update(i) ? (this.runQueue[s].finish(),
                          this.runQueue.splice(s, 1)) : ++s;
                  this.isRuning = !1
              }
              ,
              n.add = function(e) {
                  this.addQueue.push(e)
              }
              ,
              n.kill = function(e) {
                  this.isRuning ? this.delQueue.push(e) : this.killByUUID(e)
              }
              ,
              n.killByUUID = function(e) {
                  for (var u = 0; u < this.addQueue.length; ++u)
                      if (this.addQueue[u].uuid == e)
                          return this.addQueue[u].finish(),
                          void this.addQueue.splice(u, 1);
                  for (var i = 0; i < this.runQueue.length; ++i)
                      if (this.runQueue[i].uuid == e)
                          return this.runQueue[i].finish(),
                          void this.runQueue.splice(i, 1)
              }
              ,
              n.killAll = function() {
                  for (var e = 0; e < this.addQueue.length; ++e)
                      this.addQueue[e].finish();
                  this.addQueue.length = 0;
                  for (var u = 0; u < this.runQueue.length; ++u)
                      this.runQueue[u].finish();
                  this.runQueue.length = 0
              }
              ,
              t
          }(n()));
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ActionUtils.ts", ["cc", "./Bezier2ToAction.ts", "./CallAction.ts", "./DelayAction.ts", "./LerpAction.ts", "./ParallelAction.ts", "./SequenceAction.ts", "./SetAction.ts", "./ToAction.ts", "./ActionSystem.ts", "./LerpColorAction.ts", "./ToVec3Action.ts"], (function(t) {
  var n, e, i, a, u, s, c, r, o, l, d, f, h, p, O;
  return {
      setters: [function(t) {
          n = t.cclegacy,
          e = t.easing,
          i = t.Vec3,
          a = t.Color
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          l = t.default
      }
      , function(t) {
          d = t.default
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          O = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "47c77qfZINAALuNHKHiNNMK", "ActionUtils", void 0);
          t("default", function() {
              function t() {
                  this.queue = [],
                  this.current = void 0
              }
              var n = t.prototype;
              return n.clear = function() {
                  this.queue.length > 0 && this.queue.splice(0, this.queue.length)
              }
              ,
              n.beginSequence = function() {
                  var t = l.POOL.spawn();
                  return this.add(t),
                  this.current = t,
                  this.queue.push(t),
                  t.uuid
              }
              ,
              n.beginParallel = function() {
                  var t = o.POOL.spawn();
                  return this.add(t),
                  this.current = t,
                  this.queue.push(t),
                  t.uuid
              }
              ,
              n.end = function() {
                  var t = this.queue.length - 1;
                  this.queue.splice(t, 1),
                  t--,
                  this.current = this.queue[t]
              }
              ,
              n.add = function(t) {
                  this.current ? this.current.add(t) : h.ins.add(t)
              }
              ,
              n.delay = function(t) {
                  var n = c.POOL.spawn();
                  n.duration = t,
                  this.add(n)
              }
              ,
              n.call = function(t, n) {
                  var e = s.POOL.spawn();
                  e.caller = t,
                  e.method = n;
                  for (var i = arguments.length, a = new Array(i > 2 ? i - 2 : 0), u = 2; u < i; u++)
                      a[u - 2] = arguments[u];
                  e.args = a,
                  this.add(e)
              }
              ,
              n.delayCall = function(t, n, e) {
                  this.beginSequence(),
                  this.delay(t);
                  for (var i = arguments.length, a = new Array(i > 3 ? i - 3 : 0), u = 3; u < i; u++)
                      a[u - 3] = arguments[u];
                  this.call.apply(this, [n, e].concat(a)),
                  this.end()
              }
              ,
              n.to = function(t, n, i, a) {
                  var u = f.POOL.spawn();
                  u.target = t,
                  u.dstProps = n,
                  u.duration = i,
                  u.ease = a || e.linear,
                  this.add(u)
              }
              ,
              n.toVec3 = function(t, n, a, u) {
                  var s = O.POOL.spawn();
                  s.target = t,
                  i.copy(s.dstPos, n),
                  s.duration = a,
                  s.ease = u || e.linear,
                  this.add(s)
              }
              ,
              n.lerp = function(t, n, i, a, u, s) {
                  var c = r.POOL.spawn();
                  c.caller = t,
                  c.method = n,
                  c.src = i,
                  c.dst = a,
                  c.duration = u,
                  c.ease = s || e.linear,
                  this.add(c)
              }
              ,
              n.lerpColor = function(t, n, i, u, s, c, r) {
                  var o = p.POOL.spawn();
                  o.caller = t,
                  o.method = n,
                  a.copy(o.src, i),
                  a.copy(o.dst, u),
                  o.duration = s,
                  o.ease = c || e.linear,
                  o.complete = r,
                  this.add(o)
              }
              ,
              n.set = function(t, n) {
                  var e = d.POOL.spawn();
                  e.target = t,
                  e.props = n,
                  this.add(e)
              }
              ,
              n.bezier2To = function(t, n, i, a, s) {
                  var c = u.POOL.spawn();
                  c.target = t,
                  c.ccc = n,
                  c.dst = i,
                  c.duration = a,
                  c.ease = s || e.linear,
                  this.add(c)
              }
              ,
              n.kill = function(t) {
                  h.ins.kill(t)
              }
              ,
              t
          }());
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/AnimationAutoPlay.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(i) {
  var t, e, n, a, o, r, l, u, p;
  return {
      setters: [function(i) {
          t = i.applyDecoratedDescriptor,
          e = i.inheritsLoose,
          n = i.initializerDefineProperty,
          a = i.assertThisInitialized
      }
      , function(i) {
          o = i.cclegacy,
          r = i._decorator,
          l = i.CCBoolean,
          u = i.Animation,
          p = i.Component
      }
      ],
      execute: function() {
          var c, s, y, m, b, f, h, A, P, g;
          o._RF.push({}, "153029FODJKP4vyrnCdkRAh", "AnimationAutoPlay", void 0);
          var v = r.ccclass
            , d = r.property;
          i("AnimationAutoPlay", (c = v("AnimationAutoPlay"),
          s = d({
              type: l
          }),
          y = d({
              type: l
          }),
          m = d({
              type: u
          }),
          c((h = t((f = function(i) {
              function t() {
                  for (var t, e = arguments.length, o = new Array(e), r = 0; r < e; r++)
                      o[r] = arguments[r];
                  return t = i.call.apply(i, [this].concat(o)) || this,
                  n(t, "autoPlay", h, a(t)),
                  n(t, "isLoop", A, a(t)),
                  n(t, "animation", P, a(t)),
                  n(t, "animName", g, a(t)),
                  t
              }
              return e(t, i),
              t.prototype.onEnable = function() {
                  this.autoPlay && this.animation.play(this.animName)
              }
              ,
              t
          }(p)).prototype, "autoPlay", [s], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          A = t(f.prototype, "isLoop", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          P = t(f.prototype, "animation", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          g = t(f.prototype, "animName", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return ""
              }
          }),
          b = f)) || b));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/AtkBatch.ts", ["cc", "./BattleDef.ts", "./CreatureManager.ts"], (function(t) {
  var e, i, n;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      , function(t) {
          i = t.AtkObjType
      }
      , function(t) {
          n = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "bca9cMAD4lFtZh+H3KQV6I6", "AtkBatch", void 0);
          t("default", function() {
              function t() {
                  this.atkBatch = 0,
                  this.atkTargetMax = -1,
                  this.atkSegment = 0,
                  this.dmg = 0,
                  this.dmgCritical = 0,
                  this.aoType = void 0,
                  this.aosn = 0,
                  this.aoid = 0,
                  this.crtSN = 0,
                  this.knockback = 0,
                  this.equipment = null,
                  this.wsn = 0,
                  this.appendBuff = 0,
                  this.atkIntl = 0,
                  this.Valid = !0
              }
              var e = t.prototype;
              return e.init = function(t) {
                  this.atkBatch = n.ins.increaseAtkBatch(),
                  this.atkTargetMax = t.getTargetMax(),
                  0 == this.atkTargetMax && (this.atkTargetMax = -1),
                  this.dmg = t.getDmg(),
                  this.dmgCritical = t.getDmgCritical(),
                  this.aoType = t.getAOType(),
                  this.aosn = t.getAOSN(),
                  this.aoid = t.getAOID(),
                  this.crtSN = t.getOwnerSN(),
                  this.knockback = t.getKnockBack(),
                  this.aoType == i.Weapon ? (this.equipment = t,
                  this.appendBuff = t.getWeaponConfig().AppendBuff,
                  this.wsn = t.getWSN()) : this.aoType == i.Tower ? (this.appendBuff = t.getAppendBuff(),
                  this.wsn = t.getSrcWeaponSN()) : this.aoType == i.Talent || this.aoType == i.Monster && (this.appendBuff = t.getAppendBuff());
                  var e = Date.now();
                  this.atkIntl = e - t.getLastAtkTick(),
                  this.aoType != i.Monster && (this.Valid = this.atkIntl >= t.getAtkTime()),
                  t.setAtkTick(e)
              }
              ,
              e.initEx = function(t) {
                  this.atkBatch = n.ins.increaseAtkBatch(),
                  this.atkTargetMax = t.getTargetMax(),
                  0 == this.atkTargetMax && (this.atkTargetMax = -1),
                  this.dmg = t.getDmg(),
                  this.dmgCritical = t.getDmgCritical(),
                  this.aoType = t.getAOType(),
                  this.aosn = t.getAOSN(),
                  this.aoid = t.getAOID(),
                  this.crtSN = t.getOwnerCrtSN(),
                  this.knockback = t.getKnockback(),
                  this.aoType == i.Weapon && (this.equipment = t.getEquipment()),
                  this.appendBuff = t.getAppendBuff(),
                  this.wsn = t.getWeaponSN(),
                  this.atkIntl = t.getAtkIntl(),
                  this.Valid = t.Valid
              }
              ,
              e.destory = function() {
                  this.equipment = null
              }
              ,
              e.setSegment = function(t) {
                  this.atkSegment = t
              }
              ,
              e.getAtkUnique = function() {
                  return this.atkBatch + 1e5 * this.atkSegment
              }
              ,
              e.atkOccur = function() {
                  this.atkTargetMax -= 1
              }
              ,
              e.isAtkLimit = function() {
                  return 0 == this.atkTargetMax
              }
              ,
              e.getBatch = function() {
                  return this.atkBatch
              }
              ,
              e.getSegament = function() {
                  return this.atkSegment
              }
              ,
              e.getTargetMax = function() {
                  return this.atkTargetMax
              }
              ,
              e.getDmg = function() {
                  return this.dmg
              }
              ,
              e.getDmgCritical = function() {
                  return this.dmgCritical
              }
              ,
              e.getAOType = function() {
                  return this.aoType
              }
              ,
              e.getOwnerCrtSN = function() {
                  return this.crtSN
              }
              ,
              e.getKnockback = function() {
                  return this.knockback
              }
              ,
              e.getEquipment = function() {
                  return this.equipment
              }
              ,
              e.getAppendBuff = function() {
                  return this.appendBuff
              }
              ,
              e.getAOSN = function() {
                  return this.aosn
              }
              ,
              e.getAOID = function() {
                  return this.aoid
              }
              ,
              e.getWeaponSN = function() {
                  return this.wsn
              }
              ,
              e.getAtkIntl = function() {
                  return this.atkIntl
              }
              ,
              t
          }());
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/AtkStrategy.ts", ["cc", "./CreatureManager.ts", "./BattleDef.ts"], (function(t) {
  var e, i, n;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      , function(t) {
          i = t.default
      }
      , function(t) {
          n = t.BattleDef
      }
      ],
      execute: function() {
          e._RF.push({}, "a5ab1zlA1JPAqnsorNkFdAJ", "AtkStrategy", void 0);
          var s = t("StrategyType", function(t) {
              return t[t.Null = 0] = "Null",
              t[t.Chase = 1] = "Chase",
              t[t.Charge = 2] = "Charge",
              t[t.Skill = 3] = "Skill",
              t[t.Summon = 4] = "Summon",
              t[t.Boss = 5] = "Boss",
              t[t.Tower = 32] = "Tower",
              t[t.TowerLaser = 33] = "TowerLaser",
              t
          }({}))
            , o = t("AtkState", function(t) {
              return t[t.Idle = 0] = "Idle",
              t[t.Chasing = 1] = "Chasing",
              t[t.AtkCD = 2] = "AtkCD",
              t[t.AtkEnding = 3] = "AtkEnding",
              t
          }({}));
          t("BossType", function(t) {
              return t[t.FireDragon = 1] = "FireDragon",
              t[t.Gorilla = 2] = "Gorilla",
              t[t.Pharaoh = 3] = "Pharaoh",
              t[t.TreeLeader = 4] = "TreeLeader",
              t[t.Yeti = 5] = "Yeti",
              t[t.Crocodile = 6] = "Crocodile",
              t[t.Skeleton = 7] = "Skeleton",
              t[t.RedShark = 8] = "RedShark",
              t
          }({})),
          t("AtkStrategy", function() {
              function t() {
                  this.owner = void 0,
                  this.frameCheck = void 0,
                  this.frameCheckMax = 1,
                  this.target = void 0,
                  this.state = o.Idle,
                  this.lastAtkTick = 0,
                  this.atkCD = 0,
                  this.atkCDEndTick = 0,
                  this.collisionCD = 0,
                  this.atkRadius = void 0,
                  this.atkRadiusSuqare = void 0,
                  this.atkEndingTick = 0,
                  this.shapeRadius = 0,
                  this.shapeRadiusSuqare = 0,
                  this.targetRadius = 0,
                  this.collisionEndTick = 0
              }
              var e = t.prototype;
              return e.init = function(t, e) {}
              ,
              e.destory = function() {}
              ,
              e.onUpdate = function() {}
              ,
              e.getStrategyType = function() {
                  return s.Null
              }
              ,
              e.onAtked = function() {}
              ,
              e.checkCollision = function() {
                  if (this.collisionEndTick <= 0) {
                      var t = this.owner.getPos()
                        , e = this.target.getPos()
                        , s = e.x - t.x
                        , o = e.y - t.y;
                      if (Math.abs(s) < this.shapeRadius || Math.abs(o) < this.shapeRadius)
                          s * s + o * o < this.shapeRadiusSuqare && (this.target.beAtk(i.ins.generateAtkBatch(this.owner), !0),
                          this.onCollision())
                  } else
                      this.collisionEndTick -= n.FrameTick * this.frameCheckMax
              }
              ,
              e.onCollision = function() {
                  this.collisionEndTick += this.collisionCD
              }
              ,
              e.onAttrChanged = function() {
                  this.owner.setMoveSpeed(this.owner.getAttr().getMoveSpeed())
              }
              ,
              t
          }());
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Attr.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Buff.ts", "./BattleDef.ts", "./ExtraEffectType.ts", "./proto.mjs_cjs=&original=.js", "./proto.js"], (function(t) {
  var e, f, i, r, s, n, u;
  return {
      setters: [function(t) {
          e = t.createForOfIteratorHelperLoose
      }
      , function(t) {
          f = t.cclegacy
      }
      , function(t) {
          i = t.Buff,
          r = t.DebuffType
      }
      , function(t) {
          s = t.BattleDef
      }
      , function(t) {
          n = t.BuffTriggerType
      }
      , null, function(t) {
          u = t.default
      }
      ],
      execute: function() {
          f._RF.push({}, "09556pwdjRDBbZlAZuo+hS7", "Attr", void 0);
          t("Attr", function() {
              function t(t) {
                  this.owner = null,
                  this.attrVals = new Array,
                  this.attrOri = void 0,
                  this.debuffSet = new Map,
                  this.debuffFlag = 0,
                  this.buffs = new Array,
                  this.buffLen = 0,
                  this.removeId = new Array,
                  this.buffTick = 0,
                  this.buffExtra = new Map,
                  this.owner = t;
                  for (var e = n.Nothing + 1; e < n.Max; e++)
                      this.buffExtra.set(e, new Array)
              }
              var f = t.prototype;
              return f.destroy = function() {
                  this.owner = null,
                  this.buffExtra.clear(),
                  this.buffExtra = null,
                  this.debuffSet.clear(),
                  this.debuffSet = null;
                  for (var t = 0; t < this.buffs.length; t++)
                      this.buffs[t].destroy(),
                      this.buffs[t] = null;
                  this.buffs = null,
                  this.buffLen = 0,
                  this.removeId = null
              }
              ,
              f.init = function(t) {
                  this.attrVals = t
              }
              ,
              f.getOwner = function() {
                  return this.owner
              }
              ,
              f.onUpdate = function() {
                  return this.onUpdateBuff()
              }
              ,
              f.onStageEnd = function() {
                  for (var t = 0; t < this.buffs.length; t++) {
                      var e = this.buffs[t];
                      e.isInfinity() || this.removeId.push(e.cfgID)
                  }
                  if (this.removeId.length > 0) {
                      for (var f = 0; f < this.removeId.length; f++)
                          this.removeBuff(this.removeId[f]);
                      this.removeId.splice(0, this.removeId.length)
                  }
              }
              ,
              f.getBuffLen = function() {
                  return this.buffLen
              }
              ,
              f.onUpdateBuff = function() {
                  this.buffTick += s.FrameTick;
                  for (var t = 0; t < this.buffs.length; t++) {
                      var e = this.buffs[t];
                      if (e.updateDot(),
                      this.getOwner().isDead())
                          return !1;
                      e.isEnd(this.buffTick) && this.removeId.push(e.cfgID)
                  }
                  if (this.removeId.length > 0) {
                      for (var f = 0; f < this.removeId.length; f++)
                          this.removeBuff(this.removeId[f]);
                      return this.removeId.splice(0, this.removeId.length),
                      !0
                  }
                  return !1
              }
              ,
              f.addBuff = function(t, f, s, u, h) {
                  for (var a = !0, o = 0; o < this.buffs.length; o++) {
                      var l = this.buffs[o];
                      if (l.cfgID == t) {
                          if (1 == l.cfgBuff.Unique) {
                              a = !1;
                              break
                          }
                          if (l.AtkObjSN == u) {
                              l.reset(this.buffTick, f),
                              a = !1;
                              break
                          }
                      }
                  }
                  if (a) {
                      var c = new i;
                      c.init(this.owner, f, t, this.buffTick, s, u, h),
                      c.affect(!0, this, this.debuffSet),
                      this.buffs.push(c);
                      var g = c.cfgBuff.ExtraType;
                      if (g != n.Nothing)
                          this.buffExtra.get(g).push(c);
                      if (c.cfgBuff.Debuff != r.Null) {
                          this.debuffFlag = 0;
                          for (var b, d = e(this.debuffSet); !(b = d()).done; ) {
                              var v = b.value
                                , p = v[0];
                              v[1];
                              this.debuffFlag |= 1 >> p - 1
                          }
                      }
                      this.buffLen = this.buffs.length
                  }
              }
              ,
              f.removeBuff = function(t) {
                  for (var f = null, i = 0; i < this.buffs.length; i++)
                      if (this.buffs[i].cfgID == t) {
                          f = this.buffs[i],
                          this.buffs.splice(i, 1);
                          break
                      }
                  if (null != f) {
                      f.affect(!1, this, this.debuffSet);
                      var s = f.cfgBuff.ExtraType;
                      if (s != n.Nothing) {
                          f.onExtra_Remove(this);
                          for (var u = this.buffExtra.get(s), h = 0; h < u.length; h++)
                              if (u[h].cfgID == f.cfgID) {
                                  u.splice(h, 1);
                                  break
                              }
                      }
                      if (f.cfgBuff.Debuff != r.Null) {
                          this.debuffFlag = 0;
                          for (var a, o = e(this.debuffSet); !(a = o()).done; ) {
                              var l = a.value
                                , c = l[0];
                              l[1];
                              this.debuffFlag |= 1 >> c - 1
                          }
                      }
                      f.destroy(),
                      f = null,
                      this.buffLen = this.buffs.length
                  }
              }
              ,
              f.canMove = function() {
                  return !this.debuffSet.has(r.Stun)
              }
              ,
              f.canAtk = function() {
                  return !this.debuffSet.has(r.Stun)
              }
              ,
              f.isStun = function() {
                  return this.debuffSet.has(r.Stun)
              }
              ,
              f.isBurning = function() {
                  return this.debuffSet.has(r.Burning)
              }
              ,
              f.getDebuffSet = function() {
                  return this.debuffSet
              }
              ,
              f.getDebuffFlag = function() {
                  return this.debuffFlag
              }
              ,
              f.setLife = function(t) {
                  t < 0 || this.setVal(u.msg.AttrType.AT_CurLife, t)
              }
              ,
              f.onChange = function() {}
              ,
              f.getHpPercent = function() {
                  return this.getVal(u.msg.AttrType.AT_CurLife) / this.getVal(u.msg.AttrType.AT_MaxLife)
              }
              ,
              f.buffEffect = function(t, e, f, i) {
                  var r;
                  null != this.attrOri && 0 != this.attrOri.length || (this.attrOri = new Array,
                  (r = this.attrOri).push.apply(r, this.attrVals));
                  t ? this.attrVals[e] += 1 == f ? Math.floor(this.attrOri[e] * i / s.UnitePct) : i : this.attrVals[e] -= 1 == f ? Math.floor(this.attrOri[e] * i / s.UnitePct) : i,
                  e == u.msg.AttrType.AT_IncreaseMoveSpeed && (this.attrVals[u.msg.AttrType.AT_RealMoveSpeed] = Math.floor(s.UnitePct * this.attrOri[u.msg.AttrType.AT_BaseMoveSpeed] / (this.attrVals[u.msg.AttrType.AT_IncreaseMoveSpeed] + s.UnitePct)),
                  this.owner.updateViewAttr())
              }
              ,
              f.isDead = function() {
                  return this.getHP() <= 0
              }
              ,
              f.isFull = function() {
                  return this.getHP() >= this.getVal(u.msg.AttrType.AT_MaxLife)
              }
              ,
              f.getHP = function() {
                  return this.getVal(u.msg.AttrType.AT_CurLife)
              }
              ,
              f.onDamage = function(t) {
                  var e = this.getHP();
                  return (e -= t) <= 0 && (e = 0),
                  this.setLife(e),
                  e <= 0
              }
              ,
              f.onHeal = function(t) {
                  var e = this.getHP();
                  (e += t) > this.getVal(u.msg.AttrType.AT_MaxLife) ? this.setLife(this.getVal(u.msg.AttrType.AT_MaxLife)) : this.setLife(e)
              }
              ,
              f.onBeAtk = function() {
                  for (var t = this.buffExtra.get(n.BeAtk), e = 0; e < t.length; e++) {
                      t[e].onExtra_BeAtk(this)
                  }
              }
              ,
              f.getMoveSpeed = function() {
                  return this.getVal(u.msg.AttrType.AT_RealMoveSpeed)
              }
              ,
              f.getVal = function(t) {
                  return this.attrVals[t]
              }
              ,
              f.setVal = function(t, e) {
                  this.attrVals[t] = e
              }
              ,
              t
          }());
          f._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/AttrType.ts", ["cc", "./proto.mjs_cjs=&original=.js", "./proto.js"], (function(e) {
  var t, p;
  return {
      setters: [function(e) {
          t = e.cclegacy
      }
      , null, function(e) {
          p = e.default
      }
      ],
      execute: function() {
          t._RF.push({}, "4adbbm+3GREa7oLvbpZBBzV", "AttrType", void 0);
          e("default", [{
              name: "MAX HP",
              value: p.msg.AttrType.AT_MaxLife,
              upper: 100
          }, {
              name: "DAMAGE",
              value: p.msg.AttrType.AT_Dmg,
              upper: 100
          }, {
              name: "ARMOR",
              value: p.msg.AttrType.AT_Defense,
              upper: 100
          }, {
              name: "ATTACK SPEED",
              value: p.msg.AttrType.AT_AtkSpeed,
              upper: 80
          }, {
              name: "CRIT RATE",
              value: p.msg.AttrType.AT_CriticalRate,
              upper: 90
          }, {
              name: "RANGE",
              value: p.msg.AttrType.AT_AtkRange,
              upper: 100
          }, {
              name: "DODGE",
              value: p.msg.AttrType.AT_Dodge,
              upper: 75
          }, {
              name: "MOVE SPEED",
              value: p.msg.AttrType.AT_IncreaseMoveSpeed,
              upper: 80
          }, {
              name: "ENGINEERING",
              value: p.msg.AttrType.AT_Enr,
              upper: 100
          }, {
              name: "LUCK",
              value: p.msg.AttrType.AT_Luck,
              upper: 100
          }]);
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/AutoRecycle.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ResSystem.ts"], (function(t) {
  var e, i, n, r, o, c, u, a, s;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          n = t.initializerDefineProperty,
          r = t.assertThisInitialized
      }
      , function(t) {
          o = t.cclegacy,
          c = t._decorator,
          u = t.CCFloat,
          a = t.Component
      }
      , function(t) {
          s = t.default
      }
      ],
      execute: function() {
          var l, p, y, f, d;
          o._RF.push({}, "7306eZl4NZC44BvYgsfp9vx", "AutoRecycle", void 0);
          var h = c.ccclass
            , v = c.property;
          t("AutoRecycle", (l = h("AutoRecycle"),
          p = v({
              type: u
          }),
          l((d = e((f = function(t) {
              function e() {
                  for (var e, i = arguments.length, o = new Array(i), c = 0; c < i; c++)
                      o[c] = arguments[c];
                  return e = t.call.apply(t, [this].concat(o)) || this,
                  n(e, "duration", d, r(e)),
                  e.time = void 0,
                  e
              }
              i(e, t);
              var o = e.prototype;
              return o.onEnable = function() {
                  this.time = 0
              }
              ,
              o.update = function(t) {
                  this.time += t,
                  this.time > this.duration && s.ins.recycle(this.node)
              }
              ,
              e
          }(a)).prototype, "duration", [p], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1.5
              }
          }),
          y = f)) || y));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/BagData.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./EntityBase.ts"], (function(t) {
  var n, a, e;
  return {
      setters: [function(t) {
          n = t.inheritsLoose
      }
      , function(t) {
          a = t.cclegacy
      }
      , function(t) {
          e = t.default
      }
      ],
      execute: function() {
          var c;
          a._RF.push({}, "1ed65wkldtERIOB3WQAMd02", "BagData", void 0);
          t("default", set_class_name("BagData")(c = function(t) {
              function a() {
                  for (var n, a = arguments.length, e = new Array(a), c = 0; c < a; c++)
                      e[c] = arguments[c];
                  return (n = t.call.apply(t, [this].concat(e)) || this).name = void 0,
                  n.age = void 0,
                  n.account = void 0,
                  n.coin = 0,
                  n
              }
              return n(a, t),
              a
          }(e)) || c);
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Base64.ts", ["cc"], (function(r) {
  var t;
  return {
      setters: [function(r) {
          t = r.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "61094BQN31E0Z7vsW99t35x", "Base64", void 0),
          r("default", function() {
              function r() {}
              return r.encode = function(r) {
                  var t, e, o, n, a, h, c, i = "", d = 0;
                  for (r = this._utf8_encode(r); d < r.length; )
                      n = (t = r.charCodeAt(d++)) >> 2,
                      a = (3 & t) << 4 | (e = r.charCodeAt(d++)) >> 4,
                      h = (15 & e) << 2 | (o = r.charCodeAt(d++)) >> 6,
                      c = 63 & o,
                      isNaN(e) ? h = c = 64 : isNaN(o) && (c = 64),
                      i = i + this._keyStr.charAt(n) + this._keyStr.charAt(a) + this._keyStr.charAt(h) + this._keyStr.charAt(c);
                  return i
              }
              ,
              r.decode = function(r) {
                  var t, e, o, n, a, h, c = "", i = 0;
                  for (r = r.replace(/[^A-Za-z0-9]/g, ""); i < r.length; )
                      t = this._keyStr.indexOf(r.charAt(i++)) << 2 | (n = this._keyStr.indexOf(r.charAt(i++))) >> 4,
                      e = (15 & n) << 4 | (a = this._keyStr.indexOf(r.charAt(i++))) >> 2,
                      o = (3 & a) << 6 | (h = this._keyStr.indexOf(r.charAt(i++))),
                      c += String.fromCharCode(t),
                      64 != a && (c += String.fromCharCode(e)),
                      64 != h && (c += String.fromCharCode(o));
                  return c = this._utf8_decode(c)
              }
              ,
              r._utf8_encode = function(r) {
                  r = r.replace(/\r\n/g, "\n");
                  for (var t = "", e = 0; e < r.length; e++) {
                      var o = r.charCodeAt(e);
                      o < 128 ? t += String.fromCharCode(o) : o > 127 && o < 2048 ? (t += String.fromCharCode(o >> 6 | 192),
                      t += String.fromCharCode(63 & o | 128)) : (t += String.fromCharCode(o >> 12 | 224),
                      t += String.fromCharCode(o >> 6 & 63 | 128),
                      t += String.fromCharCode(63 & o | 128))
                  }
                  return t
              }
              ,
              r._utf8_decode = function(r) {
                  for (var t = "", e = 0, o = 0, n = 0, a = 0; e < r.length; )
                      (o = r.charCodeAt(e)) < 128 ? (t += String.fromCharCode(o),
                      e++) : o > 191 && o < 224 ? (n = r.charCodeAt(e + 1),
                      t += String.fromCharCode((31 & o) << 6 | 63 & n),
                      e += 2) : (n = r.charCodeAt(e + 1),
                      a = r.charCodeAt(e + 2),
                      t += String.fromCharCode((15 & o) << 12 | (63 & n) << 6 | 63 & a),
                      e += 3);
                  return t
              }
              ,
              r
          }())._keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/BattleDef.ts", ["cc"], (function(e) {
  var n;
  return {
      setters: [function(e) {
          n = e.cclegacy
      }
      ],
      execute: function() {
          n._RF.push({}, "1a517uNHZhNYY3qcBjnKzZd", "BattleDef", void 0);
          e("BattleDef", function(e) {
              return e[e.UnitePct = 1e4] = "UnitePct",
              e[e.DefenseX = 20] = "DefenseX",
              e[e.QuadTreeLvl = 3] = "QuadTreeLvl",
              e[e.SpawnCheck = 200] = "SpawnCheck",
              e[e.SpawnPreShown = 1500] = "SpawnPreShown",
              e[e.RemainIntl = 200] = "RemainIntl",
              e[e.FrameTick = 60] = "FrameTick",
              e
          }({})),
          e("ObjType", function(e) {
              return e[e.Monster = 0] = "Monster",
              e[e.Char = 1] = "Char",
              e[e.Tower = 2] = "Tower",
              e
          }({})),
          e("AtkObjType", function(e) {
              return e[e.Weapon = 0] = "Weapon",
              e[e.Tower = 1] = "Tower",
              e[e.Talent = 2] = "Talent",
              e[e.Monster = 3] = "Monster",
              e[e.Item = 4] = "Item",
              e
          }({})),
          e("CampType", function(e) {
              return e[e.Hero = 0] = "Hero",
              e[e.Dungeon = 1] = "Dungeon",
              e
          }({})),
          e("AxisX", [-1, -1, 0, 1, 1, 1, 0, -1]),
          e("AxisY", [0, 1, 1, 1, 0, -1, -1, -1]);
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/BattleMap.ts", ["cc"], (function(t) {
  var i, n;
  return {
      setters: [function(t) {
          i = t.cclegacy,
          n = t.Vec3
      }
      ],
      execute: function() {
          i._RF.push({}, "8f766ZOErtNR5QcmsTACdGW", "BattleMap", void 0);
          t("BattleMap", function() {
              function t() {
                  this.width = 0,
                  this.height = 0,
                  this.coordinateMin = void 0,
                  this.coordinateMax = void 0,
                  this.coordinateCenter = void 0
              }
              var i = t.prototype;
              return i.getWidth = function() {
                  return this.width
              }
              ,
              i.getHeight = function() {
                  return this.height
              }
              ,
              i.init = function(t, i, e, o) {
                  this.width = e,
                  this.height = o,
                  this.coordinateMin = new n(t,i,0),
                  this.coordinateMax = new n(t + e,i + o,0),
                  this.coordinateCenter = new n(t + e / 2,i + o / 2,0)
              }
              ,
              i.destory = function() {}
              ,
              i.getCoordinateMin = function() {
                  return this.coordinateMin
              }
              ,
              i.getCoordinateMax = function() {
                  return this.coordinateMax
              }
              ,
              i.getCoordinateCenter = function() {
                  return this.coordinateCenter
              }
              ,
              t
          }());
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/BattleMgr.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts", "./BattleMap.ts", "./BattleDef.ts", "./ObjMgr.ts", "./Stage.ts", "./UIRoot.ts", "./SessionMessage_Fight.ts"], (function(t) {
  var e, s, n, a, i, r, o, h, g, c, u;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          s = t.cclegacy,
          n = t.Vec3
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          i = t.BattleMap
      }
      , function(t) {
          r = t.BattleDef
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          h = t.Stage,
          g = t.StageState
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          u = t.default
      }
      ],
      execute: function() {
          s._RF.push({}, "244bcs4rTtP+KE7YMPsdm0y", "BattleMgr", void 0);
          t("BattleMgr", function(t) {
              function s() {
                  for (var e, s = arguments.length, n = new Array(s), a = 0; a < s; a++)
                      n[a] = arguments[a];
                  return (e = t.call.apply(t, [this].concat(n)) || this).allTick = 0,
                  e.uTick = 0,
                  e.score = 0,
                  e.knockBackTime = 0,
                  e.dmgCalcK = 0,
                  e.dmgCalcL = 0,
                  e.difficulty = 0,
                  e.chapter = 0,
                  e.bmap = null,
                  e.stage = null,
                  e.AtkMsgFrame = 0,
                  e.WeaponAtkMsgs = new Array,
                  e.ExAtkMsgs = new Array,
                  e.MonsterAtks = new Array,
                  e
              }
              e(s, t);
              var a = s.prototype;
              return a.getMap = function() {
                  return this.bmap
              }
              ,
              a.getStage = function() {
                  return this.stage
              }
              ,
              a.start = function(t, e, s, n, a, r, o) {
                  this.chapter = t,
                  this.loadcfg(),
                  this.bmap = new i,
                  this.bmap.init(s, n, a, r),
                  this.stage = new h(e),
                  this.createChar(o),
                  this.stage.onStart(),
                  this.WeaponAtkMsgs.splice(0, this.WeaponAtkMsgs.length),
                  this.ExAtkMsgs.splice(0, this.ExAtkMsgs.length),
                  this.MonsterAtks.splice(0, this.MonsterAtks.length),
                  this.allTick = 0,
                  this.uTick = 0
              }
              ,
              a.destroy = function() {
                  o.ins.destroy(),
                  this.stage.destroy(),
                  this.bmap.destory()
              }
              ,
              a.update = function(t) {
                  if (this.stage.getState() == g.Spawn && (this.allTick += t,
                  this.uTick += t,
                  this.uTick >= r.FrameTick && (this.uTick -= r.FrameTick,
                  this.stage.onUpdate(),
                  o.ins.update(),
                  this.AtkMsgFrame++,
                  this.AtkMsgFrame > 2))) {
                      if (this.WeaponAtkMsgs.length > 0) {
                          for (var e = 0; e < this.WeaponAtkMsgs.length; e++)
                              u.weaponAtk(this.WeaponAtkMsgs[e]);
                          this.WeaponAtkMsgs.splice(0, this.WeaponAtkMsgs.length)
                      }
                      this.ExAtkMsgs.length > 0 && (u.gameDmgEx(this.ExAtkMsgs),
                      this.ExAtkMsgs.splice(0, this.ExAtkMsgs.length)),
                      this.MonsterAtks.length > 0 && (u.monsterAtk(this.MonsterAtks),
                      this.MonsterAtks.splice(0, this.MonsterAtks.length)),
                      this.AtkMsgFrame = 0
                  }
              }
              ,
              a.loadcfg = function() {
                  this.knockBackTime = DataCenter.Config.Get("KnockBackTime").Value,
                  this.dmgCalcK = DataCenter.Config.Get("DmgCalcK").Value,
                  this.dmgCalcL = DataCenter.Config.Get("DmgCalcL").Value;
                  var t = DataCenter.Chapter.Get(this.chapter);
                  this.difficulty = t.Difficulty
              }
              ,
              a.createChar = function(t) {
                  var e = new n(0,0,0);
                  e.x = this.bmap.getCoordinateMin().x + this.bmap.getWidth() / 2,
                  e.y = this.bmap.getCoordinateMin().y + this.bmap.getHeight() / 2,
                  o.ins.createChar(t, e)
              }
              ,
              a.randNextEx = function(t, e) {
                  return Math.floor(t + (e - t + 1) * Math.random())
              }
              ,
              a.isRandHitEx = function(t) {
                  return this.randNextEx(0, r.UnitePct - 1) < t
              }
              ,
              a.getState = function() {
                  return this.stage.getState()
              }
              ,
              a.clear = function(t) {
                  o.ins.clearMonster(),
                  o.ins.clearTower(),
                  t && o.ins.clearChar()
              }
              ,
              a.onStageEnd = function() {
                  this.clear(!1),
                  o.ins.getChar() && o.ins.getChar().onStageEnd()
              }
              ,
              a.nextStage = function() {
                  this.uTick = 0,
                  this.WeaponAtkMsgs.splice(0, this.WeaponAtkMsgs.length),
                  this.ExAtkMsgs.splice(0, this.ExAtkMsgs.length),
                  this.MonsterAtks.splice(0, this.MonsterAtks.length),
                  this.stage.nextWave(),
                  this.stage.onStart(),
                  c.fight.setWave(this.stage.getWave())
              }
              ,
              a.enterShop = function() {
                  this.stage.setState(g.Shopping),
                  o.ins.getChar().onShopState()
              }
              ,
              a.done = function(t) {
                  t ? this.stage.setState(g.Win) : this.stage.setState(g.Loose)
              }
              ,
              a.getWeapon = function(t) {
                  return o.ins.getChar().getWeaponCom().getWeapon(t)
              }
              ,
              a.addWeapon = function(t) {
                //↓Legendary
                var attackSpeed =  localStorage.getItem("Attack-Speed") || false
                var dame =  localStorage.getItem("Dame") || false      
                if(t)
                    {
                        if(Boolean(attackSpeed))
                            {
                              
                                    if(t.WID==20140 || t.WID==20141 || t.WID==20142)
                                      {
                                        t.AtkIntl= 300; 
                                      }
                                else
                                    {
                                        t.AtkIntl=100; 
                                    }
                                     
                                  
                            }
                        if(Boolean(dame))
                            {
                                t.Dmg = 4000;
                                t.DmgCritical = 5000;
                            }
                    }
                //↑Legendary
                  return o.ins.getChar().addWeapon(t)
              }
              ,
              a.removeWeapon = function(t) {
                  o.ins.getChar().removeWeapon(t)
              }
              ,
              a.rand_WeightIDAry = function(t) {
                  if (t.length <= 0 || t.length % 2 != 0)
                      return 0;
                  for (var e = 0, s = 0; s < t.length; s += 2)
                      e += t[s];
                  for (var n = 0, a = 0, i = this.randNextEx(0, e - 1), r = 0; r < t.length; r += 2) {
                      if (i < t[r] + a) {
                          n = t[r + 1];
                          break
                      }
                      a += t[r]
                  }
                  return n
              }
              ,
              a.duration = function(t) {
                  var e = 0
                    , s = DataCenter.Chapter.Get(this.chapter);
                  if (t)
                      for (var n = s.Stage; n > 0; ) {
                          var a = DataCenter.Stage.Get(n);
                          e += a.Duration,
                          n = a.Next
                      }
                  else
                      for (var i = s.Stage; i > 0; ) {
                          if (i == this.stage.getID()) {
                              e += this.stage.getStageDuration();
                              break
                          }
                          var r = DataCenter.Stage.Get(i);
                          e += r.Duration,
                          i = r.Next
                      }
                  return Math.floor(e / 1e3)
              }
              ,
              a.findAtkMsg = function(t, e) {
                  for (var s = 0; s < this.WeaponAtkMsgs.length; s++)
                      if (this.WeaponAtkMsgs[s].AOInfo[0] == t && this.WeaponAtkMsgs[s].AOInfo[1] == e)
                          return this.WeaponAtkMsgs[s];
                  return null
              }
              ,
              a.addScore = function(t) {
                  this.score += t,
                  o.ins.getChar().updateScoreView()
              }
              ,
              a.updateScore = function(t) {
                  this.score = t,
                  o.ins.getChar().updateScoreView()
              }
              ,
              a.getScore = function() {
                  return this.score
              }
              ,
              s
          }(a()));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/BehaviorBase.ts", ["cc"], (function(n) {
  var t;
  return {
      setters: [function(n) {
          t = n.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "134f8zILp5GGpS84TioJEn3", "BehaviorBase", void 0);
          n("default", function() {
              function n() {}
              var t = n.prototype;
              return t.onAwake = function() {}
              ,
              t.onStart = function() {}
              ,
              t.onEnable = function() {}
              ,
              t.onDisable = function() {}
              ,
              t.onDestroy = function() {}
              ,
              n
          }());
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Bezier2ToAction.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./ActionBase.ts", "./MathSystem.ts"], (function(t) {
  var i, e, n, s, o, r;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          e = t.cclegacy,
          n = t.Vec3
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          r = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "a69d1EsH2hItbMXeJg61h8n", "Bezier2ToAction", void 0);
          var c = t("default", function(t) {
              function e() {
                  for (var i, e = arguments.length, s = new Array(e), o = 0; o < e; o++)
                      s[o] = arguments[o];
                  return (i = t.call.apply(t, [this].concat(s)) || this).time = void 0,
                  i.target = void 0,
                  i.duration = 1e3,
                  i.ease = void 0,
                  i.pos = new n,
                  i.src = new n,
                  i.ccc = void 0,
                  i.dst = void 0,
                  i
              }
              i(e, t);
              var s = e.prototype;
              return s.onStart = function() {
                  this.time = 0,
                  n.copy(this.target.position, this.src),
                  n.copy(this.target.position, this.pos)
              }
              ,
              s.onUpdate = function(t) {
                  if (this.time += t,
                  this.time < this.duration) {
                      var i = this.ease.call(this, this.time, 0, 1, this.duration);
                      return r.ins.getBezierPoint3(this.src, this.ccc, this.dst, i, this.pos),
                      this.target.position = this.pos,
                      !1
                  }
                  return this.target.position = this.dst,
                  !0
              }
              ,
              s.onFinish = function() {
                  e.POOL.recycle(this)
              }
              ,
              e
          }(o));
          c.POOL = new s((function() {
              return new c
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Bomb.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Creature.ts", "./Kit.ts", "./CreatureView.ts"], (function(t) {
  var i, e, n, o, r, a, l, c, s, u, h, p, d, f, y, g;
  return {
      setters: [function(t) {
          i = t.applyDecoratedDescriptor,
          e = t.inheritsLoose,
          n = t.initializerDefineProperty,
          o = t.assertThisInitialized
      }
      , function(t) {
          r = t.cclegacy,
          a = t._decorator,
          l = t.RigidBody2D,
          c = t.Collider2D,
          s = t.Node,
          u = t.CCFloat,
          h = t.Contact2DType,
          p = t.Vec3,
          d = t.Component
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          y = t.default
      }
      , function(t) {
          g = t.default
      }
      ],
      execute: function() {
          var C, w, b, B, v, m, N, T, D, P, _;
          r._RF.push({}, "c3a35cbN4lII77WUjt9TcR7", "Bomb", void 0);
          var k = a.ccclass
            , z = a.property;
          t("default", (C = k("Bomb"),
          w = z({
              type: l
          }),
          b = z({
              type: c
          }),
          B = z({
              type: s
          }),
          v = z({
              type: u
          }),
          C((T = i((N = function(t) {
              function i() {
                  for (var i, e = arguments.length, r = new Array(e), a = 0; a < e; a++)
                      r[a] = arguments[a];
                  return i = t.call.apply(t, [this].concat(r)) || this,
                  n(i, "rigidBody", T, o(i)),
                  n(i, "collider", D, o(i)),
                  n(i, "circleNode", P, o(i)),
                  n(i, "circleDuat", _, o(i)),
                  i.owner = void 0,
                  i.weapon = void 0,
                  i.isPlaying = void 0,
                  i.atkBatch = null,
                  i
              }
              e(i, t);
              var r = i.prototype;
              return r.play = function(t, i, e) {
                  var n = this;
                  if (!this.isPlaying && (this.isPlaying = !0,
                  this.owner = t,
                  this.weapon = i,
                  this.atkBatch = e,
                  this.collider && (this.collider.on(h.BEGIN_CONTACT, this.onBeginContact, this),
                  this.collider.on(h.STAY_CONTACT, this.onStayContact, this)),
                  this.circleNode)) {
                      var o = new p(0,0,0);
                      this.circleNode.scale = o,
                      y.action.lerp(this, (function(t) {
                          o.x = t,
                          o.y = t,
                          o.z = t,
                          n.circleNode.scale = o
                      }
                      ), .8, 1, 1e3 * this.circleDuat)
                  }
              }
              ,
              r.onDisable = function() {
                  this.isPlaying && (this.isPlaying = !1,
                  this.owner = null,
                  this.weapon = null,
                  this.collider && (this.collider.off(h.BEGIN_CONTACT, this.onBeginContact, this),
                  this.collider.off(h.STAY_CONTACT, this.onStayContact, this)))
              }
              ,
              r.onBeginContact = function(t, i, e) {
                  if (this.isPlaying) {
                      var n = i.getComponent(g);
                      n && n.owner instanceof f && this.atkBatch && n.owner.isLive && n.owner.damageCrt(this.atkBatch)
                  }
              }
              ,
              r.onStayContact = function(t, i, e) {
                  if (this.isPlaying) {
                      var n = i.getComponent(g);
                      n && n.owner instanceof f && this.atkBatch && n.owner.isLive && n.owner.damageCrt(this.atkBatch)
                  }
              }
              ,
              i
          }(d)).prototype, "rigidBody", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          D = i(N.prototype, "collider", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          P = i(N.prototype, "circleNode", [B], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          _ = i(N.prototype, "circleDuat", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return .2
              }
          }),
          m = N)) || m));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/BoomerangWeapon.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Weapon.ts", "./Kit.ts", "./CreatureManager.ts", "./ResList.ts", "./CreatureType.ts", "./BattleDef.ts"], (function(e) {
  var t, i, n, o, r, l, a, s, u, c, p, f, h, d;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          o = e.assertThisInitialized
      }
      , function(e) {
          r = e.cclegacy,
          l = e._decorator,
          a = e.CCFloat,
          s = e.Node
      }
      , function(e) {
          u = e.default
      }
      , function(e) {
          c = e.default
      }
      , function(e) {
          p = e.default
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          h = e.CreatureType
      }
      , function(e) {
          d = e.AtkObjType
      }
      ],
      execute: function() {
          var b, y, g, v, m, k, D, w, P, I, z, C;
          r._RF.push({}, "3c9ab2qaTVPnKmgD/vbMmDb", "BoomerangWeapon", void 0);
          var T = l.ccclass
            , A = l.property;
          e("default", (b = T("BoomerangWeapon"),
          y = A({
              type: a
          }),
          g = A({
              type: a
          }),
          v = A({
              type: s
          }),
          m = A({
              type: s
          }),
          b((w = t((D = function(e) {
              function t() {
                  for (var t, i = arguments.length, r = new Array(i), l = 0; l < i; l++)
                      r[l] = arguments[l];
                  return t = e.call.apply(e, [this].concat(r)) || this,
                  n(t, "bulletPath", w, o(t)),
                  n(t, "bulletSpeed", P, o(t)),
                  n(t, "moveDistance", I, o(t)),
                  n(t, "fireNode", z, o(t)),
                  n(t, "fireIcon", C, o(t)),
                  t
              }
              i(t, e);
              var r = t.prototype;
              return r.refresh = function() {
                  e.prototype.refresh.call(this),
                  null != this.skeleton && (this.skeleton.node.active = !0),
                  null != this.fireIcon && (this.fireIcon.active = !0)
              }
              ,
              r.init = function() {
                  e.prototype.init.call(this),
                  this.ai.audoComplete = !1
              }
              ,
              r.onAttackEnter = function() {
                  var e;
                  this.ai.dir.normalize(),
                  e = this.fireNode ? c.utils.localToGlobal(this.fireNode) : c.utils.localToGlobal(this.node);
                  var t = this.getOwnerPlr().type == h.Player ? this.data : this.getOwnerPlr().context.data;
                  if (null == t || t.getAOType() == d.Monster && null == t.getCfg())
                      c.action.delayCall(100, this, this.stopAttack);
                  else {
                      var i = p.ins.createBoomerang(this.bulletPath, e, this.getOwnerPlr(), this, t);
                      i.setSpeed(this.bulletSpeed),
                      i.setDir(this.ai.dir),
                      i.setDistance(this.moveDistance),
                      null != this.skeleton && (this.skeleton.node.active = !1),
                      null != this.fireIcon && (this.fireIcon.active = !1),
                      c.sound.playSound(f.sound_magicball.path)
                  }
              }
              ,
              r.onAttackLeave = function() {
                  null != this.skeleton && (this.skeleton.node.active = !0),
                  null != this.fireIcon && (this.fireIcon.active = !0)
              }
              ,
              t
          }(u)).prototype, "bulletPath", [A], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return "weapon/prefabs/bullet001"
              }
          }),
          P = t(D.prototype, "bulletSpeed", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 500
              }
          }),
          I = t(D.prototype, "moveDistance", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 400
              }
          }),
          z = t(D.prototype, "fireNode", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          C = t(D.prototype, "fireIcon", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          k = D)) || k));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/BossAS.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./AtkStrategy.ts", "./BattleDef.ts", "./ObjMgr.ts", "./CreatureManager.ts", "./BattleMgr.ts", "./EffectFactory.ts", "./proto.mjs_cjs=&original=.js", "./SessionMessage_Fight.ts", "./proto.js"], (function(t) {
  var s, i, e, a, h, n, o, r, l, c, g, k, u, f;
  return {
      setters: [function(t) {
          s = t.inheritsLoose
      }
      , function(t) {
          i = t.cclegacy,
          e = t.Vec3
      }
      , function(t) {
          a = t.AtkState,
          h = t.StrategyType,
          n = t.BossType,
          o = t.AtkStrategy
      }
      , function(t) {
          r = t.BattleDef
      }
      , function(t) {
          l = t.default
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          g = t.BattleMgr
      }
      , function(t) {
          k = t.default
      }
      , null, function(t) {
          u = t.default
      }
      , function(t) {
          f = t.default
      }
      ],
      execute: function() {
          i._RF.push({}, "88f23hHnCtHhIKQ2xev42Py", "BossAS", void 0);
          t("BossAtkStrategy", function(t) {
              function i() {
                  for (var s, i = arguments.length, e = new Array(i), a = 0; a < i; a++)
                      e[a] = arguments[a];
                  return (s = t.call.apply(t, [this].concat(e)) || this).bossType = void 0,
                  s.aiVals = new Array,
                  s.atkBatch = null,
                  s.collisionEndTick = 0,
                  s.chargeCnt = 0,
                  s.summon = new Array,
                  s.assist = new Array,
                  s
              }
              s(i, t);
              var o = i.prototype;
              return o.init = function(s, i) {
                  void 0 === i && (i = null),
                  t.prototype.init.call(this, s, i),
                  this.atkCD = s.getAttrVal(f.msg.AttrType.AT_AtkCD),
                  this.collisionCD = s.getAttrVal(f.msg.AttrType.AT_CollisionCD),
                  this.target = l.ins.getChar(),
                  this.owner = s,
                  this.atkRadius = this.owner.getAttrVal(f.msg.AttrType.AT_AtkRange),
                  this.atkRadiusSuqare = this.atkRadius * this.atkRadius,
                  this.state = a.Chasing,
                  this.targetRadius = this.target.getAttrVal(f.msg.AttrType.AT_CollisionRadius),
                  this.shapeRadius = this.owner.getAttrVal(f.msg.AttrType.AT_CollisionRadius) + this.targetRadius,
                  this.shapeRadiusSuqare = this.shapeRadius * this.shapeRadius,
                  this.bossType = i[0];
                  for (var e = 0; e < i.length; e++)
                      this.aiVals.push(i[e])
              }
              ,
              o.destory = function() {
                  t.prototype.destory.call(this),
                  null != this.atkBatch && (this.atkBatch.destory(),
                  this.atkBatch = null),
                  this.aiVals = null
              }
              ,
              o.getStrategyType = function() {
                  return h.Skill
              }
              ,
              o.checkCollision = function() {
                  if (this.collisionEndTick <= 0) {
                      var t = this.owner;
                      if (!t.Flying) {
                          var s = t.getPos()
                            , i = this.target.getPos()
                            , e = i.x - s.x
                            , a = i.y - s.y;
                          if (Math.abs(e) < this.shapeRadius || Math.abs(a) < this.shapeRadius)
                              e * e + a * a < this.shapeRadiusSuqare && (this.target.beAtk(c.ins.generateAtkBatch(t), !0),
                              this.onCollision())
                      }
                  } else
                      this.collisionEndTick -= r.FrameTick * this.frameCheckMax
              }
              ,
              o.onUpdate = function() {
                  if (this.frameCheck++,
                  !(this.frameCheck < this.frameCheckMax))
                      if (this.frameCheck = 0,
                      this.checkCollision(),
                      this.state == a.Chasing)
                          this.checkAtk();
                      else if (this.state == a.AtkCD)
                          if (this.atkCDEndTick -= r.FrameTick * this.frameCheckMax,
                          this.atkCDEndTick < 0)
                              this.state = a.Chasing,
                              this.checkAtk();
                          else {
                              var t = this.owner.getPos()
                                , s = this.target.getPos()
                                , i = s.x - t.x
                                , e = s.y - t.y;
                              this.owner.move(i, e)
                          }
                      else
                          this.atkCDEndTick -= r.FrameTick * this.frameCheckMax,
                          this.onSkeletonSummon()
              }
              ,
              o.onAtked = function() {
                  this.state = a.AtkEnding,
                  this.atkCDEndTick = this.atkCD
              }
              ,
              o.checkAtk = function() {
                  var t = this.owner.getPos()
                    , s = this.target.getPos()
                    , i = s.x - t.x
                    , a = s.y - t.y;
                  if (Math.abs(i) > this.atkRadius || Math.abs(a) > this.atkRadius)
                      this.owner.move(i, a);
                  else if (i * i + a * a < this.atkRadiusSuqare && this.owner.getAttr().canAtk()) {
                      if (this.bossType == n.FireDragon)
                          this.owner.node.attack(this, this.onFireDragonSkill, null, this.onBossSkillFinish);
                      else if (this.bossType == n.Gorilla) {
                          var h = this.aiVals[2];
                          0 != this.owner.getAttrVal(f.msg.AttrType.AT_IncreaseChargeSpeed) && (h = Math.floor(h * (r.UnitePct - this.owner.getAttrVal(f.msg.AttrType.AT_IncreaseChargeSpeed)) / r.UnitePct));
                          var o = this.owner.getPos()
                            , l = this.target.getPos()
                            , c = l.x - o.x
                            , g = l.y - o.y;
                          this.owner.node.charge(new e(c,g,0), this.aiVals[1], h, this, null, this.onBossChargeFinish),
                          this.owner.Charging = !0
                      } else if (this.bossType == n.Pharaoh)
                          this.owner.node.fire(e.ZERO, this, null, this.onBossSkillFinish);
                      else if (this.bossType == n.TreeLeader)
                          this.owner.node.fire(e.ZERO, this, null, this.onBossSkillFinish);
                      else if (this.bossType == n.Yeti) {
                          var k = this.target.getPos()
                            , u = new e(1,0,0);
                          k.x - this.owner.getPos().x < 0 && (u.x = -1),
                          this.owner.node.fire(u, this, null, this.onBossSkillFinish)
                      } else
                          this.bossType == n.Crocodile ? (this.owner.node.attack(this, this.onCrocodileCast, this.onCrocodileSkill, this.onBossSkillFinish),
                          this.owner.Flying = !0) : this.bossType == n.Skeleton ? this.owner.node.attack(this, this.onSkeletonSkill, null, this.onBossSkillFinish) : this.bossType == n.RedShark ? (this.chargeCnt = 0,
                          this.onRedSharkCharge()) : console.error("unknow boss type");
                      this.onAtked()
                  } else
                      this.owner.move(i, a)
              }
              ,
              o.onSummon = function(t) {
                  var s;
                  (s = this.summon).push.apply(s, t),
                  this.assist.push(this.aiVals[4])
              }
              ,
              o.onFireDragonSkill = function() {
                  null != this.atkBatch && (this.atkBatch.destory(),
                  this.atkBatch = null),
                  this.atkBatch = c.ins.generateAtkBatch(this.owner);
                  for (var t = this.aiVals[1], s = this.target.getPos(), i = this.aiVals[3], a = g.ins.getMap().getCoordinateMin(), h = g.ins.getMap().getCoordinateMax(), n = 0; n < t; ++n) {
                      var o = s.x + g.ins.randNextEx(-this.aiVals[2], this.aiVals[2])
                        , r = s.y + g.ins.randNextEx(-this.aiVals[2], this.aiVals[2]);
                      o - i < a.x && (o = a.x + i),
                      o + i > h.x && (o = h.x - i),
                      r - i < a.y && (r = a.y + i),
                      r + i > h.y && (r = h.y - i),
                      k.playFireDragon(new e(o,r,0), 0, this.aiVals[4], this.atkBatch, this.owner.node, null)
                  }
              }
              ,
              o.onCrocodileCast = function() {
                  var t = this.target.getPos();
                  this.owner.setPosXY(t.x, t.y)
              }
              ,
              o.onCrocodileSkill = function() {
                  this.owner.Flying = !1;
                  var t = this.aiVals[1]
                    , s = this.aiVals[2]
                    , i = this.owner.getPos()
                    , e = this.target.getPos()
                    , a = e.x - i.x
                    , h = e.y - i.y;
                  (a < t || h < s) && Math.pow(e.x - i.x, 2) / Math.pow(t, 2) + Math.pow(e.y - i.y, 2) / Math.pow(s, 2) <= 1 && (this.atkBatch = c.ins.generateAtkBatch(this.owner),
                  this.target.beAtk(this.atkBatch, !1))
              }
              ,
              o.onSkeletonSkill = function() {
                  u.bossSkill(this.owner.getSN())
              }
              ,
              o.onSkeletonSummon = function() {
                  if (this.bossType == n.Skeleton && 0 != this.assist.length && 0 != this.summon.length && (this.assist[0] -= r.FrameTick * this.frameCheckMax,
                  this.assist[0] <= 0)) {
                      this.assist[0] += this.aiVals[4];
                      for (var t = 0; t < this.aiVals[2]; t++) {
                          var s = this.summon.pop();
                          if (!s)
                              break;
                          g.ins.getStage().BossSummon(s, !0)
                      }
                  }
              }
              ,
              o.onRedSharkCharge = function() {
                  var t = this.aiVals[2];
                  0 != this.owner.getAttrVal(f.msg.AttrType.AT_IncreaseChargeSpeed) && (t = Math.floor(t * (r.UnitePct - this.owner.getAttrVal(f.msg.AttrType.AT_IncreaseChargeSpeed)) / r.UnitePct));
                  var s = this.owner.getPos()
                    , i = this.target.getPos()
                    , a = i.x - s.x
                    , h = i.y - s.y;
                  this.owner.Charging = !0,
                  this.chargeCnt++,
                  this.chargeCnt >= this.aiVals[4] ? this.owner.node.charge(new e(a,h,0), this.aiVals[1], t, this, null, this.onBossChargeFinish) : this.owner.node.charge(new e(a,h,0), this.aiVals[1], t, this, null, this.onRedSharkCharge)
              }
              ,
              o.onBossSkillFinish = function() {
                  this.state = a.AtkCD,
                  this.bossType == n.Skeleton && (this.summon.slice(0, this.summon.length),
                  this.assist.slice(0, this.assist.length))
              }
              ,
              o.onBossChargeFinish = function() {
                  this.state = a.AtkCD,
                  this.owner.Charging = !1
              }
              ,
              i
          }(o));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Buff.ts", ["cc", "./proto.mjs_cjs=&original=.js", "./BattleDef.ts", "./ExtraEffectType.ts", "./ObjMgr.ts", "./proto.js"], (function(t) {
  var i, f, n, s, e, h;
  return {
      setters: [function(t) {
          i = t.cclegacy
      }
      , null, function(t) {
          f = t.BattleDef,
          n = t.AtkObjType
      }
      , function(t) {
          s = t.BuffExtraEffectType
      }
      , function(t) {
          e = t.default
      }
      , function(t) {
          h = t.default
      }
      ],
      execute: function() {
          i._RF.push({}, "7f0d0HsynpJsJsUpUruKMjJ", "Buff", void 0);
          var r = t("DebuffType", function(t) {
              return t[t.Null = 0] = "Null",
              t[t.Stun = 1] = "Stun",
              t[t.Burning = 2] = "Burning",
              t
          }({}));
          t("Buff", function() {
              function t() {
                  this.owner = null,
                  this.cfgID = 0,
                  this.cfgBuff = null,
                  this.entTick = 0,
                  this.infinity = !1,
                  this.dotDmg = 0,
                  this.dotIntl = 0,
                  this.dotTick = 0,
                  this.ExtraVal1 = 0,
                  this.AtkObjSN = 0,
                  this.AtkObjCrtSN = 0,
                  this.AtkObjType = n.Weapon,
                  this.AtkObjID = 0,
                  this.LauncherSN = 0
              }
              var i = t.prototype;
              return i.init = function(t, i, f, n, s, e, h) {
                  this.owner = t,
                  this.cfgID = f,
                  this.cfgBuff = DataCenter.Buff.Get(f),
                  this.cfgBuff.Duration > 0 ? this.entTick = n + this.cfgBuff.Duration : this.infinity = !0,
                  this.AtkObjType = s,
                  this.AtkObjSN = e,
                  this.LauncherSN = h,
                  this.calcDot(i)
              }
              ,
              i.destroy = function() {
                  this.owner = null,
                  this.cfgBuff = null
              }
              ,
              i.reset = function(t, i) {
                  this.entTick = t + this.cfgBuff.Duration,
                  this.calcDot(i)
              }
              ,
              i.isEnd = function(t) {
                  return !this.infinity && t > this.entTick
              }
              ,
              i.isInfinity = function() {
                  return this.infinity
              }
              ,
              i.updateDot = function() {
                  0 != this.dotIntl && (this.dotTick += f.FrameTick,
                  this.dotTick >= this.dotIntl && (this.dotTick -= this.dotIntl,
                  this.owner.onBuffDmg(this.dotDmg, this.cfgID, this.AtkObjType, this.AtkObjSN, this.LauncherSN)))
              }
              ,
              i.affect = function(t, i, f) {
                  for (var n = this.cfgBuff.AttrEffect, s = 0; s < n.length; s += 3)
                      i.buffEffect(t, n[s], n[s + 1], n[s + 2]);
                  var e = this.cfgBuff.Debuff;
                  if (e != r.Null)
                      if (t)
                          f.has(e) ? f.set(e, f.get(e) + 1) : f.set(e, 1);
                      else if (f.has(e)) {
                          var h = f.get(e);
                          1 == h ? f.delete(e) : f.set(e, h - 1)
                      }
              }
              ,
              i.onExtra_Remove = function(t) {
                  var i = this.cfgBuff.ExtraEffect;
                  i[0] == s.Attr && t.buffEffect(!1, i[1], i[2], this.ExtraVal1)
              }
              ,
              i.onExtra_BeAtk = function(t) {
                  var i = this.cfgBuff.ExtraEffect;
                  if (i[0] == s.Attr && this.ExtraVal1 < i[4]) {
                      var f = this.ExtraVal1;
                      this.ExtraVal1 += i[3],
                      this.ExtraVal1 > i[4] && (this.ExtraVal1 = i[4]);
                      var n = this.ExtraVal1 - f;
                      t.buffEffect(!0, i[1], i[2], n),
                      t.getOwner().onAttrChanged()
                  }
              }
              ,
              i.calcDot = function(t) {
                  if (!(this.cfgBuff.DOT.length < 3)) {
                      var i = 0;
                      this.AtkObjType != n.Weapon && this.AtkObjType != n.Tower || (i = e.ins.getChar().getAttrVal(h.msg.AttrType.AT_IncreaseDot));
                      var s = this.cfgBuff.DOT[2];
                      if (1 == s) {
                          var r = this.cfgBuff.DOT[1];
                          i > 0 && (r = Math.floor(r * (f.UnitePct + i) / f.UnitePct)),
                          this.dotDmg = Math.floor(r * t / f.UnitePct)
                      } else if (2 == s) {
                          var c = this.cfgBuff.DOT[1];
                          i > 0 && (c = Math.floor(c * (f.UnitePct + i) / f.UnitePct)),
                          this.dotDmg = Math.floor(c * this.owner.getAttrVal(h.msg.AttrType.AT_MaxLife) / f.UnitePct)
                      }
                      this.dotIntl = this.cfgBuff.DOT[0],
                      this.dotDmg < 1 && (this.dotDmg = 1)
                  }
              }
              ,
              t
          }());
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Bullet.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./CreatureManager.ts", "./Kit.ts", "./BulletView.ts", "./LayerType.ts", "./Bomb.ts", "./EffectManager.ts", "./CreatureType.ts", "./BulletBase.ts"], (function(t) {
  var e, i, n, s, o, a, h, l, c, u, r;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          i = t.cclegacy
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          h = t.Layer2DType
      }
      , function(t) {
          l = t.default
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          u = t.CreatureState
      }
      , function(t) {
          r = t.default
      }
      ],
      execute: function() {
          i._RF.push({}, "9da1aTJfpZCwJT0tscCVBNo", "Bullet", void 0);
          var d = t("default", function(t) {
              function i() {
                  for (var e, i = arguments.length, n = new Array(i), s = 0; s < i; s++)
                      n[s] = arguments[s];
                  return (e = t.call.apply(t, [this].concat(n)) || this).view = void 0,
                  e.throughEnable = !1,
                  e.explodeEnable = !1,
                  e.maxDistance = 2e3,
                  e.limitDistance = 99999999,
                  e.atkBatch = null,
                  e.bombAtkBatch = null,
                  e
              }
              e(i, t);
              var n = i.prototype;
              return n.reset = function() {
                  t.prototype.reset.call(this),
                  this.throughEnable = !1,
                  this.velocity.x = 0,
                  this.velocity.y = 0,
                  this.limitDistance = 99999999
              }
              ,
              n.onStart = function() {
                  this.distance = 0,
                  this.view = this.node.getComponent(a),
                  this.view.reset(),
                  this.view.setOwner(this),
                  this.view.listenBeginContact(this, this.onBeginContact),
                  this.updateDir(this.direction),
                  this.explodeEnable = !1
              }
              ,
              n.setThrough = function(t) {
                  this.throughEnable = t
              }
              ,
              n.setMaxDistance = function(t) {
                  this.maxDistance = t
              }
              ,
              n.setLimitDistance = function(t) {
                  this.limitDistance = t
              }
              ,
              n.onUpdate = function(t) {
                  if (this.state == u.Active) {
                      var e = this.speed * t;
                      this.distance += e,
                      this.distance < this.limitDistance && (this.velocity.x = this.direction.x * e,
                      this.velocity.y = this.direction.y * e,
                      this.node.position = this.node.position.add(this.velocity)),
                      this.distance > this.maxDistance && (this.setState(u.Death),
                      this.node.active = !1,
                      s.ins.remove(this))
                  }
              }
              ,
              n.onBeginContact = function(t) {
                  null != t.damageCrt && t.isLive && (t.damageCrt(this.atkBatch),
                  this.throughEnable || (o.utils.isEmpty(this.view.explodeAssetPath) || this.playExplode(),
                  o.utils.isEmpty(this.view.explodeAudio) || o.sound.playSound(this.view.explodeAudio),
                  s.ins.remove(this),
                  this.node && (this.node.active = !1)))
              }
              ,
              n.playExplode = function() {
                  var t = this;
                  if (!this.explodeEnable) {
                      this.explodeEnable = !0;
                      var e = this.node.position.clone()
                        , i = this.view.explodeAssetPath
                        , n = 1e3 * this.view.explodeDuration;
                      c.ins.playFixed(i, e, null, null, h.View, n, o.handler(this, (function(e) {
                          var i = e.getComponent(l);
                          null != t.bombAtkBatch && (t.bombAtkBatch.destory(),
                          t.bombAtkBatch = null),
                          t.bombAtkBatch = s.ins.generateAtkBatchEx(t.atkBatch),
                          i.play(t.getOwnerCrt(), t.getOwnerWeapon(), t.bombAtkBatch)
                      }
                      )))
                  }
              }
              ,
              n.onDestroy = function() {
                  i.POOL.recycle(this)
              }
              ,
              i
          }(r));
          d.POOL = new n((function() {
              return new d
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/BulletBase.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreatureBase.ts", "./CreatureManager.ts", "./Kit.ts"], (function(t) {
  var e, n, i, a, s, r, o;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy,
          i = t.Vec2,
          a = t.Vec3
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          o = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "f7b15JIw1pLJqi1zJhRiPmA", "BulletBase", void 0);
          t("default", function(t) {
              function n() {
                  for (var e, n = arguments.length, i = new Array(n), s = 0; s < n; s++)
                      i[s] = arguments[s];
                  return (e = t.call.apply(t, [this].concat(i)) || this).ownerCrt = void 0,
                  e.ownerWeapon = null,
                  e.updateDirEnable = !0,
                  e.direction = new a,
                  e.velocity = new a,
                  e.speed = 100,
                  e.distance = 500,
                  e.atkBatch = null,
                  e.bombAtkBatch = null,
                  e
              }
              e(n, t);
              var s = n.prototype;
              return s.getOwnerCrt = function() {
                  return this.ownerCrt
              }
              ,
              s.getOwnerWeapon = function() {
                  return this.ownerWeapon
              }
              ,
              s.reset = function() {
                  t.prototype.reset.call(this)
              }
              ,
              s.setOwner = function(t, e) {
                  this.ownerCrt = t,
                  this.ownerWeapon = e
              }
              ,
              s.setAtkBatch = function(t) {
                  null != this.atkBatch && (this.atkBatch.destory(),
                  this.atkBatch = null),
                  null != t && (this.atkBatch = r.ins.generateAtkBatch(t))
              }
              ,
              s.setSpeed = function(t) {
                  this.speed = t
              }
              ,
              s.setDistance = function(t) {
                  this.distance = t
              }
              ,
              s.setDir = function(t) {
                  this.direction.x = t.x,
                  this.direction.y = t.y,
                  this.updateDir(this.direction)
              }
              ,
              s.updateDir = function(t) {
                  if (this.node && this.updateDirEnable)
                      if (t.x > 0) {
                          var e = Math.atan(t.y / t.x);
                          this.node.setScale(1, 1),
                          this.node.angle = o.math.getAngle(e)
                      } else if (t.x < 0) {
                          var n = Math.atan(t.y / t.x);
                          this.node.setScale(-1, 1),
                          this.node.angle = o.math.getAngle(n)
                      }
              }
              ,
              s.pause = function() {
                  this.isPause = !0,
                  this.view && (this.view.rigidBody.linearVelocity = i.ZERO)
              }
              ,
              s.resume = function() {
                  this.isPause = !1
              }
              ,
              s.onStart = function() {}
              ,
              s.onUpdate = function(t) {}
              ,
              s.setUpdateDirEnable = function(t) {
                  this.updateDirEnable = t
              }
              ,
              n
          }(s));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/BulletBoomerang.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./BulletBase.ts", "./CreatureManager.ts", "./CreatureView.ts", "./Kit.ts"], (function(t) {
  var i, e, o, n, s, r, a, l;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          e = t.cclegacy,
          o = t.Vec3
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          l = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "31bcdiMcmRMV4tSTF9ooWSZ", "BulletBoomerang", void 0);
          var h = t("default", function(t) {
              function e() {
                  for (var i, e = arguments.length, o = new Array(e), n = 0; n < e; n++)
                      o[n] = arguments[n];
                  return (i = t.call.apply(t, [this].concat(o)) || this).view = void 0,
                  i.currDis = 0,
                  i.moveState = void 0,
                  i.lastCollideTime = void 0,
                  i.weaponNode = void 0,
                  i
              }
              i(e, t);
              var n = e.prototype;
              return n.reset = function() {
                  this.velocity.x = 0,
                  this.velocity.y = 0
              }
              ,
              n.onStart = function() {
                  this.view = this.node.getComponent(a),
                  this.view.reset(),
                  this.view.setOwner(this),
                  this.view.listenBeginContact(this, this.onBeginContact),
                  this.moveState = 0,
                  this.currDis = 0,
                  this.lastCollideTime = Date.now(),
                  this.weaponNode = this.ownerWeapon.node;
                  var t = this.ownerWeapon.fireNode;
                  t && (this.weaponNode = t)
              }
              ,
              n.onUpdate = function(t) {
                  if (null != this.node)
                      if (0 == this.moveState)
                          if (this.currDis < this.distance) {
                              var i = this.speed * t;
                              this.currDis += i,
                              this.velocity.x = this.direction.x * i,
                              this.velocity.y = this.direction.y * i,
                              this.node.position = this.node.position.add(this.velocity)
                          } else
                              this.moveState = 1;
                      else if (1 == this.moveState)
                          if (o.subtract(this.direction, this.weaponNode.worldPosition, this.node.worldPosition),
                          this.direction.lengthSqr() > 100) {
                              this.direction.normalize();
                              var e = this.speed * t;
                              this.velocity.x = this.direction.x * e,
                              this.velocity.y = this.direction.y * e,
                              this.node.position = this.node.position.add(this.velocity)
                          } else
                              this.moveState = 2;
                      else
                          r.ins.remove(this),
                          this.ownerWeapon.stopAttack()
              }
              ,
              n.onBeginContact = function(t) {
                  t.isLive && (t.damageCrt(this.atkBatch),
                  Date.now() - this.lastCollideTime > 300 && (this.lastCollideTime = Date.now(),
                  l.utils.isEmpty(this.view.collideAudio) || l.sound.playSound(this.view.collideAudio)))
              }
              ,
              n.onDestroy = function() {
                  e.POOL.recycle(this)
              }
              ,
              e
          }(s));
          h.POOL = new n((function() {
              return new h
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/BulletLightningBall.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./CreatureManager.ts", "./CreatureView.ts", "./Kit.ts", "./BulletBase.ts"], (function(t) {
  var i, e, n, o, s, r, a, u;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          e = t.cclegacy,
          n = t.Vec3
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          u = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "916bfHkiVBHo7KPbp2qSRzL", "BulletLightningBall", void 0);
          var c = t("default", function(t) {
              function e() {
                  for (var i, e = arguments.length, n = new Array(e), o = 0; o < e; o++)
                      n[o] = arguments[o];
                  return (i = t.call.apply(t, [this].concat(n)) || this).view = void 0,
                  i.target = void 0,
                  i.index = void 0,
                  i.radius = void 0,
                  i.targetCount = 5,
                  i.repetitionMaxCount = 5,
                  i.moveState = void 0,
                  i
              }
              i(e, t);
              var o = e.prototype;
              return o.reset = function() {
                  this.velocity.x = 0,
                  this.velocity.y = 0,
                  this.index = 0
              }
              ,
              o.setTarget = function(t) {
                  this.target = t
              }
              ,
              o.setRadius = function(t) {
                  this.radius = t
              }
              ,
              o.setTargetCount = function(t) {
                  this.targetCount = t
              }
              ,
              o.setRepetitionMaxCount = function(t) {
                  this.repetitionMaxCount = t
              }
              ,
              o.onStart = function() {
                  this.view = this.node.getComponent(r),
                  this.view.reset(),
                  this.view.setOwner(this),
                  this.index = 0,
                  this.moveState = 0
              }
              ,
              o.onUpdate = function(t) {
                  if (null != this.node)
                      if (0 == this.moveState)
                          if (this.target.isLive)
                              if (n.subtract(this.direction, this.target.worldPosition, this.node.worldPosition),
                              this.direction.lengthSqr() > 100) {
                                  this.direction.normalize();
                                  var i = this.speed * t;
                                  this.velocity.x = this.direction.x * i,
                                  this.velocity.y = this.direction.y * i,
                                  this.node.position = this.node.position.add(this.velocity)
                              } else
                                  this.onDamage(this.target),
                                  this.moveState = 2;
                          else
                              this.moveState = 2;
                      else
                          s.ins.remove(this),
                          this.ownerWeapon.stopAttack()
              }
              ,
              o.onDamage = function(t) {
                  t.damageCrt(this.atkBatch),
                  a.utils.isEmpty(this.view.collideAudio) || a.sound.playSound(this.view.collideAudio)
              }
              ,
              o.onDestroy = function() {
                  e.POOL.recycle(this)
              }
              ,
              e
          }(u));
          c.POOL = new o((function() {
              return new c
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/BulletShuriken.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./CreatureManager.ts", "./CreatureView.ts", "./Kit.ts", "./BulletBase.ts"], (function(t) {
  var i, e, n, o, s, a, r, h;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          e = t.cclegacy,
          n = t.Vec3
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          h = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "61e569BOGdNq7DqngXLa+s9", "BulletShuriken", void 0);
          var u = t("default", function(t) {
              function e() {
                  for (var i, e = arguments.length, n = new Array(e), o = 0; o < e; o++)
                      n[o] = arguments[o];
                  return (i = t.call.apply(t, [this].concat(n)) || this).view = void 0,
                  i.target = void 0,
                  i.index = void 0,
                  i.repetitionProbability = 50,
                  i.repetitionMaxCount = 5,
                  i.moveState = void 0,
                  i.raidus = 400,
                  i
              }
              i(e, t);
              var o = e.prototype;
              return o.reset = function() {
                  this.velocity.x = 0,
                  this.velocity.y = 0,
                  this.index = 0
              }
              ,
              o.setTarget = function(t) {
                  this.target = t
              }
              ,
              o.setRepetitionProbability = function(t) {
                  this.repetitionProbability = t
              }
              ,
              o.setRepetitionMaxCount = function(t) {
                  this.repetitionMaxCount = t
              }
              ,
              o.setRadius = function(t) {
                  this.raidus = t
              }
              ,
              o.onStart = function() {
                  this.view = this.node.getComponent(a),
                  this.view.reset(),
                  this.view.setOwner(this),
                  this.moveState = 0,
                  this.index = 0
              }
              ,
              o.onUpdate = function(t) {
                  if (null != this.node)
                      if (0 == this.moveState) {
                          if (!this.target.isLive)
                              return void (this.moveState = 1);
                          if (n.subtract(this.direction, this.target.worldPosition, this.node.worldPosition),
                          this.direction.lengthSqr() > 100) {
                              this.direction.normalize(),
                              this.updateDir();
                              var i = this.speed * t;
                              this.velocity.x = this.direction.x * i,
                              this.velocity.y = this.direction.y * i,
                              this.node.position = this.node.position.add(this.velocity)
                          } else {
                              if (this.onDamage(this.target),
                              r.math.random(0, 100) <= this.repetitionProbability && this.index < this.repetitionMaxCount) {
                                  this.index += 1,
                                  this.atkBatch.setSegment(this.index);
                                  var e = s.ins.findClosestEnemyX(this.target, this.raidus);
                                  null != e ? this.target = e : this.moveState = 1
                              } else
                                  this.moveState = 1
                          }
                      } else
                          s.ins.remove(this),
                          this.ownerWeapon.stopAttack()
              }
              ,
              o.onDamage = function(t) {
                  t.damageCrt(this.atkBatch),
                  r.utils.isEmpty(this.view.collideAudio) || r.sound.playSound(this.view.collideAudio)
              }
              ,
              o.onDestroy = function() {
                  e.POOL.recycle(this)
              }
              ,
              o.updateDir = function() {
                  if (null != this.node && this.updateDirEnable)
                      if (this.direction.x > 0) {
                          var t = Math.atan(this.direction.y / this.direction.x);
                          this.node.setScale(1, 1),
                          this.node.angle = r.math.getAngle(t)
                      } else if (this.direction.x < 0) {
                          var i = Math.atan(this.direction.y / this.direction.x);
                          this.node.setScale(-1, 1),
                          this.node.angle = r.math.getAngle(i)
                      } else
                          this.node.setScale(1, 1),
                          this.direction.y > 0 ? this.node.angle = 90 : this.node.angle = -90
              }
              ,
              e
          }(h));
          u.POOL = new o((function() {
              return new u
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/BulletView.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./GameCollider.ts"], (function(e) {
  var t, i, r, o, l, n, a, u, p, c;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          r = e.initializerDefineProperty,
          o = e.assertThisInitialized
      }
      , function(e) {
          l = e.cclegacy,
          n = e._decorator,
          a = e.RigidBody2D,
          u = e.CCString,
          p = e.CCFloat
      }
      , function(e) {
          c = e.default
      }
      ],
      execute: function() {
          var s, d, y, f, g, b, h, B, w, v, x;
          l._RF.push({}, "e3c13vuPaZOUaer+u/hszM7", "BulletView", void 0);
          var z = n.ccclass
            , m = n.property;
          e("default", (s = z("BulletView"),
          d = m({
              type: a
          }),
          y = m({
              type: u
          }),
          f = m({
              type: p
          }),
          g = m({
              type: String
          }),
          s((B = t((h = function(e) {
              function t() {
                  for (var t, i = arguments.length, l = new Array(i), n = 0; n < i; n++)
                      l[n] = arguments[n];
                  return t = e.call.apply(e, [this].concat(l)) || this,
                  r(t, "rigidBody", B, o(t)),
                  r(t, "explodeAssetPath", w, o(t)),
                  r(t, "explodeDuration", v, o(t)),
                  r(t, "explodeAudio", x, o(t)),
                  t
              }
              return i(t, e),
              t.prototype.start = function() {
                  this.rigidBody && (this.rigidBody.enabled = !1)
              }
              ,
              t
          }(c)).prototype, "rigidBody", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          w = t(h.prototype, "explodeAssetPath", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          v = t(h.prototype, "explodeDuration", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          x = t(h.prototype, "explodeAudio", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return ""
              }
          }),
          b = h)) || b));
          l._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/BurstWeapon.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./CreatureView.ts"], (function(t) {
  var e, o, i, n, l, r, a, c, s, h, d, p, u, y, f;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          o = t.inheritsLoose,
          i = t.initializerDefineProperty,
          n = t.assertThisInitialized
      }
      , function(t) {
          l = t.cclegacy,
          r = t._decorator,
          a = t.Sprite,
          c = t.RigidBody2D,
          s = t.Collider2D,
          h = t.Vec3,
          d = t.Color,
          p = t.Contact2DType,
          u = t.Component
      }
      , function(t) {
          y = t.default
      }
      , function(t) {
          f = t.default
      }
      ],
      execute: function() {
          var b, C, g, v, w, B, m, S, D;
          l._RF.push({}, "3dfeaIcZnhGK6L7yAFD6NJS", "BurstWeapon", void 0);
          var L = r.ccclass
            , U = r.property;
          t("default", (b = L("BurstWeapon"),
          C = U({
              type: a
          }),
          g = U({
              type: c
          }),
          v = U({
              type: s
          }),
          b((m = e((B = function(t) {
              function e() {
                  for (var e, o = arguments.length, l = new Array(o), r = 0; r < o; r++)
                      l[r] = arguments[r];
                  return e = t.call.apply(t, [this].concat(l)) || this,
                  i(e, "body", m, n(e)),
                  i(e, "rigidBody", S, n(e)),
                  i(e, "collider", D, n(e)),
                  e.angle = 0,
                  e.scale = new h(1,1,1),
                  e.color = new d(255,255,255,255),
                  e.caller = void 0,
                  e.onContact = void 0,
                  e.actUUid = 1,
                  e
              }
              o(e, t);
              var l = e.prototype;
              return l.start = function() {
                  this.collider.on(p.BEGIN_CONTACT, this.onBeginContact, this)
              }
              ,
              l.onBeginContact = function(t, e, o) {
                  if (t != this.collider) {
                      var i = t.getComponent(f);
                      i && i.owner && this.caller && this.onContact && this.onContact.call(this.caller, i.owner)
                  } else if (e != this.collider) {
                      var n = e.getComponent(f);
                      n && n.owner && this.caller && this.onContact && this.onContact.call(this.caller, n.owner)
                  }
              }
              ,
              l.fire = function(t, e, o, i) {
                  this.angle = 0,
                  this.scale.set(0, 0, 0),
                  this.color.a = 255,
                  this.body.node.active = !0,
                  this.body.node.setScale(this.scale),
                  this.body.node.setPosition(0, 0, 0),
                  this.body.color = this.color,
                  y.action.kill(this.actUUid),
                  this.actUUid = y.action.beginSequence(),
                  y.action.lerp(this, this.onScaleLerp, 0, 1, t - 500),
                  y.action.lerp(this, this.onColorLerp, 1, 0, 500),
                  y.action.call(this, this.onComplete),
                  e && o && y.action.call(e, o),
                  y.action.end(),
                  this.caller = e,
                  this.onContact = i
              }
              ,
              l.onScaleLerp = function(t) {
                  this.angle = -360 * t,
                  this.scale.set(t, t, t),
                  this.body.node.setScale(this.scale),
                  this.body.node.angle = this.angle
              }
              ,
              l.onColorLerp = function(t) {
                  this.color.a = 255 * t,
                  this.body.color = this.color
              }
              ,
              l.onComplete = function() {
                  this.body.node.active = !1
              }
              ,
              e
          }(u)).prototype, "body", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          S = e(B.prototype, "rigidBody", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          D = e(B.prototype, "collider", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          w = B)) || w));
          l._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CallAction.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./ActionBase.ts"], (function(t) {
  var e, n, i, l;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          i = t.default
      }
      , function(t) {
          l = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "eae4596WF9MmLyhBn/J8I83", "CallAction", void 0);
          var r = t("default", function(t) {
              function n() {
                  for (var e, n = arguments.length, i = new Array(n), l = 0; l < n; l++)
                      i[l] = arguments[l];
                  return (e = t.call.apply(t, [this].concat(i)) || this).caller = void 0,
                  e.method = void 0,
                  e.args = void 0,
                  e
              }
              e(n, t);
              var i = n.prototype;
              return i.reset = function() {
                  t.prototype.reset.call(this),
                  this.caller = null,
                  this.method = null,
                  this.args = null
              }
              ,
              i.onUpdate = function() {
                  var t;
                  this.args ? (t = this.method).call.apply(t, [this.caller, this.args.splice(0, 1)[0]].concat(this.args)) : this.method.call(this.caller);
                  return !0
              }
              ,
              i.onFinish = function() {
                  n.POOL.recycle(this)
              }
              ,
              n
          }(l));
          r.POOL = new i((function() {
              return new r
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CameraContext.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(e) {
  var t, r, a, i, n;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          r = e.initializerDefineProperty
      }
      , function(e) {
          a = e.cclegacy,
          i = e._decorator,
          n = e.Camera
      }
      ],
      execute: function() {
          var o, c, l, u, p, s, m;
          a._RF.push({}, "79e17bU8ehK+KFefhQY9SWO", "CameraContext", void 0);
          var f = i.ccclass
            , y = i.property;
          e("default", (o = f("CameraContext"),
          c = y({
              type: n
          }),
          l = y({
              type: n
          }),
          o((s = t((p = function() {
              r(this, "camera2D", s, this),
              r(this, "camera3D", m, this)
          }
          ).prototype, "camera2D", [c], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          m = t(p.prototype, "camera3D", [l], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          u = p)) || u));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CameraFollowState.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CameraState.ts", "./Kit.ts"], (function(t) {
  var i, e, o, n, s, r;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          e = t.cclegacy,
          o = t.math,
          n = t.Vec2
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          r = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "970e1DvXTZC6ocYH8rCewgN", "CameraFollowState", void 0);
          t("default", function(t) {
              function e() {
                  for (var i, e = arguments.length, o = new Array(e), s = 0; s < e; s++)
                      o[s] = arguments[s];
                  return (i = t.call.apply(t, [this].concat(o)) || this).camera = void 0,
                  i.cameraNode = void 0,
                  i.target = void 0,
                  i.region = void 0,
                  i.lerpedPosition = new n,
                  i.smoothing = 10,
                  i.damping = .5,
                  i
              }
              i(e, t);
              var s = e.prototype;
              return s.onEnter = function() {
                  this.camera = this.context.camera2D,
                  this.cameraNode = this.context.camera2D.node,
                  this.setTarget(this.args[0]),
                  this.setRegion(this.args[1])
              }
              ,
              s.setTarget = function(t) {
                  this.target = t;
                  var i = this.target.position;
                  this.lerpedPosition.x = i.x,
                  this.lerpedPosition.y = i.y
              }
              ,
              s.setRegion = function(t) {
                  this.region = t
              }
              ,
              s.onUpdate = function(t) {
                  var i = this.target.position
                    , e = this.smoothing * t;
                  this.lerpedPosition.x = r.math.lerp(this.lerpedPosition.x, i.x, e),
                  this.lerpedPosition.y = r.math.lerp(this.lerpedPosition.y, i.y, e);
                  var n = o.clamp(this.lerpedPosition.x, this.region.xMin, this.region.xMax)
                    , s = o.clamp(this.lerpedPosition.y, this.region.yMin, this.region.yMax);
                  this.cameraNode.setPosition(n, s)
              }
              ,
              s.onExit = function() {}
              ,
              e
          }(s));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CameraManager.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CameraState.ts", "./CameraStateId.ts", "./CameraContext.ts", "./CameraStartState.ts", "./CameraTranslate.ts", "./CameraFollowState.ts", "./CameraUtils.ts"], (function(t) {
  var e, a, n, s, r, i, u, o, c, l, h, f, d, p, S;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          a = t.inheritsLoose,
          n = t.initializerDefineProperty,
          s = t.assertThisInitialized,
          r = t.createClass
      }
      , function(t) {
          i = t.cclegacy,
          u = t._decorator,
          o = t.Component
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          l = t.CameraStateId
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          d = t.default
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          S = t.default
      }
      ],
      execute: function() {
          var C, m, g, v, x, y;
          i._RF.push({}, "50714QQPnxOLb/WaSu1OBg9", "CameraManager", void 0);
          var I = u.ccclass
            , _ = u.property;
          t("default", (C = I("CameraManager"),
          m = _({
              type: h
          }),
          C(((y = function(t) {
              a(i, t);
              var e = i.prototype;
              function i() {
                  var e;
                  return (e = t.call(this) || this).curState = void 0,
                  e.curStateId = void 0,
                  e.states = void 0,
                  n(e, "context", x, s(e)),
                  e.states = [],
                  e.states.push(new c),
                  e.states.push(new f),
                  e.states.push(new p),
                  e.states.push(new d),
                  i._ins = s(e),
                  e
              }
              return e.getState = function() {
                  return this.curState
              }
              ,
              e.getStateId = function() {
                  return this.curStateId
              }
              ,
              e.start = function() {
                  S.setMainCamera(this.context.camera2D),
                  this.setContext(this.context),
                  this.change(l.Idle)
              }
              ,
              e.setContext = function(t) {
                  this.context = t;
                  for (var e = 0; e < this.states.length; ++e)
                      this.states[e].setContext(t)
              }
              ,
              e.change = function(t, e) {
                  this.curStateId != t && (null != this.curState && (this.curState.onExit(),
                  this.curState = null),
                  this.curStateId = t,
                  this.curState = this.states[t],
                  this.curState.args = e,
                  this.curState.onEnter())
              }
              ,
              e.lateUpdate = function(t) {
                  this.curState.onUpdate(t)
              }
              ,
              r(i, null, [{
                  key: "ins",
                  get: function() {
                      return i._ins
                  }
              }]),
              i
          }(o))._ins = void 0,
          x = e((v = y).prototype, "context", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          g = v)) || g));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CameraStartState.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CameraState.ts"], (function(t) {
  var n, e, o;
  return {
      setters: [function(t) {
          n = t.inheritsLoose
      }
      , function(t) {
          e = t.cclegacy
      }
      , function(t) {
          o = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "66be7m52FJN0KzjAL3iX7/Q", "CameraStartState", void 0);
          t("default", function(t) {
              function e() {
                  return t.apply(this, arguments) || this
              }
              n(e, t);
              var o = e.prototype;
              return o.onEnter = function() {}
              ,
              o.onUpdate = function() {}
              ,
              o.onExit = function() {}
              ,
              e
          }(o));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CameraState.ts", ["cc"], (function(t) {
  var n;
  return {
      setters: [function(t) {
          n = t.cclegacy
      }
      ],
      execute: function() {
          n._RF.push({}, "13e9dYUW0JGB7t0z1Cz8rC4", "CameraState", void 0);
          t("default", function() {
              function t() {
                  this.context = void 0,
                  this.args = void 0
              }
              var n = t.prototype;
              return n.setContext = function(t) {
                  this.context = t
              }
              ,
              n.onEnter = function() {}
              ,
              n.onUpdate = function(t) {}
              ,
              n.onExit = function() {}
              ,
              t
          }());
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CameraStateId.ts", ["cc"], (function(t) {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "ab7d2+ubfNGEqdMyKSLxJFr", "CameraStateId", void 0);
          t("CameraStateId", function(t) {
              return t[t.Idle = 0] = "Idle",
              t[t.Start = 1] = "Start",
              t[t.Follow = 2] = "Follow",
              t[t.Translate = 3] = "Translate",
              t
          }({}));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CameraTranslate.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CameraState.ts"], (function(e) {
  var t, n, r;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          n = e.cclegacy
      }
      , function(e) {
          r = e.default
      }
      ],
      execute: function() {
          n._RF.push({}, "2481eiVepFLhY44L5n0TczL", "CameraTranslate", void 0);
          e("default", function(e) {
              function n() {
                  return e.apply(this, arguments) || this
              }
              return t(n, e),
              n
          }(r));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CameraUtils.ts", ["cc", "./Kit.ts"], (function(e) {
  var n, t, a, i, r, c;
  return {
      setters: [function(e) {
          n = e.cclegacy,
          t = e.Vec3,
          a = e.Vec2,
          i = e.Vec4,
          r = e.geometry
      }
      , function(e) {
          c = e.default
      }
      ],
      execute: function() {
          n._RF.push({}, "5e767YdS/VH6qSb6aDn84ex", "CameraUtils", void 0);
          var o = e("default", function() {
              function e() {}
              return e.setMainCamera = function(e) {
                  this.camera = e
              }
              ,
              e.getMainCamera = function() {
                  return this.camera
              }
              ,
              e.getDistance = function(e, n) {
                  var t = c.math.getRadian(n);
                  return Math.abs(e / Math.cos(t))
              }
              ,
              e
          }());
          o.camera = void 0,
          o.forward = new t,
          o.point2 = new a,
          o.point3 = new t,
          o.point4 = new i,
          o.point = new a,
          o.ray = new r.Ray,
          o.plane = new r.Plane(0,1,1,0),
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ChapterSelectWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./UIListView.ts", "./LayerType.ts", "./Client.ts", "./Kit.ts", "./UIRoot.ts", "./UIHelper.ts", "./SessionMessage_Fight.ts"], (function(e) {
  var t, i, n, r, o, a, l, s, u, c, p, h, f, g, d, b, v, w;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          r = e.assertThisInitialized
      }
      , function(e) {
          o = e.cclegacy,
          a = e.Button,
          l = e.Label,
          s = e.ProgressBar,
          u = e.Sprite,
          c = e.RichText
      }
      , function(e) {
          p = e.default
      }
      , function(e) {
          h = e.UIListView
      }
      , function(e) {
          f = e.Layer2DType
      }
      , function(e) {
          g = e.default
      }
      , function(e) {
          d = e.default
      }
      , function(e) {
          b = e.default
      }
      , function(e) {
          v = e.default
      }
      , function(e) {
          w = e.default
      }
      ],
      execute: function() {
          var y, C, m, I, B, W, P, T, x, R, z, j, G, L, N, E, S, U, D, M, O, F, _, k, H;
          o._RF.push({}, "cabe5HrrNFLtb+b5yp3feqw", "ChapterSelectWindow", void 0);
          e("default", (y = uiBind("fgui/login", "ChapterSelectWindow"),
          C = uiInject("CloseBtn", a),
          m = uiInject("GoBtn", a),
          I = uiInject("Title/Label", l),
          B = uiInject("GoBtn/Label", l),
          W = uiInject("WaveBar", s),
          P = uiInject("WaveBar/WaveNum", l),
          T = uiInject("WaveBar/WavePercent", l),
          x = uiInject("RewardsContent", h),
          R = uiInject("Icon", u),
          z = uiInject("Tip1", c),
          j = uiInject("Tip2", c),
          y((N = t((L = function(e) {
              function t(t) {
                  var i;
                  return i = e.call(this, t) || this,
                  n(i, "CloseBtn", N, r(i)),
                  n(i, "GoBtn", E, r(i)),
                  n(i, "Title", S, r(i)),
                  n(i, "Power", U, r(i)),
                  n(i, "WaveBar", D, r(i)),
                  n(i, "WaveNum", M, r(i)),
                  n(i, "WavePercent", O, r(i)),
                  n(i, "RewardsContent", F, r(i)),
                  n(i, "Icon", _, r(i)),
                  n(i, "Tip1", k, r(i)),
                  n(i, "Tip2", H, r(i)),
                  i.index = void 0,
                  i.path = void 0,
                  i.drops = void 0,
                  i.isOpen = void 0,
                  i.layer = f.UIPopup,
                  i
              }
              i(t, e);
              var o = t.prototype;
              return o.getPrototype = function() {
                  return t.prototype
              }
              ,
              o.onEnable = function() {
                  var e = this;
                  this.onClick(this.CloseBtn, (function() {
                      e.close()
                  }
                  )),
                  this.onClick(this.GoBtn, this.onGo),
                  this.path = "ui/chapter/icon/level" + (this.index + 1) + "_big/spriteFrame",
                  d.res.setSpriteFrame(this.Icon, this.path);
                  var t = g.fight.getChapterCfg(this.index)
                    , i = g.fight.getWaveRecord(this.index)
                    , n = t.MaxWave;
                  this.WavePercent.string = Math.floor(i / n * 100) + "%",
                  this.WaveBar.progress = i / n,
                  this.WaveNum.string = i + "/" + n,
                  this.Title.string = t.Name;
                  var r = g.fight.index2Chapter(this.index)
                    , o = DataCenter.Chapter.Get(r)
                    , a = g.hero.getMain();
                  this.Tip1.string = "<outline color=#00000 width=2>REQUIRE<color=#00ff00> " + o.Power + " POWER </color>TO ENTER</outline>",
                  a.Power < o.Power ? this.Tip2.string = "[ YOUR POWER:<color=#ff0000> " + a.Power + " </color> ]" : this.Tip2.string = "[ YOUR POWER:<color=#00ff00> " + a.Power + " </color> ]"
              }
              ,
              o.onDisable = function() {
                  d.res.recycle(this.Icon)
              }
              ,
              o.rewardsRenderer = function(e, t) {
                  var i = this.drops[e]
                    , n = DataCenter.Material.Get(i.id);
                  t.getChildByName("frame").getComponent(u);
                  t.getChildByName("icon").getComponent(u).spriteFrame = v.getMaterialIcon(n.Icon)
              }
              ,
              o.setChapter = function(e, t) {
                  this.index = e,
                  this.isOpen = t
              }
              ,
              o.onGo = function() {
                  if (7 != this.index) {
                      var e = g.fight.index2Chapter(this.index)
                        , t = DataCenter.Chapter.Get(e)
                        , i = g.hero.getMain();
                      if (i) {
                          if (i.Power < t.Power)
                              return void b.textTips.play("Not Enough Power");
                          g.fight.setChapterByIndex(this.index);
                          var n = g.fight.chapter;
                          w.gameStart(i.sn, n)
                      } else {
                          g.fight.setChapterByIndex(this.index);
                          var r = g.fight.chapter;
                          w.gameStart(0, r)
                      }
                  } else
                      b.textTips.play("The current map is not available")
              }
              ,
              t
          }(p)).prototype, "CloseBtn", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          E = t(L.prototype, "GoBtn", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          S = t(L.prototype, "Title", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          U = t(L.prototype, "Power", [B], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          D = t(L.prototype, "WaveBar", [W], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          M = t(L.prototype, "WaveNum", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          O = t(L.prototype, "WavePercent", [T], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          F = t(L.prototype, "RewardsContent", [x], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          _ = t(L.prototype, "Icon", [R], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          k = t(L.prototype, "Tip1", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          H = t(L.prototype, "Tip2", [j], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          G = L)) || G));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ChapterWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./UIRoot.ts", "./LayerType.ts", "./Client.ts", "./Kit.ts", "./GameGlobal.ts"], (function(e) {
  var l, t, i, n, o, r, a, u, s, p, c, v, h, f, b, y, g, w, m;
  return {
      setters: [function(e) {
          l = e.applyDecoratedDescriptor,
          t = e.inheritsLoose,
          i = e.initializerDefineProperty,
          n = e.assertThisInitialized
      }
      , function(e) {
          o = e.cclegacy,
          r = e.Button,
          a = e.Node,
          u = e.Sprite,
          s = e.UITransform,
          p = e.v3,
          c = e.PolygonCollider2D,
          v = e.Intersection2D,
          h = e.v2
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          b = e.default
      }
      , function(e) {
          y = e.Layer2DType
      }
      , function(e) {
          g = e.default
      }
      , function(e) {
          w = e.default
      }
      , function(e) {
          m = e.default
      }
      ],
      execute: function() {
          var C, d, I, T, j, E, B, z, O, S, U, _, R, A, D, L, F, N, P, H, M, W, k;
          o._RF.push({}, "61b94jhdZJOAqs51j5jl1U4", "ChapterWindow", void 0);
          e("default", (C = uiBind("fgui/login", "ChapterWindow"),
          d = uiInject("CloseBtn", r),
          I = uiInject("level1", a),
          T = uiInject("level2", a),
          j = uiInject("level3", a),
          E = uiInject("level4", a),
          B = uiInject("level5", a),
          z = uiInject("level6", a),
          O = uiInject("level7", a),
          S = uiInject("level8", a),
          U = uiInject("level9", a),
          C((A = l((R = function(e) {
              function l(l) {
                  var t;
                  return t = e.call(this, l) || this,
                  i(t, "CloseBtn", A, n(t)),
                  i(t, "level1", D, n(t)),
                  i(t, "level2", L, n(t)),
                  i(t, "level3", F, n(t)),
                  i(t, "level4", N, n(t)),
                  i(t, "level5", P, n(t)),
                  i(t, "level6", H, n(t)),
                  i(t, "level7", M, n(t)),
                  i(t, "level8", W, n(t)),
                  i(t, "level9", k, n(t)),
                  t.levels = void 0,
                  t.layer = y.UIBG,
                  t
              }
              t(l, e);
              var o = l.prototype;
              return o.getPrototype = function() {
                  return l.prototype
              }
              ,
              o.onEnable = function() {
                  var e = this;
                  m.MOVE_ENABLE = !1,
                  b.home.showAllBtn(!1),
                  b.home.showTopRight(!1),
                  this.onClick(this.CloseBtn, (function() {
                      e.close()
                  }
                  )),
                  this.levels = [this.level1, this.level2, this.level3, this.level4, this.level5, this.level6, this.level7, this.level8, this.level9];
                  for (var l = 0; l < this.levels.length; ++l)
                      this.chapterRender(this.levels[l], l)
              }
              ,
              o.onDisable = function() {
                  m.MOVE_ENABLE = !0,
                  b.home.showAllBtn(!0),
                  b.home.showTopRight(!0)
              }
              ,
              o.chapterRender = function(e, l) {
                  var t = g.fight.isChapterOpen(l)
                    , i = e.getComponent(u);
                  e.getChildByPath("mark").active = !t,
                  t ? (w.res.setSpriteFrame(i, "ui/chapter/icon/level" + (l + 1) + "/spriteFrame"),
                  e.targetOff(this),
                  e.on(a.EventType.TOUCH_START, (function(e) {
                      e.preventSwallow = !0
                  }
                  ), this),
                  e.on(a.EventType.TOUCH_MOVE, (function(e) {
                      e.preventSwallow = !0
                  }
                  ), this),
                  e.on(a.EventType.TOUCH_CANCEL, (function(e) {
                      e.preventSwallow = !0
                  }
                  ), this),
                  e.on(a.EventType.TOUCH_END, (function(t) {
                      var i = t.getUILocation()
                        , n = e.getComponent(s).convertToNodeSpaceAR(p(i.x, i.y, 0))
                        , o = e.getComponent(c);
                      o && (v.pointInPolygon(h(n.x, n.y), o.points) ? (b.selectChapter.setChapter(l, !0),
                      b.selectChapter.open()) : t.preventSwallow = !0)
                  }
                  ), this)) : w.res.setSpriteFrame(i, "ui/chapter/icon/level" + (l + 1) + "_off/spriteFrame")
              }
              ,
              l
          }(f)).prototype, "CloseBtn", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          D = l(R.prototype, "level1", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          L = l(R.prototype, "level2", [T], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          F = l(R.prototype, "level3", [j], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          N = l(R.prototype, "level4", [E], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          P = l(R.prototype, "level5", [B], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          H = l(R.prototype, "level6", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          M = l(R.prototype, "level7", [O], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          W = l(R.prototype, "level8", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          k = l(R.prototype, "level9", [U], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          _ = R)) || _));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CharCom.ts", ["cc"], (function(n) {
  var t;
  return {
      setters: [function(n) {
          t = n.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "36d082FcVFPw5MfmV5SsMJP", "CharCom", void 0);
          n("CharComType", function(n) {
              return n[n.Item = 0] = "Item",
              n[n.Weapon = 1] = "Weapon",
              n[n.Talent = 2] = "Talent",
              n[n.Max = 3] = "Max",
              n
          }({})),
          n("CharCom", function() {
              function n() {
                  this.owner = null
              }
              var t = n.prototype;
              return t.init = function(n, t) {
                  this.owner = n
              }
              ,
              t.afterInit = function() {}
              ,
              t.destroy = function() {
                  this.owner = null
              }
              ,
              n
          }());
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ChargeAS.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./AtkStrategy.ts", "./BattleDef.ts", "./ObjMgr.ts", "./proto.mjs_cjs=&original=.js", "./proto.js"], (function(t) {
  var e, i, s, a, h, r, n, o, c;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          i = t.cclegacy,
          s = t.Vec3
      }
      , function(t) {
          a = t.AtkState,
          h = t.StrategyType,
          r = t.AtkStrategy
      }
      , function(t) {
          n = t.BattleDef
      }
      , function(t) {
          o = t.default
      }
      , null, function(t) {
          c = t.default
      }
      ],
      execute: function() {
          i._RF.push({}, "50f22cRSKNFA7e4VY2wRyct", "ChargeAS", void 0);
          t("ChargeAtkStrategy", function(t) {
              function i() {
                  for (var e, i = arguments.length, s = new Array(i), a = 0; a < i; a++)
                      s[a] = arguments[a];
                  return (e = t.call.apply(t, [this].concat(s)) || this).chargeDis = 0,
                  e.chargeDuration = 0,
                  e
              }
              e(i, t);
              var r = i.prototype;
              return r.init = function(e, i) {
                  void 0 === i && (i = null),
                  t.prototype.init.call(this, e, i),
                  this.atkCD = e.getAttrVal(c.msg.AttrType.AT_AtkCD),
                  this.collisionCD = e.getAttrVal(c.msg.AttrType.AT_CollisionCD),
                  this.target = o.ins.getChar(),
                  this.owner = e,
                  this.atkRadius = this.owner.getAttrVal(c.msg.AttrType.AT_AtkRange),
                  this.atkRadiusSuqare = this.atkRadius * this.atkRadius,
                  this.state = a.Chasing,
                  this.targetRadius = this.target.getAttrVal(c.msg.AttrType.AT_CollisionRadius),
                  this.shapeRadius = this.owner.getAttrVal(c.msg.AttrType.AT_CollisionRadius) + this.targetRadius,
                  this.shapeRadiusSuqare = this.shapeRadius * this.shapeRadius,
                  this.chargeDis = i[0],
                  this.chargeDuration = i[1]
              }
              ,
              r.getStrategyType = function() {
                  return h.Charge
              }
              ,
              r.onUpdate = function() {
                  if (this.frameCheck++,
                  !(this.frameCheck < this.frameCheckMax))
                      if (this.frameCheck = 0,
                      this.checkCollision(),
                      this.state == a.Chasing)
                          this.checkAtk();
                      else if (this.state == a.AtkCD)
                          if (this.atkCDEndTick -= n.FrameTick * this.frameCheckMax,
                          this.atkCDEndTick < 0)
                              this.state = a.Chasing,
                              this.checkAtk();
                          else {
                              var t = this.owner.getPos()
                                , e = this.target.getPos()
                                , i = e.x - t.x
                                , s = e.y - t.y;
                              this.owner.move(i, s)
                          }
                      else
                          this.atkCDEndTick -= n.FrameTick * this.frameCheckMax
              }
              ,
              r.onAtked = function() {
                  this.state = a.AtkEnding,
                  this.atkCDEndTick = this.atkCD
              }
              ,
              r.checkAtk = function() {
                  var t = this.owner.getPos()
                    , e = this.target.getPos()
                    , i = e.x - t.x
                    , a = e.y - t.y;
                  if (Math.abs(i) > this.atkRadius || Math.abs(a) > this.atkRadius)
                      this.owner.move(i, a);
                  else if (i * i + a * a < this.atkRadiusSuqare && this.owner.getAttr().canAtk()) {
                      var h = this.chargeDuration;
                      0 != this.owner.getAttrVal(c.msg.AttrType.AT_IncreaseChargeSpeed) && (h = Math.floor(h * (n.UnitePct - this.owner.getAttrVal(c.msg.AttrType.AT_IncreaseChargeSpeed)) / n.UnitePct)),
                      this.owner.node.charge(new s(i,a,0), this.chargeDis, h, this, null, this.onChargeFinish),
                      this.onAtked(),
                      this.owner.Charging = !0
                  } else
                      this.owner.move(i, a)
              }
              ,
              r.onChargeFinish = function() {
                  this.state = a.AtkCD,
                  this.owner.Charging = !1
              }
              ,
              i
          }(r));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CharObj.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ClassType.ts", "./CreatureObj.ts", "./BattleDef.ts", "./BattleMgr.ts", "./EffectType.ts", "./CharCom.ts", "./WeaponCom.ts", "./ItemCom.ts", "./UIRoot.ts", "./SessionMessage_Fight.ts", "./proto.mjs_cjs=&original=.js", "./TalentCom.ts", "./Def.ts", "./proto.js"], (function(t) {
  var e, n, i, o, s, r, a, g, h, c, u, p, f, l, m, A, d, T;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          i = t.ClassType
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          s = t.ObjType,
          r = t.CampType,
          a = t.AtkObjType,
          g = t.BattleDef
      }
      , function(t) {
          h = t.BattleMgr
      }
      , function(t) {
          c = t.EffectType
      }
      , function(t) {
          u = t.CharComType
      }
      , function(t) {
          p = t.WeaponCom
      }
      , function(t) {
          f = t.ItemCom
      }
      , function(t) {
          l = t.default
      }
      , function(t) {
          m = t.default
      }
      , null, function(t) {
          A = t.TalentCom
      }
      , function(t) {
          d = t.FlyTextType
      }
      , function(t) {
          T = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "6668fjPI6ZJR71DeTo8Z2Js", "CharObj", void 0);
          t("default", function(t) {
              function n() {
                  for (var e, n = arguments.length, i = new Array(n), o = 0; o < n; o++)
                      i[o] = arguments[o];
                  return (e = t.call.apply(t, [this].concat(i)) || this).classType = void 0,
                  e.gold = 0,
                  e.protectEnd = 0,
                  e.coms = new Array,
                  e.attrLimit = new Array,
                  e.hpRecoverActive = !1,
                  e.hpRecoverIntl = 0,
                  e.hpRecoverTick = 0,
                  e.hpRecoverFrame = 0,
                  e
              }
              e(n, t);
              var o = n.prototype;
              return o.getClassType = function() {
                  return this.classType
              }
              ,
              o.init = function(e, n, i, o) {
                  t.prototype.init.call(this, e, n, i, o),
                  this.oType = s.Char,
                  this.cType = r.Hero;
                  var a = DataCenter.Class.Get(n);
                  console.log("classid:", n, "classcfg:", a),
                  this.classType = a.Type,
                  this.cfg = a,
                  this.attr.init(o),
                  this.coms.push(new f),
                  this.coms.push(new p),
                  this.coms.push(new A);
                  for (var g = 0; g < u.Max; g++)
                      this.coms[g].init(this, null);
                  for (var h = DataCenter.Config.Get("AttrValLimit").ValueEx, c = 0; c < T.msg.AttrType.AT_Max; c++)
                      this.attrLimit.push(0);
                  for (var l = 0; l < h.length; l += 2)
                      this.attrLimit[h[l]] = h[l + 1];
                  var m = DataCenter.Config.Get("LifeRecoverIntl");
                  this.hpRecoverIntl = m.Value
              }
              ,
              o.afterInit = function() {
                  for (var t = 0; t < this.coms.length; t++)
                      this.coms[t].afterInit();
                  this.onAttrChanged()
              }
              ,
              o.destroy = function() {
                  t.prototype.destroy.call(this),
                  this.cfg = null;
                  for (var e = 0; e < this.coms.length; e++)
                      this.coms[e].destroy(),
                      this.coms[e] = null;
                  this.coms = null
              }
              ,
              o.resume = function(t, e) {
                  t > 0 && this.getAttr().setLife(t),
                  this.gold = e
              }
              ,
              o.updateAttr = function(t, e) {
                  for (var n = 0; n < t.length; n++) {
                      var i = t[n]
                        , o = e[n];
                      this.attr.setVal(i, o),
                      i == T.msg.AttrType.AT_CurLife || i == T.msg.AttrType.AT_MaxLife ? (this.getTalentCom().calcFirefolk(),
                      this.updateHPView()) : i == T.msg.AttrType.AT_CurLife ? this.updateHPView() : i == T.msg.AttrType.AT_RealMoveSpeed || i == T.msg.AttrType.AT_IncreaseMoveSpeed ? (this.getTalentCom().calcLightling(),
                      this.updateViewAttr()) : i == T.msg.AttrType.AT_PickRange ? this.updateViewAttr() : i == T.msg.AttrType.AT_Dmg && this.getTalentCom().calcLightling()
                  }
              }
              ,
              o.getWeaponCom = function() {
                  return this.coms[u.Weapon]
              }
              ,
              o.getItemCom = function() {
                  return this.coms[u.Item]
              }
              ,
              o.getTalentCom = function() {
                  return this.coms[u.Talent]
              }
              ,
              o.isFull = function() {
                  return this.getAttr().isFull()
              }
              ,
              o.shuldPickPotion = function() {
                  return !!this.getItemCom().potionPick || !this.isFull()
              }
              ,
              o.updateViewAttr = function() {
                  this.node.setMoveSpeed(this.getAttr().getMoveSpeed()),
                  this.node.setPickRadius(this.getAttrVal(T.msg.AttrType.AT_PickRange))
              }
              ,
              o.setViewNode = function(e) {
                  t.prototype.setViewNode.call(this, e),
                  this.updateViewAttr()
              }
              ,
              o.onAttrChanged = function() {
                  this.node && (this.updateHPView(),
                  this.updateViewAttr())
              }
              ,
              o.onBuffChanged = function(t) {
                  t != this.getAttr().getDebuffFlag() && this.node && (this.getAttr().canMove() ? this.node.setMoveLimit(!1) : this.node.setMoveLimit(!0),
                  this.getAttr().isStun() ? this.node.showStun(!0) : this.node.showStun(!1))
              }
              ,
              o.addWeapon = function(t) {
                  return this.getWeaponCom().addWeapon(t)
              }
              ,
              o.removeWeapon = function(t) {
                  this.getWeaponCom().removeWeapon(t),
                  this.onAttrChanged()
              }
              ,
              o.addBuff = function(t, e, n, i, o) {
                  var s = this.getAttr().getDebuffFlag();
                  this.getAttr().addBuff(t, e, n, i, o),
                  this.onBuffChanged(s)
              }
              ,
              o.update = function() {
                  if (this.getAttr().getBuffLen() > 0) {
                      var t = this.getAttr().getDebuffFlag();
                      this.getAttr().onUpdate() && this.onBuffChanged(t)
                  }
                  this.getWeaponCom().onUpdate(),
                  this.getTalentCom().onUpdate(),
                  this.hpRecoverActive && this.onRecover()
              }
              ,
              o.onStageStart = function() {
                  this.getWeaponCom().onStageStart(),
                  this.getTalentCom().onStageStart(),
                  this.getAttrVal(T.msg.AttrType.AT_LifeRecover) > 0 ? this.startRecover() : this.hpRecoverActive = !1
              }
              ,
              o.onStageEnd = function() {
                  this.getAttr().onStageEnd()
              }
              ,
              o.addItemEx = function(t) {
                  return DataCenter.Item.Get(t) ? this.getItemCom().addItem(t) : null
              }
              ,
              o.addGold = function(t) {
                  0 != t && (this.gold += t,
                  this.gold < 0 && (this.gold = 0),
                  this.updateGoldView())
              }
              ,
              o.getGold = function() {
                  return this.gold
              }
              ,
              o.beAtk = function(t, e) {
                  if (t) {
                      var n = new T.msg.BattleMonsterAtk;
                      n.Type = e ? 0 : 1,
                      n.MInfo.push(t.getOwnerCrtSN(), t.getAOID()),
                      h.ins.MonsterAtks.push(n)
                  }
              }
              ,
              o.onBeAtk = function(t) {
                  var e = {
                      et: c.Nothing
                  };
                  if (this.getAttr().onBeAtk(),
                  t.DmgInfo.Dodge)
                      return e.et = c.Dodge,
                      this.node.onDamaged(null, e),
                      console.warn("hero dodge"),
                      e;
                  if (e.et = c.BeDmg,
                  e.dmg = t.DmgInfo.Dmg,
                  this.getAttr().onDamage(t.DmgInfo.Dmg),
                  t.DmgInfo.Die)
                      e.et = c.BeDmgToDie,
                      this.getAttr().setLife(0);
                  else if (t.DmgInfo.AppendBuff) {
                      var n = t.DmgInfo.AppendBuff;
                      this.addBuff(n.ID, t.DmgInfo.Dmg, a.Monster, n.AOSN, n.AOCrtSN)
                  }
                  this.node.onDamaged(null, e),
                  this.updateHPView()
              }
              ,
              o.onBuffDmg = function(t, e, n, i, o) {}
              ,
              o.onOnBuffDmg = function(t) {}
              ,
              o.onHeal = function(t) {
                  this.getAttr().isFull() || (this.getAttr().onHeal(t),
                  this.updateHPView(),
                  this.node && this.node.playText(d.Healing, t))
              }
              ,
              o.onKillMonster = function(t) {}
              ,
              o.pickGold = function(t) {
                  this.addGold(t)
              }
              ,
              o.pickChest = function() {
                  this.getItemCom().pickChest(),
                  this.updateChestView()
              }
              ,
              o.pickPotion = function(t, e) {
                  m.pickPotion(t, e)
              }
              ,
              o.updateHPView = function() {
                  l.fight.setHP(this.getHP(), this.getAttrVal(T.msg.AttrType.AT_MaxLife))
              }
              ,
              o.updateChestView = function() {
                  l.fight.setTreasurebox(this.getItemCom().countChest())
              }
              ,
              o.updateGoldView = function() {
                  l.fight.setCoin(this.gold)
              }
              ,
              o.updateScoreView = function() {
                  var t = h.ins.getScore();
                  l.fight.setScore(t)
              }
              ,
              o.isAttrMax = function(t) {
                  return (t != T.msg.AttrType.AT_CriticalRate || this.getClassType() != i.Turing) && (this.attrLimit[t] > 0 && this.getAttrVal(t) >= this.attrLimit[t])
              }
              ,
              o.getDisplayAttr = function(t) {
                  var e = "unknow";
                  switch (t) {
                  case T.msg.AttrType.AT_MaxLife:
                      e = String(this.getAttrVal(T.msg.AttrType.AT_MaxLife));
                      break;
                  case T.msg.AttrType.AT_Dmg:
                      e = String(this.getAttrVal(T.msg.AttrType.AT_Dmg));
                      break;
                  case T.msg.AttrType.AT_Defense:
                      e = String(this.getAttrVal(T.msg.AttrType.AT_Defense));
                      break;
                  case T.msg.AttrType.AT_AtkSpeed:
                      e = String(Math.floor(this.getAttrVal(T.msg.AttrType.AT_AtkSpeed) / g.UnitePct * 100)) + "%";
                      break;
                  case T.msg.AttrType.AT_CriticalRate:
                      e = String(Math.floor(this.getAttrVal(T.msg.AttrType.AT_CriticalRate) / g.UnitePct * 100)) + "%";
                      break;
                  case T.msg.AttrType.AT_AtkRange:
                      e = String(this.getAttrVal(T.msg.AttrType.AT_AtkRange));
                      break;
                  case T.msg.AttrType.AT_Dodge:
                      e = String(Math.floor(this.getAttrVal(T.msg.AttrType.AT_Dodge) / g.UnitePct * 100)) + "%";
                      break;
                  case T.msg.AttrType.AT_IncreaseMoveSpeed:
                      e = String(Math.floor(this.getAttrVal(T.msg.AttrType.AT_IncreaseMoveSpeed) / 100)) + "%";
                      break;
                  case T.msg.AttrType.AT_Enr:
                      e = String(this.getAttrVal(T.msg.AttrType.AT_Enr));
                      break;
                  case T.msg.AttrType.AT_Luck:
                      e = String(Math.floor(this.getAttrVal(T.msg.AttrType.AT_Luck) / 100))
                  }
                  return e
              }
              ,
              o.getItemIds = function() {
                  return this.getItemCom().getItemIds()
              }
              ,
              o.getItemCount = function(t) {
                  return this.getItemCom().getItemCount(t)
              }
              ,
              o.getWeapon = function(t) {
                  return this.getWeaponCom().getWeapon(t)
              }
              ,
              o.getWeaponSNAry = function() {
                  return this.getWeaponCom().getWeaponSNAry()
              }
              ,
              o.getWeaponTypeNumByID = function(t) {
                  return this.getWeaponCom().getTypeNumByID(t)
              }
              ,
              o.getWeaponIDNum = function(t) {
                  return this.getWeaponCom().getIDNum(t)
              }
              ,
              o.haveWeaponMerge = function(t) {
                  return this.getWeaponCom().haveMerge(t)
              }
              ,
              o.canWeaponBuy = function(t) {
                  return this.getWeaponCom().canBuy(t)
              }
              ,
              o.onShopState = function() {}
              ,
              o.getWeaponStageDmg = function(t) {
                  return this.getWeaponCom().getStageDmg(t)
              }
              ,
              o.startRecover = function() {
                  this.hpRecoverActive = !0,
                  this.hpRecoverTick = this.hpRecoverIntl,
                  this.hpRecoverFrame = 0
              }
              ,
              o.onRecover = function() {
                  this.hpRecoverFrame++,
                  this.hpRecoverFrame < 5 || (this.hpRecoverTick -= this.hpRecoverFrame * g.FrameTick,
                  this.hpRecoverTick <= 0 && (this.hpRecoverTick = this.hpRecoverIntl,
                  this.isFull() || m.lifeRecover()),
                  this.hpRecoverFrame = 0)
              }
              ,
              n
          }(o));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ChaseAS.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./AtkStrategy.ts", "./ObjMgr.ts", "./BattleMgr.ts", "./proto.mjs_cjs=&original=.js", "./proto.js"], (function(t) {
  var s, i, e, a, r, n, o, h;
  return {
      setters: [function(t) {
          s = t.inheritsLoose
      }
      , function(t) {
          i = t.cclegacy
      }
      , function(t) {
          e = t.AtkState,
          a = t.StrategyType,
          r = t.AtkStrategy
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          o = t.BattleMgr
      }
      , null, function(t) {
          h = t.default
      }
      ],
      execute: function() {
          i._RF.push({}, "c7b8c/Y2I1JCr/NOELozP9D", "ChaseAS", void 0);
          t("ChaseAtkStrategy", function(t) {
              function i() {
                  return t.apply(this, arguments) || this
              }
              s(i, t);
              var r = i.prototype;
              return r.init = function(s, i) {
                  void 0 === i && (i = null),
                  t.prototype.init.call(this, s, i),
                  this.atkCD = s.getAttrVal(h.msg.AttrType.AT_AtkCD),
                  this.collisionCD = s.getAttrVal(h.msg.AttrType.AT_CollisionCD),
                  this.target = n.ins.getChar(),
                  this.owner = s,
                  this.targetRadius = this.target.getAttrVal(h.msg.AttrType.AT_CollisionRadius),
                  this.shapeRadius = s.getAttrVal(h.msg.AttrType.AT_CollisionRadius),
                  this.targetRadius,
                  this.shapeRadiusSuqare = this.shapeRadius * this.shapeRadius,
                  this.state = e.Chasing
              }
              ,
              r.onUpdate = function() {
                  if (this.frameCheck++,
                  !(this.frameCheck < this.frameCheckMax)) {
                      this.frameCheck = 0,
                      this.checkCollision();
                      var t = this.owner.getPos()
                        , s = this.target.getPos()
                        , i = s.x - t.x + o.ins.randNextEx(-this.targetRadius, this.targetRadius)
                        , e = s.y - t.y + o.ins.randNextEx(-this.targetRadius, this.targetRadius);
                      this.owner.move(i, e)
                  }
              }
              ,
              r.getStrategyType = function() {
                  return a.Chase
              }
              ,
              i
          }(r));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ClassType.ts", ["cc"], (function(e) {
  var i;
  return {
      setters: [function(e) {
          i = e.cclegacy
      }
      ],
      execute: function() {
          i._RF.push({}, "aa518Eh8CRIe4Txxk9zOh3h", "ClassType", void 0);
          e("ClassType", function(e) {
              return e[e.Nothing = 0] = "Nothing",
              e[e.Human = 1] = "Human",
              e[e.Orc = 2] = "Orc",
              e[e.Elf = 3] = "Elf",
              e[e.Undead = 4] = "Undead",
              e[e.Cyborg = 5] = "Cyborg",
              e[e.FireFolk = 6] = "FireFolk",
              e[e.Lightling = 7] = "Lightling",
              e[e.Turing = 8] = "Turing",
              e[e.Spirit = 9] = "Spirit",
              e[e.NoHolder = 10] = "NoHolder",
              e[e.Max = 11] = "Max",
              e
          }({}));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Client.ts", ["cc", "./EquipPart.ts", "./FightPart.ts", "./HeroPart.ts", "./MaterialPart.ts", "./UserPart.ts"], (function(t) {
  var e, n, u, a, i, r;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          i = t.default
      }
      , function(t) {
          r = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "d57caZ6g4JB+aCXpyjwl8rj", "Client", void 0);
          var c = t("default", (function() {}
          ));
          c.user = new r,
          c.hero = new a,
          c.equip = new n,
          c.material = new i,
          c.fight = new u,
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/clipboard.min.js", ["./cjs-loader.mjs"], (function(t, e) {
  var n;
  return {
      setters: [function(t) {
          n = t.default
      }
      ],
      execute: function() {
          t("default", void 0);
          var o = t("__cjsMetaURL", e.meta.url);
          n.define(o, (function(e, n, o, r, i) {
              var u, c;
              u = this,
              c = function() {
                  return e = {
                      686: function(t, e, n) {
                          n.d(e, {
                              default: function() {
                                  return v
                              }
                          }),
                          e = n(279);
                          var o = n.n(e)
                            , r = (e = n(370),
                          n.n(e))
                            , i = (e = n(817),
                          n.n(e));
                          function u(t) {
                              try {
                                  return document.execCommand(t)
                              } catch (t) {
                                  return
                              }
                          }
                          var c = function(t) {
                              return t = i()(t),
                              u("cut"),
                              t
                          }
                            , a = function(t) {
                              var e, n, o, r = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {
                                  container: document.body
                              }, c = "";
                              return "string" == typeof t ? (e = t,
                              n = "rtl" === document.documentElement.getAttribute("dir"),
                              (o = document.createElement("textarea")).style.fontSize = "12pt",
                              o.style.border = "0",
                              o.style.padding = "0",
                              o.style.margin = "0",
                              o.style.position = "absolute",
                              o.style[n ? "right" : "left"] = "-9999px",
                              n = window.pageYOffset || document.documentElement.scrollTop,
                              o.style.top = "".concat(n, "px"),
                              o.setAttribute("readonly", ""),
                              o.value = e,
                              o = o,
                              r.container.appendChild(o),
                              c = i()(o),
                              u("copy"),
                              o.remove()) : (c = i()(t),
                              u("copy")),
                              c
                          };
                          function f(t) {
                              return (f = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                                  return typeof t
                              }
                              : function(t) {
                                  return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                              }
                              )(t)
                          }
                          var l = function() {
                              var t = void 0 === (n = (o = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}).action) ? "copy" : n
                                , e = o.container
                                , n = o.target
                                , o = o.text;
                              if ("copy" !== t && "cut" !== t)
                                  throw new Error('Invalid "action" value, use either "copy" or "cut"');
                              if (void 0 !== n) {
                                  if (!n || "object" !== f(n) || 1 !== n.nodeType)
                                      throw new Error('Invalid "target" value, use a valid Element');
                                  if ("copy" === t && n.hasAttribute("disabled"))
                                      throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
                                  if ("cut" === t && (n.hasAttribute("readonly") || n.hasAttribute("disabled")))
                                      throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes')
                              }
                              return o ? a(o, {
                                  container: e
                              }) : n ? "cut" === t ? c(n) : a(n, {
                                  container: e
                              }) : void 0
                          };
                          function s(t) {
                              return (s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                                  return typeof t
                              }
                              : function(t) {
                                  return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                              }
                              )(t)
                          }
                          function d(t, e) {
                              for (var n = 0; n < e.length; n++) {
                                  var o = e[n];
                                  o.enumerable = o.enumerable || !1,
                                  o.configurable = !0,
                                  "value"in o && (o.writable = !0),
                                  Object.defineProperty(t, o.key, o)
                              }
                          }
                          function p(t, e) {
                              return (p = Object.setPrototypeOf || function(t, e) {
                                  return t.__proto__ = e,
                                  t
                              }
                              )(t, e)
                          }
                          function y(t) {
                              return (y = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
                                  return t.__proto__ || Object.getPrototypeOf(t)
                              }
                              )(t)
                          }
                          function h(t, e) {
                              if (t = "data-clipboard-".concat(t),
                              e.hasAttribute(t))
                                  return e.getAttribute(t)
                          }
                          var v = function() {
                              !function(t, e) {
                                  if ("function" != typeof e && null !== e)
                                      throw new TypeError("Super expression must either be null or a function");
                                  t.prototype = Object.create(e && e.prototype, {
                                      constructor: {
                                          value: t,
                                          writable: !0,
                                          configurable: !0
                                      }
                                  }),
                                  e && p(t, e)
                              }(u, o());
                              var t, e, n, i = function(t) {
                                  var e = function() {
                                      if ("undefined" == typeof Reflect || !Reflect.construct)
                                          return !1;
                                      if (Reflect.construct.sham)
                                          return !1;
                                      if ("function" == typeof Proxy)
                                          return !0;
                                      try {
                                          return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}
                                          ))),
                                          !0
                                      } catch (t) {
                                          return !1
                                      }
                                  }();
                                  return function() {
                                      var n, o = y(t);
                                      return n = e ? (n = y(this).constructor,
                                      Reflect.construct(o, arguments, n)) : o.apply(this, arguments),
                                      o = this,
                                      !(n = n) || "object" !== s(n) && "function" != typeof n ? function(t) {
                                          if (void 0 !== t)
                                              return t;
                                          throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
                                      }(o) : n
                                  }
                              }(u);
                              function u(t, e) {
                                  var n;
                                  return function(t) {
                                      if (!(t instanceof u))
                                          throw new TypeError("Cannot call a class as a function")
                                  }(this),
                                  (n = i.call(this)).resolveOptions(e),
                                  n.listenClick(t),
                                  n
                              }
                              return t = u,
                              n = [{
                                  key: "copy",
                                  value: function(t) {
                                      var e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {
                                          container: document.body
                                      };
                                      return a(t, e)
                                  }
                              }, {
                                  key: "cut",
                                  value: function(t) {
                                      return c(t)
                                  }
                              }, {
                                  key: "isSupported",
                                  value: function() {
                                      var t = "string" == typeof (t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : ["copy", "cut"]) ? [t] : t
                                        , e = !!document.queryCommandSupported;
                                      return t.forEach((function(t) {
                                          e = e && !!document.queryCommandSupported(t)
                                      }
                                      )),
                                      e
                                  }
                              }],
                              (e = [{
                                  key: "resolveOptions",
                                  value: function() {
                                      var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};
                                      this.action = "function" == typeof t.action ? t.action : this.defaultAction,
                                      this.target = "function" == typeof t.target ? t.target : this.defaultTarget,
                                      this.text = "function" == typeof t.text ? t.text : this.defaultText,
                                      this.container = "object" === s(t.container) ? t.container : document.body
                                  }
                              }, {
                                  key: "listenClick",
                                  value: function(t) {
                                      var e = this;
                                      this.listener = r()(t, "click", (function(t) {
                                          return e.onClick(t)
                                      }
                                      ))
                                  }
                              }, {
                                  key: "onClick",
                                  value: function(t) {
                                      var e = t.delegateTarget || t.currentTarget;
                                      t = l({
                                          action: this.action(e),
                                          container: this.container,
                                          target: this.target(e),
                                          text: this.text(e)
                                      }),
                                      this.emit(t ? "success" : "error", {
                                          action: this.action,
                                          text: t,
                                          trigger: e,
                                          clearSelection: function() {
                                              e && e.focus(),
                                              document.activeElement.blur(),
                                              window.getSelection().removeAllRanges()
                                          }
                                      })
                                  }
                              }, {
                                  key: "defaultAction",
                                  value: function(t) {
                                      return h("action", t)
                                  }
                              }, {
                                  key: "defaultTarget",
                                  value: function(t) {
                                      if (t = h("target", t))
                                          return document.querySelector(t)
                                  }
                              }, {
                                  key: "defaultText",
                                  value: function(t) {
                                      return h("text", t)
                                  }
                              }, {
                                  key: "destroy",
                                  value: function() {
                                      this.listener.destroy()
                                  }
                              }]) && d(t.prototype, e),
                              n && d(t, n),
                              u
                          }()
                      },
                      828: function(t) {
                          var e;
                          "undefined" == typeof Element || Element.prototype.matches || ((e = Element.prototype).matches = e.matchesSelector || e.mozMatchesSelector || e.msMatchesSelector || e.oMatchesSelector || e.webkitMatchesSelector),
                          t.exports = function(t, e) {
                              for (; t && 9 !== t.nodeType; ) {
                                  if ("function" == typeof t.matches && t.matches(e))
                                      return t;
                                  t = t.parentNode
                              }
                          }
                      },
                      438: function(t, e, n) {
                          var o = n(828);
                          function r(t, e, n, r, i) {
                              var u = function(t, e, n, r) {
                                  return function(n) {
                                      n.delegateTarget = o(n.target, e),
                                      n.delegateTarget && r.call(t, n)
                                  }
                              }
                              .apply(this, arguments);
                              return t.addEventListener(n, u, i),
                              {
                                  destroy: function() {
                                      t.removeEventListener(n, u, i)
                                  }
                              }
                          }
                          t.exports = function(t, e, n, o, i) {
                              return "function" == typeof t.addEventListener ? r.apply(null, arguments) : "function" == typeof n ? r.bind(null, document).apply(null, arguments) : ("string" == typeof t && (t = document.querySelectorAll(t)),
                              Array.prototype.map.call(t, (function(t) {
                                  return r(t, e, n, o, i)
                              }
                              )))
                          }
                      },
                      879: function(t, e) {
                          e.node = function(t) {
                              return void 0 !== t && t instanceof HTMLElement && 1 === t.nodeType
                          }
                          ,
                          e.nodeList = function(t) {
                              var n = Object.prototype.toString.call(t);
                              return void 0 !== t && ("[object NodeList]" === n || "[object HTMLCollection]" === n) && "length"in t && (0 === t.length || e.node(t[0]))
                          }
                          ,
                          e.string = function(t) {
                              return "string" == typeof t || t instanceof String
                          }
                          ,
                          e.fn = function(t) {
                              return "[object Function]" === Object.prototype.toString.call(t)
                          }
                      },
                      370: function(t, e, n) {
                          var o = n(879)
                            , r = n(438);
                          t.exports = function(t, e, n) {
                              if (!t && !e && !n)
                                  throw new Error("Missing required arguments");
                              if (!o.string(e))
                                  throw new TypeError("Second argument must be a String");
                              if (!o.fn(n))
                                  throw new TypeError("Third argument must be a Function");
                              if (o.node(t))
                                  return f = e,
                                  l = n,
                                  (a = t).addEventListener(f, l),
                                  {
                                      destroy: function() {
                                          a.removeEventListener(f, l)
                                      }
                                  };
                              if (o.nodeList(t))
                                  return i = t,
                                  u = e,
                                  c = n,
                                  Array.prototype.forEach.call(i, (function(t) {
                                      t.addEventListener(u, c)
                                  }
                                  )),
                                  {
                                      destroy: function() {
                                          Array.prototype.forEach.call(i, (function(t) {
                                              t.removeEventListener(u, c)
                                          }
                                          ))
                                      }
                                  };
                              if (o.string(t))
                                  return t = t,
                                  e = e,
                                  n = n,
                                  r(document.body, t, e, n);
                              throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList");
                              var i, u, c, a, f, l
                          }
                      },
                      817: function(t) {
                          t.exports = function(t) {
                              var e, n = "SELECT" === t.nodeName ? (t.focus(),
                              t.value) : "INPUT" === t.nodeName || "TEXTAREA" === t.nodeName ? ((e = t.hasAttribute("readonly")) || t.setAttribute("readonly", ""),
                              t.select(),
                              t.setSelectionRange(0, t.value.length),
                              e || t.removeAttribute("readonly"),
                              t.value) : (t.hasAttribute("contenteditable") && t.focus(),
                              n = window.getSelection(),
                              (e = document.createRange()).selectNodeContents(t),
                              n.removeAllRanges(),
                              n.addRange(e),
                              n.toString());
                              return n
                          }
                      },
                      279: function(t) {
                          function e() {}
                          e.prototype = {
                              on: function(t, e, n) {
                                  var o = this.e || (this.e = {});
                                  return (o[t] || (o[t] = [])).push({
                                      fn: e,
                                      ctx: n
                                  }),
                                  this
                              },
                              once: function(t, e, n) {
                                  var o = this;
                                  function r() {
                                      o.off(t, r),
                                      e.apply(n, arguments)
                                  }
                                  return r._ = e,
                                  this.on(t, r, n)
                              },
                              emit: function(t) {
                                  for (var e = [].slice.call(arguments, 1), n = ((this.e || (this.e = {}))[t] || []).slice(), o = 0, r = n.length; o < r; o++)
                                      n[o].fn.apply(n[o].ctx, e);
                                  return this
                              },
                              off: function(t, e) {
                                  var n = this.e || (this.e = {})
                                    , o = n[t]
                                    , r = [];
                                  if (o && e)
                                      for (var i = 0, u = o.length; i < u; i++)
                                          o[i].fn !== e && o[i].fn._ !== e && r.push(o[i]);
                                  return r.length ? n[t] = r : delete n[t],
                                  this
                              }
                          },
                          t.exports = e,
                          t.exports.TinyEmitter = e
                      }
                  },
                  n = {},
                  t.n = function(e) {
                      var n = e && e.__esModule ? function() {
                          return e.default
                      }
                      : function() {
                          return e
                      }
                      ;
                      return t.d(n, {
                          a: n
                      }),
                      n
                  }
                  ,
                  t.d = function(e, n) {
                      for (var o in n)
                          t.o(n, o) && !t.o(e, o) && Object.defineProperty(e, o, {
                              enumerable: !0,
                              get: n[o]
                          })
                  }
                  ,
                  t.o = function(t, e) {
                      return Object.prototype.hasOwnProperty.call(t, e)
                  }
                  ,
                  t(686).default;
                  function t(o) {
                      if (n[o])
                          return n[o].exports;
                      var r = n[o] = {
                          exports: {}
                      };
                      return e[o](r, r.exports, t),
                      r.exports
                  }
                  var e, n
              }
              ,
              "object" == typeof e && "object" == typeof o ? o.exports = c() : "function" == typeof define && define.amd ? define([], c) : "object" == typeof e ? e.ClipboardJS = c() : u.ClipboardJS = c(),
              t("default", o.exports),
              o.exports.ClipboardJS
          }
          ), {})
      }
  }
}
));

System.register("chunks:///_virtual/ConfigBase.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./EntityBase.ts"], (function(t) {
  var e, n, i, r;
  return {
      setters: [function(t) {
          e = t.inheritsLoose,
          n = t.createClass
      }
      , function(t) {
          i = t.cclegacy
      }
      , function(t) {
          r = t.default
      }
      ],
      execute: function() {
          i._RF.push({}, "87798Q9eQ9IMp5/qTSlKRQ6", "ConfigBase", void 0);
          t("default", function(t) {
              function i() {
                  for (var e, n = arguments.length, i = new Array(n), r = 0; r < n; r++)
                      i[r] = arguments[r];
                  return (e = t.call.apply(t, [this].concat(i)) || this).$path = void 0,
                  e
              }
              return e(i, t),
              n(i, [{
                  key: "Path",
                  get: function() {
                      return this.$path
                  }
              }]),
              i
          }(r));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ConfigEntity.ts", ["cc"], (function(t) {
  var n;
  return {
      setters: [function(t) {
          n = t.cclegacy
      }
      ],
      execute: function() {
          n._RF.push({}, "57e6bfViYVGS7RWb58KUdOM", "ConfigEntity", void 0);
          t("default", function() {
              function t(t) {
                  this.table = void 0,
                  this.table = t
              }
              var n = t.prototype;
              return n.Get = function(t) {
                  return this.table[t]
              }
              ,
              n.GetEx = function(t, n) {
                  for (var e in this.table) {
                      var i = this.table[e];
                      if (i[t] == n)
                          return i
                  }
                  return null
              }
              ,
              n.GetTable = function() {
                  return this.table
              }
              ,
              t
          }());
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ConfigSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ConfigEntity.ts", "./Singleton.ts"], (function(t) {
  var n, e, o, r;
  return {
      setters: [function(t) {
          n = t.inheritsLoose
      }
      , function(t) {
          e = t.cclegacy
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          r = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "06a43D6oiZCGqljnpMdCex6", "ConfigSystem", void 0);
          t("default", function(t) {
              function e() {
                  for (var n, e = arguments.length, o = new Array(e), r = 0; r < e; r++)
                      o[r] = arguments[r];
                  return (n = t.call.apply(t, [this].concat(o)) || this).configs = {},
                  n
              }
              n(e, t);
              var r = e.prototype;
              return r.get = function(t) {
                  var n = get_class_name(t);
                  return this.configs[n]
              }
              ,
              r.set = function(t, n) {
                  var e = get_class_name(t);
                  this.configs[e] = n.json
              }
              ,
              r.setDataCenter = function(t) {
                  var n = window;
                  if (n.DataCenter)
                      console.error("tbl dumplicated");
                  else {
                      var e = t.json
                        , r = {};
                      for (var i in e) {
                          var s = e[i]
                            , a = new o(s);
                          r[i] = a
                      }
                      n.DataCenter = r
                  }
              }
              ,
              e
          }(r()));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Creature.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./CreatureMovePart.ts", "./CreatureForceMovePart.ts", "./CreaturePartID.ts", "./CreatureBase.ts", "./ResList.ts", "./CreatureView.ts", "./CreatureAttackPart.ts", "./EffectManager.ts", "./LayerType.ts", "./EffectFactory.ts", "./CreatureManager.ts", "./CreatureType.ts", "./BurstWeapon.ts", "./Gun360Weapon.ts"], (function(t) {
  var i, e, s, n, o, a, r, h, l, c, f, u, d, v, g, p, w, y, P, k, m, _, E, C;
  return {
      setters: [function(t) {
          i = t.inheritsLoose,
          e = t.createForOfIteratorHelperLoose,
          s = t.createClass
      }
      , function(t) {
          n = t.cclegacy,
          o = t.Vec2,
          a = t.Color,
          r = t.easing,
          h = t.Vec3,
          l = t.Prefab
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          d = t.default
      }
      , function(t) {
          v = t.default
      }
      , function(t) {
          g = t.default
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          w = t.default
      }
      , function(t) {
          y = t.default
      }
      , function(t) {
          P = t.Layer2DType
      }
      , function(t) {
          k = t.default
      }
      , function(t) {
          m = t.default
      }
      , function(t) {
          _ = t.CreatureState
      }
      , function(t) {
          E = t.default
      }
      , function(t) {
          C = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "02dd6H3HhFLcYgwggHkP+mC", "Creature", void 0),
          t("default", function(t) {
              function n() {
                  for (var i, e = arguments.length, s = new Array(e), n = 0; n < e; n++)
                      s[n] = arguments[n];
                  return (i = t.call.apply(t, [this].concat(s)) || this).view = void 0,
                  i.parts = new Map,
                  i.isFlipX = void 0,
                  i._crtid = void 0,
                  i._movePart = void 0,
                  i._attackPart = void 0,
                  i._isBoss = void 0,
                  i.ring = void 0,
                  i.arrowEffect = void 0,
                  i.stunEffect = void 0,
                  i.fireRing = void 0,
                  i.burnEffect = void 0,
                  i.fireBall = void 0,
                  i.lightningId = void 0,
                  i.isHiting = !1,
                  i
              }
              i(n, t);
              var v = n.prototype;
              return v.reset = function() {
                  t.prototype.reset.call(this),
                  this._isSearched = !0,
                  this._crtid = n.UUID_INDEX,
                  n.UUID_INDEX += 1,
                  this.context.reset(),
                  this.parts.clear(),
                  this.isPause = !1
              }
              ,
              v.refresh = function() {
                  for (var t, i = e(this.parts.values()); !(t = i()).done; ) {
                      t.value.refresh()
                  }
              }
              ,
              v.onStart = function() {
                  this.view = this.node.getComponent(p),
                  this.view.reset(),
                  this.view.setOwner(this),
                  this.view.listenBeginContact(this, this.onBeginContact);
                  var t = this.view.rigidBody;
                  t && (t.linearVelocity = o.ZERO,
                  t.wakeUp()),
                  this.view.setPaused(this.isPause),
                  this.view.setColor(a.WHITE),
                  this.view.body.setScale(this.isFlipX ? -1 : 1, 1),
                  this.resumeColliderOffset(),
                  this.showJumpShadow(!1)
              }
              ,
              v.onEnable = function() {
                  for (var t, i = e(this.parts.values()); !(t = i()).done; ) {
                      t.value.start()
                  }
              }
              ,
              v.onDisable = function() {
                  for (var t, i = e(this.parts.values()); !(t = i()).done; ) {
                      t.value.clear()
                  }
                  this.killArrow(),
                  this.clearEffect()
              }
              ,
              v.onDestroy = function() {
                  this.killArrow(),
                  this.clearEffect()
              }
              ,
              v.clearEffect = function() {
                  this.fireRing && (c.res.recycle(this.fireRing.node),
                  this.fireRing = null),
                  this.fireBall && (c.res.recycle(this.fireBall.node),
                  this.fireBall = null),
                  this.burnEffect && (this.burnEffect.destroy(),
                  this.burnEffect = null),
                  null != this.ring && (c.res.recycle(this.ring),
                  this.ring = null),
                  this.stunEffect && (this.stunEffect.destroy(),
                  this.stunEffect = null),
                  null != this.lightningId && (y.ins.kill(this.lightningId),
                  this.lightningId = null)
              }
              ,
              v.addPart = function(t, i) {
                  this.removePart(t),
                  i.setOwner(this),
                  i.setPaused(!1),
                  this.parts.set(t, i),
                  this.active && i.start()
              }
              ,
              v.removePart = function(t) {
                  this.parts.has(t) && (this.parts.get(t).clear(),
                  this.parts.delete(t))
              }
              ,
              v.getPart = function(t) {
                  return this.parts.get(t)
              }
              ,
              v.createMovePart = function() {
                  this.addPart(d.Move, new f),
                  this._movePart = this.getPart(d.Move)
              }
              ,
              v.createForceMovePart = function() {
                  this.addPart(d.Move, new u),
                  this._movePart = this.getPart(d.Move)
              }
              ,
              v.createAttackPart = function() {
                  this.addPart(d.Attack, new w),
                  this._attackPart = this.getPart(d.Attack)
              }
              ,
              v.onUpdate = function(t) {
                  if (this.state == _.Active)
                      for (var i, s = e(this.parts.values()); !(i = s()).done; ) {
                          i.value.onUpdate(t)
                      }
              }
              ,
              v.damageCrt = function(t) {
                  null != this.context ? null != this.context.data ? this.context.data.beAtk(t, !1) : console.error("monster ctx err2：" + this.src) : console.error("monster ctx err1:" + this.src)
              }
              ,
              v.recover = function(t) {}
              ,
              v.setAnimTimeScale = function(t) {
                  this.view && this.view.setAnimTimeScale(t)
              }
              ,
              v.playAnim = function(t, i) {
                  void 0 === i && (i = !0),
                  this.view && this.view.playAnim(t, i)
              }
              ,
              v.playAnimation = function(t) {
                  this.view && this.view.playAnimation(t)
              }
              ,
              v.setFlipX = function(t) {
                  this.isFlipX != t && (this.isFlipX = t,
                  this.view && this.view.body.setScale(this.isFlipX ? -1 : 1, 1))
              }
              ,
              v.pause = function() {
                  this.isPause = !0;
                  for (var t, i = e(this.parts.values()); !(t = i()).done; ) {
                      t.value.pause()
                  }
                  null != this.view && (this.view.setPaused(!0),
                  this.view.rigidBody && (this.view.rigidBody.linearVelocity = o.ZERO))
              }
              ,
              v.resume = function() {
                  this.isPause = !1;
                  for (var t, i = e(this.parts.values()); !(t = i()).done; ) {
                      t.value.resume()
                  }
                  null != this.view && this.view.setPaused(!1)
              }
              ,
              v.getPos = function() {
                  return this.node ? this.node.position : this.position
              }
              ,
              v.getPosX = function() {
                  return this.node ? this.node.position.x : this.position.x
              }
              ,
              v.getPosY = function() {
                  return this.node ? this.node.position.y : this.position.y
              }
              ,
              v.move = function(t, i) {
                  this._movePart.move(t, i)
              }
              ,
              v.moveTo = function(t, i) {
                  this._movePart.moveTo(t, i)
              }
              ,
              v.moveCharge = function(t, i, e, s, n) {
                  this._movePart.moveCharge(t, i, e, s, n)
              }
              ,
              v.stopMove = function() {
                  this._movePart.move(0, 0)
              }
              ,
              v.setMoveSpeed = function(t) {
                  this.context.setMoveSpeed(t)
              }
              ,
              v.setDebuffFlag = function(t) {
                  this.context.setDebuffFlag(t)
              }
              ,
              v.setMoveLimit = function(t) {
                  this.context.setMoveLimit(t)
              }
              ,
              v.onDamaged = function(t, i) {}
              ,
              v.setPickRadius = function(t) {
                  this.context.pickRange = t
              }
              ,
              v.hitBack = function(t, i, e, s) {
                  this._movePart.hitBack(t, i, e, s)
              }
              ,
              v.hitBackByDistance = function(t, i, e, s) {
                  this._movePart.hitBackByDistance(t, i, e, s)
              }
              ,
              v.hitBackToDie = function(t, i, e, s) {
                  if (this.state != _.Death) {
                      this.isBoss && c.global.set("boss.position", this.node.position.clone()),
                      this.clearEffect(),
                      this.isLive && k.playDie(this.position),
                      this.setState(_.Death),
                      this.killArrow();
                      var n = this.view.collider.offset;
                      k.toDie(this.node, n, t, i, e, 1e3 * s, c.handler(this, this.onhitBackComplete))
                  }
              }
              ,
              v.toDie = function() {
                  this.isBoss && c.global.set("boss.position", this.node.position.clone()),
                  this.clearEffect(),
                  this.setState(_.Death),
                  this.isLive && k.playDie(this.position),
                  m.ins.remove(this)
              }
              ,
              v.onhitBackComplete = function() {
                  m.ins.remove(this)
              }
              ,
              v.playFlash = function() {
                  var t = this;
                  this.isHiting || (this.isHiting = !0,
                  c.action.lerpColor(this, (function(i) {
                      t.view.setColor(i)
                  }
                  ), new a(255,128,128), new a(255,255,255), 300, r.linear, (function() {
                      t.isHiting = !1
                  }
                  )))
              }
              ,
              v.setColliderOffset = function(t) {
                  this.view.defaultOffset;
                  this.view.collider.offset = t,
                  this.ring && this.ring.setPosition(t.x, t.y)
              }
              ,
              v.resumeColliderOffset = function() {
                  var t = this.view.defaultOffset;
                  t && (this.view.collider.offset = t,
                  this.ring && this.ring.setPosition(t.x, t.y))
              }
              ,
              v.setRegion = function(t) {
                  this.movePart.setRegion(t)
              }
              ,
              v.fire = function(t, i, e, s) {
                  this.active ? this._attackPart && this._attackPart.fire(t, i, e, s) : this.delayHandle(this.fire, t, i, e, s)
              }
              ,
              v.charge = function(t, i, e, s, n, o) {
                  this.active ? this._attackPart && this._attackPart.charge(t, i, e, s, n, o) : this.delayHandle(this.charge, t, i, e, s, n, o)
              }
              ,
              v.attack = function(t, i, e, s) {
                  this.active ? this._attackPart && this._attackPart.attack(t, i, e, s) : this.delayHandle(this.attack, t, i, e, s)
              }
              ,
              v.link = function(t) {
                  this._attackPart && this._attackPart.link(t)
              }
              ,
              v.unLink = function(t) {
                  this._attackPart && this._attackPart.unLink(t)
              }
              ,
              v.lightning = function(t, i, e) {
                  if (this.active) {
                      var s = m.ins.getCreatureBySn(t);
                      s && s.playLightning(i, e)
                  } else
                      this.delayHandle(this.lightning, t, i, e)
              }
              ,
              v.playLightning = function(t, i) {
                  var e = this;
                  y.ins.kill(this.lightningId),
                  this.lightningId = y.ins.playFixed(g.lightning.path, h.ZERO, null, null, this.node, 600).uuid,
                  t && i && c.action.delayCall(300, this, (function() {
                      e.active && i.call(t, e)
                  }
                  ))
              }
              ,
              v.setAttackDuration = function(t) {
                  this.active ? this._attackPart && this._attackPart.setAttackDuration(t) : this.delayHandle(this.setAttackDuration, t)
              }
              ,
              v.setAttackRange = function(t) {
                  this.active ? this.setJumpShadowRange(t) : this.delayHandle(this.setAttackRange, t)
              }
              ,
              v.burst = function(t, i, e, s) {
                  if (null != this.node) {
                      if (null == this.fireRing) {
                          var n = c.res.spawn(g.weapon_FireRing.path, l, h.ZERO, null, this.node);
                          this.fireRing = n.getComponent(E)
                      }
                      this.fireRing.fire(t, i, e, s)
                  }
              }
              ,
              v.burstFire = function(t) {
                  if (null != this.node) {
                      if (null == this.fireBall) {
                          var i = c.res.spawn(g.weapon_FireBall2.path, l, new h(0,30,0), null, this.node);
                          this.fireBall = i.getComponent(C),
                          this.fireBall.setOwner(this),
                          this.fireBall.setData(t)
                      }
                      this.fireBall.fire(null)
                  }
              }
              ,
              v.setDebug = function(t) {}
              ,
              v.showArrow = function(t, i, e) {
                  if (null != this.view && null != this.view.arrowAssetPath) {
                      this.killArrow();
                      var s = this.view.arrowAssetPath
                        , n = this.position
                        , o = 0
                        , a = new h(1,1,1);
                      if (t > 0) {
                          var r = Math.atan(i / t);
                          o = c.math.getAngle(r)
                      } else if (t < 0) {
                          var l = Math.atan(i / t);
                          a.x = -1,
                          o = c.math.getAngle(l)
                      }
                      this.arrowEffect = y.ins.playFixed(s, n, o, a, P.Middle, e)
                  }
              }
              ,
              v.killArrow = function() {
                  this.arrowEffect && (this.arrowEffect.destroy(),
                  this.arrowEffect = null)
              }
              ,
              v.showStun = function(t) {
                  t ? (this.view && this.view.setPaused(!0),
                  this.setState(_.Stun),
                  null == this.stunEffect && (this.stunEffect = y.ins.playFixed(g.Stun.path, new h(0,50,0), null, null, this.node, 6e4))) : (this.view && this.view.setPaused(!1),
                  this.setState(_.Active),
                  this.stunEffect && (this.stunEffect.destroy(),
                  this.stunEffect = null))
              }
              ,
              v.showBurning = function(t) {
                  t ? null == this.burnEffect && (this.burnEffect = y.ins.playFixed(g.burning.path, new h(0,0,0), null, null, this.node, 6e4)) : this.burnEffect && (this.burnEffect.destroy(),
                  this.burnEffect = null)
              }
              ,
              v.showJumpShadow = function(t) {
                  null != this.view && this.view.showJumpShadow(t)
              }
              ,
              v.setJumpShadowRange = function(t) {
                  null != this.view && this.view.setJumpShadowRange(t)
              }
              ,
              v.playFallDownEffect = function(t) {
                  null != this.view && this.view.playFallDownEffect(t)
              }
              ,
              v.playLandingEffect = function() {
                  null != this.view && this.view.playLandingEffect()
              }
              ,
              v.setWeaponAttackSpeed = function(t, i) {}
              ,
              v.setPosition = function(i) {
                  t.prototype.setPosition.call(this, i),
                  this.movePart && this.movePart.setPosition(i)
              }
              ,
              v.onBeginContact = function(t) {
                  this.isLive && this._attackPart && this._attackPart.beginContact(t)
              }
              ,
              v.playText = function(t, i) {
                  if (this.isLive) {
                      var e = this.position
                        , s = this.view.headHeight;
                      k.playText(t, i, e, s, !1)
                  }
              }
              ,
              s(n, [{
                  key: "crtid",
                  get: function() {
                      return this._crtid
                  }
              }, {
                  key: "movePart",
                  get: function() {
                      return this._movePart
                  }
              }, {
                  key: "attackPart",
                  get: function() {
                      return this._attackPart
                  }
              }, {
                  key: "isBoss",
                  get: function() {
                      return this._isBoss
                  }
              }, {
                  key: "center",
                  get: function() {
                      return this.node && (h.copy(this._center, this.node.position),
                      this._center.x += this.view.collider.offset.x,
                      this._center.y += this.view.collider.offset.y),
                      this._center
                  }
              }, {
                  key: "worldCenter",
                  get: function() {
                      return this.node && (h.copy(this._worldCenter, this.node.worldPosition),
                      this._worldCenter.x += this.view.collider.offset.x,
                      this._worldCenter.y += this.view.collider.offset.y),
                      this._worldCenter
                  }
              }, {
                  key: "offset",
                  get: function() {
                      return this.view ? this.view.collider.offset : o.ZERO
                  }
              }]),
              n
          }(v)).UUID_INDEX = 1,
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureAnimId.ts", ["cc"], (function(e) {
  var t;
  return {
      setters: [function(e) {
          t = e.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "5e34aCbN+BGWJrTHtI1KHih", "CreatureAnimId", void 0);
          var n = e("default", (function() {}
          ));
          n.Idle = "idle",
          n.Run = "run",
          n.Attack = "attack",
          n.Die = "die",
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureAttackPart.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreaturePart.ts", "./Creature.ts", "./CreatureAnimId.ts", "./WeaponState.ts", "./CreatureManager.ts", "./LaserLink.ts", "./Kit.ts", "./ResList.ts", "./RangedWeapon.ts", "./EffectManager.ts", "./LayerType.ts"], (function(t) {
  var i, e, n, a, s, h, o, r, c, l, d, k, u, g, f;
  return {
      setters: [function(t) {
          i = t.inheritsLoose,
          e = t.createForOfIteratorHelperLoose
      }
      , function(t) {
          n = t.cclegacy,
          a = t.Vec3
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          r = t.WeaponAttackState
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          l = t.default
      }
      , function(t) {
          d = t.default
      }
      , function(t) {
          k = t.default
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          g = t.default
      }
      , function(t) {
          f = t.Layer2DType
      }
      ],
      execute: function() {
          n._RF.push({}, "c9f52bDCCNFM4Oh764/afI4", "CreatureAttackPart", void 0);
          var w = function(t) {
              return t[t.Common = 0] = "Common",
              t[t.Fire = 1] = "Fire",
              t[t.Charge = 2] = "Charge",
              t
          }(w || {})
            , v = function(t) {
              return t[t.Idle = 0] = "Idle",
              t[t.Beging = 1] = "Beging",
              t[t.Ending = 2] = "Ending",
              t
          }(v || {});
          t("default", function(t) {
              function n() {
                  for (var i, e = arguments.length, n = new Array(e), s = 0; s < e; s++)
                      n[s] = arguments[s];
                  return (i = t.call.apply(t, [this].concat(n)) || this).node = void 0,
                  i.view = void 0,
                  i.type = void 0,
                  i.state = v.Idle,
                  i.skeleton = void 0,
                  i.caller = void 0,
                  i.onAttack = void 0,
                  i.onAttackEnd = void 0,
                  i.onComplete = void 0,
                  i.dir = new a,
                  i.time = 0,
                  i.chargeDut = 0,
                  i.chargeDis = 0,
                  i.atkIndex = 0,
                  i.atkEvents = [],
                  i.attackState = r.Idle,
                  i.isPlaying = void 0,
                  i.isCharging = void 0,
                  i.attackSpeed = 1,
                  i.cdTime = 0,
                  i.linkDict = new Map,
                  i.linkCount = 0,
                  i.atkBatch = null,
                  i.lastTime = void 0,
                  i
              }
              i(n, t);
              var s = n.prototype;
              return s.onEnable = function() {
                  this.linkCount = 0,
                  this.linkDict.clear(),
                  this.node = this.owner.node,
                  this.view = this.owner.view,
                  this.atkIndex = 0,
                  this.atkEvents = this.view.atkEvents,
                  this.state = v.Idle,
                  this.skeleton = this.owner.view.skeleton,
                  this.skeleton && this.skeleton.setCompleteListener(this.onPlayComplete.bind(this)),
                  this.view && this.view.isTower && this.owner.playAnimation("Tower_Atk")
              }
              ,
              s.onDisable = function() {
                  for (var t, i = e(this.linkDict); !(t = i()).done; ) {
                      t.value[1].destroy()
                  }
                  this.linkDict.clear()
              }
              ,
              s.beginContact = function(t) {
                  (this.attackState == r.Running || this.isCharging) && t instanceof h && null != this.atkBatch && t.damageCrt(this.atkBatch)
              }
              ,
              s.onUpdate = function(t) {
                  if (this.state == v.Beging)
                      if (this.atkIndex < this.atkEvents.length)
                          if (this.skeleton) {
                              var i = this.skeleton.getCurrent(0);
                              if (i.animation.name == o.Attack) {
                                  var e = this.atkEvents[this.atkIndex];
                                  this.attackState == r.Begin && i.animationLast > e.x && (this.attackState = r.Running,
                                  this.onAttackBegin()),
                                  this.attackState == r.Running && i.animationLast > e.y && (this.atkIndex++,
                                  this.atkIndex < this.atkEvents.length ? this.attackState = r.Begin : (this.attackState = r.Ended,
                                  this.onAttackEnded()))
                              } else
                                  this.state = v.Ending,
                                  this.time = 0
                          } else {
                              this.time += t;
                              var n = this.atkEvents[this.atkIndex];
                              this.attackState == r.Begin && this.time > n.x && (this.attackState = r.Running,
                              this.onAttackBegin()),
                              this.attackState == r.Running && this.time > n.y && (this.atkIndex++,
                              this.atkIndex < this.atkEvents.length ? this.attackState = r.Begin : (this.attackState = r.Ended,
                              this.isPlaying = !1,
                              this.onAttackEnded()))
                          }
                      else
                          this.state = v.Ending,
                          this.time = 0;
                  else
                      this.state == v.Ending && (this.time += t,
                      !this.isPlaying && !this.isCharging && this.time > this.cdTime && (this.onAttackComplete(),
                      this.state = v.Idle))
              }
              ,
              s.onPlayComplete = function() {
                  this.isPlaying = !1,
                  this.view && this.view.isTower && this.owner.playAnimation("Tower_Idle")
              }
              ,
              s.onAttackBegin = function() {
                  if (this.onAttack && this.onAttack.call(this.caller),
                  this.type == w.Fire) {
                      var t = this.node.getComponent(u);
                      t && (t.setData(this.owner.context.data),
                      t.setOwner(this.owner),
                      t.fire(this.dir))
                  }
                  this.type == w.Charge && (null != this.atkBatch && (this.atkBatch.destory(),
                  this.atkBatch = null),
                  this.atkBatch = c.ins.generateAtkBatch(this.owner.context.data),
                  this.isCharging = !0,
                  this.owner.movePart.reset(),
                  this.owner.moveCharge(this.dir, this.chargeDis, this.chargeDut, this, this.onChargeComplete)),
                  this.owner.killArrow(),
                  this.owner.playFallDownEffect(this.attackSpeed)
              }
              ,
              s.onChargeComplete = function() {
                  this.isCharging = !1
              }
              ,
              s.onAttackEnded = function() {
                  this.onAttackEnd && this.onAttackEnd.call(this.caller),
                  this.owner.setInvincible(!1),
                  this.owner.playLandingEffect()
              }
              ,
              s.onAttackComplete = function() {
                  this.onComplete && d.action.delayCall(50, this.caller, this.onComplete),
                  this.caller = null,
                  this.onAttack = null,
                  this.onAttackEnd = null,
                  this.onComplete = null,
                  this.owner.setAnimTimeScale(1),
                  this.owner.movePart.reset(),
                  this.owner.setInvincible(!1)
              }
              ,
              s.fire = function(t, i, e, n, a) {
                  this.dir.x = t.x,
                  this.dir.y = t.y,
                  this.dir.normalize(),
                  this.chargeDis = 0,
                  this.chargeDut = 0,
                  this.type = w.Fire,
                  this.startAttack(i, e, a, n)
              }
              ,
              s.charge = function(t, i, e, n, a, s, h) {
                  this.dir.x = t.x,
                  this.dir.y = t.y,
                  this.dir.normalize(),
                  this.chargeDis = 0 | i,
                  this.chargeDut = .001 * (0 | e),
                  this.type = w.Charge,
                  this.view && (this.attackSpeed = this.view.chargeSpeed),
                  this.startAttack(n, a, h, s, !1),
                  this.owner.showArrow(t.x, t.y, 2e4)
              }
              ,
              s.attack = function(t, i, e, n) {
                  this.chargeDis = 0,
                  this.chargeDut = 0,
                  this.type = w.Common,
                  this.startAttack(t, i, e, n)
              }
              ,
              s.startAttack = function(t, i, e, n, a) {
                  void 0 === a && (a = !0),
                  this.isPlaying = !0,
                  this.isCharging = !1,
                  this.atkIndex = 0,
                  this.attackState = r.Begin,
                  this.state = v.Beging,
                  this.caller = t,
                  this.onAttack = i,
                  this.onAttackEnd = e,
                  this.onComplete = n,
                  this.owner.movePart.stop(),
                  this.owner.setAnimTimeScale(this.attackSpeed),
                  this.owner.playAnim(o.Attack, a),
                  this.view && (this.view.isTower && this.owner.playAnimation("Tower_Atk"),
                  this.view.invincibleInAttack && this.owner.setInvincible(!0))
              }
              ,
              s.setAttackDuration = function(t) {
                  if (this.skeleton) {
                      var i = .001 * t
                        , e = this.skeleton.findAnimation("attack");
                      null != e && (i > e.duration ? (this.attackSpeed = 1,
                      this.cdTime = i - e.duration) : (this.attackSpeed = e.duration / i,
                      this.cdTime = 0))
                  } else
                      this.attackSpeed = 1,
                      this.cdTime = 0
              }
              ,
              s.link = function(t) {
                  if (null == this.linkDict.get(t)) {
                      var i = c.ins.getCreatureBySn(t);
                      if (i) {
                          var e = i.offset
                            , n = new l;
                          n.srcT = this.node,
                          n.dstT = i.node,
                          n.offset.x = e.x,
                          n.offset.y = e.y,
                          n.path = "creature/prefabs/Tower_Laser_Bullet",
                          n.start(),
                          this.linkDict.set(t, n)
                      }
                      this.lastTime = Date.now(),
                      this.view && this.view.isTower && this.owner.playAnimation("Tower_Atk"),
                      d.sound.playSound(k.sound_lasertower.path)
                  }
              }
              ,
              s.unLink = function(t) {
                  var i = this.linkDict.get(t);
                  i && (i.destroy(),
                  this.linkDict.delete(t)),
                  0 == this.linkDict.size && this.view && this.view.isTower && this.owner.playAnimation("Tower_Idle")
              }
              ,
              s.lightning = function(t, i, e) {
                  var n = c.ins.getCreatureBySn(t);
                  n && (d.action.beginSequence(),
                  g.ins.playFixed(k.lightning.path, n.position, null, null, f.View, 800),
                  i && e && d.call(i, e),
                  d.action.end())
              }
              ,
              n
          }(s));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureBase.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreatureType.ts", "./Kit.ts", "./LayerType.ts"], (function(t) {
  var i, e, s, n, o, a, h;
  return {
      setters: [function(t) {
          i = t.createClass
      }
      , function(t) {
          e = t.cclegacy,
          s = t.Vec3,
          n = t.Prefab
      }
      , function(t) {
          o = t.CreatureState
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          h = t.Layer2DType
      }
      ],
      execute: function() {
          e._RF.push({}, "61aecFYxwxJ5qxoyMaoV2op", "CreatureBase", void 0);
          t("default", function() {
              function t() {
                  this.type = void 0,
                  this.node = void 0,
                  this._src = void 0,
                  this._position = new s,
                  this._center = new s,
                  this._worldCenter = new s,
                  this._rotation = 0,
                  this._layer = h.Main,
                  this.active = !1,
                  this._isSearched = void 0,
                  this.isPause = !1,
                  this._state = o.Free,
                  this._waitHandler = void 0,
                  this.delayHandles = [],
                  this._isInvincible = void 0
              }
              var e = t.prototype;
              return e.reset = function() {
                  this.active = !1,
                  this.isPause = !1,
                  this._state = o.Free
              }
              ,
              e.start = function(t, i, e, n) {
                  this._src = t,
                  this._rotation = e,
                  this._layer = n,
                  i && s.copy(this._position, i),
                  this.loadAsset()
              }
              ,
              e.startDelay = function(t, i, e, n, o) {
                  this._src = t,
                  this._rotation = e,
                  this._layer = n,
                  i && s.copy(this._position, i),
                  o > 0 ? setTimeout(this.loadAsset.bind(this), o) : this.loadAsset()
              }
              ,
              e.destroy = function() {
                  this.active && (this.active = !1,
                  this.onDisable(),
                  this.onDestroy()),
                  this.node && (a.res.recycle(this.node),
                  this.node = null),
                  this._state = o.Free
              }
              ,
              e.loadAsset = function() {
                  this._state != o.Free && this._state != o.Death || (this._state = o.Loading,
                  a.res.spawnAsyn(this._src, n, this._position, this._rotation, this._layer, this, this.onLoadComplete))
              }
              ,
              e.onLoadComplete = function(t) {
                  if (this._state != o.Free && this._state != o.Death) {
                      if (this._state = o.Active,
                      this.node = t,
                      this.active || (this.active = !0,
                      this.onStart(),
                      this.onEnable()),
                      this._waitHandler) {
                          var i = this._waitHandler.method
                            , e = this._waitHandler.caller;
                          i.call(e),
                          this._waitHandler = null
                      }
                      if (this.delayHandles.length > 0) {
                          for (var s = 0; s < this.delayHandles.length; ++s) {
                              var n, h = this.delayHandles[s];
                              (n = h.call).call.apply(n, [this, h.thisArg].concat(h.args))
                          }
                          this.delayHandles.splice(0, this.delayHandles.length)
                      }
                  } else
                      a.res.recycle(t)
              }
              ,
              e.onStart = function() {}
              ,
              e.onEnable = function() {}
              ,
              e.onDisable = function() {}
              ,
              e.onDestroy = function() {}
              ,
              e.setState = function(t) {
                  this._state = t
              }
              ,
              e.onUpdate = function(t) {}
              ,
              e.pause = function() {
                  this.isPause = !0
              }
              ,
              e.resume = function() {
                  this.isPause = !1
              }
              ,
              e.setPosition = function(t) {
                  s.copy(this._position, t),
                  this.node && this.node.setPosition(this._position)
              }
              ,
              e.wait = function(t, i) {
                  this.node ? i.call(t) : this._waitHandler = {
                      caller: t,
                      method: i
                  }
              }
              ,
              e.delayHandle = function(t, i) {
                  for (var e = arguments.length, s = new Array(e > 2 ? e - 2 : 0), n = 2; n < e; n++)
                      s[n - 2] = arguments[n];
                  this.delayHandles.push({
                      call: t,
                      thisArg: i,
                      args: s
                  })
              }
              ,
              e.setInvincible = function(t) {
                  this._isInvincible = t
              }
              ,
              i(t, [{
                  key: "src",
                  get: function() {
                      return this._src
                  }
              }, {
                  key: "isSearched",
                  get: function() {
                      return this._isSearched
                  },
                  set: function(t) {
                      this._isSearched = t
                  }
              }, {
                  key: "isLive",
                  get: function() {
                      return this._state == o.Active
                  }
              }, {
                  key: "isInvincible",
                  get: function() {
                      return this._isInvincible
                  }
              }, {
                  key: "state",
                  get: function() {
                      return this._state
                  }
              }, {
                  key: "position",
                  get: function() {
                      return this.node ? this.node.position : this._position
                  }
              }, {
                  key: "worldPosition",
                  get: function() {
                      return this.node ? this.node.worldPosition : this._position
                  }
              }]),
              t
          }());
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureBirth.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./FrameAnimView.ts", "./Kit.ts"], (function(e) {
  var i, t, n, r, a, o, l, c, s, u;
  return {
      setters: [function(e) {
          i = e.applyDecoratedDescriptor,
          t = e.inheritsLoose,
          n = e.initializerDefineProperty,
          r = e.assertThisInitialized
      }
      , function(e) {
          a = e.cclegacy,
          o = e._decorator,
          l = e.Animation,
          c = e.Component
      }
      , function(e) {
          s = e.FrameAnimView
      }
      , function(e) {
          u = e.default
      }
      ],
      execute: function() {
          var p, f, m, h, y, w, A;
          a._RF.push({}, "10c179TqBpL15n88Gf2QM9X", "CreatureBirth", void 0);
          var d = o.ccclass
            , v = o.property;
          e("default", (p = d("CreatureBirth"),
          f = v({
              type: l
          }),
          m = v({
              type: s
          }),
          p((w = i((y = function(e) {
              function i() {
                  for (var i, t = arguments.length, a = new Array(t), o = 0; o < t; o++)
                      a[o] = arguments[o];
                  return i = e.call.apply(e, [this].concat(a)) || this,
                  n(i, "animation", w, r(i)),
                  n(i, "frameAnimView", A, r(i)),
                  i
              }
              t(i, e);
              var a = i.prototype;
              return a.onEnable = function() {
                  this.animation && this.animation.play()
              }
              ,
              a.open = function() {
                  var e = this;
                  this.frameAnimView && this.frameAnimView.play("open", this, (function() {
                      e.frameAnimView.play("idle")
                  }
                  ))
              }
              ,
              a.close = function() {
                  var e = this;
                  this.frameAnimView ? this.frameAnimView.play("close", this, (function() {
                      u.res.recycle(e.node)
                  }
                  )) : u.res.recycle(this.node)
              }
              ,
              i
          }(c)).prototype, "animation", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          A = i(y.prototype, "frameAnimView", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          h = y)) || h));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureContext.ts", ["cc"], (function(e) {
  var t;
  return {
      setters: [function(e) {
          t = e.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "1943c4d7LNKLoa1CN1obQBu", "CreatureContext", void 0);
          e("default", function() {
              function e() {
                  this.data = void 0,
                  this.moveType = 0,
                  this.moveSpeed = 1,
                  this.moveSmoke = void 0,
                  this.pickRange = 300,
                  this.attackSpeed = 1,
                  this.debuffFlag = 0,
                  this.moveLimit = !1,
                  this.skin = void 0
              }
              var t = e.prototype;
              return t.reset = function() {}
              ,
              t.setMoveType = function(e) {
                  this.moveType = e
              }
              ,
              t.setMoveSpeed = function(e) {
                  1 == this.moveType ? this.moveSpeed = e / 32 : this.moveSpeed = e
              }
              ,
              t.setDebuffFlag = function(e) {
                  this.debuffFlag = e
              }
              ,
              t.setMoveLimit = function(e) {
                  this.moveLimit = e
              }
              ,
              e
          }());
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureDress.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./CreatureSlot.ts"], (function(t) {
  var e, n, i, s, a, r, l, o, u, c;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          n = t.inheritsLoose,
          i = t.initializerDefineProperty,
          s = t.assertThisInitialized
      }
      , function(t) {
          a = t.cclegacy,
          r = t._decorator,
          l = t.sp,
          o = t.Component
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          c = t.default
      }
      ],
      execute: function() {
          var h, f, p, d, v, m;
          a._RF.push({}, "74b362tpyFLd5IGCrbCAbXj", "CreatureDress", void 0);
          var k = r.ccclass
            , g = r.property;
          t("default", (h = k("CreatureDress"),
          f = g({
              type: l.Skeleton
          }),
          h(((m = function(t) {
              function e() {
                  for (var e, n = arguments.length, a = new Array(n), r = 0; r < n; r++)
                      a[r] = arguments[r];
                  return e = t.call.apply(t, [this].concat(a)) || this,
                  i(e, "skeleton", v, s(e)),
                  e.tempList = new Array,
                  e.dressDict = new Map,
                  e
              }
              n(e, t);
              var a = e.prototype;
              return a.setAttachment = function(t, n) {
                  var i = this.dressDict.get(t);
                  if (null == i && (i = new c,
                  this.dressDict.set(t, i)),
                  n) {
                      if (i.skin == n.skin && i.slot == n.slot)
                          return;
                      i.skin = n.skin,
                      i.slot = n.slot,
                      e.SKIN_DICT.get(n.skin) ? this.updateAttachment(t) : u.res.spawnAsyn(n.skin, l.SkeletonData, null, null, null, this, this.onLoadSkeletonComplete, [n.skin, t])
                  } else
                      i.skin = null,
                      i.slot = null,
                      this.updateAttachment(t)
              }
              ,
              a.onLoadSkeletonComplete = function(t, n, i) {
                  var s = t.skeletonData.getRuntimeData();
                  if (s) {
                      var a = s.skins;
                      t.setSkin(a[0].name)
                  }
                  e.SKIN_DICT.set(n, t),
                  this.updateAttachment(i)
              }
              ,
              a.updateAttachment = function(t) {
                  var n = this.skeleton.findSlot(t);
                  if (null != n) {
                      var i = this.dressDict.get(t);
                      if (i && i.skin && i.slot) {
                          var s = e.SKIN_DICT.get(i.skin).findSlot(i.slot);
                          if (null == s)
                              return n.setAttachment(null),
                              void this.skeleton.invalidAnimationCache();
                          var a = s.getAttachment();
                          if (null == a)
                              return n.setAttachment(null),
                              void this.skeleton.invalidAnimationCache();
                          n.setAttachment(a.copy()),
                          this.skeleton.invalidAnimationCache()
                      } else
                          n.setAttachment(null),
                          this.skeleton.invalidAnimationCache()
                  } else
                      console.error("CreatureDress: attachment failed，target slot[" + t + "] donot exist")
              }
              ,
              a.getSkinName = function(t) {
                  var e = t[0];
                  return -1 == e.lastIndexOf("_") ? e : e.substring(0, e.lastIndexOf("_"))
              }
              ,
              a.setHeroData = function(t, e) {
                  for (var n = 1; n < 5; n++) {
                      var i, s = t.getEquipByType(n), a = null == s || null == (i = s.cfg) ? void 0 : i.PartArray;
                      if (a) {
                          var r = this.getSkinName(a);
                          this.setEquip(n, r)
                      } else
                          this.setEquip(n, null)
                  }
              }
              ,
              a.setEquipment = function(t) {
                  for (var e = new Map, n = 0; n < t.length; n++) {
                      var i = DataCenter.Equipment.Get(t[n]);
                      e.set(i.Type, i)
                  }
                  for (var s = 1; s < 5; s++) {
                      var a = e.get(s);
                      if (a) {
                          var r = this.getSkinName(a.PartArray);
                          this.setEquip(s, r)
                      } else
                          this.setEquip(s, null)
                  }
              }
              ,
              a.getSlotName = function(t) {
                  var e = this.tempList;
                  return e.splice(0, e.length),
                  e
              }
              ,
              a.setEquip = function(t, e) {
                  var n = this.getSlotName(t);
                  if (e)
                      for (var i = "creature/skins/" + e, s = 0; s < n.length; s++) {
                          this.skeleton.findSlot(n[s]) && this.setAttachment(n[s], {
                              skin: i,
                              slot: n[s]
                          })
                      }
                  else
                      for (var a = 0; a < n.length; a++) {
                          this.skeleton.findSlot(n[a]) && this.setAttachment(n[a], null)
                      }
              }
              ,
              e
          }(o)).SKIN_DICT = new Map,
          v = e((d = m).prototype, "skeleton", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          p = d)) || p));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureDressType.ts", ["cc"], (function(e) {
  var r;
  return {
      setters: [function(e) {
          r = e.cclegacy
      }
      ],
      execute: function() {
          r._RF.push({}, "f6f37BV3KBLFJLFLewf15Dx", "CreatureDressType", void 0);
          var a = e("CreatureDressType", function(e) {
              return e[e.Body = 1] = "Body",
              e[e.Head = 2] = "Head",
              e[e.Empty = 3] = "Empty",
              e[e.Cloth = 4] = "Cloth",
              e[e.Face = 5] = "Face",
              e[e.Hair = 6] = "Hair",
              e[e.Hat = 7] = "Hat",
              e[e.Weapon = 8] = "Weapon",
              e[e.Pant = 9] = "Pant",
              e[e.Shoe = 10] = "Shoe",
              e[e.Ear = 11] = "Ear",
              e[e.Leg = 12] = "Leg",
              e
          }({}));
          e("CreatureDressUtils", function() {
              function e() {}
              return e.getDressName = function(e) {
                  switch (e) {
                  case a.Body:
                      return "body";
                  case a.Head:
                      return "head";
                  case a.Cloth:
                      return "clothes";
                  case a.Face:
                      return "face";
                  case a.Hair:
                      return "hair";
                  case a.Hat:
                      return "hat";
                  case a.Weapon:
                      return "weapon";
                  case a.Pant:
                      return "pant";
                  case a.Shoe:
                      return "shoe";
                  case a.Ear:
                      return "ear";
                  case a.Leg:
                      return "leg"
                  }
              }
              ,
              e
          }()).PART_DICT = {
              head: ["n"],
              body: ["n"],
              ear: ["n"],
              eye: ["n"],
              face: ["n"],
              hair: ["f", "b"],
              leg: ["l", "r"],
              clothes: ["f", "b"],
              hat: ["f", "b", "m"],
              pant: ["l", "r"],
              shoe: ["l", "r"]
          },
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureForceMovePart.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreaturePart.ts", "./CreatureAnimId.ts", "./Kit.ts"], (function(i) {
  var t, e, o, n, r, h, s, a;
  return {
      setters: [function(i) {
          t = i.inheritsLoose
      }
      , function(i) {
          e = i.cclegacy,
          o = i.ERigidBody2DType,
          n = i.Vec2,
          r = i.easing
      }
      , function(i) {
          h = i.default
      }
      , function(i) {
          s = i.default
      }
      , function(i) {
          a = i.default
      }
      ],
      execute: function() {
          e._RF.push({}, "82f47bq5QxIILlCzKcuXFYf", "CreatureForceMovePart", void 0);
          i("default", function(i) {
              function e() {
                  for (var t, e = arguments.length, o = new Array(e), r = 0; r < e; r++)
                      o[r] = arguments[r];
                  return (t = i.call.apply(i, [this].concat(o)) || this).dir = new n,
                  t.state = 0,
                  t.time = void 0,
                  t.isMoving = void 0,
                  t.rigidBody = void 0,
                  t.hitVelocity = new n,
                  t.hitDuration = 0,
                  t.hitTime = 0,
                  t.hitForce = 0,
                  t.hitEnable = !1,
                  t
              }
              t(e, i);
              var h = e.prototype;
              return h.onEnable = function() {
                  this.rigidBody = this.owner.view.rigidBody,
                  this.rigidBody.type = o.Dynamic,
                  this.rigidBody.gravityScale = 0,
                  this.rigidBody.fixedRotation = !0,
                  this.time = 0,
                  this.owner.setAnimTimeScale(1),
                  this.owner.playAnim(s.Idle, !0)
              }
              ,
              h.onDisable = function() {
                  this.rigidBody.linearVelocity = n.ZERO
              }
              ,
              h.setPosition = function(i) {}
              ,
              h.onUpdate = function(i) {
                  if (this.hitEnable)
                      if (this.hitTime += i,
                      this.hitTime < this.hitDuration) {
                          var t = (1 - r.expoIn(this.hitTime / this.hitDuration)) * this.hitForce;
                          n.multiplyScalar(a.temp.aVec2, this.hitVelocity, t),
                          this.rigidBody.linearVelocity = a.temp.aVec2
                      } else
                          this.rigidBody.linearVelocity = n.ZERO,
                          this.hitEnable = !1;
                  else
                      this.owner.view.rigidBody.linearVelocity = this.dir
              }
              ,
              h.move = function(i, t) {
                  this.hitEnable || (this.dir.x = i,
                  this.dir.y = t,
                  i > 0 && this.owner.setFlipX(!1),
                  i < 0 && this.owner.setFlipX(!0),
                  Math.abs(i) > 0 || Math.abs(t) > 0 ? (0 == this.state && (this.state = 1,
                  this.owner.playAnim(s.Run)),
                  this.dir.normalize(),
                  this.dir.multiplyScalar(this.owner.context.moveSpeed),
                  this.owner.view.rigidBody.linearVelocity = this.dir,
                  this.isMoving = !0) : (1 == this.state && (this.state = 0,
                  this.owner.playAnim(s.Idle)),
                  this.owner.view.rigidBody.linearVelocity = this.dir,
                  this.isMoving = !1))
              }
              ,
              h.moveTo = function(i, t) {}
              ,
              h.setRegion = function(i) {}
              ,
              h.hitBack = function(i, t, e, o) {
                  this.hitVelocity.x = i,
                  this.hitVelocity.y = t,
                  this.hitVelocity.normalize(),
                  this.hitDuration = o,
                  this.hitTime = 0,
                  this.hitForce = e,
                  this.hitEnable = !0
              }
              ,
              h.hitBackByDistance = function(i, t, e, o) {}
              ,
              h.moveCharge = function(i, t, e) {
                  throw new Error("Method not implemented.")
              }
              ,
              h.stop = function() {
                  throw new Error("Method not implemented.")
              }
              ,
              h.reset = function() {
                  throw new Error("Method not implemented.")
              }
              ,
              h.hitBackToDie = function(i, t, e, o) {
                  throw new Error("Method not implemented.")
              }
              ,
              e
          }(h));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureImgDress.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./CreatureSlot.ts", "./CreatureDressType.ts", "./DressConfig.ts"], (function(t) {
  var e, r, n, s, i, a, l, o, u, c, f, h, v, p, d;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          r = t.inheritsLoose,
          n = t.initializerDefineProperty,
          s = t.assertThisInitialized,
          i = t.createForOfIteratorHelperLoose
      }
      , function(t) {
          a = t.cclegacy,
          l = t._decorator,
          o = t.sp,
          u = t.Texture2D,
          c = t.Component
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          v = t.CreatureDressType,
          p = t.CreatureDressUtils
      }
      , function(t) {
          d = t.default
      }
      ],
      execute: function() {
          var g, k, D, m, y;
          a._RF.push({}, "8d846cRcuVN1ogbJX12TxnM", "CreatureImgDress", void 0);
          var A = l.ccclass
            , T = l.property;
          t("default", (g = A("CreatureImgDress"),
          k = T({
              type: o.Skeleton
          }),
          g((y = e((m = function(t) {
              function e() {
                  for (var e, r = arguments.length, i = new Array(r), a = 0; a < r; a++)
                      i[a] = arguments[a];
                  return e = t.call.apply(t, [this].concat(i)) || this,
                  n(e, "skeleton", y, s(e)),
                  e.dressDict = new Map,
                  e.skinDict = new Map,
                  e
              }
              r(e, t);
              var a = e.prototype;
              return a.setHeroData = function(t, e) {
                  var r = p.PART_DICT;
                  for (var n in r)
                      for (var s = r[n], a = 0; a < s.length; ++a)
                          if ("n" == s[a]) {
                              var l = n;
                              this.setAttachment(l, null)
                          } else {
                              var o = n + "_" + s[a];
                              this.setAttachment(o, null)
                          }
                  if (this.skinDict.clear(),
                  t && t.TIDAry) {
                      for (var u = t.TIDAry, c = 0; c < u.length; c++) {
                          var f = u[c]
                            , h = DataCenter.Trait.Get(f);
                          if (null != h) {
                              var d = h.SkinType
                                , g = h.Skin;
                              if (d && g)
                                  for (var k = 0; k < d.length; ++k) {
                                      var D = d[k];
                                      this.skinDict.set(D, g)
                                  }
                          } else
                              console.error("在Trait表中不存在的id=" + f)
                      }
                      for (var m = 1; m < 5; m++) {
                          var y = t.getEquipByType(m);
                          if (y && y.cfg) {
                              var A = y.cfg.SkinType
                                , T = y.cfg.Skin;
                              if (A && T)
                                  for (var C = 0; C < A.length; ++C) {
                                      var x = A[C];
                                      this.skinDict.set(x, T)
                                  }
                          }
                      }
                  }
                  if (e)
                      for (var _, I = i(this.skinDict); !(_ = I()).done; ) {
                          var S = _.value
                            , w = S[0]
                            , L = S[1];
                          w != v.Pant && w != v.Shoe && w != v.Leg && this.setEquip(w, L)
                      }
                  else
                      for (var P, b = i(this.skinDict); !(P = b()).done; ) {
                          var R = P.value;
                          this.setEquip(R[0], R[1])
                      }
              }
              ,
              a.setEquip = function(t, e) {
                  if (e) {
                      var r = p.getDressName(t)
                        , n = f.config.get(d).data[e];
                      if (null == n)
                          return void console.error("unknow skin：skin=" + e + " part=" + r);
                      var s = n[r];
                      if (null == s)
                          return void console.error("unknow skin part：skin=" + e + " part=" + r);
                      for (var i = 0; i < s.length; i++) {
                          var a = s[i];
                          if ("n" == a) {
                              var l = r
                                , o = e;
                              this.setAttachment(l, "creature/dress/" + r + "/" + o + "/texture")
                          } else {
                              var u = r + "_" + a
                                , c = e + "_" + a;
                              this.setAttachment(u, "creature/dress/" + r + "/" + c + "/texture")
                          }
                      }
                  }
              }
              ,
              a.setAttachment = function(t, e) {
                  var r = this.dressDict.get(t);
                  null == r && ((r = new h).slot = t,
                  r.skin = e,
                  this.dressDict.set(t, r)),
                  r.skin = e,
                  r.texture && (f.res.recycle(r.texture),
                  r.texture = null),
                  e ? f.res.spawnAsyn(e, u, null, null, null, this, this.onLoadImageComplete, [r]) : this.updateAttachment(t)
              }
              ,
              a.onLoadImageComplete = function(t, e) {
                  null == t && console.log("资源为空"),
                  null != e.skin ? (t.setFilters(0, 0),
                  e.texture = t,
                  this.updateAttachment(e.slot)) : f.res.recycle(t)
              }
              ,
              a.updateAttachment = function(t) {
                  var e = this.dressDict.get(t);
                  if (e.texture)
                      f.spine.updatePartialSkin(this.skeleton, e.texture, null, t);
                  else {
                      var r = this.skeleton.findSlot(e.slot);
                      r && (r.color.a = 0)
                  }
                  this.skeleton.invalidAnimationCache()
              }
              ,
              a.setSkin = function(t) {
                  var e = p.PART_DICT;
                  for (var r in e)
                      for (var n = e[r], s = 0; s < n.length; ++s)
                          if ("n" == n[s]) {
                              var i = r;
                              this.setAttachment(i, null)
                          } else {
                              var a = r + "_" + n[s];
                              this.setAttachment(a, null)
                          }
                  this.skinDict.clear();
                  var l = f.config.get(d).data[t];
                  for (var o in l)
                      for (var u = l[o], c = 0; c < u.length; ++c) {
                          var h = u[c];
                          if ("n" == h) {
                              var v = o
                                , g = t;
                              this.setAttachment(v, "creature/dress/" + o + "/" + g + "/texture")
                          } else {
                              var k = o + "_" + h
                                , D = t + "_" + h;
                              this.setAttachment(k, "creature/dress/" + o + "/" + D + "/texture")
                          }
                      }
              }
              ,
              e
          }(c)).prototype, "skeleton", [k], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          D = m)) || D));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureManager.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./Singleton.ts", "./Player.ts", "./LayerType.ts", "./Enemy.ts", "./Bullet.ts", "./LayerSortUtils.ts", "./SimplePool.ts", "./CreatureType.ts", "./DropItem.ts", "./DropItemType.ts", "./ResList.ts", "./CreatureBirth.ts", "./BulletBoomerang.ts", "./EffectFactory.ts", "./AtkBatch.ts", "./Tower.ts", "./BulletShuriken.ts", "./BulletLightningBall.ts", "./GameConfig.ts", "./CurveBullet.ts"], (function(t) {
  var e, r, n, s, i, a, o, u, c, l, h, f, p, d, v, y, g, B, m, w, P, b, k, T, L, O;
  return {
      setters: [function(t) {
          e = t.inheritsLoose,
          r = t.assertThisInitialized
      }
      , function(t) {
          n = t.cclegacy,
          s = t.Prefab,
          i = t.Rect
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          c = t.Layer2DType
      }
      , function(t) {
          l = t.default
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          d = t.CreatureType
      }
      , function(t) {
          v = t.default
      }
      , function(t) {
          y = t.DropItemType
      }
      , function(t) {
          g = t.default
      }
      , function(t) {
          B = t.default
      }
      , function(t) {
          m = t.default
      }
      , function(t) {
          w = t.default
      }
      , function(t) {
          P = t.default
      }
      , function(t) {
          b = t.default
      }
      , function(t) {
          k = t.default
      }
      , function(t) {
          T = t.default
      }
      , function(t) {
          L = t.default
      }
      , function(t) {
          O = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "6f9c0Jy/XtFYZrB1BSwkcNL", "CreatureManager", void 0);
          var x = function() {
              function t() {
                  this.type = void 0,
                  this.cType = void 0,
                  this.obj = void 0
              }
              return t.prototype.reset = function() {}
              ,
              t
          }();
          t("default", function(t) {
              e(o, t);
              var n = o.prototype;
              function o() {
                  var e;
                  (e = t.call(this) || this).creatures = [],
                  e.births = [],
                  e.root = void 0,
                  e.time = 0,
                  e.time2 = 0,
                  e.isPaused = void 0,
                  e.isLocked = void 0,
                  e.region = new i,
                  e.tastPool = new p((function() {
                      return new x
                  }
                  ),(function(t) {
                      return t.reset()
                  }
                  )),
                  e.tastQueue = new Array,
                  e.atkBatch = 0,
                  e.root = a.layer.getLayer(c.Main);
                  for (var n = 0; n < 5; ++n)
                      e.creatures.push(new Array);
                  return a.time.addUpdate(r(e)),
                  e
              }
              return n.getCreatures = function(t) {
                  return this.creatures[t]
              }
              ,
              n.update = function(t) {
                  if (this.tastQueue.length > 0) {
                      for (var e = 0; e < this.tastQueue.length; ++e) {
                          var r = this.tastQueue[e];
                          if (1 == r.type) {
                              var n = this.creatures[r.cType]
                                , s = n.indexOf(r.obj);
                              -1 != s && (r.obj.destroy(),
                              n.splice(s, 1))
                          }
                          this.tastPool.recycle(r)
                      }
                      this.tastQueue.splice(0, this.tastQueue.length)
                  }
                  if (!this.isPaused) {
                      this.isLocked = !0;
                      for (var i = 0; i < this.creatures.length; ++i)
                          for (var a = this.creatures[i], o = 0; o < a.length; ++o)
                              a[o].onUpdate(t);
                      this.isLocked = !1,
                      this.time += t,
                      this.time > 1 && (this.time = 0,
                      f.update(this.root))
                  }
              }
              ,
              n.setRegion = function(t, e, r, n) {
                  this.region.set(t, e, r, n)
              }
              ,
              n.createBirth = function(t) {
                  var e = a.res.spawn(g.birth.path, s, t, null, c.Middle).getComponent(B);
                  return this.births.push(e),
                  e
              }
              ,
              n.createBossBirth = function(t) {
                  var e = a.res.spawn(g.birth_boss.path, s, t, null, c.Middle).getComponent(B);
                  return this.births.push(e),
                  e
              }
              ,
              n.createTowerBirth = function(t) {
                  var e = a.res.spawn(g.birth_tower.path, s, t, null, c.Middle).getComponent(B);
                  return this.births.push(e),
                  e
              }
              ,
              n.createDoorBirth = function(t) {
                  var e = a.res.spawn(g.birth_door.path, s, t, null, c.Middle).getComponent(B);
                  return this.births.push(e),
                  e
              }
              ,
              n.createPlayer = function(t, e, r, n, s) {
                  void 0 === n && (n = c.Main);
                  var i = u.POOL.spawn();
                  return i.type = d.Player,
                  1 == s ? i.createForceMovePart() : i.createMovePart(),
                  i.setRegion(this.region),
                  i.context.data = r,
                  i.context.isAlpha = a.config.get(L).IsAlpha,
                  i.context.setMoveType(s),
                  i.start(t, e, null, n),
                  r.setViewNode(i),
                  this.creatures[d.Player].push(i),
                  i
              }
              ,
              n.createEnemy = function(t, e, r, n) {
                  var s = l.POOL.spawn();
                  return s.type = d.Enemy,
                  1 == n ? s.createForceMovePart() : s.createMovePart(),
                  s.createAttackPart(),
                  s.setRegion(this.region),
                  s.context.data = r,
                  s.context.setMoveType(n),
                  s.start(t, e, null, c.Main),
                  r.setViewNode(s),
                  this.creatures[d.Enemy].push(s),
                  s
              }
              ,
              n.createTower = function(t, e, r, n) {
                  var s = b.POOL.spawn();
                  return s.type = d.Tower,
                  1 == n ? s.createForceMovePart() : s.createMovePart(),
                  s.createAttackPart(),
                  s.setRegion(this.region),
                  s.context.data = r,
                  s.context.setMoveType(n),
                  s.start(t, e, null, c.Main),
                  r.setViewNode(s),
                  this.creatures[d.Tower].push(s),
                  s
              }
              ,
              n.createBullet = function(t, e, r, n, s, i) {
                  var a = h.POOL.spawn();
                  return a.type = d.Bullet,
                  a.setOwner(r, n),
                  a.setAtkBatch(s),
                  i > 0 ? a.startDelay(t, e, null, c.View, i) : a.start(t, e, null, c.View),
                  this.creatures[d.Bullet].push(a),
                  a
              }
              ,
              n.createCurveBullet = function(t, e, r, n, s) {
                  var i = O.POOL.spawn();
                  return i.type = d.Bullet,
                  i.setOwner(r, n),
                  i.setAtkBatch(s),
                  i.start(t, e, null, c.View),
                  this.creatures[d.Bullet].push(i),
                  i
              }
              ,
              n.createBoomerang = function(t, e, r, n, s) {
                  var i = m.POOL.spawn();
                  return i.type = d.Bullet,
                  i.setOwner(r, n),
                  i.setAtkBatch(s),
                  i.start(t, e, null, c.View),
                  this.creatures[d.Bullet].push(i),
                  i
              }
              ,
              n.createShuriken = function(t, e, r, n, s, i) {
                  var a = k.POOL.spawn();
                  return a.type = d.Bullet,
                  a.setOwner(r, n),
                  a.setAtkBatch(i),
                  a.setTarget(s),
                  a.start(t, e, null, c.View),
                  this.creatures[d.Bullet].push(a),
                  a
              }
              ,
              n.createLightningBall = function(t, e, r, n, s, i) {
                  var a = T.POOL.spawn();
                  return a.type = d.Bullet,
                  a.setOwner(e, r),
                  a.setAtkBatch(i),
                  a.setTarget(n),
                  a.start(t, s, null, c.View),
                  this.creatures[d.Bullet].push(a),
                  a
              }
              ,
              n.createDropItem = function(t, e, r) {
                  var n;
                  switch (t) {
                  case y.Coin:
                      n = g.drop_coin.path;
                      break;
                  case y.Treasure:
                      n = g.drop_item.path;
                      break;
                  case y.Blood:
                      n = g.drop_cure.path;
                      break;
                  case y.Material:
                      n = g.drop_material.path;
                      break;
                  case y.BossTreasure1:
                      n = g.drop_chest1.path;
                      break;
                  case y.BossTreasure2:
                      n = g.drop_chest2.path;
                      break;
                  case y.BossTreasure3:
                      n = g.drop_chest3.path
                  }
                  var s = v.POOL.spawn();
                  return s.type = d.DropItem,
                  s.itemType = t,
                  s.setContext(r),
                  s.start(n, e, null, c.Middle),
                  this.creatures[d.DropItem].push(s),
                  s
              }
              ,
              n.remove = function(t) {
                  if (this.isLocked) {
                      var e = this.tastPool.spawn();
                      e.type = 1,
                      e.cType = t.type,
                      e.obj = t,
                      this.tastQueue.push(e),
                      t.node && (t.node.active = !1)
                  } else {
                      var r = this.creatures[t.type]
                        , n = r.indexOf(t);
                      -1 != n && (t.destroy(),
                      r.splice(n, 1))
                  }
              }
              ,
              n.closeBirth = function(t) {
                  var e = this.births.indexOf(t);
                  -1 != e && (this.births.splice(e, 1),
                  t.close())
              }
              ,
              n.removeEnemyBySN = function(t) {
                  for (var e = this.creatures[d.Enemy], r = 0; r < e.length; ++r) {
                      var n = e[r];
                      if (n.context.data.getSN() == t) {
                          this.remove(n);
                          break
                      }
                  }
              }
              ,
              n.generateAtkBatch = function(t) {
                  if (t.isDead())
                      return null;
                  var e = new P;
                  return e.init(t),
                  e
              }
              ,
              n.generateAtkBatchEx = function(t) {
                  var e = new P;
                  return e.initEx(t),
                  e
              }
              ,
              n.resetAtkBatch = function() {
                  this.atkBatch = 0
              }
              ,
              n.increaseAtkBatch = function() {
                  return ++this.atkBatch
              }
              ,
              n.clear = function() {
                  this.isPaused = !1;
                  for (var t = 0; t < this.creatures.length; ++t) {
                      for (var e = this.creatures[t], r = 0; r < e.length; ++r)
                          e[r].destroy();
                      e.splice(0, e.length)
                  }
                  for (var n = 0; n < this.births.length; ++n)
                      a.res.recycle(this.births[n].node);
                  this.births.splice(0, this.births.length)
              }
              ,
              n.clearCreature = function(t) {
                  for (var e = this.creatures[t], r = 0; r < e.length; ++r)
                      e[r].destroy();
                  e.splice(0, e.length)
              }
              ,
              n.dieEnemyAll = function() {
                  for (var t = this.creatures[d.Enemy], e = 0; e < t.length; ++e)
                      t[e].isLive && w.playDie(t[e].position),
                      t[e].destroy();
                  t.splice(0, t.length);
                  for (var r = 0; r < this.births.length; ++r)
                      a.res.recycle(this.births[r].node);
                  this.births.splice(0, this.births.length)
              }
              ,
              n.findClosestEnemy = function(t) {
                  for (var e, r = 1e6, n = this.creatures[d.Enemy], s = 0; s < n.length; ++s) {
                      var i = n[s];
                      if (i.isLive && !i.isInvincible) {
                          var a = i.worldPosition
                            , o = a.x - t.x
                            , u = a.y - t.y
                            , c = o * o + u * u;
                          c < r && (r = c,
                          e = i)
                      }
                  }
                  return e
              }
              ,
              n.findClosestEnemyX = function(t, e) {
                  for (var r, n = e * e, s = t.worldPosition, i = this.creatures[d.Enemy], a = 0; a < i.length; ++a) {
                      var o = i[a];
                      if (o.isLive && o != t) {
                          var u = o.worldPosition
                            , c = u.x - s.x
                            , l = u.y - s.y;
                          if (c > -e && c < e && l > -e && l < e)
                              c * c + l * l < n && (r = o)
                      }
                  }
                  return r
              }
              ,
              n.findClosestPlayer = function(t) {
                  return this.creatures[d.Player][0]
              }
              ,
              n.findCreature = function(t, e, r, n) {
                  for (var s = r * r, i = this.creatures[t], a = 0; a < i.length; ++a) {
                      var o = i[a];
                      if (o.isSearched) {
                          var u = o.worldPosition
                            , c = u.x - e.x
                            , l = u.y - e.y;
                          if (c > -r && c < r && l > -r && l < r)
                              c * c + l * l < s && n.push(o)
                      }
                  }
              }
              ,
              n.pickAll = function(t, e, r) {
                  void 0 === r && (r = 500);
                  for (var n = this.creatures[d.DropItem], s = 0; s < n.length; ++s) {
                      var i = n[s];
                      i.itemType == t && i.flyTo(e, r)
                  }
              }
              ,
              n.clearItem = function(t) {
                  for (var e = this.creatures[d.DropItem], r = 0; r < e.length; ) {
                      var n = e[r];
                      n.itemType == t ? (n.destroy(),
                      e.splice(r, 1)) : r++
                  }
              }
              ,
              n.getAllPotion = function() {
                  for (var t = [], e = this.creatures[d.DropItem], r = 0; r < e.length; r++) {
                      var n = e[r];
                      n.itemType == y.Blood && t.push(n.position)
                  }
                  return t
              }
              ,
              n.pause = function() {
                  if (!this.isPaused) {
                      this.isPaused = !0;
                      for (var t = 0; t < this.creatures.length; ++t)
                          for (var e = this.creatures[t], r = 0; r < e.length; ++r)
                              e[r].pause()
                  }
              }
              ,
              n.resume = function() {
                  if (this.isPaused) {
                      this.isPaused = !1;
                      for (var t = 0; t < this.creatures.length; ++t)
                          for (var e = this.creatures[t], r = 0; r < e.length; ++r)
                              e[r].resume()
                  }
              }
              ,
              n.getPlayer = function() {
                  return this.creatures[d.Player][0]
              }
              ,
              n.getBoss = function() {
                  for (var t = this.creatures[d.Enemy], e = 0; e < t.length; ++e) {
                      var r = t[e];
                      if (r.isBoss)
                          return r
                  }
                  return null
              }
              ,
              n.removeWeapon = function(t) {
                  var e = this.getPlayer();
                  e.weaponPart.removeWeaponByData(t),
                  e.weaponPart.refresh()
              }
              ,
              n.testPoint = function(t) {
                  var e = [];
                  return this.findCreature(d.Enemy, t, 20, e),
                  e
              }
              ,
              n.getCreatureBySn = function(t) {
                  for (var e = this.creatures[d.Enemy], r = 0; r < e.length; ++r) {
                      var n = e[r];
                      if (n.context.data.getSN() == t)
                          return n
                  }
                  e = this.creatures[d.Player];
                  for (var s = 0; s < e.length; ++s) {
                      var i = e[s];
                      if (i.context.data.getSN() == t)
                          return i
                  }
                  return null
              }
              ,
              o
          }(o()));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureMovePart.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreaturePart.ts", "./CreatureAnimId.ts", "./LayerType.ts", "./EffectManager.ts", "./ResList.ts", "./Kit.ts", "./Player.ts", "./GameGlobal.ts"], (function(i) {
  var t, s, o, e, n, h, a, r, l, p, d, c, y, m, u, x, f;
  return {
      setters: [function(i) {
          t = i.inheritsLoose
      }
      , function(i) {
          s = i.cclegacy,
          o = i.Vec2,
          e = i.ERigidBody2DType,
          n = i.Vec3,
          h = i.math,
          a = i.lerp,
          r = i.easing,
          l = i.Rect
      }
      , function(i) {
          p = i.default
      }
      , function(i) {
          d = i.default
      }
      , function(i) {
          c = i.Layer2DType
      }
      , function(i) {
          y = i.default
      }
      , function(i) {
          m = i.default
      }
      , function(i) {
          u = i.default
      }
      , function(i) {
          x = i.default
      }
      , function(i) {
          f = i.default
      }
      ],
      execute: function() {
          s._RF.push({}, "0c7e6Uu06tHfIdHWwpRsRoD", "CreatureMovePart", void 0);
          var g = function(i) {
              return i[i.Idle = 0] = "Idle",
              i[i.Move = 1] = "Move",
              i[i.MoveTo = 2] = "MoveTo",
              i[i.Back = 3] = "Back",
              i[i.DieTo = 4] = "DieTo",
              i[i.Die = 5] = "Die",
              i
          }(g || {});
          i("default", function(i) {
              function s() {
                  for (var t, s = arguments.length, e = new Array(s), h = 0; h < s; h++)
                      e[h] = arguments[h];
                  return (t = i.call.apply(i, [this].concat(e)) || this).node = void 0,
                  t.dir = new o,
                  t.position = new n,
                  t.scale = new n(1,1,1),
                  t.angle = 0,
                  t.region = new l,
                  t.state = g.Idle,
                  t.context = void 0,
                  t.smokeTime = 0,
                  t.footTime = 0,
                  t.time = 0,
                  t.duration = 0,
                  t.srcPos = new o,
                  t.dstPos = new o,
                  t.hitVelocity = new o,
                  t.isMoving = !1,
                  t.onComplete = void 0,
                  t
              }
              t(s, i);
              var p = s.prototype;
              return p.onEnable = function() {
                  var i = this.owner.view.rigidBody;
                  i && (i.linearVelocity = o.ZERO,
                  i.type = e.Kinematic),
                  this.footTime = 0,
                  this.smokeTime = 0,
                  this.node = this.owner.node,
                  this.context = this.owner.context,
                  n.copy(this.position, this.node.position),
                  this.scale.set(1, 1, 1),
                  this.owner instanceof x && this.scale.set(f.SCALE_X, f.SCALE_Y, 1),
                  this.angle = 0,
                  this.node.scale = this.scale,
                  this.node.angle = this.angle,
                  this.dir.x = 0,
                  this.dir.y = 0,
                  this.isMoving = !1,
                  this.state = g.Idle,
                  this.owner.setAnimTimeScale(1),
                  this.owner.playAnim(d.Idle, !0)
              }
              ,
              p.setPosition = function(i) {
                  n.copy(this.position, i)
              }
              ,
              p.onUpdate = function(i) {
                  if (!this.isPaused && null != this.context)
                      if (this.state == g.Move)
                          this.context.moveLimit || (this.position.x += this.dir.x * i,
                          this.position.y += this.dir.y * i,
                          this.position.x = h.clamp(this.position.x, this.region.xMin, this.region.xMax),
                          this.position.y = h.clamp(this.position.y, this.region.yMin, this.region.yMax),
                          this.node.position = this.position,
                          this.context.moveSmoke && (this.smokeTime += i,
                          this.smokeTime > .2 && (this.smokeTime = 0,
                          u.temp.aVec3.set(this.node.position),
                          u.temp.aVec3.y += 10,
                          y.ins.playSpine(m.dust.path, u.temp.aVec3, c.Middle))),
                          this.footTime += i,
                          this.footTime > .2 && (this.footTime = 0,
                          u.sound.playSound(m.sound_foot.path)));
                      else if (this.state == g.MoveTo)
                          if (this.time += i,
                          this.time < this.duration) {
                              var t = this.time / this.duration;
                              this.position.x = a(this.srcPos.x, this.dstPos.x, t),
                              this.position.y = a(this.srcPos.y, this.dstPos.y, t),
                              this.position.x = h.clamp(this.position.x, this.region.xMin, this.region.xMax),
                              this.position.y = h.clamp(this.position.y, this.region.yMin, this.region.yMax),
                              this.node.position = this.position
                          } else
                              this.position.x = this.dstPos.x,
                              this.position.y = this.dstPos.y,
                              this.position.x = h.clamp(this.position.x, this.region.xMin, this.region.xMax),
                              this.position.y = h.clamp(this.position.y, this.region.yMin, this.region.yMax),
                              this.node.position = this.position,
                              this.state = g.Idle,
                              this.dir.x = 0,
                              this.dir.y = 0,
                              this.playIdleAnim(),
                              this.onComplete && (this.onComplete.runOne(),
                              this.onComplete = null);
                      else if (this.state == g.Back)
                          if (this.time += i,
                          this.time < this.duration) {
                              var s = r.expoOut(this.time / this.duration);
                              this.position.x = a(this.srcPos.x, this.dstPos.x, s),
                              this.position.y = a(this.srcPos.y, this.dstPos.y, s),
                              this.position.x = h.clamp(this.position.x, this.region.xMin, this.region.xMax),
                              this.position.y = h.clamp(this.position.y, this.region.yMin, this.region.yMax),
                              this.node.position = this.position
                          } else
                              this.position.x = this.dstPos.x,
                              this.position.y = this.dstPos.y,
                              this.position.x = h.clamp(this.position.x, this.region.xMin, this.region.xMax),
                              this.position.y = h.clamp(this.position.y, this.region.yMin, this.region.yMax),
                              this.node.position = this.position,
                              this.state = g.Idle,
                              this.dir.x = 0,
                              this.dir.y = 0,
                              this.playIdleAnim()
              }
              ,
              p.playMoveAnim = function() {
                  this.isMoving || (this.isMoving = !0,
                  this.owner.playAnim(d.Run, !0))
              }
              ,
              p.playIdleAnim = function() {
                  this.isMoving && (this.isMoving = !1,
                  this.owner.setAnimTimeScale(1),
                  this.owner.playAnim(d.Idle, !0))
              }
              ,
              p.move = function(i, t) {
                  this.state != g.Back && (this.dir.x = i,
                  this.dir.y = t,
                  i > 0 && this.owner.setFlipX(!1),
                  i < 0 && this.owner.setFlipX(!0),
                  Math.abs(i) > 0 || Math.abs(t) > 0 ? (this.dir.normalize(),
                  this.dir.multiplyScalar(this.owner.context.moveSpeed),
                  this.state = g.Move,
                  this.footTime = 0,
                  this.playMoveAnim()) : (this.state = g.Idle,
                  this.playIdleAnim()))
              }
              ,
              p.moveTo = function(i, t) {
                  this.state = g.MoveTo,
                  this.srcPos.x = this.node.position.x,
                  this.srcPos.y = this.node.position.y,
                  this.dstPos.x = i,
                  this.dstPos.y = t;
                  var s = o.distance(this.srcPos, this.dstPos);
                  this.time = 0,
                  this.duration = s / this.owner.context.moveSpeed,
                  this.playMoveAnim()
              }
              ,
              p.moveCharge = function(i, t, s, e, n) {
                  this.onComplete && (this.onComplete.destroy(),
                  this.onComplete = null),
                  this.onComplete = u.handler(e, n),
                  this.owner.setFlipX(i.x < 0),
                  this.dir.x = i.x,
                  this.dir.y = i.y,
                  this.dir.normalize(),
                  this.dir.multiplyScalar(t),
                  this.state = g.MoveTo,
                  this.srcPos.x = this.node.position.x,
                  this.srcPos.y = this.node.position.y,
                  o.add(this.dstPos, this.srcPos, this.dir),
                  this.time = 0,
                  this.duration = s
              }
              ,
              p.updateDir = function(i) {
                  if (i.x > 0) {
                      var t = Math.atan(i.y / i.x);
                      this.owner.setFlipX(!1),
                      this.node.angle = u.math.getAngle(t)
                  } else if (i.x < 0) {
                      var s = Math.atan(i.y / i.x);
                      this.owner.setFlipX(!0),
                      this.node.angle = u.math.getAngle(s)
                  }
              }
              ,
              p.setRegion = function(i) {
                  this.region = i
              }
              ,
              p.hitBack = function(i, t, s, o) {}
              ,
              p.hitBackByDistance = function(i, t, s, e) {
                  this.state != g.MoveTo && (this.state = g.Back,
                  this.time = 0,
                  this.duration = e,
                  this.hitVelocity.x = i,
                  this.hitVelocity.y = t,
                  this.hitVelocity.normalize(),
                  this.srcPos.x = this.node.position.x,
                  this.srcPos.y = this.node.position.y,
                  o.multiplyScalar(this.dstPos, this.hitVelocity, s),
                  o.add(this.dstPos, this.srcPos, this.dstPos))
              }
              ,
              p.hitBackToDie = function(i, t, s, e) {
                  this.state = g.DieTo,
                  this.time = 0,
                  this.duration = e,
                  this.hitVelocity.x = i,
                  this.hitVelocity.y = t,
                  this.hitVelocity.normalize(),
                  this.srcPos.x = this.node.position.x,
                  this.srcPos.y = this.node.position.y,
                  o.multiplyScalar(this.dstPos, this.hitVelocity, s),
                  o.add(this.dstPos, this.srcPos, this.dstPos)
              }
              ,
              p.pause = function() {
                  i.prototype.pause.call(this)
              }
              ,
              p.resume = function() {
                  i.prototype.resume.call(this)
              }
              ,
              p.stop = function() {
                  i.prototype.pause.call(this),
                  this.dir.x = 0,
                  this.dir.y = 0,
                  this.state = g.Idle,
                  this.playIdleAnim()
              }
              ,
              p.reset = function() {
                  i.prototype.resume.call(this),
                  this.dir.x = 0,
                  this.dir.y = 0,
                  n.copy(this.position, this.node.position),
                  this.owner instanceof x ? this.scale.set(f.SCALE_X, f.SCALE_Y, 1) : this.scale.set(1, 1, 1),
                  this.angle = 0,
                  this.node.scale = this.scale,
                  this.node.angle = this.angle,
                  this.state = g.Idle,
                  this.playIdleAnim()
              }
              ,
              s
          }(p));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureObj.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Attr.ts"], (function(t) {
  var e, n, i, o;
  return {
      setters: [function(t) {
          e = t.createClass
      }
      , function(t) {
          n = t.cclegacy,
          i = t.Vec3
      }
      , function(t) {
          o = t.Attr
      }
      ],
      execute: function() {
          n._RF.push({}, "eef21IDabJN7pCJ2bYSpv5u", "CreatureObj", void 0);
          t("default", function() {
              function t() {
                  this.sn = void 0,
                  this.cfgID = void 0,
                  this.cfg = void 0,
                  this.oType = void 0,
                  this.cType = void 0,
                  this.attr = null,
                  this.pos = void 0,
                  this.node = void 0
              }
              var n = t.prototype;
              return n.init = function(t, e, n, i) {
                  this.attr = new o(this),
                  this.sn = t,
                  this.cfgID = e,
                  this.pos = n
              }
              ,
              n.destroy = function() {
                  this.attr.destroy(),
                  this.attr = null
              }
              ,
              n.getCfg = function() {
                  return this.cfg
              }
              ,
              n.setObjType = function(t) {
                  this.oType = t
              }
              ,
              n.getObjType = function() {
                  return this.oType
              }
              ,
              n.setPosXY = function(t, e) {
                  var n;
                  this.pos.x = t,
                  this.pos.y = e,
                  null == (n = this.node) || n.setPosition(new i(t,e))
              }
              ,
              n.setViewNode = function(t) {
                  this.node = t
              }
              ,
              n.getAttr = function() {
                  return this.attr
              }
              ,
              n.getSN = function() {
                  return this.sn
              }
              ,
              n.getCfgID = function() {
                  return this.cfgID
              }
              ,
              n.getName = function() {
                  return ""
              }
              ,
              n.getAttrVal = function(t) {
                  return this.getAttr().getVal(t)
              }
              ,
              n.getHP = function() {
                  return this.getAttr().getHP()
              }
              ,
              n.getPos = function() {
                  return this.node.getPos()
              }
              ,
              n.getPosX = function() {
                  return this.node.getPosX()
              }
              ,
              n.getPosY = function() {
                  return this.node.getPosY()
              }
              ,
              n.update = function(t) {}
              ,
              n.beAtk = function(t, e) {}
              ,
              n.move = function(t, e) {
                  this.getAttr().canMove() && this.node.move(t, e)
              }
              ,
              n.stopMove = function() {
                  this.node.stopMove()
              }
              ,
              n.setMoveSpeed = function(t) {
                  this.node.setMoveSpeed(t)
              }
              ,
              n.onAttrChanged = function() {}
              ,
              n.addBuff = function(t, e, n, i, o) {}
              ,
              n.onBuffDmg = function(t, e, n, i, o) {}
              ,
              n.isDead = function() {
                  return this.getAttr().isDead()
              }
              ,
              n.updateViewAttr = function() {}
              ,
              e(t, [{
                  key: "moveSpeed",
                  get: function() {
                      return this.getAttr().getMoveSpeed()
                  }
              }]),
              t
          }());
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreaturePart.ts", ["cc"], (function(t) {
  var i;
  return {
      setters: [function(t) {
          i = t.cclegacy
      }
      ],
      execute: function() {
          i._RF.push({}, "b1375ye3tpNA7hiBUIgS4Fp", "CreaturePart", void 0);
          t("default", function() {
              function t() {
                  this.owner = void 0,
                  this.active = void 0,
                  this.isPaused = !1
              }
              var i = t.prototype;
              return i.setOwner = function(t) {
                  this.owner = t
              }
              ,
              i.setPaused = function(t) {
                  this.isPaused = t
              }
              ,
              i.start = function() {
                  this.active || (this.active = !0,
                  this.onEnable())
              }
              ,
              i.clear = function() {
                  this.isPaused = !1,
                  this.active && (this.active = !1,
                  this.onDisable())
              }
              ,
              i.onEnable = function() {}
              ,
              i.onDisable = function() {}
              ,
              i.pause = function() {
                  this.isPaused = !0
              }
              ,
              i.resume = function() {
                  this.isPaused = !1
              }
              ,
              i.onUpdate = function(t) {}
              ,
              i.refresh = function() {}
              ,
              t
          }());
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreaturePartID.ts", ["cc"], (function(e) {
  var t;
  return {
      setters: [function(e) {
          t = e.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "cb0c0YNnK9HJImbUMRbXBpH", "CreaturePartID", void 0);
          var o = e("default", (function() {}
          ));
          o.Move = "Move",
          o.Weapon = "Weapon",
          o.Control = "Control",
          o.Pick = "Pick",
          o.Collider = "Collider",
          o.Attack = "Attack",
          o.Homde = "Homde",
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureSkinDress.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./CreatureSlot.ts"], (function(t) {
  var e, n, i, s, a, r, l, o, u, c;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          n = t.inheritsLoose,
          i = t.initializerDefineProperty,
          s = t.assertThisInitialized
      }
      , function(t) {
          a = t.cclegacy,
          r = t._decorator,
          l = t.sp,
          o = t.Component
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          c = t.default
      }
      ],
      execute: function() {
          var h, f, p, d, k, m;
          a._RF.push({}, "b9c8cLTpK9PYaerIYDSzVsC", "CreatureSkinDress", void 0);
          var v = r.ccclass
            , g = r.property;
          t("default", (h = v("CreatureSkinDress"),
          f = g({
              type: l.Skeleton
          }),
          h(((m = function(t) {
              function e() {
                  for (var e, n = arguments.length, a = new Array(n), r = 0; r < n; r++)
                      a[r] = arguments[r];
                  return e = t.call.apply(t, [this].concat(a)) || this,
                  i(e, "skeleton", k, s(e)),
                  e.tempList = new Array,
                  e.dressDict = new Map,
                  e
              }
              n(e, t);
              var a = e.prototype;
              return a.setAttachment = function(t, n) {
                  var i = this.dressDict.get(t);
                  if (null == i && (i = new c,
                  this.dressDict.set(t, i)),
                  n) {
                      if (i.skin == n.skin && i.slot == n.slot)
                          return;
                      i.skin = n.skin,
                      i.slot = n.slot,
                      e.SKIN_DICT.get(n.skin) ? this.updateAttachment(t) : u.res.spawnAsyn(n.skin, l.SkeletonData, null, null, null, this, this.onLoadSkeletonComplete, [n.skin, t])
                  } else
                      i.skin = null,
                      i.slot = null,
                      this.updateAttachment(t)
              }
              ,
              a.onLoadSkeletonComplete = function(t, n, i) {
                  var s = t.skeletonData.getRuntimeData();
                  if (s) {
                      var a = s.skins;
                      t.setSkin(a[0].name)
                  }
                  e.SKIN_DICT.set(n, t),
                  this.updateAttachment(i)
              }
              ,
              a.updateAttachment = function(t) {
                  var n = this.skeleton.findSlot(t);
                  if (null != n) {
                      var i = this.dressDict.get(t);
                      if (i && i.skin && i.slot) {
                          var s = e.SKIN_DICT.get(i.skin).findSlot(i.slot);
                          if (null == s)
                              return n.setAttachment(null),
                              void this.skeleton.invalidAnimationCache();
                          var a = s.getAttachment();
                          if (null == a)
                              return n.setAttachment(null),
                              void this.skeleton.invalidAnimationCache();
                          n.setAttachment(a.copy()),
                          this.skeleton.invalidAnimationCache()
                      } else
                          n.setAttachment(null),
                          this.skeleton.invalidAnimationCache()
                  } else
                      console.error("CreatureDress: change attachement failed，des slot[" + t + "] donot exist")
              }
              ,
              a.getSkinName = function(t) {
                  var e = t[0];
                  return -1 == e.lastIndexOf("_") ? e : e.substring(0, e.lastIndexOf("_"))
              }
              ,
              a.setHeroData = function(t, e) {
                  for (var n = 1; n < 5; n++) {
                      var i, s = t.getEquipByType(n), a = null == s || null == (i = s.cfg) ? void 0 : i.PartArray;
                      if (a) {
                          var r = this.getSkinName(a);
                          this.setEquip(n, r)
                      } else
                          this.setEquip(n, null)
                  }
              }
              ,
              a.setEquipment = function(t) {
                  for (var e = new Map, n = 0; n < t.length; n++) {
                      var i = DataCenter.Equipment.Get(t[n]);
                      e.set(i.Type, i)
                  }
                  for (var s = 1; s < 5; s++) {
                      var a = e.get(s);
                      if (a) {
                          var r = this.getSkinName(a.PartArray);
                          this.setEquip(s, r)
                      } else
                          this.setEquip(s, null)
                  }
              }
              ,
              a.getSlotName = function(t) {
                  var e = this.tempList;
                  return e.splice(0, e.length),
                  e
              }
              ,
              a.setEquip = function(t, e) {
                  var n = this.getSlotName(t);
                  if (e)
                      for (var i = "creature/skins/" + e, s = 0; s < n.length; s++) {
                          this.skeleton.findSlot(n[s]) && this.setAttachment(n[s], {
                              skin: i,
                              slot: n[s]
                          })
                      }
                  else
                      for (var a = 0; a < n.length; a++) {
                          this.skeleton.findSlot(n[a]) && this.setAttachment(n[a], null)
                      }
              }
              ,
              a.setSkin = function(t) {
                  throw new Error("Method not implemented.")
              }
              ,
              e
          }(o)).SKIN_DICT = new Map,
          k = e((d = m).prototype, "skeleton", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          p = d)) || p));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureSlot.ts", ["cc"], (function(t) {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "8bdd6XR6e1JRIsePFV8MLwh", "CreatureSlot", void 0);
          t("default", (function() {
              this.name = void 0,
              this.skin = void 0,
              this.slot = void 0,
              this.texture = void 0
          }
          ));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureType.ts", ["cc"], (function(e) {
  var t;
  return {
      setters: [function(e) {
          t = e.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "ac1b1UN4LFIV6Oe4Q/Gdz2d", "CreatureType", void 0);
          e("CreatureType", function(e) {
              return e[e.Enemy = 0] = "Enemy",
              e[e.Player = 1] = "Player",
              e[e.Bullet = 2] = "Bullet",
              e[e.DropItem = 3] = "DropItem",
              e[e.Tower = 4] = "Tower",
              e
          }({})),
          e("CreatureState", function(e) {
              return e[e.Free = 0] = "Free",
              e[e.Loading = 1] = "Loading",
              e[e.Active = 2] = "Active",
              e[e.Stun = 3] = "Stun",
              e[e.Death = 4] = "Death",
              e
          }({}));
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CreatureView.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./GameCollider.ts", "./EffectManager.ts", "./LayerType.ts"], (function(e) {
  var t, i, n, o, a, l, r, s, u, c, f, p, h, d, y, b, g, w, m, k;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          o = e.assertThisInitialized,
          a = e.createClass
      }
      , function(e) {
          l = e.cclegacy,
          r = e._decorator,
          s = e.Node,
          u = e.RigidBody2D,
          c = e.sp,
          f = e.Vec2,
          p = e.CCFloat,
          h = e.CCString,
          d = e.Sprite,
          y = e.Animation,
          b = e.Color
      }
      , function(e) {
          g = e.default
      }
      , function(e) {
          w = e.default
      }
      , function(e) {
          m = e.default
      }
      , function(e) {
          k = e.Layer2DType
      }
      ],
      execute: function() {
          var v, z, D, C, S, A, E, B, _, F, L, R, O, P, T, x, V, H, I, M, G, J, K, N, j, q, U, W, Z, Q, X, Y, $, ee, te, ie, ne, oe;
          l._RF.push({}, "b8eebZc6iFP0az9sNvrhLeK", "CreatureView", void 0);
          var ae = r.ccclass
            , le = r.property;
          e("default", (v = ae("CreatureView"),
          z = le({
              type: s
          }),
          D = le({
              type: s
          }),
          C = le({
              type: u
          }),
          S = le({
              type: c.Skeleton
          }),
          A = le({
              type: [f]
          }),
          E = le({
              type: Boolean
          }),
          B = le({
              type: p
          }),
          _ = le({
              type: h
          }),
          F = le({
              type: d
          }),
          L = le({
              type: p
          }),
          R = le({
              type: String
          }),
          O = le({
              type: p
          }),
          P = le({
              type: p
          }),
          T = le({
              type: y
          }),
          x = le({
              type: String
          }),
          V = le({
              type: Boolean
          }),
          H = le({
              type: Boolean
          }),
          v((G = t((M = function(e) {
              function t() {
                  for (var t, i = arguments.length, a = new Array(i), l = 0; l < i; l++)
                      a[l] = arguments[l];
                  return t = e.call.apply(e, [this].concat(a)) || this,
                  n(t, "root", G, o(t)),
                  n(t, "body", J, o(t)),
                  n(t, "rigidBody", K, o(t)),
                  n(t, "skeleton", N, o(t)),
                  n(t, "headHeight", j, o(t)),
                  n(t, "atkEvents", q, o(t)),
                  n(t, "isCharge", U, o(t)),
                  n(t, "chargeSpeed", W, o(t)),
                  n(t, "arrowAssetPath", Z, o(t)),
                  n(t, "shadow", Q, o(t)),
                  n(t, "shadowRange", X, o(t)),
                  n(t, "landingEffect", Y, o(t)),
                  n(t, "landingDuration", $, o(t)),
                  n(t, "downDuration", ee, o(t)),
                  n(t, "animation", te, o(t)),
                  n(t, "collideAudio", ie, o(t)),
                  n(t, "isTower", ne, o(t)),
                  n(t, "invincibleInAttack", oe, o(t)),
                  t._defaultOffset = void 0,
                  t
              }
              i(t, e);
              var l = t.prototype;
              return l.start = function() {
                  if (this.skeleton)
                      for (var e = this.skeleton.skeletonData.textures, t = 0; t < e.length; ++t)
                          e[t].setFilters(0, 0)
              }
              ,
              l.playAnim = function(e, t) {
                  void 0 === t && (t = !0),
                  this.skeleton && (this.node.name.startsWith("Gorilla") && console.log("[" + Date.now() + "] " + e + " " + t),
                  this.skeleton.findAnimation(e) && this.skeleton.setAnimation(0, e, t)),
                  this.animation && this.animation.play(e)
              }
              ,
              l.playAnimation = function(e) {
                  this.animation && this.animation.play(e)
              }
              ,
              l.setAnimTimeScale = function(e) {
                  this.skeleton && (this.skeleton.timeScale = e)
              }
              ,
              l.setPaused = function(e) {
                  this.skeleton && (this.skeleton.paused = e),
                  this.animation && this.animation.pause(),
                  this.rigidBody && !e && this.rigidBody.wakeUp()
              }
              ,
              l.setColor = function(e) {
                  this.skeleton && (this.skeleton.color = e)
              }
              ,
              l.setCompleteListener = function(e) {
                  this.skeleton && this.skeleton.setCompleteListener(e)
              }
              ,
              l.getAnimCurrent = function(e) {
                  return this.skeleton ? this.skeleton.getCurrent(e) : null
              }
              ,
              l.setSkeletonData = function(e) {
                  var t = this;
                  g.res.spawnAsyn(e, c.SkeletonData, null, null, null, this, (function(e) {
                      t.skeleton.skeletonData = e.skeletonData,
                      t.skeleton.setAnimation(0, "idle", !0);
                      for (var i = e.skeletonData.textures, n = 0; n < i.length; ++n)
                          i[n].setFilters(0, 0)
                  }
                  ))
              }
              ,
              l.setSpeed = function() {}
              ,
              l.showJumpShadow = function(e) {
                  null != this.shadow && (this.shadow.node.active = e)
              }
              ,
              l.setJumpShadowRange = function(e) {
                  if (null != this.shadow) {
                      var t = e / this.shadowRange;
                      this.shadow.node.setScale(t, t, t)
                  }
              }
              ,
              l.playFallDownEffect = function(e) {
                  var t = this;
                  if (null != this.shadow) {
                      var i = new b(255,255,255,255);
                      this.shadow.node.active = !0,
                      this.shadow.color = new b(255,255,255,0),
                      g.action.beginSequence(),
                      g.action.lerp(this, (function(e) {
                          i.a = 255 * e,
                          t.shadow.color = i
                      }
                      ), 0, 1, 300 / e),
                      g.action.delay(this.downDuration / e),
                      g.action.call(this, (function() {
                          t.shadow.node.active = !1
                      }
                      )),
                      g.action.end()
                  }
              }
              ,
              l.playLandingEffect = function() {
                  g.utils.isEmpty(this.landingEffect) || m.ins.playFixed(this.landingEffect, this.node.position, null, null, k.Middle, this.landingDuration)
              }
              ,
              a(t, [{
                  key: "defaultOffset",
                  get: function() {
                      return null == this._defaultOffset && (this._defaultOffset = new f,
                      f.copy(this._defaultOffset, this.collider.offset)),
                      this._defaultOffset
                  }
              }]),
              t
          }(w)).prototype, "root", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          J = t(M.prototype, "body", [D], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          K = t(M.prototype, "rigidBody", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          N = t(M.prototype, "skeleton", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          j = t(M.prototype, "headHeight", [le], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 40
              }
          }),
          q = t(M.prototype, "atkEvents", [A], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return []
              }
          }),
          U = t(M.prototype, "isCharge", [E], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return !1
              }
          }),
          W = t(M.prototype, "chargeSpeed", [B], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          Z = t(M.prototype, "arrowAssetPath", [_], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Q = t(M.prototype, "shadow", [F], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          X = t(M.prototype, "shadowRange", [L], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 100
              }
          }),
          Y = t(M.prototype, "landingEffect", [R], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return ""
              }
          }),
          $ = t(M.prototype, "landingDuration", [O], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1e3
              }
          }),
          ee = t(M.prototype, "downDuration", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          te = t(M.prototype, "animation", [T], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ie = t(M.prototype, "collideAudio", [x], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return ""
              }
          }),
          ne = t(M.prototype, "isTower", [V], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          oe = t(M.prototype, "invincibleInAttack", [H], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          I = M)) || I));
          l._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/CurveBullet.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./CreatureManager.ts", "./Kit.ts", "./BulletView.ts", "./LayerType.ts", "./Bomb.ts", "./EffectManager.ts", "./CreatureType.ts", "./BulletBase.ts"], (function(t) {
  var e, i, s, n, o, c, h, a, r, u, l, d;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          i = t.cclegacy,
          s = t.Vec3
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          a = t.Layer2DType
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          l = t.CreatureState
      }
      , function(t) {
          d = t.default
      }
      ],
      execute: function() {
          i._RF.push({}, "a7d41WnpEFO4aGM+YdEOHtE", "CurveBullet", void 0);
          var p = t("default", function(t) {
              function i() {
                  for (var e, i = arguments.length, n = new Array(i), o = 0; o < i; o++)
                      n[o] = arguments[o];
                  return (e = t.call.apply(t, [this].concat(n)) || this).view = void 0,
                  e.throughEnable = !1,
                  e.explodeEnable = !1,
                  e.curveDistance = 400,
                  e.curveHeight = 200,
                  e.maxDistance = 2e3,
                  e.atkBatch = null,
                  e.bombAtkBatch = null,
                  e.srcPos = new s,
                  e.cccPos = new s,
                  e.dstPos = new s,
                  e
              }
              e(i, t);
              var n = i.prototype;
              return n.reset = function() {
                  this.throughEnable = !1,
                  this.velocity.x = 0,
                  this.velocity.y = 0
              }
              ,
              n.onStart = function() {
                  this.distance = 0,
                  this.view = this.node.getComponent(h),
                  this.view.reset(),
                  this.view.setOwner(this),
                  this.view.listenBeginContact(this, this.onBeginContact),
                  this.updateDir(this.direction),
                  this.explodeEnable = !1
              }
              ,
              n.setCurve = function(t, e) {
                  this.curveDistance = t,
                  this.curveHeight = e
              }
              ,
              n.setDir = function(t) {
                  this.direction.x = t.x,
                  this.direction.y = t.y,
                  this.refreshCurve(this.curveDistance, this.curveHeight),
                  this.updateDir(this.direction)
              }
              ,
              n.setThrough = function(t) {
                  this.throughEnable = t
              }
              ,
              n.setMaxDistance = function(t) {
                  this.maxDistance = t
              }
              ,
              n.refreshCurve = function(t, e) {
                  s.copy(this.srcPos, this.position),
                  s.multiplyScalar(this.dstPos, this.direction, t),
                  s.add(this.dstPos, this.srcPos, this.dstPos);
                  var i = new s;
                  s.add(i, this.srcPos, this.dstPos),
                  i.multiplyScalar(.5),
                  this.cccPos.x = -this.direction.y,
                  this.cccPos.y = this.direction.x,
                  this.cccPos.multiplyScalar(e),
                  s.add(this.cccPos, this.cccPos, i)
              }
              ,
              n.onUpdate = function(t) {
                  if (this.state == l.Active) {
                      var e = this.speed * t;
                      this.distance += e;
                      var i = this.distance / this.curveDistance;
                      c.math.getBezierPoint3(this.srcPos, this.cccPos, this.dstPos, i, this._position),
                      this.node.position = this._position,
                      this.distance > this.maxDistance && (this.setState(l.Death),
                      this.node.active = !1,
                      o.ins.remove(this))
                  }
              }
              ,
              n.onBeginContact = function(t) {
                  t.isLive && (t.damageCrt(this.atkBatch),
                  this.throughEnable || (c.utils.isEmpty(this.view.explodeAssetPath) || this.playExplode(),
                  c.utils.isEmpty(this.view.explodeAudio) || c.sound.playSound(this.view.explodeAudio),
                  o.ins.remove(this),
                  this.node && (this.node.active = !1)))
              }
              ,
              n.playExplode = function() {
                  var t = this;
                  if (!this.explodeEnable) {
                      this.explodeEnable = !0;
                      var e = this.node.position.clone()
                        , i = this.view.explodeAssetPath
                        , s = 1e3 * this.view.explodeDuration;
                      u.ins.playFixed(i, e, null, null, a.View, s, c.handler(this, (function(e) {
                          var i = e.getComponent(r);
                          null != t.bombAtkBatch && (t.bombAtkBatch.destory(),
                          t.bombAtkBatch = null),
                          t.bombAtkBatch = o.ins.generateAtkBatchEx(t.atkBatch),
                          i.play(t.getOwnerCrt(), t.getOwnerWeapon(), t.bombAtkBatch)
                      }
                      )))
                  }
              }
              ,
              n.onDestroy = function() {
                  i.POOL.recycle(this)
              }
              ,
              i
          }(d));
          p.POOL = new n((function() {
              return new p
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/DataDef.ts", ["cc"], (function(e) {
  var t;
  return {
      setters: [function(e) {
          t = e.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "96b86oINUhPfZ48aKoCKVw1", "DataDef", void 0);
          e("EquipType", function(e) {
              return e[e.Weapon = 0] = "Weapon",
              e[e.Armor = 1] = "Armor",
              e[e.Hat = 2] = "Hat",
              e[e.Pant = 3] = "Pant",
              e[e.Shoe = 4] = "Shoe",
              e[e.WeaponR = 5] = "WeaponR",
              e
          }({}));
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/DeathEffect.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ActionBase.ts", "./SimplePool.ts", "./Kit.ts", "./LayerType.ts"], (function(t) {
  var i, s, o, e, n, h, a, r, c, d, l, p, u, y;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          s = t.cclegacy,
          o = t.Node,
          e = t.Layers,
          n = t.UITransform,
          h = t.easing,
          a = t.lerp,
          r = t.math,
          c = t.Vec3,
          d = t.Rect
      }
      , function(t) {
          l = t.default
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          y = t.Layer2DType
      }
      ],
      execute: function() {
          s._RF.push({}, "1bad4Y4shJNHafjJRuiGh/J", "DeathEffect", void 0);
          var f = t("default", function(t) {
              function s() {
                  for (var i, s = arguments.length, o = new Array(s), e = 0; e < s; e++)
                      o[e] = arguments[e];
                  return (i = t.call.apply(t, [this].concat(o)) || this).target = void 0,
                  i.duration = void 0,
                  i.complete = void 0,
                  i.dir = new c,
                  i.offset = new c,
                  i.time = void 0,
                  i.angle = void 0,
                  i.node = void 0,
                  i.position = new c,
                  i.scale = new c,
                  i.srcPos = new c,
                  i.dstPos = new c,
                  i.region = new d(-1148,-520,2296,1e3),
                  i
              }
              i(s, t);
              var l = s.prototype;
              return l.onStart = function() {
                  null == this.node && (this.node = new o,
                  this.node.name = "DeathNode",
                  this.node.layer = e.Enum.DEFAULT,
                  this.node.addComponent(n),
                  u.layer.addNode(this.node, y.View)),
                  this.time = 0,
                  this.angle = 0,
                  this.scale.x = 1,
                  this.scale.y = 1,
                  this.scale.z = 1,
                  this.position.x = this.target.position.x - this.offset.x,
                  this.position.y = this.target.position.y - this.offset.y,
                  this.node.position = this.position,
                  this.node.scale = this.scale,
                  this.node.angle = this.angle,
                  this.node.addChild(this.target),
                  this.target.position = this.offset,
                  this.srcPos.x = this.node.position.x,
                  this.srcPos.y = this.node.position.y,
                  this.dstPos.x = this.srcPos.x + this.dir.x,
                  this.dstPos.y = this.srcPos.y + this.dir.y
              }
              ,
              l.onUpdate = function(t) {
                  if (this.time += t,
                  this.angle += t,
                  this.time < this.duration) {
                      var i = this.time / this.duration
                        , s = h.cubicOut(i);
                      this.position.x = a(this.srcPos.x, this.dstPos.x, s),
                      this.position.y = a(this.srcPos.y, this.dstPos.y, s),
                      this.position.x = r.clamp(this.position.x, this.region.xMin, this.region.xMax),
                      this.position.y = r.clamp(this.position.y, this.region.yMin, this.region.yMax);
                      var o = a(1, 0, i);
                      return this.scale.x = o,
                      this.scale.y = o,
                      this.node.position = this.position,
                      this.node.scale = this.scale,
                      this.node.angle = this.angle,
                      !1
                  }
                  return this.position.x = this.dstPos.x,
                  this.position.y = this.dstPos.y,
                  this.position.x = r.clamp(this.position.x, this.region.xMin, this.region.xMax),
                  this.position.y = r.clamp(this.position.y, this.region.yMin, this.region.yMax),
                  this.scale.set(.1, .1, 1),
                  this.node.position = this.position,
                  this.node.scale = this.scale,
                  this.node.angle = this.angle,
                  this.complete.runOne(),
                  !0
              }
              ,
              l.onFinish = function() {
                  s.POOL.recycle(this)
              }
              ,
              s
          }(l));
          f.POOL = new p((function() {
              return new f
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/debug-view-runtime-control.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(t) {
  var e, o, i, n, s, l, r, a, g, h, p, c, C, d, m, u, L;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          o = t.inheritsLoose,
          i = t.initializerDefineProperty,
          n = t.assertThisInitialized
      }
      , function(t) {
          s = t.cclegacy,
          l = t._decorator,
          r = t.Node,
          a = t.Color,
          g = t.Canvas,
          h = t.UITransform,
          p = t.instantiate,
          c = t.Label,
          C = t.RichText,
          d = t.Toggle,
          m = t.Button,
          u = t.director,
          L = t.Component
      }
      ],
      execute: function() {
          var f, M, b, v, T, S, x, E, I;
          s._RF.push({}, "b2bd1+njXxJxaFY3ymm06WU", "debug-view-runtime-control", void 0);
          var A = l.ccclass
            , y = l.property;
          t("DebugViewRuntimeControl", (f = A("internal.DebugViewRuntimeControl"),
          M = y(r),
          b = y(r),
          v = y(r),
          f((x = e((S = function(t) {
              function e() {
                  for (var e, o = arguments.length, s = new Array(o), l = 0; l < o; l++)
                      s[l] = arguments[l];
                  return e = t.call.apply(t, [this].concat(s)) || this,
                  i(e, "compositeModeToggle", x, n(e)),
                  i(e, "singleModeToggle", E, n(e)),
                  i(e, "EnableAllCompositeModeButton", I, n(e)),
                  e._single = 0,
                  e.strSingle = ["No Single Debug", "Vertex Color", "Vertex Normal", "Vertex Tangent", "World Position", "Vertex Mirror", "Face Side", "UV0", "UV1", "UV Lightmap", "Project Depth", "Linear Depth", "Fragment Normal", "Fragment Tangent", "Fragment Binormal", "Base Color", "Diffuse Color", "Specular Color", "Transparency", "Metallic", "Roughness", "Specular Intensity", "IOR", "Direct Diffuse", "Direct Specular", "Direct All", "Env Diffuse", "Env Specular", "Env All", "Emissive", "Light Map", "Shadow", "AO", "Fresnel", "Direct Transmit Diffuse", "Direct Transmit Specular", "Env Transmit Diffuse", "Env Transmit Specular", "Transmit All", "Direct Internal Specular", "Env Internal Specular", "Internal All", "Fog"],
                  e.strComposite = ["Direct Diffuse", "Direct Specular", "Env Diffuse", "Env Specular", "Emissive", "Light Map", "Shadow", "AO", "Normal Map", "Fog", "Tone Mapping", "Gamma Correction", "Fresnel", "Transmit Diffuse", "Transmit Specular", "Internal Specular", "TT"],
                  e.strMisc = ["CSM Layer Coloration", "Lighting With Albedo"],
                  e.compositeModeToggleList = [],
                  e.singleModeToggleList = [],
                  e.miscModeToggleList = [],
                  e.textComponentList = [],
                  e.labelComponentList = [],
                  e.textContentList = [],
                  e.hideButtonLabel = void 0,
                  e._currentColorIndex = 0,
                  e.strColor = ["<color=#ffffff>", "<color=#000000>", "<color=#ff0000>", "<color=#00ff00>", "<color=#0000ff>"],
                  e.color = [a.WHITE, a.BLACK, a.RED, a.GREEN, a.BLUE],
                  e
              }
              o(e, t);
              var s = e.prototype;
              return s.start = function() {
                  if (this.node.parent.getComponent(g)) {
                      var t = this.node.parent.getComponent(h)
                        , e = .5 * t.width
                        , o = .5 * t.height
                        , i = .1 * e - e
                        , n = o - .1 * o
                        , s = this.node.getChildByName("MiscMode")
                        , l = p(s);
                      l.parent = this.node,
                      l.name = "Buttons";
                      var r = p(s);
                      r.parent = this.node,
                      r.name = "Titles";
                      for (var u = 0; u < 2; u++) {
                          var L = p(this.EnableAllCompositeModeButton.getChildByName("Label"));
                          L.setPosition(i + (u > 0 ? 450 : 150), n, 0),
                          L.setScale(.75, .75, .75),
                          L.parent = r;
                          var f = L.getComponent(c);
                          f.string = u ? "----------Composite Mode----------" : "----------Single Mode----------",
                          f.color = a.WHITE,
                          f.overflow = 0,
                          this.labelComponentList[this.labelComponentList.length] = f
                      }
                      n -= 20;
                      for (var M = 0, b = 0; b < this.strSingle.length; b++,
                      M++) {
                          b === this.strSingle.length >> 1 && (i += 200,
                          M = 0);
                          var v = b ? p(this.singleModeToggle) : this.singleModeToggle;
                          v.setPosition(i, n - 20 * M, 0),
                          v.setScale(.5, .5, .5),
                          v.parent = this.singleModeToggle.parent;
                          var T = v.getComponentInChildren(C);
                          T.string = this.strSingle[b],
                          this.textComponentList[this.textComponentList.length] = T,
                          this.textContentList[this.textContentList.length] = T.string,
                          v.on(d.EventType.TOGGLE, this.toggleSingleMode, this),
                          this.singleModeToggleList[b] = v
                      }
                      i += 200,
                      this.EnableAllCompositeModeButton.setPosition(i + 15, n, 0),
                      this.EnableAllCompositeModeButton.setScale(.5, .5, .5),
                      this.EnableAllCompositeModeButton.on(m.EventType.CLICK, this.enableAllCompositeMode, this),
                      this.EnableAllCompositeModeButton.parent = l;
                      var S = this.EnableAllCompositeModeButton.getComponentInChildren(c);
                      this.labelComponentList[this.labelComponentList.length] = S;
                      var x = p(this.EnableAllCompositeModeButton);
                      x.setPosition(i + 90, n, 0),
                      x.setScale(.5, .5, .5),
                      x.on(m.EventType.CLICK, this.changeTextColor, this),
                      x.parent = l,
                      (S = x.getComponentInChildren(c)).string = "TextColor",
                      this.labelComponentList[this.labelComponentList.length] = S;
                      var E = p(this.EnableAllCompositeModeButton);
                      E.setPosition(i + 200, n, 0),
                      E.setScale(.5, .5, .5),
                      E.on(m.EventType.CLICK, this.hideUI, this),
                      E.parent = this.node.parent,
                      (S = E.getComponentInChildren(c)).string = "Hide UI",
                      this.labelComponentList[this.labelComponentList.length] = S,
                      this.hideButtonLabel = S,
                      n -= 40;
                      for (var I = 0; I < this.strMisc.length; I++) {
                          var A = p(this.compositeModeToggle);
                          A.setPosition(i, n - 20 * I, 0),
                          A.setScale(.5, .5, .5),
                          A.parent = s;
                          var y = A.getComponentInChildren(C);
                          y.string = this.strMisc[I],
                          this.textComponentList[this.textComponentList.length] = y,
                          this.textContentList[this.textContentList.length] = y.string,
                          A.getComponent(d).isChecked = !!I,
                          A.on(d.EventType.TOGGLE, I ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this),
                          this.miscModeToggleList[I] = A
                      }
                      n -= 150;
                      for (var D = 0; D < this.strComposite.length; D++) {
                          var B = D ? p(this.compositeModeToggle) : this.compositeModeToggle;
                          B.setPosition(i, n - 20 * D, 0),
                          B.setScale(.5, .5, .5),
                          B.parent = this.compositeModeToggle.parent;
                          var w = B.getComponentInChildren(C);
                          w.string = this.strComposite[D],
                          this.textComponentList[this.textComponentList.length] = w,
                          this.textContentList[this.textContentList.length] = w.string,
                          B.on(d.EventType.TOGGLE, this.toggleCompositeMode, this),
                          this.compositeModeToggleList[D] = B
                      }
                  } else
                      console.error("debug-view-runtime-control should be child of Canvas")
              }
              ,
              s.isTextMatched = function(t, e) {
                  var o = new String(t)
                    , i = o.search(">");
                  return -1 === i ? t === e : (o = (o = o.substr(i + 1)).substr(0, o.search("<"))) === e
              }
              ,
              s.toggleSingleMode = function(t) {
                  for (var e = u.root.debugView, o = t.getComponentInChildren(C), i = 0; i < this.strSingle.length; i++)
                      this.isTextMatched(o.string, this.strSingle[i]) && (e.singleMode = i)
              }
              ,
              s.toggleCompositeMode = function(t) {
                  for (var e = u.root.debugView, o = t.getComponentInChildren(C), i = 0; i < this.strComposite.length; i++)
                      this.isTextMatched(o.string, this.strComposite[i]) && e.enableCompositeMode(i, t.isChecked)
              }
              ,
              s.toggleLightingWithAlbedo = function(t) {
                  u.root.debugView.lightingWithAlbedo = t.isChecked
              }
              ,
              s.toggleCSMColoration = function(t) {
                  u.root.debugView.csmLayerColoration = t.isChecked
              }
              ,
              s.enableAllCompositeMode = function(t) {
                  var e = u.root.debugView;
                  e.enableAllCompositeMode(!0);
                  for (var o = 0; o < this.compositeModeToggleList.length; o++) {
                      this.compositeModeToggleList[o].getComponent(d).isChecked = !0
                  }
                  var i = this.miscModeToggleList[0].getComponent(d);
                  i.isChecked = !1,
                  e.csmLayerColoration = !1,
                  (i = this.miscModeToggleList[1].getComponent(d)).isChecked = !0,
                  e.lightingWithAlbedo = !0
              }
              ,
              s.hideUI = function(t) {
                  var e = this.node.getChildByName("Titles")
                    , o = !e.active;
                  this.singleModeToggleList[0].parent.active = o,
                  this.miscModeToggleList[0].parent.active = o,
                  this.compositeModeToggleList[0].parent.active = o,
                  this.EnableAllCompositeModeButton.parent.active = o,
                  e.active = o,
                  this.hideButtonLabel.string = o ? "Hide UI" : "Show UI"
              }
              ,
              s.changeTextColor = function(t) {
                  this._currentColorIndex++,
                  this._currentColorIndex >= this.strColor.length && (this._currentColorIndex = 0);
                  for (var e = 0; e < this.textComponentList.length; e++)
                      this.textComponentList[e].string = this.strColor[this._currentColorIndex] + this.textContentList[e] + "</color>";
                  for (var o = 0; o < this.labelComponentList.length; o++)
                      this.labelComponentList[o].color = this.color[this._currentColorIndex]
              }
              ,
              s.onLoad = function() {}
              ,
              s.update = function(t) {}
              ,
              e
          }(L)).prototype, "compositeModeToggle", [M], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return null
              }
          }),
          E = e(S.prototype, "singleModeToggle", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return null
              }
          }),
          I = e(S.prototype, "EnableAllCompositeModeButton", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return null
              }
          }),
          T = S)) || T));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Def.ts", ["cc"], (function(e) {
  var i;
  return {
      setters: [function(e) {
          i = e.cclegacy
      }
      ],
      execute: function() {
          i._RF.push({}, "c822f0oDo5FtJIiHuPGDVhA", "Def", void 0);
          e("SceneType", function(e) {
              return e[e.Login = 0] = "Login",
              e[e.Home = 1] = "Home",
              e[e.Fight = 2] = "Fight",
              e[e.Empty = 3] = "Empty",
              e
          }({})),
          e("FlyTextType", function(e) {
              return e[e.Damage = 0] = "Damage",
              e[e.Critical = 1] = "Critical",
              e[e.Burning = 2] = "Burning",
              e[e.Miss = 3] = "Miss",
              e[e.Healing = 4] = "Healing",
              e
          }({})),
          e("RewardType", function(e) {
              return e[e.C1 = 0] = "C1",
              e[e.C2 = 1] = "C2",
              e[e.Equip = 2] = "Equip",
              e[e.Material = 3] = "Material",
              e
          }({}));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/DelayAction.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./ActionBase.ts"], (function(t) {
  var n, e, i, o;
  return {
      setters: [function(t) {
          n = t.inheritsLoose
      }
      , function(t) {
          e = t.cclegacy
      }
      , function(t) {
          i = t.default
      }
      , function(t) {
          o = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "d6bbcbIiSlPmpTHGh9UyY/v", "DelayAction", void 0);
          var r = t("default", function(t) {
              function e() {
                  for (var n, e = arguments.length, i = new Array(e), o = 0; o < e; o++)
                      i[o] = arguments[o];
                  return (n = t.call.apply(t, [this].concat(i)) || this).time = void 0,
                  n.duration = 1,
                  n
              }
              n(e, t);
              var i = e.prototype;
              return i.reset = function() {
                  t.prototype.reset.call(this),
                  this.time = 0,
                  this.duration = 1
              }
              ,
              i.onUpdate = function(t) {
                  return this.time += t,
                  this.time > this.duration
              }
              ,
              i.onFinish = function() {
                  e.POOL.recycle(this)
              }
              ,
              e
          }(o));
          r.POOL = new i((function() {
              return new r
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/DiamondResultWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./ResList.ts", "./FrameAnimView.ts", "./Kit.ts", "./UIListView.ts", "./EquipView.ts", "./UIHelper.ts", "./LayerType.ts", "./Def.ts", "./GameGlobal.ts"], (function(e) {
  var t, i, n, s, a, r, o, l, u, p, c, h, d, f, y, C, m, v, w, E;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          s = e.assertThisInitialized
      }
      , function(e) {
          a = e.cclegacy,
          r = e.Button,
          o = e.Node,
          l = e.Sprite,
          u = e.Prefab,
          p = e.Vec3
      }
      , function(e) {
          c = e.default
      }
      , function(e) {
          h = e.default
      }
      , function(e) {
          d = e.FrameAnimView
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          y = e.UIListView
      }
      , function(e) {
          C = e.EquipView
      }
      , function(e) {
          m = e.default
      }
      , function(e) {
          v = e.Layer2DType
      }
      , function(e) {
          w = e.RewardType
      }
      , function(e) {
          E = e.default
      }
      ],
      execute: function() {
          var I, g, T, b, D, P, V, k, L, M, q, N, R, A, z;
          a._RF.push({}, "835b0CzeAZMG7uANAJM9XAl", "DiamondResultWindow", void 0);
          e("default", (I = uiBind("fgui/login", "DiamondResultWindow"),
          g = uiInject("Bg", r),
          T = uiInject("Panel1", o),
          b = uiInject("Panel1/Chest", r),
          D = uiInject("Panel2", o),
          P = uiInject("Panel2/Chest", l),
          V = uiInject("Panel2/EquipList", y),
          I((M = t((L = function(e) {
              function t(t) {
                  var i;
                  return i = e.call(this, t) || this,
                  n(i, "CloseBtn", M, s(i)),
                  n(i, "Panel1", q, s(i)),
                  n(i, "Chest1", N, s(i)),
                  n(i, "Panel2", R, s(i)),
                  n(i, "Chest2", A, s(i)),
                  n(i, "EquipList", z, s(i)),
                  i.chestEffects = new Array,
                  i.chestView = void 0,
                  i.drops = [],
                  i.treasureType = 1,
                  i.endTime = void 0,
                  i.layer = v.UITips,
                  i
              }
              i(t, e);
              var a = t.prototype;
              return a.getPrototype = function() {
                  return t.prototype
              }
              ,
              a.onEnable = function() {
                  var e = this;
                  E.MOVE_ENABLE = !1,
                  this.onClick(this.CloseBtn, (function() {
                      e.Panel2.active && Date.now() > e.endTime && e.close()
                  }
                  )),
                  this.chestEffects.length = 0,
                  this.chestEffects.push(h.chest_silver.path),
                  this.chestEffects.push(h.chest_gold.path),
                  this.chestEffects.push(h.chest_colorful.path),
                  this.EquipList.itemRenderer = this.itemRenderer.bind(this),
                  this.EquipList.numItems = this.drops.length,
                  this.Panel1.active = !0,
                  this.Panel2.active = !1,
                  this.onClick(this.Chest1, (function() {
                      e.chestView && (e.Panel1.active = !1,
                      e.Chest2.spriteFrame = null,
                      e.chestView.node.position = e.Chest2.node.position,
                      e.chestView.play("open", e, (function() {
                          var t = e.chestView.getClip("open").spriteFrames;
                          e.Chest2.spriteFrame = t[t.length - 1],
                          e.Panel2.active = !0,
                          e.chestView.node.active = !1,
                          e.endTime = Date.now() + 1e3
                      }
                      )),
                      f.action.delayCall(800, e, e.onChestOpen))
                  }
                  ));
                  var t = this.treasureType - 1
                    , i = this.chestEffects[t];
                  f.res.spawnAsyn(i, u, null, null, this.node, this, (function(t) {
                      e.active ? (t.position = e.Chest1.node.position,
                      t.setSiblingIndex(10),
                      e.chestView = t.getComponent(d),
                      e.chestView.play("idle")) : f.res.recycle(t)
                  }
                  ))
              }
              ,
              a.onDisable = function() {
                  E.MOVE_ENABLE = !0,
                  this.chestView && (f.res.recycle(this.chestView.node),
                  this.chestView = null)
              }
              ,
              a.onChestOpen = function() {
                  this.Panel2.active = !0,
                  this.Panel2.setSiblingIndex(10);
                  for (var e = this.EquipList.numItems, t = this.EquipList.itemArray, i = 136 * (e - 1) * -.5, n = 0; n < e; n++) {
                      var s = t[n]
                        , a = new p(0,-300,0)
                        , r = new p(i + 136 * n,0,0);
                      s.position = a,
                      s.scale = p.ZERO,
                      f.action.beginSequence(),
                      f.action.delay(100 * n),
                      this.onNodeLerp(s, a, r, 300),
                      f.action.end()
                  }
              }
              ,
              a.onNodeLerp = function(e, t, i, n) {
                  var s = new p
                    , a = new p;
                  f.action.lerp(this, (function(n) {
                      e.position = p.lerp(s, t, i, n),
                      e.scale = p.lerp(a, p.ZERO, p.ONE, n)
                  }
                  ), 0, 1, n)
              }
              ,
              a.itemRenderer = function(e, t) {
                  var i = t.getComponent(C)
                    , n = this.drops[e];
                  switch (n.type) {
                  case w.C1:
                      var s = n.data;
                      i.setIcon(m.getComIcon("crystal")),
                      i.setName(s + " $crystal"),
                      i.setQuality(0),
                      i.setCountText("");
                      break;
                  case w.C2:
                      s = n.data;
                      i.setIcon(m.getComIcon("leaf")),
                      i.setName(s + " $leaf"),
                      i.setQuality(0),
                      i.setCountText("");
                      break;
                  case w.Equip:
                      var a = (o = n.data).TIDAry[0]
                        , r = DataCenter.Equipment.Get(a);
                      i.setIcon(m.getEquipIcon(r.Icon)),
                      i.setName(r.Name),
                      i.setQuality(r.Rarity),
                      i.setCountText("");
                      break;
                  case w.Material:
                      var o;
                      a = (o = n.data).ID,
                      r = DataCenter.Material.Get(a);
                      i.setIcon(m.getMaterialIcon(r.Icon)),
                      i.setName(r.Name),
                      i.setQuality(r.Rarity),
                      i.setCount(0 | o.Num)
                  }
              }
              ,
              a.setData = function(e, t) {
                  if (this.drops = [],
                  null != t.ETokens)
                      for (var i = t.ETokens, n = 0; n < i.length; ++n)
                          this.drops.push({
                              type: w.Equip,
                              data: i[n]
                          });
                  if (null != t.MTokens)
                      for (var s = t.MTokens, a = 0; a < s.length; ++a)
                          this.drops.push({
                              type: w.Material,
                              data: s[a]
                          });
                  var r = f.utils.parseInt(t.GainC2);
                  r > 0 && this.drops.push({
                      type: w.C2,
                      data: r
                  }),
                  this.treasureType = e
              }
              ,
              a.setData2 = function(e) {
                  if (this.drops = [],
                  null != e.ETokens)
                      for (var t = e.ETokens, i = 0; i < t.length; ++i)
                          this.drops.push({
                              type: w.Equip,
                              data: t[i]
                          });
                  if (null != e.MTokens)
                      for (var n = e.MTokens, s = 0; s < n.length; ++s)
                          this.drops.push({
                              type: w.Material,
                              data: n[s]
                          });
                  var a = f.utils.parseInt(e.C1);
                  a > 0 && this.drops.push({
                      type: w.C1,
                      data: a
                  });
                  var r = f.utils.parseInt(e.C2);
                  r > 0 && this.drops.push({
                      type: w.C2,
                      data: r
                  });
                  var o = DataCenter.Drop.Get(e.DropID[0]);
                  o ? this.treasureType = o.TreasureType : (this.treasureType = 1,
                  console.error("drop id error：}", e))
              }
              ,
              a.setData3 = function(e, t) {
                  if (this.drops = [],
                  null != t.ETokens)
                      for (var i = t.ETokens, n = 0; n < i.length; ++n)
                          this.drops.push({
                              type: w.Equip,
                              data: i[n]
                          });
                  if (null != t.MTokens)
                      for (var s = t.MTokens, a = 0; a < s.length; ++a)
                          this.drops.push({
                              type: w.Material,
                              data: s[a]
                          });
                  var r = f.utils.parseInt(t.C1);
                  r > 0 && this.drops.push({
                      type: w.C1,
                      data: r
                  });
                  var o = f.utils.parseInt(t.C2);
                  o > 0 && this.drops.push({
                      type: w.C2,
                      data: o
                  }),
                  this.treasureType = e
              }
              ,
              t
          }(c)).prototype, "CloseBtn", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          q = t(L.prototype, "Panel1", [T], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          N = t(L.prototype, "Chest1", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          R = t(L.prototype, "Panel2", [D], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          A = t(L.prototype, "Chest2", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          z = t(L.prototype, "EquipList", [V], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          k = L)) || k));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/DiamondShopWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./UIRoot.ts", "./SessionMessage_Home.ts", "./Client.ts", "./LayerType.ts"], (function(e) {
  var t, n, i, o, r, s, l, a, u, c, p, h, d;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          n = e.inheritsLoose,
          i = e.initializerDefineProperty,
          o = e.assertThisInitialized
      }
      , function(e) {
          r = e.cclegacy,
          s = e.Button,
          l = e.Node,
          a = e.Label
      }
      , function(e) {
          u = e.default
      }
      , function(e) {
          c = e.default
      }
      , function(e) {
          p = e.default
      }
      , function(e) {
          h = e.default
      }
      , function(e) {
          d = e.Layer2DType
      }
      ],
      execute: function() {
          var f, m, y, I, C, b, g, B, D, L, v;
          r._RF.push({}, "9bd623LRFlK7rBrTlHkoA2d", "DiamondShopWindow", void 0);
          e("default", (f = uiBind("fgui/login", "DiamondShopWindow"),
          m = uiInject("CloseBtn", s),
          y = uiInject("Layout/Item-001", l),
          I = uiInject("Layout/Item-002", l),
          C = uiInject("Layout/Item-003", l),
          f((B = t((g = function(e) {
              function t(t) {
                  var n;
                  return n = e.call(this, t) || this,
                  i(n, "CloseBtn", B, o(n)),
                  i(n, "Item1", D, o(n)),
                  i(n, "Item2", L, o(n)),
                  i(n, "Item3", v, o(n)),
                  n.chestIds = [2e3, 2001, 2002],
                  n.layer = d.UIPopup,
                  n
              }
              n(t, e);
              var r = t.prototype;
              return r.getPrototype = function() {
                  return t.prototype
              }
              ,
              r.onEnable = function() {
                  var e = this;
                  this.onClick(this.CloseBtn, (function() {
                      e.close()
                  }
                  )),
                  this.chestRenderer(0, this.Item1),
                  this.chestRenderer(1, this.Item2),
                  this.chestRenderer(2, this.Item3)
              }
              ,
              r.onDisable = function() {}
              ,
              r.chestRenderer = function(e, t) {
                  var n = this
                    , i = this.chestIds[e]
                    , o = DataCenter.Drop.Get(i)
                    , r = t.getChildByName("BuyButton");
                  r.off(s.EventType.CLICK),
                  r.on(s.EventType.CLICK, (function() {
                      n.onChestClick(e)
                  }
                  ), this),
                  r.getChildByName("Label").getComponent(a).string = o.StoreSell.toString()
              }
              ,
              r.onChestClick = function(e) {
                  if (h.user.isInChestTime()) {
                      var t = this.chestIds[e]
                        , n = DataCenter.Drop.Get(t).StoreSell;
                      -1 != h.user.data.money1.comparedTo(n) ? p.storeChest(t) : c.textTips.play("Need more money")
                  } else
                      c.textTips.play("Treasure chest not refreshed")
              }
              ,
              t
          }(u)).prototype, "CloseBtn", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          D = t(g.prototype, "Item1", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          L = t(g.prototype, "Item2", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          v = t(g.prototype, "Item3", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          b = g)) || b));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/DifficultySelectWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./UIListView.ts", "./LayerType.ts", "./Client.ts", "./SessionMessage_Fight.ts", "./Kit.ts", "./GameGlobal.ts"], (function(e) {
  var t, i, n, o, l, a, r, s, u, c, d, h, b, f, p;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          o = e.assertThisInitialized
      }
      , function(e) {
          l = e.cclegacy,
          a = e.Button,
          r = e.Node,
          s = e.Label
      }
      , function(e) {
          u = e.default
      }
      , function(e) {
          c = e.UIListView
      }
      , function(e) {
          d = e.Layer2DType
      }
      , function(e) {
          h = e.default
      }
      , function(e) {
          b = e.default
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          p = e.default
      }
      ],
      execute: function() {
          var L, y, g, m, P, w, B, S, N, I, x, v, E, C, k, z, R, j, D, M, _;
          l._RF.push({}, "90acaT6lWpPdJ1rYP8CXEvT", "DifficultySelectWindow", void 0);
          e("default", (L = uiBind("fgui/login", "DifficultySelectWindow"),
          y = uiInject("Panel/StartButton", a),
          g = uiInject("Panel/BackButton", a),
          m = uiInject("Panel/Layout/1", a),
          P = uiInject("Panel/Layout/2", a),
          w = uiInject("Panel/Layout/3", a),
          B = uiInject("Panel/Select", r),
          S = uiInject("Panel/Layout/1/LabelList", c),
          N = uiInject("Panel/Layout/2/LabelList", c),
          I = uiInject("Panel/Layout/3/LabelList", c),
          L((E = t((v = function(e) {
              function t(t) {
                  var i;
                  return i = e.call(this, t) || this,
                  n(i, "StartButton", E, o(i)),
                  n(i, "BackButton", C, o(i)),
                  n(i, "Node1", k, o(i)),
                  n(i, "Node2", z, o(i)),
                  n(i, "Node3", R, o(i)),
                  n(i, "SelectNode", j, o(i)),
                  n(i, "LabelList1", D, o(i)),
                  n(i, "LabelList2", M, o(i)),
                  n(i, "LabelList3", _, o(i)),
                  i.nodes = new Array,
                  i.index = 0,
                  i.text1 = ["Beginner and Casual Player Friendly", "Standard Monster Encounters", "Standard Points Earning"],
                  i.text2 = ["For Experienced and Hardcore Players", "Enhanced Monster Varieties", "Bonus Points Earning"],
                  i.text3 = ["Bonkwoods is open for registered players", "Join now for massive rewards", "Team up and battle all creatures"],
                  i.layer = d.UIPopup,
                  i
              }
              i(t, e);
              var l = t.prototype;
              return l.getPrototype = function() {
                  return t.prototype
              }
              ,
              l.onEnable = function() {
                  var e = this;
                  p.MOVE_ENABLE = !1,
                  this.nodes.length = 0,
                  this.nodes.push(this.Node1.node),
                  this.nodes.push(this.Node2.node),
                  this.nodes.push(this.Node3.node),
                  this.onClick(this.StartButton, (function() {
                      e.startGame(),
                      e.close()
                  }
                  )),
                  this.onClick(this.BackButton, (function() {
                      e.close()
                  }
                  )),
                  this.onClick(this.Node1, (function() {
                      e.setSelect(0)
                  }
                  )),
                  this.onClick(this.Node2, (function() {
                      e.setSelect(1)
                  }
                  )),
                  this.onClick(this.Node3, (function() {
                      e.setSelect(2)
                  }
                  )),
                  this.LabelList1.itemRenderer = this.onLabel1Renderer.bind(this),
                  this.LabelList2.itemRenderer = this.onLabel2Renderer.bind(this),
                  this.LabelList3.itemRenderer = this.onLabel3Renderer.bind(this),
                  this.LabelList1.numItems = this.text1.length,
                  this.LabelList2.numItems = this.text2.length,
                  this.LabelList3.numItems = this.text3.length;
                  var t = f.playerPrefs.getNumber("Difficulty", 0);
                  this.setSelect(t)
              }
              ,
              l.onDisable = function() {
                  p.MOVE_ENABLE = !0
              }
              ,
              l.setSelect = function(e) {
                  this.index = e,
                  this.SelectNode.worldPosition = this.nodes[e].worldPosition,
                  f.playerPrefs.setNumber("Difficulty", this.index)
              }
              ,
              l.startGame = function() {
                  var e = h.hero.getMain()
                    , t = 0 | (null == e ? void 0 : e.sn)
                    , i = f.math.randomInt(0, 3)
                    , n = [10100, 10101, 10102, 10103][i];
                  console.log("chapter_index:", i),
                  console.log("chapter:", n),
                  h.fight.setChapterByIndex(n);
                  var o = this.index;
                  b.gameStart(t, n, o)
              }
              ,
              l.onLabel1Renderer = function(e, t) {
                  t.getComponent(s).string = "    " + this.text1[e]
              }
              ,
              l.onLabel2Renderer = function(e, t) {
                  t.getComponent(s).string = "    " + this.text2[e]
              }
              ,
              l.onLabel3Renderer = function(e, t) {
                  t.getComponent(s).string = "    " + this.text3[e]
              }
              ,
              t
          }(u)).prototype, "StartButton", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          C = t(v.prototype, "BackButton", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          k = t(v.prototype, "Node1", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          z = t(v.prototype, "Node2", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          R = t(v.prototype, "Node3", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          j = t(v.prototype, "SelectNode", [B], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          D = t(v.prototype, "LabelList1", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          M = t(v.prototype, "LabelList2", [N], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          _ = t(v.prototype, "LabelList3", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          x = v)) || x));
          l._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/DogView.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts"], (function(t) {
  var i, e, s, n, o, r, a, h, l, c, u;
  return {
      setters: [function(t) {
          i = t.applyDecoratedDescriptor,
          e = t.inheritsLoose,
          s = t.initializerDefineProperty,
          n = t.assertThisInitialized
      }
      , function(t) {
          o = t.cclegacy,
          r = t._decorator,
          a = t.sp,
          h = t.Vec2,
          l = t.Vec3,
          c = t.Component
      }
      , function(t) {
          u = t.default
      }
      ],
      execute: function() {
          var d, p, f, y, m, b, P, g, w, v, x;
          o._RF.push({}, "7f28albbdZG1Jd+PT5Vvd15", "DogView", void 0);
          var k = r.ccclass
            , z = r.property;
          t("DogView", (d = k("DogView"),
          p = z({
              type: a.Skeleton
          }),
          f = z({
              type: h
          }),
          y = z({
              type: [l]
          }),
          d((P = i((b = function(t) {
              function i() {
                  for (var i, e = arguments.length, o = new Array(e), r = 0; r < e; r++)
                      o[r] = arguments[r];
                  return i = t.call.apply(t, [this].concat(o)) || this,
                  s(i, "skeleton", P, n(i)),
                  s(i, "speed", g, n(i)),
                  s(i, "delay", w, n(i)),
                  s(i, "rest", v, n(i)),
                  s(i, "path", x, n(i)),
                  i.time = void 0,
                  i.index = void 0,
                  i.state = 0,
                  i.srcPos = new l,
                  i.dstPos = new l,
                  i.curPos = new l,
                  i.duration = void 0,
                  i
              }
              e(i, t);
              var o = i.prototype;
              return o.onEnable = function() {
                  this.time = 0,
                  this.state = 2,
                  this.index = 1,
                  this.duration = this.delay,
                  this.node.position = this.path[0],
                  this.skeleton.setAnimation(0, "idle", !0)
              }
              ,
              o.update = function(t) {
                  1 == this.state ? (this.time += t,
                  this.time < this.duration ? l.lerp(this.curPos, this.srcPos, this.dstPos, this.time / this.duration) : (l.copy(this.curPos, this.dstPos),
                  this.duration = u.math.random(this.rest.x, this.rest.y),
                  this.time = 0,
                  this.state = 2,
                  this.skeleton.setAnimation(0, "idle", !0)),
                  this.node.position = this.curPos) : 2 == this.state && (this.time += t,
                  this.time > this.duration && (this.next(),
                  this.time = 0,
                  this.state = 1))
              }
              ,
              o.next = function() {
                  this.index >= this.path.length && (this.index = 0),
                  l.copy(this.srcPos, this.node.position),
                  l.copy(this.dstPos, this.path[this.index]);
                  var t = l.distance(this.srcPos, this.dstPos);
                  this.duration = t / this.speed,
                  this.index += 1,
                  this.skeleton.setAnimation(0, "run", !0),
                  this.dstPos.x - this.srcPos.x > 0 ? this.node.setScale(1, 1) : this.node.setScale(-1, 1)
              }
              ,
              i
          }(c)).prototype, "skeleton", [p], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          g = i(b.prototype, "speed", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          w = i(b.prototype, "delay", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          v = i(b.prototype, "rest", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new h
              }
          }),
          x = i(b.prototype, "path", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return []
              }
          }),
          m = b)) || m));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/DragonAS.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./AtkStrategy.ts", "./BattleDef.ts", "./ObjMgr.ts", "./CreatureManager.ts", "./BattleMgr.ts", "./EffectFactory.ts", "./proto.mjs_cjs=&original=.js", "./proto.js"], (function(t) {
  var i, a, s, e, n, r, h, o, g, l, c, u;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          a = t.cclegacy,
          s = t.Vec3
      }
      , function(t) {
          e = t.AtkState,
          n = t.StrategyType,
          r = t.AtkStrategy
      }
      , function(t) {
          h = t.BattleDef
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          g = t.default
      }
      , function(t) {
          l = t.BattleMgr
      }
      , function(t) {
          c = t.default
      }
      , null, function(t) {
          u = t.default
      }
      ],
      execute: function() {
          a._RF.push({}, "11b1aapQQBE+orU/NeVCNZW", "DragonAS", void 0);
          t("DragonAtkStrategy", function(t) {
              function a() {
                  for (var i, a = arguments.length, s = new Array(a), e = 0; e < a; e++)
                      s[e] = arguments[e];
                  return (i = t.call.apply(t, [this].concat(s)) || this).dragonCfg = new Array,
                  i.atkBatch = null,
                  i.collisionEndTick = 0,
                  i
              }
              i(a, t);
              var r = a.prototype;
              return r.init = function(i, a) {
                  void 0 === a && (a = null),
                  t.prototype.init.call(this, i, a),
                  this.atkCD = i.getAttrVal(u.msg.AttrType.AT_AtkCD),
                  this.collisionCD = i.getAttrVal(u.msg.AttrType.AT_CollisionCD),
                  this.target = o.ins.getChar(),
                  this.owner = i,
                  this.atkRadius = this.owner.getAttrVal(u.msg.AttrType.AT_AtkRange),
                  this.atkRadiusSuqare = this.atkRadius * this.atkRadius,
                  this.state = e.Chasing,
                  this.targetRadius = this.target.getAttrVal(u.msg.AttrType.AT_CollisionRadius),
                  this.shapeRadius = this.owner.getAttrVal(u.msg.AttrType.AT_CollisionRadius) + this.targetRadius,
                  this.shapeRadiusSuqare = this.shapeRadius * this.shapeRadius;
                  for (var s = 0; s < a.length; s++)
                      this.dragonCfg.push(a[s])
              }
              ,
              r.destory = function() {
                  t.prototype.destory.call(this),
                  null != this.atkBatch && (this.atkBatch.destory(),
                  this.atkBatch = null),
                  this.dragonCfg = null
              }
              ,
              r.getStrategyType = function() {
                  return n.Skill
              }
              ,
              r.onUpdate = function() {
                  if (this.frameCheck++,
                  !(this.frameCheck < this.frameCheckMax))
                      if (this.frameCheck = 0,
                      this.checkCollision(),
                      this.state == e.Chasing)
                          this.checkAtk();
                      else if (this.state == e.AtkCD)
                          if (this.atkCDEndTick -= h.FrameTick * this.frameCheckMax,
                          this.atkCDEndTick < 0)
                              this.state = e.Chasing,
                              this.checkAtk();
                          else {
                              var t = this.owner.getPos()
                                , i = this.target.getPos()
                                , a = i.x - t.x
                                , s = i.y - t.y;
                              this.owner.move(a, s)
                          }
                      else
                          this.atkCDEndTick -= h.FrameTick * this.frameCheckMax
              }
              ,
              r.onAtked = function() {
                  this.state = e.AtkEnding,
                  this.atkCDEndTick = this.atkCD
              }
              ,
              r.checkAtk = function() {
                  var t = this.owner.getPos()
                    , i = this.target.getPos()
                    , a = i.x - t.x
                    , s = i.y - t.y;
                  Math.abs(a) > this.atkRadius || Math.abs(s) > this.atkRadius ? this.owner.move(a, s) : a * a + s * s < this.atkRadiusSuqare && this.owner.getAttr().canAtk() ? (this.owner.node.attack(this, this.onFireballTrigger, null, this.onFireballFinish),
                  this.onAtked()) : this.owner.move(a, s)
              }
              ,
              r.onFireballTrigger = function() {
                  null != this.atkBatch && (this.atkBatch.destory(),
                  this.atkBatch = null),
                  this.atkBatch = g.ins.generateAtkBatch(this.owner);
                  for (var t = this.dragonCfg[0], i = this.target.getPos(), a = this.dragonCfg[2], e = l.ins.getMap().getCoordinateMin(), n = l.ins.getMap().getCoordinateMax(), r = 0; r < t; ++r) {
                      var h = i.x + l.ins.randNextEx(-this.dragonCfg[1], this.dragonCfg[1])
                        , o = i.y + l.ins.randNextEx(-this.dragonCfg[1], this.dragonCfg[1]);
                      h - a < e.x && (h = e.x + a),
                      h + a > n.x && (h = n.x - a),
                      o - a < e.y && (o = e.y + a),
                      o + a > n.y && (o = n.y - a),
                      c.playFireDragon(new s(h,o,0), 0, this.dragonCfg[3], this.atkBatch, this.owner.node, null)
                  }
              }
              ,
              r.onFireballFinish = function() {
                  this.state = e.AtkCD
              }
              ,
              a
          }(r));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/DressConfig.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ConfigBase.ts"], (function(e) {
  var n, t, s;
  return {
      setters: [function(e) {
          n = e.inheritsLoose
      }
      , function(e) {
          t = e.cclegacy
      }
      , function(e) {
          s = e.default
      }
      ],
      execute: function() {
          var o;
          t._RF.push({}, "e208bWdJYJB0o7N53pOI+dV", "DressConfig", void 0);
          e("default", set_class_name("DressConfig")(o = function(e) {
              function t() {
                  for (var n, t = arguments.length, s = new Array(t), o = 0; o < t; o++)
                      s[o] = arguments[o];
                  return (n = e.call.apply(e, [this].concat(s)) || this).data = void 0,
                  n
              }
              return n(t, e),
              t
          }(s)) || o);
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/DropItem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreatureBase.ts", "./Kit.ts", "./CreatureManager.ts", "./DropItemType.ts", "./SimplePool.ts", "./ResList.ts"], (function(t) {
  var e, i, o, n, s, a, r, c, h, u, p, l;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          i = t.cclegacy,
          o = t.SpriteFrame,
          n = t.Sprite,
          s = t.Vec3,
          a = t.easing
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          u = t.DropItemType
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          l = t.default
      }
      ],
      execute: function() {
          i._RF.push({}, "2b615hVD4pBSZJ4dtsVEnRD", "DropItem", void 0);
          var m = t("default", function(t) {
              function i() {
                  for (var e, i = arguments.length, o = new Array(i), n = 0; n < i; n++)
                      o[n] = arguments[n];
                  return (e = t.call.apply(t, [this].concat(o)) || this).itemType = void 0,
                  e.target = void 0,
                  e.from = new s,
                  e.control = new s,
                  e.time = void 0,
                  e.lastTime = void 0,
                  e.duration = void 0,
                  e.itemState = 0,
                  e.context = void 0,
                  e.iconPath = void 0,
                  e
              }
              e(i, t);
              var r = i.prototype;
              return r.reset = function() {}
              ,
              r.onEnable = function() {
                  this.itemState = 0,
                  this.lastTime = Date.now(),
                  this._isSearched = !0;
                  var t = this.context;
                  if (t && t.type == u.Material) {
                      var e = DataCenter.Material.Get(t.id);
                      this.setIcon("ui/fight/texture/" + e.Icon.toLowerCase() + "_s/spriteFrame")
                  }
              }
              ,
              r.setContext = function(t) {
                  this.context = t
              }
              ,
              r.setIcon = function(t) {
                  c.res.spawnAsyn(t, o, null, null, null, this, this.setIconX)
              }
              ,
              r.setIconX = function(t) {
                  var e = this.node.getChildByPath("icon").getComponent(n);
                  e && (e.spriteFrame = t)
              }
              ,
              r.flyTo = function(t, e) {
                  void 0 === e && (e = 500),
                  this.itemState = 2,
                  this.time = 0,
                  s.copy(this.from, this.position),
                  this.target = t,
                  this.duration = .001 * e,
                  s.add(c.temp.bVec3, t.position, this.from),
                  c.temp.bVec3.multiplyScalar(.5),
                  s.subtract(c.temp.aVec3, t.position, this.from);
                  var i = c.temp.aVec3.length()
                    , o = c.math.random(0, 1) > .5 ? 1 : -1;
                  c.temp.aVec3.normalize(),
                  c.temp.cVec3.x = c.temp.aVec3.y,
                  c.temp.cVec3.y = -c.temp.aVec3.x,
                  c.temp.cVec3.multiplyScalar(.3 * i * o),
                  s.add(this.control, c.temp.bVec3, c.temp.cVec3)
              }
              ,
              r.onUpdate = function(t) {
                  if (2 == this.itemState)
                      if (this.time += t,
                      this.time < this.duration) {
                          var e = this.time / this.duration
                            , i = a.sineIn(e);
                          c.math.getBezierPoint3(this.from, this.control, this.target.position, i, this.position),
                          this.node.position = this.position
                      } else
                          this.context && (this.context.type == u.Coin ? (c.sound.playSound(l.sound_coin.path),
                          this.context.char.pickGold(this.context.gold)) : this.context.type == u.Treasure ? (c.sound.playSound(l.sound_box.path),
                          this.context.char.pickChest()) : (c.sound.playSound(l.sound_blood.path),
                          this.context.char.pickPotion(this._position.x, this._position.y)),
                          this.context = null),
                          this.itemState = 3,
                          this.target = null,
                          h.ins.remove(this)
              }
              ,
              r.onDestroy = function() {
                  t.prototype.onDestroy.call(this),
                  i.POOL.recycle(this)
              }
              ,
              i
          }(r));
          m.POOL = new p((function() {
              return new m
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/DropItemType.ts", ["cc"], (function(e) {
  var r;
  return {
      setters: [function(e) {
          r = e.cclegacy
      }
      ],
      execute: function() {
          r._RF.push({}, "f38c1Vh7a5C8afmcVxdo9vF", "DropItemType", void 0);
          e("DropItemType", function(e) {
              return e[e.Coin = 0] = "Coin",
              e[e.Treasure = 1] = "Treasure",
              e[e.Blood = 2] = "Blood",
              e[e.Material = 3] = "Material",
              e[e.BossTreasure1 = 4] = "BossTreasure1",
              e[e.BossTreasure2 = 5] = "BossTreasure2",
              e[e.BossTreasure3 = 6] = "BossTreasure3",
              e
          }({}));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EffectBase.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ActionBase.ts", "./Kit.ts", "./EffectManager.ts"], (function(t) {
  var i, o, n, s, e;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          o = t.cclegacy
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          e = t.default
      }
      ],
      execute: function() {
          o._RF.push({}, "d6442l44I1GWpJP09rvq8lE", "EffectBase", void 0);
          t("default", function(t) {
              function o() {
                  for (var i, o = arguments.length, n = new Array(o), s = 0; s < o; s++)
                      n[s] = arguments[s];
                  return (i = t.call.apply(t, [this].concat(n)) || this).loadDict = void 0,
                  i.loadCount = 0,
                  i.isRecycle = !0,
                  i.isLoading = !1,
                  i.layer = void 0,
                  i
              }
              i(o, t);
              var n = o.prototype;
              return n.reset = function() {
                  t.prototype.reset.call(this),
                  this.isRecycle = !0,
                  this.isLoading = !1
              }
              ,
              n.onPrepare = function() {
                  return this.isLoading || (this.isLoading = !0,
                  this.loadCount = 0,
                  this.unSpawnAll(),
                  this.onPreLoad(),
                  this.startLoad()),
                  0 == this.loadCount
              }
              ,
              n.onPreLoad = function() {}
              ,
              n.preload = function(t, i, o, n) {
                  null == this.loadDict && (this.loadDict = {}),
                  this.loadDict[t] = {
                      src: t,
                      asset: i,
                      pos: o,
                      rot: n,
                      node: null
                  },
                  this.loadCount++
              }
              ,
              n.getAsset = function(t, i) {
                  var o = this.loadDict[t];
                  return null == o.node && (o.node = s.res.spawn(o.src, o.asset, o.pos, o.rot, i)),
                  o.node
              }
              ,
              n.startLoad = function() {
                  var t = this;
                  if (this.loadDict)
                      for (var i in this.loadDict) {
                          var o = this.loadDict[i];
                          s.res.preload(o.src, o.asset, this, (function() {
                              t.loadCount--
                          }
                          ))
                      }
              }
              ,
              n.unSpawnAll = function() {
                  if (this.loadDict) {
                      for (var t in this.loadDict) {
                          var i = this.loadDict[t];
                          i.node && s.res.recycle(i.node)
                      }
                      this.loadDict = null
                  }
              }
              ,
              n.destroy = function() {
                  if (this.loadDict)
                      for (var t in this.loadDict) {
                          var i = this.loadDict[t];
                          i.node && (i.node.active = !1)
                      }
              }
              ,
              n.onFinish = function() {
                  this.isLoading = !1,
                  this.isRecycle && this.unSpawnAll(),
                  e.ins.remove(this)
              }
              ,
              o
          }(n));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EffectFactory.ts", ["cc", "./EffectManager.ts", "./LayerType.ts", "./ResList.ts", "./Kit.ts", "./Bomb.ts", "./DeathEffect.ts", "./CreatureManager.ts", "./SpriteColorAnim.ts", "./Def.ts"], (function(e) {
  var t, a, n, i, l, r, o, c, u, s, p, f, y, h;
  return {
      setters: [function(e) {
          t = e.cclegacy,
          a = e.Vec3,
          n = e.Vec2,
          i = e.Prefab,
          l = e.UITransform
      }
      , function(e) {
          r = e.default
      }
      , function(e) {
          o = e.Layer2DType
      }
      , function(e) {
          c = e.default
      }
      , function(e) {
          u = e.default
      }
      , function(e) {
          s = e.default
      }
      , function(e) {
          p = e.default
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          y = e.SpriteColorAnim
      }
      , function(e) {
          h = e.FlyTextType
      }
      ],
      execute: function() {
          t._RF.push({}, "a102e9mtw5CxbcCWAgnhHRa", "EffectFactory", void 0);
          e("default", function() {
              function e() {}
              return e.playText = function(e, t, a, n, i) {
                  switch (e) {
                  case h.Damage:
                      i ? r.ins.playText(c.DamageSelfText.path, t.toString(), a, n, o.View) : r.ins.playText(c.DamageText.path, t.toString(), a, n, o.View);
                      break;
                  case h.Critical:
                      r.ins.playText(c.DamageCritText.path, t.toString(), a, n, o.View);
                      break;
                  case h.Burning:
                      r.ins.playText(c.BurningText.path, t.toString(), a, n, o.View);
                      break;
                  case h.Miss:
                      r.ins.playText(c.Miss.path, null, a, n, o.View);
                      break;
                  case h.Healing:
                      r.ins.playText(c.HealingText.path, t.toString(), a, n, o.View)
                  }
              }
              ,
              e.playDamage = function(e, t, a, n, i) {
                  a ? r.ins.playText(c.DamageCritText.path, e.toString(), t, n, o.View) : i ? r.ins.playText(c.DamageSelfText.path, e.toString(), t, n, o.View) : r.ins.playText(c.DamageText.path, e.toString(), t, n, o.View)
              }
              ,
              e.playMiss = function(e, t) {
                  r.ins.playText(c.Miss.path, null, e, t, o.View)
              }
              ,
              e.playDie = function(e) {
                  r.ins.playSpine(c.die.path, e, o.View, null, null, null, o.BG, .6)
              }
              ,
              e.playFireDragon = function(e, t, n, i, l, p) {
                  var f = new a
                    , y = new a;
                  a.copy(f, e),
                  a.copy(y, e),
                  f.y += 1e3,
                  y.y += 100,
                  r.ins.playFixed(c.fireWarm.path, e, null, null, o.Middle, t + n),
                  u.action.beginSequence(),
                  t > 0 && u.action.delay(t),
                  r.ins.playFixed(c.fireBall.path, f, null, null, o.View, n, u.handler(this, (function(e) {
                      u.action.toVec3(e, y, n)
                  }
                  ))),
                  u.action.beginParallel(),
                  r.ins.playFixed(c.fireExplode.path, e, null, null, o.View, 1e3),
                  r.ins.playFixed(c.fireBomb.path, e, null, null, o.View, 200, u.handler(this, (function(e) {
                      e.getComponent(s).play(l, p, i),
                      u.sound.playSound(c.sound_bossskill.path, .8)
                  }
                  ))),
                  u.action.end(),
                  u.action.end()
              }
              ,
              e.playFalaoSkill = function(e, t, n, i, l) {
                  for (var r = 2 * Math.PI / 10, o = 0; o < 10; ++o) {
                      var c = o * r
                        , u = Math.cos(c)
                        , s = Math.sin(c)
                        , p = new a(u,s,0);
                      this.createCurveBullet("creature/prefabs/Pharaoh_bullet", e, p, t, 2e3)
                  }
              }
              ,
              e.playLeaveSkill = function(e, t, n, i, l) {
                  for (var r = 2 * Math.PI / 12, o = 0; o < 12; ++o) {
                      var c = o * r
                        , u = Math.cos(c)
                        , s = Math.sin(c)
                        , p = new a(u,s,0);
                      this.createBullet("creature/prefabs/TreeLeader_bullet", e, p, t, 2e3, n, i, l)
                  }
              }
              ,
              e.playYetiSkill = function(e, t, n, r, s) {
                  var p = this
                    , f = e.x > 0 ? new a(-1130,-470) : new a(1130,-470)
                    , h = 2260
                    , d = h / t * 1e3 + 3e3;
                  u.action.beginParallel();
                  for (var g = function() {
                      var g = u.math.random(1e3, 3e3)
                        , w = new a;
                      w.set(f),
                      w.add(new a(0,134.28571428571428 * x,0));
                      var m = new a(w);
                      m.y -= 50;
                      var T = u.res.spawn(c.YetiBoos_warm.path, i, m, null, o.Middle)
                        , v = T.getComponent(y)
                        , b = T.getChildByName("Body").getComponent(l);
                      b.width = h,
                      b.anchorX = e.x > 0 ? 0 : 1,
                      v.play(!1),
                      u.action.beginSequence(),
                      u.action.delay(g),
                      u.action.call(p, p.onCreateBullet, w, e, t, h, n, r, s),
                      u.action.delay(d - g),
                      u.action.call(p, (function() {
                          v.play(!0)
                      }
                      )),
                      u.action.delay(1e3),
                      u.action.call(p, (function() {
                          u.res.recycle(T)
                      }
                      )),
                      u.action.end()
                  }, x = 0; x < 8; ++x)
                      g();
                  u.action.end()
              }
              ,
              e.onCreateBullet = function(e, t, a, n, i, l, r) {
                  this.createBullet("creature/prefabs/YetiBoos_bullet", e, t, a, n, i, l, r)
              }
              ,
              e.playFireRing = function(e, t, n, i, l) {
                  for (var r = 2 * Math.PI / 8, o = 0; o < 8; ++o) {
                      var c = o * r
                        , u = Math.cos(c)
                        , s = Math.sin(c)
                        , p = new a(u,s,0);
                      this.createBullet("weapon/prefabs/weapon_FireRing_bullet", e, p, t, 600, n, i, l).setLimitDistance(200)
                  }
              }
              ,
              e.toDie = function(e, t, a, n, i, l, r) {
                  var o = p.POOL.spawn();
                  o.target = e,
                  o.duration = l,
                  o.complete = r,
                  o.dir.x = a,
                  o.dir.y = n,
                  o.dir.normalize(),
                  o.dir.x *= i,
                  o.dir.y *= i,
                  o.offset.x = -t.x,
                  o.offset.y = -t.y,
                  u.action.add(o)
              }
              ,
              e.createBullet = function(e, t, a, i, l, r, o, c) {
                  var u = f.ins.createBullet(e, t, null, null, null)
                    , s = new n;
                  return s.x = a.x,
                  s.y = a.y,
                  s.normalize(),
                  u.setThrough(!0),
                  u.setSpeed(i),
                  u.setDir(s),
                  u.setMaxDistance(l),
                  u.setOwner(o, c),
                  u
              }
              ,
              e.createCurveBullet = function(e, t, a, i, l, r, o, c) {
                  var u = f.ins.createCurveBullet(e, t, null, null, null)
                    , s = new n;
                  s.x = a.x,
                  s.y = a.y,
                  s.normalize(),
                  u.setUpdateDirEnable(!1),
                  u.setThrough(!0),
                  u.setSpeed(i),
                  u.setCurve(400, 250),
                  u.setDir(s),
                  u.setMaxDistance(l),
                  u.setOwner(o, c)
              }
              ,
              e
          }());
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EffectFrameAnim.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./EffectBase.ts", "./Kit.ts"], (function(t) {
  var i, n, o, e, s, r, a, l;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy,
          o = t.Animation,
          e = t.AnimationClip,
          s = t.Vec3
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          l = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "fb2d1TT26FGNLIA3FxxVxX8", "EffectFrameAnim", void 0);
          var h = t("default", function(t) {
              function n() {
                  for (var i, n = arguments.length, o = new Array(n), e = 0; e < n; e++)
                      o[e] = arguments[e];
                  return (i = t.call.apply(t, [this].concat(o)) || this).src = void 0,
                  i.duration = 1e3,
                  i.speed = 1,
                  i.position = new s,
                  i.rotation = 0,
                  i.layer = void 0,
                  i.loop = void 0,
                  i.onInit = void 0,
                  i.anim = void 0,
                  i.node = void 0,
                  i.time = void 0,
                  i
              }
              i(n, t);
              var r = n.prototype;
              return r.onPreLoad = function() {
                  this.preload(this.src, o)
              }
              ,
              r.onStart = function() {
                  this.time = 0,
                  this.node = this.getAsset(this.src),
                  this.anim = this.node.getComponent(o),
                  this.layer && l.layer.addNode(this.node, this.layer),
                  this.node.position = this.position,
                  this.node.angle = this.rotation;
                  var t = this.anim.clips[0];
                  t && (t.wrapMode = this.loop ? e.WrapMode.Loop : e.WrapMode.Normal,
                  t.speed = this.speed),
                  this.anim.play("default"),
                  this.onInit && (this.onInit.run(this.node),
                  this.onInit = null)
              }
              ,
              r.onUpdate = function(t) {
                  return this.time += t,
                  this.time > this.duration
              }
              ,
              r.onFinish = function() {
                  t.prototype.onFinish.call(this),
                  this.node = null,
                  this.anim = null,
                  n.POOL.recycle(this)
              }
              ,
              n
          }(a));
          h.POOL = new r((function() {
              return new h
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EffectId.ts", ["cc"], (function(e) {
  var n;
  return {
      setters: [function(e) {
          n = e.cclegacy
      }
      ],
      execute: function() {
          n._RF.push({}, "531e7kYXKRPTLLLwJpphX5G", "EffectId", void 0);
          e("Effect2DId", function(e) {
              return e[e.Fireworks01 = 0] = "Fireworks01",
              e[e.Fireworks02 = 1] = "Fireworks02",
              e
          }({})),
          e("Effect3DId", function(e) {
              return e[e.TileFallDown = 0] = "TileFallDown",
              e[e.Money01 = 1] = "Money01",
              e[e.Money02 = 2] = "Money02",
              e[e.Money03 = 3] = "Money03",
              e
          }({}));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EffectManager.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts", "./FlyEffect.ts", "./Kit.ts", "./TipsEffect.ts", "./SpineEffect.ts", "./FlyText.ts", "./EffectFrameAnim.ts"], (function(t) {
  var i, n, o, s, e, a, l, c, r, u, p;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy,
          o = t.easing,
          s = t.Vec3
      }
      , function(t) {
          e = t.default
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          l = t.default
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          p = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "1f796phcPxOebskRPgFF+3B", "EffectManager", void 0);
          t("default", function(t) {
              function n() {
                  for (var i, n = arguments.length, o = new Array(n), s = 0; s < n; s++)
                      o[s] = arguments[s];
                  return (i = t.call.apply(t, [this].concat(o)) || this).list = [],
                  i
              }
              i(n, t);
              var e = n.prototype;
              return e.playFly = function(t, i, n, s, e, c) {
                  var r = a.POOL.spawn();
                  r.src = i,
                  r.type = t,
                  r.srcPos = n,
                  r.dstPos = s,
                  r.duration = e,
                  r.ease = c || o.linear,
                  l.action.add(r),
                  this.list.push(r)
              }
              ,
              e.playFixed = function(t, i, n, o, e, a, r) {
                  var u = c.POOL.spawn();
                  return u.time = 0,
                  null != i ? s.copy(u.position, i) : (u.position.x = 0,
                  u.position.y = 0,
                  u.position.z = 0),
                  null != o ? s.copy(u.scale, o) : (u.scale.x = 1,
                  u.scale.y = 1,
                  u.scale.z = 1),
                  u.rotation = null != n ? n : 0,
                  u.src = t,
                  u.layer = e,
                  u.duration = 0 | a,
                  u.onInit = r,
                  l.action.add(u),
                  this.list.push(u),
                  u
              }
              ,
              e.playFrameAnim = function(t, i, n, o, s, e, a, c) {
                  var r = p.POOL.spawn();
                  i ? (r.position.x = i.x,
                  r.position.y = i.y) : (r.position.x = 0,
                  r.position.y = 0),
                  r.src = t,
                  r.rotation = 0 | n,
                  r.layer = o,
                  r.speed = e || 1,
                  r.loop = s,
                  r.duration = a,
                  r.onInit = c,
                  l.action.add(r),
                  this.list.push(r)
              }
              ,
              e.playSpine = function(t, i, n, o, s, e, a, c) {
                  var u = r.POOL.spawn();
                  return u.src = t,
                  i ? (u.position.x = i.x,
                  u.position.y = i.y) : (u.position.x = 0,
                  u.position.y = 0),
                  u.rotation = 0,
                  u.layer = n,
                  u.loop = o,
                  u.switchLayer = a,
                  u.switchDuration = c,
                  s && e ? (l.action.beginSequence(),
                  l.action.add(u),
                  l.action.call(s, e),
                  l.action.end()) : l.action.add(u),
                  this.list.push(u),
                  u
              }
              ,
              e.playText = function(t, i, n, o, e) {
                  var a = u.POOL.spawn();
                  a.src = t,
                  a.text = i,
                  a.layer = e,
                  a.height = o,
                  s.copy(a.target, n),
                  l.action.add(a)
              }
              ,
              e.remove = function(t) {
                  var i = this.list.indexOf(t);
                  -1 != i && this.list.splice(i, 1)
              }
              ,
              e.clear = function() {
                  for (var t = 0; t < this.list.length; ++t)
                      this.list[t].destroy();
                  this.list.splice(0, this.list.length)
              }
              ,
              e.kill = function(t) {
                  for (var i = 0; i < this.list.length; ++i)
                      if (this.list[i].uuid == t) {
                          this.list[i].destroy();
                          break
                      }
              }
              ,
              n
          }(e()));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EffectType.ts", ["cc"], (function(e) {
  var t;
  return {
      setters: [function(e) {
          t = e.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "2f34dQRihROmLl0pSr/xlwy", "EffectType", void 0);
          e("EffectType", function(e) {
              return e[e.Nothing = 0] = "Nothing",
              e[e.BeDmg = 1] = "BeDmg",
              e[e.BeDmgToDie = 2] = "BeDmgToDie",
              e[e.ItemDmg = 3] = "ItemDmg",
              e[e.Dodge = 4] = "Dodge",
              e[e.DotDmg = 5] = "DotDmg",
              e
          }({}));
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EffectUtils.ts", ["cc", "./Kit.ts"], (function(t) {
  var e, n, r, c;
  return {
      setters: [function(t) {
          e = t.cclegacy,
          n = t.Vec4,
          r = t.Vec3
      }
      , function(t) {
          c = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "a3738d15gRA44Fl1AqWvNn2", "EffectUtils", void 0),
          t("default", function() {
              function t() {}
              return t.getComponents = function(e, n, r) {
                  r || (r = t.tempList).splice(0, r.length);
                  var c = n.getComponent(e);
                  c && r.push(c);
                  for (var l = n.children, i = 0; i < l.length; ++i) {
                      var u = l[i];
                      u.active && t.getComponents(e, u, r)
                  }
                  return r
              }
              ,
              t.getChild = function(t, e) {
                  for (var n = e.split("/"), r = t, c = 0; c < n.length; ++c)
                      if (null == (r = r.getChildByName(n[c])))
                          return null;
                  return r
              }
              ,
              t.getComponent = function(t, e, n) {
                  for (var r = n.split("/"), c = e, l = 0; l < r.length; ++l)
                      if (null == (c = c.getChildByName(r[l])))
                          return null;
                  return c.getComponent(t)
              }
              ,
              t.color2Vector4 = function(t, e) {
                  return e = e || new n
              }
              ,
              t.besier2 = function(t, e, n, l, i) {
                  var u = Math.pow(1 - l, 2)
                    , a = 2 * l * (1 - l)
                    , o = l * l;
                  return i.set(0, 0, 0),
                  r.multiplyScalar(c.temp.aVec3, t, u),
                  i.add(c.temp.aVec3),
                  r.multiplyScalar(c.temp.aVec3, e, a),
                  i.add(c.temp.aVec3),
                  r.multiplyScalar(c.temp.aVec3, n, o),
                  i.add(c.temp.aVec3),
                  i
              }
              ,
              t.playParticle = function(t) {}
              ,
              t.playTrack = function(t) {}
              ,
              t
          }()).tempList = [],
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Enemy.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Creature.ts", "./EnemyContext.ts", "./EffectFactory.ts", "./EffectType.ts", "./SimplePool.ts", "./MonsterObj.ts", "./Def.ts"], (function(t) {
  var e, i, n, o, s, a, l, h, c, r, f, u, d, g;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          i = t.cclegacy,
          n = t.Node,
          o = t.UITransform,
          s = t.Size,
          a = t.Vec3,
          l = t.Label
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          f = t.EffectType
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          d = t.default
      }
      , function(t) {
          g = t.FlyTextType
      }
      ],
      execute: function() {
          i._RF.push({}, "971c5B48B9FYodet1ShlV2p", "Enemy", void 0);
          var p = t("default", function(t) {
              function i() {
                  for (var e, i = arguments.length, n = new Array(i), o = 0; o < i; o++)
                      n[o] = arguments[o];
                  return (e = t.call.apply(t, [this].concat(n)) || this).context = new c,
                  e.infoText = void 0,
                  e
              }
              e(i, t);
              var h = i.prototype;
              return h.onEnable = function() {
                  t.prototype.onEnable.call(this);
                  var e = this.context.data;
                  this._isBoss = e instanceof d && 2 == e.getCfg().Type;
                  var i = new n
                    , h = i.addComponent(o);
                  this.node.addChild(i),
                  h.contentSize = new s(100,30),
                  i.position = new a(0,100,0),
                  this.infoText = i.addComponent(l),
                  this.infoText.fontSize = 18,
                  this.infoText.string = ""
              }
              ,
              h.onDisable = function() {
                  t.prototype.onDisable.call(this),
                  null != this.infoText && (this.infoText.node.destroy(),
                  this.infoText = null)
              }
              ,
              h.onDamaged = function(t, e) {
                  if (e.et == f.BeDmg) {
                      var i;
                      if (e.knockBack) {
                          var n = null != t ? this.getPosX() - t.getPosX() : this.getPosX()
                            , o = null != t ? this.getPosY() - t.getPosY() : this.getPosY();
                          this.hitBackByDistance(n, o, e.knockBack, .001 * e.knockBackTime)
                      }
                      this.isLive && r.playDamage(e.dmg, this.position, e.critical, null == (i = this.view) ? void 0 : i.headHeight),
                      this.playFlash()
                  } else if (e.et == f.BeDmgToDie) {
                      var s;
                      this.isLive && r.playDamage(e.dmg, this.position, e.critical, null == (s = this.view) ? void 0 : s.headHeight);
                      var a = null != t ? this.getPosX() - t.getPosX() : this.getPosX()
                        , l = null != t ? this.getPosY() - t.getPosY() : this.getPosY();
                      e.knockBack ? this.hitBackToDie(a, l, 100, .5) : this.hitBackToDie(a, l, 0, .5)
                  } else if (e.et == f.ItemDmg) {
                      var h;
                      this.isLive && r.playDamage(e.dmg, this.position, e.critical, null == (h = this.view) ? void 0 : h.headHeight),
                      e.die ? this.toDie() : this.playFlash()
                  } else if (e.et == f.DotDmg)
                      this.playText(g.Burning, e.dmg),
                      e.die ? this.toDie() : this.playFlash();
                  else if (e.et == f.Dodge) {
                      var c;
                      this.isLive && r.playMiss(this.position, null == (c = this.view) ? void 0 : c.headHeight)
                  } else
                      e.et != f.Nothing && console.error("unknow dmg type:" + e.et)
              }
              ,
              h.damageCrt = function(t) {
                  this.context.data.beAtk(t, !1)
              }
              ,
              h.onDestroy = function() {
                  t.prototype.onDestroy.call(this),
                  i.POOL.recycle(this)
              }
              ,
              h.setDebug = function(t) {
                  this.active ? this.infoText && (this.infoText.string = t) : this.delayHandle(this.setDebug, t)
              }
              ,
              i
          }(h));
          p.POOL = new u((function() {
              return new p
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EnemyContext.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreatureContext.ts"], (function(t) {
  var e, n, u;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          u = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "e6f02XDMepFPJhdgET5A0w+", "EnemyContext", void 0);
          t("default", function(t) {
              function n() {
                  return t.apply(this, arguments) || this
              }
              return e(n, t),
              n
          }(u));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EnemyTest.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Weapon.ts", "./Kit.ts"], (function(t) {
  var e, n, i, o, r, a, l, c, s, u, p;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          n = t.inheritsLoose,
          i = t.initializerDefineProperty,
          o = t.assertThisInitialized
      }
      , function(t) {
          r = t.cclegacy,
          a = t._decorator,
          l = t.Node,
          c = t.Vec3,
          s = t.Component
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          p = t.default
      }
      ],
      execute: function() {
          var f, d, y, h, w, g, b;
          r._RF.push({}, "d66f03laOFLsq5bX0xA49c8", "EnemyTest", void 0);
          var m = a.ccclass
            , v = a.property;
          t("EnemyTest", (f = m("EnemyTest"),
          d = v({
              type: u
          }),
          y = v({
              type: l
          }),
          f((g = e((w = function(t) {
              function e() {
                  for (var e, n = arguments.length, r = new Array(n), a = 0; a < n; a++)
                      r[a] = arguments[a];
                  return e = t.call.apply(t, [this].concat(r)) || this,
                  i(e, "weapon", g, o(e)),
                  i(e, "target", b, o(e)),
                  e
              }
              n(e, t);
              var r = e.prototype;
              return r.start = function() {}
              ,
              r.update = function(t) {
                  p.update(t)
              }
              ,
              r.lateUpdate = function(t) {
                  p.lateUpdate(t)
              }
              ,
              r.onFireClick = function() {
                  var t = this.weapon.node.worldPosition
                    , e = this.target.worldPosition
                    , n = new c;
                  c.subtract(n, e, t),
                  n.normalize(),
                  this.weapon.fire(n)
              }
              ,
              r.onLinkClick = function() {
                  this.weapon.fire(this.target.worldPosition)
              }
              ,
              e
          }(s)).prototype, "weapon", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          b = e(w.prototype, "target", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          h = w)) || h));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EntityBase.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(s) {
  var t, e;
  return {
      setters: [function(s) {
          t = s.createClass
      }
      , function(s) {
          e = s.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "93bc6HcYwVOM69CvhtecaZ+", "EntityBase", void 0),
          s("default", function() {
              function s() {
                  this.$className = void 0
              }
              return s.prototype.start = function() {}
              ,
              t(s, [{
                  key: "className",
                  get: function() {
                      return null == this.$className && (this.$className = get_class_name(this)),
                      this.$className
                  }
              }], [{
                  key: "ClassName",
                  get: function() {
                      return null == this.$ClassName && (this.$ClassName = get_class_name(this)),
                      this.$ClassName
                  }
              }]),
              s
          }()).$ClassName = void 0,
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EntityPart.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./EventSystem.ts", "./EntityBase.ts"], (function(t) {
  var n, e, i, s;
  return {
      setters: [function(t) {
          n = t.inheritsLoose
      }
      , function(t) {
          e = t.cclegacy
      }
      , function(t) {
          i = t.default
      }
      , function(t) {
          s = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "556d4W4J0hB8rxltfdpY5DX", "EntityPart", void 0);
          t("default", function(t) {
              function e() {
                  var n;
                  return (n = t.call(this) || this).owner = void 0,
                  n
              }
              return n(e, t),
              e.prototype.dispatch = function(t, n, e, s) {
                  i.ins.dispatch(this.className, t, n, e, s)
              }
              ,
              e
          }(s));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EntityPartDef.ts", ["cc"], (function(t) {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "48469ByCHdCnLl+zeWdo7ct", "EntityPartDef", void 0);
          t("EntityPartId", function(t) {
              return t.UserPart = "UserPart",
              t.HeroPart = "HeroPart",
              t.EquipPart = "EquipPart",
              t.MaterialPart = "MaterialPart",
              t.FightPart = "FightPart",
              t
          }({})),
          t("UserEventId", function(t) {
              return t[t.CoinChange = 0] = "CoinChange",
              t[t.Money1Change = 1] = "Money1Change",
              t[t.Money2Change = 2] = "Money2Change",
              t[t.ViteChange = 3] = "ViteChange",
              t[t.MaterialChange = 4] = "MaterialChange",
              t
          }({}));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EntitySystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts"], (function(t) {
  var n, e, a;
  return {
      setters: [function(t) {
          n = t.inheritsLoose
      }
      , function(t) {
          e = t.cclegacy
      }
      , function(t) {
          a = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "60f41iGHeJDeJsCyYKB9KMQ", "EntitySystem", void 0);
          t("default", function(t) {
              function e() {
                  for (var n, e = arguments.length, a = new Array(e), s = 0; s < e; s++)
                      a[s] = arguments[s];
                  return (n = t.call.apply(t, [this].concat(a)) || this).datas = {},
                  n.parts = {},
                  n
              }
              n(e, t);
              var a = e.prototype;
              return a.getEntity = function(t) {
                  var n = t.ClassName;
                  return this.datas[n]
              }
              ,
              a.addEntity = function(t) {
                  var n = new t;
                  this.datas[n.className] = n
              }
              ,
              a.removeEntity = function(t) {
                  delete this.parts[t.className]
              }
              ,
              a.getPart = function(t) {
                  var n = get_class_name(t);
                  return this.parts[n]
              }
              ,
              a.getPartByName = function(t) {
                  return this.parts[t]
              }
              ,
              a.addPart = function(t) {
                  var n = new t(this);
                  n.start(),
                  this.parts[n.className] = n
              }
              ,
              e
          }(a()));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EquipData.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./EntityBase.ts"], (function(t) {
  var i, e, n, r;
  return {
      setters: [function(t) {
          i = t.inheritsLoose,
          e = t.createClass
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          r = t.default
      }
      ],
      execute: function() {
          var u;
          n._RF.push({}, "85769oy5aBKPaHi66uG39ua", "EquipData", void 0);
          t("default", set_class_name("EquipData")(u = function(t) {
              function n() {
                  for (var i, e = arguments.length, n = new Array(e), r = 0; r < e; r++)
                      n[r] = arguments[r];
                  return (i = t.call.apply(t, [this].concat(n)) || this)._cfg = void 0,
                  i._sn = void 0,
                  i._id = void 0,
                  i._owner = void 0,
                  i._position = void 0,
                  i._durability = void 0,
                  i._level = 1,
                  i
              }
              i(n, t);
              var r = n.prototype;
              return r.refreshData = function(t) {
                  this._sn = t.SN,
                  this._id = t.TIDAry[0],
                  this._cfg = DataCenter.Equipment.Get(this._id),
                  this._durability = t.Durability
              }
              ,
              r.setOwner = function(t) {
                  this._owner = t
              }
              ,
              r.setPosition = function(t) {
                  this._position = t
              }
              ,
              r.addDurability = function(t) {
                  this._durability += t
              }
              ,
              r.setDurability = function(t) {
                  this._durability = t
              }
              ,
              e(n, [{
                  key: "sn",
                  get: function() {
                      return this._sn
                  }
              }, {
                  key: "id",
                  get: function() {
                      return this._id
                  }
              }, {
                  key: "cfg",
                  get: function() {
                      return this._cfg
                  }
              }, {
                  key: "type",
                  get: function() {
                      return this._cfg.Type
                  }
              }, {
                  key: "owner",
                  get: function() {
                      return this._owner
                  }
              }, {
                  key: "durability",
                  get: function() {
                      return this._durability
                  }
              }, {
                  key: "level",
                  get: function() {
                      return this._level
                  }
              }, {
                  key: "repairNeedMoney",
                  get: function() {
                      return (this._cfg.Durability - this._durability) * this.cfg.RepairC2
                  }
              }, {
                  key: "repairDurability",
                  get: function() {
                      return this._cfg.Durability - this._durability
                  }
              }]),
              n
          }(r)) || u);
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EquipDressTips.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./UIHelper.ts"], (function(t) {
  var i, e, n, a, l, u, o, r, c, p, s, b, h, y, q;
  return {
      setters: [function(t) {
          i = t.applyDecoratedDescriptor,
          e = t.inheritsLoose,
          n = t.initializerDefineProperty,
          a = t.assertThisInitialized,
          l = t.createForOfIteratorHelperLoose
      }
      , function(t) {
          u = t.cclegacy,
          o = t.Button,
          r = t.Node,
          c = t.Label,
          p = t.RichText,
          s = t.Sprite,
          b = t.Vec3,
          h = t.Color
      }
      , function(t) {
          y = t.default
      }
      , function(t) {
          q = t.default
      }
      ],
      execute: function() {
          var f, g, B, E, d, m, v, D, L, I, P, R, k, w, z, j, C, _, F, T, N, U, x, H, A, J, M, O, S, V, Y, G, W, X, Z;
          u._RF.push({}, "52c597JVqxCDYHZJORkzvXN", "EquipDressTips", void 0);
          t("default", (f = uiBind("fgui/login", "EquipDressTips"),
          g = uiInject("Panel/CloseBtn", o),
          B = uiInject("Panel/ButtonLayout/EquipLayout", r),
          E = uiInject("Panel/ButtonLayout/EquipLayout/EquipBtn", o),
          d = uiInject("Panel/ButtonLayout/EquipLayout/EquipBtnL", o),
          m = uiInject("Panel/ButtonLayout/EquipLayout/EquipBtnR", o),
          v = uiInject("Panel/ButtonLayout/EquipLayout/EquipBtnU", o),
          D = uiInject("Panel/ButtonLayout/RemoveBtn", o),
          L = uiInject("Panel", r),
          I = uiInject("Panel/Name", c),
          P = uiInject("Panel/Type", c),
          R = uiInject("Panel/Desc", p),
          k = uiInject("Panel/Class", c),
          w = uiInject("Panel/Durability", c),
          z = uiInject("Panel/Equip/Icon", s),
          j = uiInject("Panel/Equip/Background", s),
          C = uiInject("Panel/Equip/Frame", s),
          f((T = i((F = function(t) {
              function i() {
                  for (var i, e = arguments.length, l = new Array(e), u = 0; u < e; u++)
                      l[u] = arguments[u];
                  return i = t.call.apply(t, [this].concat(l)) || this,
                  n(i, "CloseBtn", T, a(i)),
                  n(i, "EquipLayout", N, a(i)),
                  n(i, "EquipBtn", U, a(i)),
                  n(i, "EquipBtnL", x, a(i)),
                  n(i, "EquipBtnR", H, a(i)),
                  n(i, "EquipBtnU", A, a(i)),
                  n(i, "RemoveBtn", J, a(i)),
                  n(i, "Panel", M, a(i)),
                  n(i, "Name", O, a(i)),
                  n(i, "Type", S, a(i)),
                  n(i, "Desc", V, a(i)),
                  n(i, "Class", Y, a(i)),
                  n(i, "Durability", G, a(i)),
                  n(i, "Icon", W, a(i)),
                  n(i, "Background", X, a(i)),
                  n(i, "Frame", Z, a(i)),
                  i.data = void 0,
                  i.position = new b,
                  i.btnDict = new Map,
                  i
              }
              e(i, t);
              var u = i.prototype;
              return u.getPrototype = function() {
                  return i.prototype
              }
              ,
              u.onEnable = function() {
                  var t = this;
                  this.Panel.position = this.position,
                  this.Name.string = this.data.cfg.Name,
                  this.Background.spriteFrame = q.getItemLargeBackground(this.data.cfg.Rarity),
                  this.Frame.spriteFrame = q.getItemLargeFrame(this.data.cfg.Rarity),
                  this.Icon.spriteFrame = q.getEquipIcon(this.data.cfg.Icon),
                  this.Type.string = q.getEquipTypeName(this.data.cfg.Type),
                  this.Desc.string = this.data.cfg.Desc,
                  this.Durability.string = this.data.durability + "/" + this.data.cfg.Durability,
                  this.data.durability < 5 ? this.Durability.color = h.RED : this.data.durability < this.data.cfg.Durability ? this.Durability.color = h.CYAN : this.Durability.color = h.GREEN,
                  this.EquipLayout.active = !1,
                  this.EquipBtn.node.active = !1,
                  this.EquipBtnL.node.active = !1,
                  this.EquipBtnR.node.active = !1,
                  this.EquipBtnU.node.active = !1,
                  this.RemoveBtn.node.active = !1;
                  for (var i, e = l(this.btnDict); !(i = e()).done; ) {
                      var n = i.value;
                      "equip_0" == n[0] ? (this.EquipLayout.active = !0,
                      this.EquipBtn.node.active = !0) : "equip_1" == n[0] ? (this.EquipLayout.active = !0,
                      this.EquipBtnL.node.active = !0) : "equip_2" == n[0] ? (this.EquipLayout.active = !0,
                      this.EquipBtnR.node.active = !0) : "equip_3" == n[0] ? (this.EquipLayout.active = !0,
                      this.EquipBtnU.node.active = !0) : "remove" == n[0] && (this.RemoveBtn.node.active = !0)
                  }
                  this.onClick(this.CloseBtn, (function() {
                      t.close()
                  }
                  ), !0),
                  this.onClick(this.EquipBtn, (function() {
                      var i = t.btnDict.get("equip_0");
                      i && i.callback.call(i.caller)
                  }
                  ), !0),
                  this.onClick(this.EquipBtnL, (function() {
                      var i = t.btnDict.get("equip_1");
                      i && i.callback.call(i.caller)
                  }
                  ), !0),
                  this.onClick(this.EquipBtnR, (function() {
                      var i = t.btnDict.get("equip_2");
                      i && i.callback.call(i.caller)
                  }
                  ), !0),
                  this.onClick(this.EquipBtnU, (function() {
                      var i = t.btnDict.get("equip_3");
                      i && i.callback.call(i.caller)
                  }
                  ), !0),
                  this.onClick(this.RemoveBtn, (function() {
                      var i = t.btnDict.get("remove");
                      i && i.callback.call(i.caller)
                  }
                  ), !0)
              }
              ,
              u.setData = function(t) {
                  this.data = t
              }
              ,
              u.clearBtn = function() {
                  this.btnDict.clear()
              }
              ,
              u.addEquipBtn = function(t, i, e) {
                  this.btnDict.set("equip_" + t, {
                      caller: i,
                      callback: e
                  })
              }
              ,
              u.addRemoveBtn = function(t, i) {
                  this.btnDict.set("remove", {
                      caller: t,
                      callback: i
                  })
              }
              ,
              u.setPosition = function(t) {
                  this.position.x = t.x,
                  this.position.y = t.y,
                  this.Panel && (this.Panel.position = this.position)
              }
              ,
              i
          }(y)).prototype, "CloseBtn", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          N = i(F.prototype, "EquipLayout", [B], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          U = i(F.prototype, "EquipBtn", [E], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          x = i(F.prototype, "EquipBtnL", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          H = i(F.prototype, "EquipBtnR", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          A = i(F.prototype, "EquipBtnU", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          J = i(F.prototype, "RemoveBtn", [D], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          M = i(F.prototype, "Panel", [L], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          O = i(F.prototype, "Name", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          S = i(F.prototype, "Type", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          V = i(F.prototype, "Desc", [R], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Y = i(F.prototype, "Class", [k], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          G = i(F.prototype, "Durability", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          W = i(F.prototype, "Icon", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          X = i(F.prototype, "Background", [j], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Z = i(F.prototype, "Frame", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          _ = F)) || _));
          u._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EquipPart.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./EntityPart.ts", "./EntityPartDef.ts", "./EquipData.ts"], (function(t) {
  var e, i, n, s, u, r;
  return {
      setters: [function(t) {
          e = t.inheritsLoose,
          i = t.createClass
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          u = t.EntityPartId
      }
      , function(t) {
          r = t.default
      }
      ],
      execute: function() {
          var a;
          n._RF.push({}, "02e46ChcatAtIOlqqnChiEh", "EquipPart", void 0);
          t("default", set_class_name(u.EquipPart)(a = function(t) {
              function n() {
                  for (var e, i = arguments.length, n = new Array(i), s = 0; s < i; s++)
                      n[s] = arguments[s];
                  return (e = t.call.apply(t, [this].concat(n)) || this)._equips = [],
                  e
              }
              e(n, t);
              var s = n.prototype;
              return s.refreshData = function(t) {
                  null != t && t.ETokens && this.setEquips(t.ETokens)
              }
              ,
              s.refreshEquip = function(t) {
                  var e = this._equips.find((function(e) {
                      return e.sn == t.SN
                  }
                  ));
                  e && e.refreshData(t)
              }
              ,
              s.setEquips = function(t) {
                  this._equips = [];
                  for (var e = 0; e < t.length; ++e) {
                      var i = new r;
                      i.refreshData(t[e]),
                      this._equips.push(i)
                  }
              }
              ,
              s.addEquip = function(t) {
                  var e = new r;
                  e.refreshData(t),
                  this._equips.push(e)
              }
              ,
              s.addEquips = function(t) {
                  for (var e = 0; e < t.length; ++e)
                      this.addEquip(t[e])
              }
              ,
              s.remove = function(t) {
                  this.removeBySn(t.SN)
              }
              ,
              s.removeBySn = function(t) {
                  for (var e = 0; e < this._equips.length; ++e) {
                      if (this._equips[e].sn == t) {
                          this._equips.splice(e, 1);
                          break
                      }
                  }
              }
              ,
              s.getEquip = function(t) {
                  for (var e = 0; e < this._equips.length; ++e) {
                      var i = this._equips[e];
                      if (i.sn == t)
                          return i
                  }
                  return null
              }
              ,
              s.getEquips = function(t) {
                  for (var e = [], i = 0; i < this._equips.length; ++i) {
                      var n = this._equips[i];
                      t.indexOf(n.sn) >= 0 && e.push(n)
                  }
                  return e
              }
              ,
              i(n, [{
                  key: "equips",
                  get: function() {
                      return this._equips
                  }
              }]),
              n
          }(s)) || a);
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EquipView.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./UIHelper.ts"], (function(t) {
  var e, i, a, n, r, l, s, o, u, c, h, p, m, d, f;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          a = t.initializerDefineProperty,
          n = t.assertThisInitialized
      }
      , function(t) {
          r = t.cclegacy,
          l = t._decorator,
          s = t.Sprite,
          o = t.Label,
          u = t.Node,
          c = t.Button,
          h = t.SpriteFrame,
          p = t.Color,
          m = t.Component
      }
      , function(t) {
          d = t.default
      }
      , function(t) {
          f = t.default
      }
      ],
      execute: function() {
          var b, y, g, v, w, k, F, z, S, x, T, C, I, L, B, D, E, q, R, V, N, _, A, H, M, P, j, O, Q;
          r._RF.push({}, "ec1c86jHeZDpoLrZqRqOP5M", "EquipView", void 0);
          var Z = l.ccclass
            , G = l.property;
          t("EquipView", (b = Z("EquipView"),
          y = G({
              type: s
          }),
          g = G({
              type: s
          }),
          v = G({
              type: o
          }),
          w = G({
              type: s
          }),
          k = G({
              type: s
          }),
          F = G({
              type: u
          }),
          z = G({
              type: u
          }),
          S = G({
              type: u
          }),
          x = G({
              type: u
          }),
          T = G({
              type: o
          }),
          C = G({
              type: [u]
          }),
          I = G({
              type: o
          }),
          L = G({
              type: o
          }),
          b((E = e((D = function(t) {
              function e() {
                  for (var e, i = arguments.length, r = new Array(i), l = 0; l < i; l++)
                      r[l] = arguments[l];
                  return e = t.call.apply(t, [this].concat(r)) || this,
                  a(e, "background", E, n(e)),
                  a(e, "frame", q, n(e)),
                  a(e, "nameTxt", R, n(e)),
                  a(e, "icon", V, n(e)),
                  a(e, "shade", N, n(e)),
                  a(e, "mark", _, n(e)),
                  a(e, "warn", A, n(e)),
                  a(e, "add", H, n(e)),
                  a(e, "frame2", M, n(e)),
                  a(e, "durability", P, n(e)),
                  a(e, "stars", j, n(e)),
                  a(e, "level", O, n(e)),
                  a(e, "numTxt", Q, n(e)),
                  e.data = void 0,
                  e.caller = void 0,
                  e.callback = void 0,
                  e
              }
              i(e, t);
              var r = e.prototype;
              return r.start = function() {
                  var t = this.node.getComponent(c);
                  t && t.node.on("click", this.onClick, this)
              }
              ,
              r.setData = function(t) {
                  this.data = t
              }
              ,
              r.setBackground = function(t) {
                  this.background && (null == t ? this.background.spriteFrame = null : t instanceof h ? this.background.spriteFrame = t : d.res.setSpriteFrame(this.background, t))
              }
              ,
              r.setFrame = function(t) {
                  this.frame && (null == t ? this.frame.spriteFrame = null : t instanceof h ? this.frame.spriteFrame = t : d.res.setSpriteFrame(this.frame, t))
              }
              ,
              r.setQuality = function(t, e) {
                  void 0 === e && (e = !1),
                  e ? (this.setBackground(f.getItemLargeBackground(t)),
                  this.setFrame(f.getItemLargeFrame(t))) : (this.setBackground(f.getItemSmallBackground(t)),
                  this.setFrame(f.getItemSmallFrame(t)))
              }
              ,
              r.setQualityOld = function(t) {
                  this.setFrame(f.getItemFrame(t))
              }
              ,
              r.setName = function(t) {
                  this.nameTxt && (this.nameTxt.string = t)
              }
              ,
              r.setIcon = function(t) {
                  this.icon && (this.icon.spriteFrame = t)
              }
              ,
              r.setShade = function(t) {
                  this.shade && (t instanceof h ? this.shade.spriteFrame = t : d.res.setSpriteFrame(this.shade, t))
              }
              ,
              r.showFrame2 = function(t) {
                  this.frame2 && (this.frame2.active = t)
              }
              ,
              r.showMark = function(t) {
                  this.mark && (this.mark.active = t)
              }
              ,
              r.showWarn = function(t) {
                  this.warn && (this.warn.active = t)
              }
              ,
              r.showShade = function(t) {
                  this.shade && (this.shade.node.active = t)
              }
              ,
              r.showAdd = function(t) {
                  this.add && (this.add.active = t)
              }
              ,
              r.setStar = function(t) {
                  if (this.stars)
                      for (var e = 0; e < this.stars.length; ++e)
                          this.stars[e].active = e < t
              }
              ,
              r.setDurability = function(t, e) {
                  this.durability && (null != t && null != e ? (this.durability.node.active = !0,
                  this.durability.string = t + "/" + e) : this.durability.node.active = !1,
                  this.durability.color = t < 5 ? p.RED : t < e ? p.CYAN : p.GREEN)
              }
              ,
              r.setState = function(t) {
                  0 == t && (this.icon && (this.icon.node.active = !1),
                  this.shade && (this.shade.node.active = !1),
                  this.mark && (this.mark.active = !1),
                  this.warn && (this.warn.active = !1))
              }
              ,
              r.setLevel = function(t) {
                  this.level && (null != t ? (this.level.node.active = !0,
                  this.level.string = "LV." + t) : this.level.node.active = !1)
              }
              ,
              r.setCount = function(t) {
                  this.numTxt && (this.numTxt.string = t.toString())
              }
              ,
              r.setCountText = function(t) {
                  this.numTxt && (this.numTxt.string = t)
              }
              ,
              r.onClick = function() {
                  var t;
                  null == (t = this.callback) || t.call(this.caller, this.node, this.data)
              }
              ,
              r.listen = function(t, e) {
                  this.caller = t,
                  this.callback = e
              }
              ,
              e
          }(m)).prototype, "background", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          q = e(D.prototype, "frame", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          R = e(D.prototype, "nameTxt", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          V = e(D.prototype, "icon", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          N = e(D.prototype, "shade", [k], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          _ = e(D.prototype, "mark", [F], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          A = e(D.prototype, "warn", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          H = e(D.prototype, "add", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          M = e(D.prototype, "frame2", [x], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          P = e(D.prototype, "durability", [T], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          j = e(D.prototype, "stars", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return []
              }
          }),
          O = e(D.prototype, "level", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Q = e(D.prototype, "numTxt", [L], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          B = D)) || B));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EquipWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./UIListView.ts", "./Kit.ts", "./UIHelper.ts", "./UIPageView.ts", "./Client.ts", "./UIRoot.ts", "./Def.ts", "./Session.ts", "./MessageId.ts", "./CreatureImgDress.ts", "./HomeHero.ts", "./HomeHeroContext.ts", "./GameObjectManager.ts", "./EquipView.ts"], (function(e) {
  var t, i, n, r, s, o, l, u, a, h, c, p, f, g, m, b, q, d, E, I, w, y, v, B, T, P, D;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          r = e.assertThisInitialized
      }
      , function(e) {
          s = e.cclegacy,
          o = e.Button,
          l = e.ToggleContainer,
          u = e.Label,
          a = e.ProgressBar,
          h = e.Node,
          c = e.Vec3,
          p = e.Layers
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          g = e.UIListView
      }
      , function(e) {
          m = e.default
      }
      , function(e) {
          b = e.default
      }
      , function(e) {
          q = e.UIPageView
      }
      , function(e) {
          d = e.default
      }
      , function(e) {
          E = e.default
      }
      , function(e) {
          I = e.SceneType
      }
      , function(e) {
          w = e.default
      }
      , function(e) {
          y = e.default
      }
      , function(e) {
          v = e.default
      }
      , function(e) {
          B = e.default
      }
      , function(e) {
          T = e.default
      }
      , function(e) {
          P = e.default
      }
      , function(e) {
          D = e.EquipView
      }
      ],
      execute: function() {
          var R, L, H, x, C, _, k, S, M, z, j, A, N, U, G, V, W, F, O, Q, K, Z, $, J, X, Y, ee, te, ie, ne, re, se, oe, le, ue, ae, he, ce, pe, fe, ge, me, be, qe, de, Ee, Ie;
          s._RF.push({}, "cba898g7a5Gz72fSbOTVIWG", "EquipWindow", void 0);
          e("default", (R = uiBind("fgui/login", "EquipWindow"),
          L = uiInject("BagPanel/CloseBtn", o),
          H = uiInject("BagPanel/ToggleGroup", l),
          x = uiInject("BagPanel/BagList", g),
          C = uiInject("LeftPanel/RoleTitle/HeroeNum", u),
          _ = uiInject("LeftPanel/RoleList", q),
          k = uiInject("RolePanel/PowerText", u),
          S = uiInject("RolePanel/HPBar", a),
          M = uiInject("RolePanel/AtkBar", a),
          z = uiInject("RolePanel/DefBar", a),
          j = uiInject("RolePanel/HPBar/Label", u),
          A = uiInject("RolePanel/AtkBar/Label", u),
          N = uiInject("RolePanel/DefBar/Label", u),
          U = uiInject("RolePanel/Equip_1", h),
          G = uiInject("RolePanel/Equip_2", h),
          V = uiInject("RolePanel/Equip_3", h),
          W = uiInject("RolePanel/Equip_4", h),
          F = uiInject("RolePanel/Equip_5", h),
          O = uiInject("RolePanel/Equip_6", h),
          Q = uiInject("RolePanel/CameraBtn", o),
          K = uiInject("RolePanel/InfoBtn", o),
          Z = uiInject("RolePanel/Human", h),
          $ = uiInject("NameTitle/Label", u),
          R((Y = t((X = function(e) {
              function t() {
                  for (var t, i = arguments.length, s = new Array(i), o = 0; o < i; o++)
                      s[o] = arguments[o];
                  return t = e.call.apply(e, [this].concat(s)) || this,
                  n(t, "CloseBtn", Y, r(t)),
                  n(t, "ToggleGroup", ee, r(t)),
                  n(t, "BagList", te, r(t)),
                  n(t, "HeroeNum", ie, r(t)),
                  n(t, "RoleList", ne, r(t)),
                  n(t, "PowerText", re, r(t)),
                  n(t, "HPBar", se, r(t)),
                  n(t, "AtkBar", oe, r(t)),
                  n(t, "DefBar", le, r(t)),
                  n(t, "HPText", ue, r(t)),
                  n(t, "AtkText", ae, r(t)),
                  n(t, "DefText", he, r(t)),
                  n(t, "Equip_1", ce, r(t)),
                  n(t, "Equip_2", pe, r(t)),
                  n(t, "Equip_3", fe, r(t)),
                  n(t, "Equip_4", ge, r(t)),
                  n(t, "Equip_5", me, r(t)),
                  n(t, "Equip_6", be, r(t)),
                  n(t, "CameraBtn", qe, r(t)),
                  n(t, "InfoBtn", de, r(t)),
                  n(t, "HumanNode", Ee, r(t)),
                  n(t, "NameTitle", Ie, r(t)),
                  t.heros = void 0,
                  t.selectHero = void 0,
                  t.heroIndex = void 0,
                  t.curEquips = [],
                  t.EquipArr = void 0,
                  t.isMouseDown = void 0,
                  t.human = void 0,
                  t
              }
              i(t, e);
              var s = t.prototype;
              return s.getPrototype = function() {
                  return t.prototype
              }
              ,
              s.onEnable = function() {
                  var e = this;
                  this.selectHero = d.hero.getMain(),
                  this.heros = [].concat(d.hero.heros),
                  this.heros.sort((function(e, t) {
                      return e.sn - t.sn
                  }
                  )),
                  this.heroIndex = this.heros.indexOf(this.selectHero),
                  -1 == this.heroIndex && (this.heroIndex = 0),
                  this.EquipArr = [this.Equip_1, this.Equip_4, this.Equip_3, this.Equip_5, this.Equip_6, this.Equip_2],
                  this.onClick(this.CloseBtn, (function() {
                      e.close()
                  }
                  )),
                  this.ToggleGroup.toggleItems[0].setIsCheckedWithoutNotify(!0),
                  this.onCheck(this.ToggleGroup, (function(t) {
                      var i = t.name.replace("<Toggle>", "").replace("Toggle", "");
                      e.onBagSelect(parseInt(i))
                  }
                  ));
                  var t = new T;
                  t.src = "creature/prefabs/HeroUI",
                  t.data = this.selectHero,
                  this.human = P.ins.create(B, t, c.ZERO, null, this.HumanNode),
                  this.human.setLayer(p.Enum.UI_2D),
                  this.human.setScale(new c(3,3,1)),
                  this.human.setWeaponScale(new c(.7,.7,1)),
                  this.RoleList.itemRenderer = this.roleRenderer.bind(this),
                  this.RoleList.itemSelected = this.roleSelected.bind(this),
                  this.setRoleNum(this.heros.length),
                  this.setRoleSelectIndex(this.heroIndex),
                  this.BagList.itemRenderer = this.itemRenderer.bind(this),
                  this.BagList.itemSelected = this.itemSelected.bind(this),
                  this.onBagSelect(1),
                  this.refreshHeroEquip(this.selectHero),
                  w.ins.register(y.EquipmentLink, this, this.onEquipmentLink)
              }
              ,
              s.onDisable = function() {
                  var e = m.scene.getScene(I.Home);
                  e && e.refreshDress(),
                  w.ins.unRegister(y.EquipmentLink, this, this.onEquipmentLink),
                  null != this.human && (P.ins.remove(this.human),
                  this.human = null)
              }
              ,
              s.hero_sort = function(e) {
                  var t = e.length
                    , i = new Array(t).fill(null)
                    , n = Math.floor(t / 2);
                  if (t % 2 == 0)
                      for (var r = n - 1, s = n, o = 0; o < t; o++)
                          o % 2 == 1 ? (i[s] = e[o],
                          s += 1) : (i[r] = e[o],
                          r -= 1);
                  else {
                      var l = n - 1
                        , u = n + 1;
                      i[n] = e[0];
                      for (var a = 1; a < t; a++)
                          a % 2 == 1 ? (i[u] = e[a],
                          u += 1) : (i[l] = e[a],
                          l -= 1)
                  }
                  return i
              }
              ,
              s.setRoleNum = function(e) {
                  this.RoleList.numItems = e > 0 ? e + 4 : 0
              }
              ,
              s.setRoleSelectIndex = function(e) {
                  this.RoleList.selectIndex = e + 2,
                  this.RoleList.setTopIndex(e),
                  this.HeroeNum.string = e + 1 + "/" + this.heros.length
              }
              ,
              s.refreshHeroEquip = function(e) {
                  var t = 0
                    , i = 0
                    , n = 0
                    , r = DataCenter.Config.Get("SegmentHP").ValueEx
                    , s = DataCenter.Config.Get("SegmentAttack").ValueEx
                    , o = DataCenter.Config.Get("SegmentDefense").ValueEx;
                  if (e) {
                      var l = DataCenter.Class.Get(e.classId);
                      t = null == l ? void 0 : l.MaxLife,
                      i = null == l ? void 0 : l.Dmg,
                      n = null == l ? void 0 : l.Defense;
                      for (var u = 0; u < this.EquipArr.length; ++u) {
                          var a = e.getEquipByType(u);
                          if (this.refreshEquip(this.EquipArr[u], a, u),
                          a && a.durability > 0)
                              for (var h = a.cfg.AttrEffect, c = 0; c < h.length; c += 3) {
                                  var p = h[c]
                                    , f = h[c + 2];
                                  1 == p ? t += f : 2 == p ? i += f : 3 == p && (n += f)
                              }
                      }
                      this.human.context.data = e,
                      this.human.refreshDress(),
                      this.NameTitle.string = l.Name,
                      this.PowerText.string = String(e.Power)
                  } else {
                      for (var g = 0; g < this.EquipArr.length; ++g)
                          this.refreshEquip(this.EquipArr[g], null, g);
                      this.NameTitle.string = "",
                      this.PowerText.string = "0"
                  }
                  this.HPBar.progress = this.computeProgress(r, t),
                  this.AtkBar.progress = this.computeProgress(s, i),
                  this.DefBar.progress = this.computeProgress(o, n),
                  this.HPText.string = String(t),
                  this.AtkText.string = String(i),
                  this.DefText.string = String(n)
              }
              ,
              s.computeProgress = function(e, t) {
                  for (var i = e.length, n = 0; n < e.length; ++n)
                      if (e[n] > t) {
                          i = n;
                          break
                      }
                  var r = 0;
                  return i < e.length && (r = (t - (e[i - 1] || 0)) / e[i]),
                  (i + r) / e.length
              }
              ,
              s.refreshEquip = function(e, t, i) {
                  var n = this
                    , r = e.getComponent(D);
                  if (t && t.cfg) {
                      var s = t.cfg;
                      r.setIcon(b.getEquipIcon(s.Icon)),
                      r.setQuality(s.Rarity, !0),
                      r.showMark(!1),
                      e.off(o.EventType.CLICK),
                      e.on(o.EventType.CLICK, (function() {
                          var r = m.utils.localToGlobal(e);
                          r.x += 166,
                          3 == i || 4 == i ? r.y += 203 : 0 != i && 5 != i || (r.y -= 203),
                          n.showEquipDressTips(t, r)
                      }
                      ), this)
                  } else
                      r.setIcon(null),
                      r.setQuality(0, !0),
                      r.showMark(!0)
              }
              ,
              s.roleRenderer = function(e, t) {
                  var i = t.getChildByPath("Body/Mask")
                    , n = e - 2;
                  if (n >= 0 && n < this.heros.length) {
                      i.active = !0;
                      var r = i.getChildByPath("Human").getComponent(v)
                        , s = this.heros[n];
                      s.skin ? r.setSkin(s.skin) : r.setHeroData(s, !0)
                  } else
                      i.active = !1
              }
              ,
              s.roleSelected = function(e, t) {
                  this.heroIndex = e - 2,
                  this.selectHero = this.heros[this.heroIndex],
                  this.HeroeNum.string = this.heroIndex + 1 + "/" + this.heros.length,
                  this.refreshHeroEquip(this.selectHero)
              }
              ,
              s.itemRenderer = function(e, t) {
                  var i = this.curEquips[e]
                    , n = t.getComponent(D);
                  if (i && i.cfg) {
                      var r = i.cfg;
                      n.setIcon(b.getEquipIcon(r.Icon)),
                      n.setQuality(r.Rarity),
                      n.showMark(null != i.owner),
                      n.showFrame2(i.durability <= 0),
                      n.showWarn(i.durability <= 0)
                  } else
                      n.setIcon(null),
                      n.setQuality(0),
                      n.showMark(!1),
                      n.showFrame2(!1),
                      n.showWarn(!1)
              }
              ,
              s.itemSelected = function(e, t) {
                  var i = this.curEquips[e];
                  null != i && this.showEquipDressTips(i, new c(16,-14,0))
              }
              ,
              s.showEquipDressTips = function(e, t) {
                  var i = this
                    , n = this.selectHero
                    , r = !1
                    , s = !1;
                  n.hasEquip(e) || (r = !0),
                  e.owner == n.sn && n.hasEquip(e) && (s = !0),
                  E.equipDressTips.setData(e),
                  E.equipDressTips.clearBtn(),
                  r && E.equipDressTips.addEquipBtn(0, this, (function() {
                      i.requestDressEquip(n, e)
                  }
                  )),
                  s && E.equipDressTips.addRemoveBtn(this, (function() {
                      i.requestUnDressEquip(n, e)
                  }
                  )),
                  E.equipDressTips.setPosition(t),
                  E.equipDressTips.open()
              }
              ,
              s.requestDressEquip = function(e, t) {
                  d.hero.requestDress(e.sn, t)
              }
              ,
              s.requestUnDressEquip = function(e, t) {
                  d.hero.requestUndress(t)
              }
              ,
              s.onEquipmentLink = function(e) {
                  if (null != this.$node) {
                      var t = this.selectHero;
                      this.refreshHeroEquip(t),
                      this.sortBagList(),
                      this.BagList.numItems = Math.max(this.curEquips.length, 20),
                      this.BagList.selectIndex = -1,
                      E.equipDressTips.close()
                  }
              }
              ,
              s.onBagSelect = function(e) {
                  e -= 2,
                  this.curEquips.splice(0, this.curEquips.length);
                  var t = d.equip.equips;
                  if (-1 == e)
                      for (var i = 0; i < t.length; ++i) {
                          var n = t[i];
                          this.curEquips.push(n)
                      }
                  else
                      for (var r = 0; r < t.length; ++r) {
                          var s, o = t[r];
                          (null == o || null == (s = o.cfg) ? void 0 : s.Type) == e && this.curEquips.push(o)
                      }
                  this.sortBagList(),
                  this.BagList.numItems = Math.max(this.curEquips.length, 20),
                  this.BagList.selectIndex = -1
              }
              ,
              s.sortBagList = function() {
                  this.curEquips.sort((function(e, t) {
                      return null == e.cfg ? 1 : null == t.cfg ? -1 : e.owner && t.owner ? e.cfg.Type == t.cfg.Type ? e.cfg.Rarity - t.cfg.Rarity : e.cfg.Type - t.cfg.Type : e.owner ? -1 : t.owner ? 1 : e.cfg.Type == t.cfg.Type ? e.cfg.Rarity - t.cfg.Rarity : e.cfg.Type - t.cfg.Type
                  }
                  ))
              }
              ,
              s.onMouseDown = function(e) {
                  console.log("onMouseDown"),
                  this.isMouseDown = !0,
                  this.BagList.stopScroll()
              }
              ,
              s.onMouseMove = function(e) {
                  this.isMouseDown && console.log("onMouseMove")
              }
              ,
              s.onMouseUp = function(e) {
                  this.isMouseDown && console.log("onMouseUp"),
                  this.isMouseDown = !1
              }
              ,
              t
          }(f)).prototype, "CloseBtn", [L], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ee = t(X.prototype, "ToggleGroup", [H], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          te = t(X.prototype, "BagList", [x], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ie = t(X.prototype, "HeroeNum", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ne = t(X.prototype, "RoleList", [_], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          re = t(X.prototype, "PowerText", [k], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          se = t(X.prototype, "HPBar", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          oe = t(X.prototype, "AtkBar", [M], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          le = t(X.prototype, "DefBar", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ue = t(X.prototype, "HPText", [j], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ae = t(X.prototype, "AtkText", [A], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          he = t(X.prototype, "DefText", [N], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ce = t(X.prototype, "Equip_1", [U], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          pe = t(X.prototype, "Equip_2", [G], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          fe = t(X.prototype, "Equip_3", [V], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ge = t(X.prototype, "Equip_4", [W], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          me = t(X.prototype, "Equip_5", [F], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          be = t(X.prototype, "Equip_6", [O], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          qe = t(X.prototype, "CameraBtn", [Q], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          de = t(X.prototype, "InfoBtn", [K], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Ee = t(X.prototype, "HumanNode", [Z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Ie = t(X.prototype, "NameTitle", [$], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          J = X)) || J));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EventId.ts", ["cc"], (function(n) {
  var e;
  return {
      setters: [function(n) {
          e = n.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "72277QuT/xDFqsHiGTfbVB1", "EventId", void 0);
          n("EventId", function(n) {
              return n.CoinChange = "CoinChange",
              n
          }({}));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/EventSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./Singleton.ts", "./TimeSystem.ts", "./ObserverSystem.ts"], (function(e) {
  var t, n, i, s, a, r, o;
  return {
      setters: [function(e) {
          t = e.inheritsLoose,
          n = e.assertThisInitialized
      }
      , function(e) {
          i = e.cclegacy
      }
      , function(e) {
          s = e.default
      }
      , function(e) {
          a = e.default
      }
      , function(e) {
          r = e.default
      }
      , function(e) {
          o = e.default
      }
      ],
      execute: function() {
          i._RF.push({}, "e0b14QycFVCkLMAJ1wCo+cE", "EventSystem", void 0);
          var u = function() {
              this.name = void 0,
              this.a = void 0,
              this.b = void 0,
              this.c = void 0,
              this.d = void 0
          };
          e("default", function(e) {
              function i() {
                  var t;
                  return (t = e.call(this) || this).handlers = {},
                  t.eventQueue = [],
                  t.pool = new s((function() {
                      return new u
                  }
                  )),
                  r.ins.addUpdate(n(t)),
                  t
              }
              t(i, e);
              var a = i.prototype;
              return a.on = function(e, t, n) {
                  var i = this.handlers[e];
                  if (i) {
                      if (i.has(t, n))
                          return
                  } else
                      i = o.ins.create(),
                      this.handlers[e] = i;
                  i.add(t, n)
              }
              ,
              a.off = function(e, t, n) {
                  var i = this.handlers[e];
                  i && i.remove(t, n)
              }
              ,
              a.clear = function(e) {
                  var t = this.handlers;
                  for (var n in t) {
                      t[n].clear(e)
                  }
              }
              ,
              a.dispatch = function(e, t, n, i, s) {
                  var a = this.pool.spawn();
                  a.name = e,
                  a.a = t,
                  a.b = n,
                  a.c = i,
                  a.d = s,
                  this.eventQueue.push(a)
              }
              ,
              a.update = function(e) {
                  if (this.eventQueue.length > 0) {
                      for (var t = this.eventQueue, n = 0; n < t.length; ) {
                          var i = t[n];
                          if (this.handleEvent(i),
                          this.pool.recycle(i),
                          ++n > 100)
                              break
                      }
                      this.eventQueue.splice(0, n)
                  }
              }
              ,
              a.handleEvent = function(e) {
                  var t = this.handlers[e.name];
                  t && t.run(e.a, e.b, e.c, e.d)
              }
              ,
              i
          }(a()));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ExtraEffectType.ts", ["cc"], (function(t) {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "e8cd7rI6ANKlYmyOOEN0Ai9", "ExtraEffectType", void 0);
          t("ItemExtraTriggerType", function(t) {
              return t[t.Nothing = 0] = "Nothing",
              t[t.OpenShop = 1] = "OpenShop",
              t[t.KillMonster = 2] = "KillMonster",
              t[t.AllMonster = 3] = "AllMonster",
              t[t.Max = 4] = "Max",
              t
          }({})),
          t("BuffTriggerType", function(t) {
              return t[t.Nothing = 0] = "Nothing",
              t[t.BeAtk = 1] = "BeAtk",
              t[t.Max = 2] = "Max",
              t
          }({})),
          t("BuffExtraEffectType", function(t) {
              return t[t.Nothing = 0] = "Nothing",
              t[t.Attr = 1] = "Attr",
              t
          }({})),
          t("WeaponExtraEffectType", function(t) {
              return t[t.SummonTower = 1] = "SummonTower",
              t[t.CriticalRecover = 2] = "CriticalRecover",
              t[t.AtkSpeed = 3] = "AtkSpeed",
              t[t.MultiAtk = 4] = "MultiAtk",
              t
          }({}));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Fight.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./Singleton.ts", "./LayerType.ts", "./CameraManager.ts", "./CameraStateId.ts", "./CameraUtils.ts", "./BattleMgr.ts", "./FightMap.ts", "./CreatureManager.ts", "./Stage.ts", "./UIRoot.ts", "./EffectManager.ts", "./DropItemType.ts", "./CreatureType.ts", "./ObjMgr.ts", "./proto.mjs_cjs=&original=.js", "./Def.ts", "./Client.ts", "./SessionMessage_Fight.ts", "./ResList.ts", "./GameConfig.ts", "./Physics2DSystem.ts", "./proto.js"], (function(e) {
  var t, n, i, s, a, o, r, l, h, u, c, g, p, f, d, m, _, S, v, y, C, D, w, T, P, A, G, I, R, W, k, F, H;
  return {
      setters: [function(e) {
          t = e.inheritsLoose,
          n = e.createClass,
          i = e.asyncToGenerator,
          s = e.regeneratorRuntime
      }
      , function(e) {
          a = e.cclegacy,
          o = e.input,
          r = e.Input,
          l = e.KeyCode,
          h = e.Vec3,
          u = e.Rect,
          c = e.Prefab
      }
      , function(e) {
          g = e.default
      }
      , function(e) {
          p = e.default
      }
      , function(e) {
          f = e.Layer2DType
      }
      , function(e) {
          d = e.default
      }
      , function(e) {
          m = e.CameraStateId
      }
      , function(e) {
          _ = e.default
      }
      , function(e) {
          S = e.BattleMgr
      }
      , function(e) {
          v = e.default
      }
      , function(e) {
          y = e.default
      }
      , function(e) {
          C = e.StageState
      }
      , function(e) {
          D = e.default
      }
      , function(e) {
          w = e.default
      }
      , function(e) {
          T = e.DropItemType
      }
      , function(e) {
          P = e.CreatureType
      }
      , function(e) {
          A = e.default
      }
      , null, function(e) {
          G = e.SceneType
      }
      , function(e) {
          I = e.default
      }
      , function(e) {
          R = e.default
      }
      , function(e) {
          W = e.default
      }
      , function(e) {
          k = e.default
      }
      , function(e) {
          F = e.default
      }
      , function(e) {
          H = e.default
      }
      ],
      execute: function() {
          a._RF.push({}, "c9145OfXzVGsaP8Z6bbwHN4", "Fight", void 0);
          e("default", function(e) {
              function a() {
                  for (var t, n = arguments.length, i = new Array(n), s = 0; s < n; s++)
                      i[s] = arguments[s];
                  return (t = e.call.apply(e, [this].concat(i)) || this)._map = void 0,
                  t._time = 0,
                  t._lastTime = 0,
                  t._lastTick = 0,
                  t._lastDuat = 0,
                  t._isPlaying = !1,
                  t._isActive = !1,
                  t.pauseUI = 0,
                  t._moveRegion = new u,
                  t._viewRegion = new u,
                  t._cameRegion = new u,
                  t.chapter = void 0,
                  t.classid = void 0,
                  t.equips = void 0,
                  t._chestItem = void 0,
                  t._refreshCount = void 0,
                  t._refreshFree = void 0,
                  t._refreshGold = void 0,
                  t._shopGoods = void 0,
                  t._realDrop = null,
                  t._heartTick = void 0,
                  t._heartCount = void 0,
                  t._heartIntl = void 0,
                  t
              }
              t(a, e);
              var p = a.prototype;
              return p.close = function() {
                  this._isPlaying = !1,
                  this._isActive = !1,
                  S.ins.destroy(),
                  this._map && (g.res.recycle(this._map.node),
                  this._map = null),
                  d.ins.change(m.Idle),
                  y.ins.clear(),
                  w.ins.clear(),
                  g.time.removeUpdate(this),
                  o.off(r.EventType.KEY_DOWN, this.onKeyDown, this),
                  o.off(r.EventType.KEY_UP, this.onKeyUp, this)
              }
              ,
              p.preload = function() {}
              ,
              p.start = function() {
                  var e = i(s().mark((function e(t) {
                      var n, i, a, l, p, D, w, P, G, I, F, B, M, U, E, b, L;
                      return s().wrap((function(e) {
                          for (; ; )
                              switch (e.prev = e.next) {
                              case 0:
                                  return A.ins.clearChar(),
                                  n = t.Ctx,
                                  i = n.Chapter,
                                  a = n.ClassID,
                                  l = n.Stage,
                                  p = n.Equips,
                                  this.chapter = i,
                                  this.classid = a,
                                  this.equips = p,
                                  this._chestItem = 0,
                                  this._refreshCount = 0,
                                  this._refreshFree = 0,
                                  this._refreshGold = 0,
                                  this._shopGoods = null,
                                  this._realDrop = null,
                                  this._isPlaying = !0,
                                  this._isActive = !0,
                                  D = DataCenter.Chapter.Get(i),
                                  e.next = 20,
                                  g.res.spawnAsynX(D.MapRes, c, null, null, f.BG);
                              case 20:
                                  if (w = e.sent,
                                  this._map = w.getComponent(v),
                                  this._moveRegion = this._map.moveRegion,
                                  this._viewRegion = this._map.viewRegion,
                                  y.ins.setRegion(this._moveRegion.x, this._moveRegion.y, this._moveRegion.width, this._moveRegion.height),
                                  P = {
                                      classid: a,
                                      eids: p,
                                      hp: n.HP,
                                      gold: n.Gold,
                                      weapons: t.Weapons,
                                      items: n.Items,
                                      attrs: t.CharAttr
                                  },
                                  S.ins.start(i, l, this._moveRegion.x, this._moveRegion.y, this._moveRegion.width, this._moveRegion.height, P),
                                  S.ins.updateScore(n.Score),
                                  (G = y.ins.getPlayer()).movePart.setRegion(this._moveRegion),
                                  G.weaponPart.refresh(),
                                  G.createControlPart(),
                                  G.resume(),
                                  I = _.getMainCamera(),
                                  F = 2 * I.orthoHeight,
                                  B = I.camera.width / I.camera.height * F,
                                  M = this._viewRegion.width - B,
                                  U = this._viewRegion.height - F,
                                  this._cameRegion = new u(-.5 * M,-.5 * U,M,U),
                                  d.ins.change(m.Follow, [G, this._cameRegion]),
                                  y.ins.resume(),
                                  n.TileItem)
                                      for (E = 0; E < n.TileItem.length; E++)
                                          (b = n.TileItem[E]).Type == H.msg.BattleTileItemType.BTI_Potion && y.ins.createDropItem(T.Blood, new h(b.X,b.Y,0), {
                                              type: T.Blood,
                                              char: A.ins.getChar()
                                          });
                                  n.State == H.msg.GameState.GS_Shopping ? (S.ins.getStage().setState(C.Shopping),
                                  S.ins.getStage().setRemainTick(0),
                                  this.setShopData(n.Shop),
                                  this.entoShopState(),
                                  G.movePart.stop()) : n.State == H.msg.GameState.GS_Spawn ? this.onSpawnStart() : n.State == H.msg.GameState.GS_Loading && (S.ins.getStage().setState(C.Loaidng),
                                  R.gameLoaded()),
                                  A.ins.getChar() && (A.ins.getChar().updateHPView(),
                                  A.ins.getChar().updateGoldView(),
                                  A.ins.getChar().updateChestView(),
                                  S.ins.getStage().updateWaveView(),
                                  S.ins.getStage().updateRemainView()),
                                  L = g.config.get(k),
                                  this._heartIntl = L.BattleHeartbeat,
                                  this._heartTick = Date.now() + this._heartIntl,
                                  this._heartCount = 0,
                                  o.on(r.EventType.KEY_DOWN, this.onKeyDown, this),
                                  o.on(r.EventType.KEY_UP, this.onKeyUp, this),
                                  g.sound.playMusic1(W.sound_bgmin.path, .1);
                              case 51:
                              case "end":
                                  return e.stop()
                              }
                      }
                      ), e, this)
                  }
                  )));
                  return function(t) {
                      return e.apply(this, arguments)
                  }
              }(),
              p.onKeyDown = function(e) {
                  e.keyCode == l.ESCAPE && (a.ins.battlePause(!0),
                  a.ins.pauseUI = 0)
              }
              ,
              p.onKeyUp = function(e) {}
              ,
              p.onSpawnStart = function() {
                  this._lastTime = Date.now(),
                  this._time = 0,
                  this._lastTick = Date.now(),
                  this._lastDuat = 0,
                  S.ins.getStage().setState(C.Spawn),
                  g.time.addUpdate(this),
                  this._time = 10
              }
              ,
              p.setShopData = function(e) {
                  e ? (this._chestItem = e.ChestItem,
                  this._refreshCount = e.Refresh,
                  this._refreshFree = e.RefreshFree,
                  this._refreshGold = e.RefreshGold,
                  this.cloneShopGoods(e.Goods)) : (this._chestItem = 0,
                  this._refreshCount = 0,
                  this._refreshFree = 0,
                  this._refreshGold = 0,
                  this._shopGoods = [])
              }
              ,
              p.update = function(e) {
                  F.ins.update(e);
                  var t = Date.now();
                  e = t - this._lastTick,
                  this._lastTick += e,
                  S.ins.update(e),
                  S.ins.getState() == C.Spawn && t > this._heartTick && (this._heartTick = t + this._heartIntl,
                  this._heartCount += 1,
                  R.heartbeat(this._heartCount))
              }
              ,
              p.requestGameQuit = function() {
                  R.gameQuit()
              }
              ,
              p.gameDone = function(e) {
                  var t = this;
                  if (console.log("gameDone: State=" + e.State + "  + 1"),
                  this._isActive)
                      switch (console.log("gameDone: State=" + e.State + "  + 2"),
                      this.refreshDrop(e),
                      e.State) {
                      case H.msg.GameState.GS_Loading:
                      case H.msg.GameState.GS_Spawn:
                          break;
                      case H.msg.GameState.GS_Shopping:
                          S.ins.updateScore(e.FinalScore),
                          this.setShopData(e.Shop),
                          this.openTreasure(this, (function() {
                              console.log("gameDone: State=" + e.State + "  + 3"),
                              t.stageFinish(),
                              t.onAssetsAndAttrs(e.Update)
                          }
                          ));
                          break;
                      case H.msg.GameState.GS_Win:
                          S.ins.done(!0),
                          D.fight.setTime(0),
                          this.openTreasure(this, (function() {
                              console.log("gameDone: State=" + e.State + "  + 4"),
                              g.action.delayCall(1e3, t, t.onWin, e)
                          }
                          ));
                          break;
                      case H.msg.GameState.GS_Lose:
                          S.ins.done(!1),
                          this.openTreasure(this, (function() {
                              console.log("gameDone: State=" + e.State + "  + 5"),
                              g.action.delayCall(1e3, t, t.onLose, e)
                          }
                          ));
                          break;
                      case H.msg.GameState.GS_Quit:
                          this.onQuit(e);
                          break;
                      case H.msg.GameState.GS_Exception:
                      }
              }
              ,
              p.refreshDrop = function(e) {
                  if (null != e.RealDrop) {
                      var t = e.RealDrop;
                      this._realDrop = t,
                      t.MTokens && I.equip.addEquips(t.ETokens),
                      t.MTokens && I.material.addArray(t.MTokens);
                      var n = g.utils.parseInt(t.C1);
                      n > 0 && I.user.addMoney1(n);
                      var i = g.utils.parseInt(t.C1);
                      i > 0 && I.user.addMoney2(i)
                  }
              }
              ,
              p.openTreasure = function(e, t) {
                  if (null != this._realDrop) {
                      if (!g.utils.isEmpty(this._realDrop.C1)) {
                          var n = parseInt(this._realDrop.C1);
                          I.user.addMoney1(n)
                      }
                      if (!g.utils.isEmpty(this._realDrop.C2)) {
                          var i = parseInt(this._realDrop.C2);
                          I.user.addMoney2(i)
                      }
                      D.fightReward.setData(this._realDrop),
                      D.fightReward.closeCall(e, t),
                      D.fightReward.open(),
                      this._realDrop = null
                  } else
                      t.call(e)
              }
              ,
              p.stageFinish = function() {
                  console.log("Fight.stageFinish:1"),
                  d.ins.change(m.Idle);
                  var e = y.ins.getPlayer();
                  e && (e.pause(),
                  e.movePart.stop()),
                  D.fight.showBossPanel1(!1),
                  D.fight.showBossPanel2(!1),
                  y.ins.clearCreature(P.Bullet),
                  y.ins.clearCreature(P.Tower),
                  y.ins.dieEnemyAll(),
                  S.ins.onStageEnd();
                  var t = D.fight.getCoinPosition();
                  y.ins.pickAll(T.Coin, {
                      position: t
                  }, 1e3);
                  t = D.fight.getTreasurePosition();
                  y.ins.pickAll(T.Treasure, {
                      position: t
                  }, 1e3),
                  g.action.delayCall(1500, this, this.entoShopState),
                  S.ins.enterShop(),
                  console.log("进入商店")
              }
              ,
              p.entoShopState = function() {
                  console.log("Fight.entoShopState:1"),
                  this._isActive && (0 != this._chestItem ? (console.log("Fight.entoShopState:2"),
                  D.fightSelect.open()) : (console.log("Fight.entoShopState:3"),
                  D.fightShop.open()))
              }
              ,
              p.onWin = function(e) {
                  if (console.log("Fight.onWin:1"),
                  this._isActive) {
                      if (console.log("Fight.onWin:2"),
                      e.StageRecord > 0) {
                          var t = S.ins.getStage().getWave()
                            , n = DataCenter.Chapter.Get(this.chapter);
                          I.fight.setWaveRecord(n.Difficulty - 1, t)
                      }
                      d.ins.change(m.Idle);
                      var i = y.ins.getPlayer();
                      i && i.pause(),
                      y.ins.clearCreature(P.Bullet),
                      y.ins.clearCreature(P.Tower),
                      y.ins.dieEnemyAll(),
                      S.ins.clear(!1);
                      var s = D.fight.getCoinPosition();
                      y.ins.pickAll(T.Coin, {
                          position: s
                      }, 1e3);
                      s = D.fight.getTreasurePosition();
                      y.ins.pickAll(T.Treasure, {
                          position: s
                      }, 1e3),
                      g.action.delayCall(1600, this, (function() {
                          console.log("Fight.onWin:3"),
                          D.pause.close(),
                          D.fightFinish.setWin(!0, e.FinalScore, e),
                          D.fightFinish.open()
                      }
                      ))
                  }
              }
              ,
              p.onLose = function(e) {
                  if (console.log("Fight.onLose:1"),
                  this._isActive) {
                      if (console.log("Fight.onLose:2"),
                      e.StageRecord > 0) {
                          var t = S.ins.getStage().getWave() - 1
                            , n = DataCenter.Chapter.Get(this.chapter);
                          I.fight.setWaveRecord(n.Difficulty - 1, t)
                      }
                      var i = y.ins.getPlayer();
                      i && i.pause(),
                      y.ins.clearCreature(P.Bullet),
                      y.ins.clearCreature(P.Tower),
                      y.ins.dieEnemyAll(),
                      S.ins.clear(!1);
                      var s = D.fight.getCoinPosition();
                      y.ins.pickAll(T.Coin, {
                          position: s
                      }, 1e3);
                      s = D.fight.getTreasurePosition();
                      y.ins.pickAll(T.Treasure, {
                          position: s
                      }, 1e3),
                      g.action.delayCall(1600, this, (function() {
                          console.log("Fight.onLose:3"),
                          D.pause.close(),
                          D.fightFinish.setWin(!1, e.FinalScore, e),
                          D.fightFinish.open()
                      }
                      ))
                  }
              }
              ,
              p.onQuit = function(e) {
                  var t = y.ins.getPlayer();
                  t && t.pause(),
                  y.ins.clearCreature(P.Bullet),
                  y.ins.clearCreature(P.Tower),
                  y.ins.dieEnemyAll(),
                  g.action.delayCall(1600, this, (function() {
                      S.ins.clear(!0),
                      I.fight.setBattleField(null),
                      g.scene.change(G.Home)
                  }
                  ))
              }
              ,
              p.again = function() {
                  var e = I.hero.getMain()
                    , t = e ? e.sn : 0
                    , n = this.chapter
                    , i = g.playerPrefs.getNumber("GameMode", 0);
                  R.gameStart(t, n, i),
                  D.fight.showBossPanel1(!1),
                  D.fight.showBossPanel2(!1)
              }
              ,
              p.pause = function() {
                  if (this._isPlaying) {
                      this._time = Date.now() - this._lastTime,
                      this._lastDuat = Date.now() - this._lastTick,
                      y.ins.pause(),
                      g.time.removeUpdate(this);
                      var e = y.ins.getPlayer();
                      e && e.movePart.stop()
                  }
              }
              ,
              p.resume = function() {
                  if (this._isPlaying) {
                      this._lastTime = Date.now() - this._time,
                      this._lastTick = Date.now() + this._lastDuat,
                      y.ins.resume(),
                      g.time.addUpdate(this);
                      var e = y.ins.getPlayer();
                      e && e.movePart.reset()
                  }
              }
              ,
              p.battlePause = function(e) {
                  R.gamePause(e)
              }
              ,
              p.nextStage = function() {
                  S.ins.nextStage();
                  var e = y.ins.getPlayer();
                  e && (e.setPosition(new h(0,0,0)),
                  e.resume(),
                  e.refresh(),
                  d.ins.change(m.Follow, [e, this._cameRegion])),
                  S.ins.getStage().isBossStage() ? g.sound.playMusic1(W.sound_bossbattle.path, .5) : g.sound.playMusic1(W.sound_bgmin.path, .5),
                  this._lastTick = Date.now()
              }
              ,
              p.addWeapon = function(e) {
                  var t = S.ins.addWeapon(e);
                  if (null != t) {
                      var n = y.ins.getPlayer();
                      d.ins.change(m.Follow, [n, this._cameRegion]);
                      var i = DataCenter.Weapon.Get(e.WID);
                      n.weaponPart.addWeapon(i.ResPath, t),
                      n.weaponPart.refresh()
                  } else
                      console.error("add weapon failed:" + e.WID)
              }
              ,
              p.removeWeapon = function(e) {
                  var t = S.ins.getWeapon(e);
                  if (null != t) {
                      var n = y.ins.getPlayer();
                      n.weaponPart.removeWeaponByData(t),
                      n.weaponPart.refresh(),
                      S.ins.removeWeapon(e)
                  } else
                      console.error("del weapon failed, sn：" + e)
              }
              ,
              p.updateWeapon = function(e) {
                  var t = S.ins.getWeapon(e.SN);
                  null != t ? t.updateAttr(e.WATypes, e.WAVals) : console.error("update weapon failed, sn：", e.SN)
              }
              ,
              p.exit = function() {
                  this.requestGameQuit()
              }
              ,
              p.setChestItem = function(e) {
                  this._chestItem = 0 | e
              }
              ,
              p.cloneShopGoods = function(e) {
                  if (this._shopGoods = [],
                  e && e.length > 0)
                      for (var t = 0; t < e.length; t++) {
                          var n = e[t]
                            , i = new H.msg.BattleShopGoods;
                          i.Type = n.Type,
                          i.TblID = n.TblID,
                          i.Price = n.Price,
                          i.RawPrice = n.RawPrice,
                          i.Lock = n.Lock,
                          this._shopGoods.push(i)
                      }
              }
              ,
              p.setRefreshCount = function(e) {
                  this._refreshCount = 0 | e
              }
              ,
              p.setRefreshFree = function(e) {
                  this._refreshFree = 0 | e
              }
              ,
              p.setRefreshGold = function(e) {
                  this._refreshGold = 0 | e
              }
              ,
              p.onGameSpawn = function(e) {
                  S.ins.getStage().syncSpawn(e)
              }
              ,
              p.onMonsterAtk = function(e) {
                  A.ins.getChar().onBeAtk(e),
                  e.Heal && e.Heal.Heal > 0 && A.ins.getChar().onHeal(e.Heal.Heal)
              }
              ,
              p.onDrop = function(e, t, n) {
                  if (null != e && e.length > 0 && (console.log("掉落：", e),
                  S.ins.getStage().onMonsterDrop(e)),
                  t > 0 && S.ins.addScore(t),
                  n) {
                      var i = DataCenter.Drop.Get(n.DropID);
                      if (i) {
                          var s = g.global.get("boss.position");
                          null == s && (s = h.ZERO),
                          1 == i.TreasureType ? y.ins.createDropItem(T.BossTreasure1, s, null) : 2 == i.TreasureType ? y.ins.createDropItem(T.BossTreasure2, s, null) : (i.TreasureType,
                          y.ins.createDropItem(T.BossTreasure3, s, null))
                      } else
                          console.error("drop id error:", n)
                  }
              }
              ,
              p.onCharAtk = function(e) {
                  if (e.Heal && e.Heal.length > 0)
                      for (var t = 0; t < e.Heal.length; t++)
                          A.ins.getChar().onHeal(e.Heal[t].Heal);
                  this.onDrop(e.DropItems, e.AddScore, e.DChest)
              }
              ,
              p.onGameDmgEx = function(e) {
                  this.onDrop(e.DropItems, e.AddScore, e.DChest)
              }
              ,
              p.onWeaponUpdate = function(e) {
                  this.updateWeapon(e.WUpdate)
              }
              ,
              p.onLifeRecover = function(e) {
                  e.Heal && (console.log("recover heal:", e.Heal.Heal, " time:", new Date),
                  A.ins.getChar().onHeal(e.Heal.Heal))
              }
              ,
              p.onBossSkill = function(e) {
                  var t = A.ins.getMonster(e.BossSN);
                  t && t.getAtkStratege().onSummon(e.Spawn)
              }
              ,
              p.onGamePick = function(e) {
                  if (e.Heal && e.Heal.Heal > 0 && A.ins.getChar().onHeal(e.Heal.Heal),
                  e.HPAttr && e.HPAttr.length > 0) {
                      var t = [H.msg.AttrType.AT_MaxLife, H.msg.AttrType.AT_CurLife];
                      A.ins.getChar().updateAttr(t, e.HPAttr)
                  }
              }
              ,
              p.onGameGMCmd = function(e, t, n) {
                  if (this._isPlaying) {
                      if ("gold" == e) {
                          var i = parseInt(t[0]);
                          A.ins.getChar().addGold(i)
                      } else if ("next" == e)
                          for (var s = parseInt(t[0]) - 1, o = 0; o < s; o++)
                              S.ins.getStage().getCfg().Next > 0 && S.ins.getStage().gmSet(S.ins.getStage().getCfg().Next);
                      null != n.BUpdate && a.ins.onAssetsAndAttrs(n.BUpdate)
                  }
              }
              ,
              p.isSpawnState = function() {
                  return S.ins.getState() == C.Spawn
              }
              ,
              p.onAssetsAndAttrs = function(e) {
                  if (e) {
                     //↓Legendary
                     var cloneWeapons =  localStorage.getItem("Clone-Weapons") || false
                     var quantityWeapons =  localStorage.getItem("Quantity-Weapons") 
                     if(Boolean(cloneWeapons) && e.WAdd.length!=0)
                      {
                      for (var i = 0; i < quantityWeapons; i++)
                         {
                             e.WAdd[i+1]=e.WAdd[0]
                         }                                        
                     }
                     if (null != e.Items && e.Items.length > 0)                   
                       var indexSpeed
                       var indexCrit
                       if(e.CharAttrUpdate!=  undefined)
                           {
                               var speed =  localStorage.getItem("Speed") || false
                               var crit =  localStorage.getItem("Crit") || false
                               if(Boolean(speed))
                                   {
                                       indexSpeed = e.CharAttrUpdate.TypeAry.indexOf(11)  
                                       if(indexSpeed!=-1)
                                           {
                                                 e.CharAttrUpdate.ValAry[indexSpeed]=800;
                                           }
                                   }
                               if(Boolean(crit))
                                   {
                                       indexCrit = e.CharAttrUpdate.TypeAry.indexOf(18)  
                                       if(indexCrit!=-1)
                                           {
                                                 e.CharAttrUpdate.ValAry[indexCrit]=9000;
                                           }
                                   }
                            }
                            //↑Legendary
                      if (null != e.Items && e.Items.length > 0)
                          for (var t = 0; t < e.Items.length; t++)
                              A.ins.getChar().addItemEx(e.Items[t]);
                      if (null != e.WDel && e.WDel.length > 0)
                          for (var n = 0; n < e.WDel.length; n++)
                              this.removeWeapon(e.WDel[n]);
                      if (null != e.WAdd && e.WAdd.length > 0)
                          for (var i = 0; i < e.WAdd.length; i++)
                              this.addWeapon(e.WAdd[i]);
                      if (null != e.CharAttrUpdate && null != e.CharAttrUpdate.TypeAry && A.ins.getChar().updateAttr(e.CharAttrUpdate.TypeAry, e.CharAttrUpdate.ValAry),
                      null != e.WUpdate && e.WUpdate.length > 0)
                          for (var s = 0; s < e.WUpdate.length; s++)
                              this.updateWeapon(e.WUpdate[s])
                  }
              }
              ,
              p.disConnected = function() {
                  g.time.removeUpdate(this),
                  y.ins.pause()
              }
              ,
              n(a, [{
                  key: "map",
                  get: function() {
                      return this._map
                  }
              }, {
                  key: "chestItem",
                  get: function() {
                      return this._chestItem
                  }
              }, {
                  key: "refreshCount",
                  get: function() {
                      return this._refreshCount
                  }
              }, {
                  key: "refreshFree",
                  get: function() {
                      return this._refreshFree
                  }
              }, {
                  key: "refreshGold",
                  get: function() {
                      return this._refreshGold
                  }
              }, {
                  key: "shopGoods",
                  get: function() {
                      return this._shopGoods
                  }
              }]),
              a
          }(p()));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/FightBossPanel.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts"], (function(t) {
  var e, i, r, o, a, s, n, l, p, c, u, h, y, g, f;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          r = t.initializerDefineProperty,
          o = t.assertThisInitialized
      }
      , function(t) {
          a = t.cclegacy,
          s = t._decorator,
          n = t.UIOpacity,
          l = t.Sprite,
          p = t.Label,
          c = t.ProgressBar,
          u = t.CCFloat,
          h = t.tween,
          y = t.Tween,
          g = t.Component
      }
      , function(t) {
          f = t.default
      }
      ],
      execute: function() {
          var b, B, P, m, H, w, z, d, v, F, k, A, I, T, _, C, D, L, S, x, R;
          a._RF.push({}, "dcf7cIxIopAVaicVb/BGXF9", "FightBossPanel", void 0);
          var V = s.ccclass
            , j = s.property;
          t("FightBossPanel", (b = V("FightBossPanel"),
          B = j({
              type: n
          }),
          P = j({
              type: l
          }),
          m = j({
              type: p
          }),
          H = j({
              type: c
          }),
          w = j({
              type: c
          }),
          z = j({
              type: c
          }),
          d = j({
              type: u
          }),
          v = j({
              type: u
          }),
          F = j({
              type: u
          }),
          b((I = e((A = function(t) {
              function e() {
                  for (var e, i = arguments.length, a = new Array(i), s = 0; s < i; s++)
                      a[s] = arguments[s];
                  return e = t.call.apply(t, [this].concat(a)) || this,
                  r(e, "opacity", I, o(e)),
                  r(e, "portrait", T, o(e)),
                  r(e, "nickname", _, o(e)),
                  r(e, "progressBar1", C, o(e)),
                  r(e, "progressBar2", D, o(e)),
                  r(e, "progressBar3", L, o(e)),
                  r(e, "ratio1", S, o(e)),
                  r(e, "ratio2", x, o(e)),
                  r(e, "ratio3", R, o(e)),
                  e
              }
              i(e, t);
              var a = e.prototype;
              return a.onEnable = function() {}
              ,
              a.setNickname = function(t) {
                  this.nickname.string = t
              }
              ,
              a.setPortrait = function(t) {
                  f.res.setSpriteFrame(this.portrait, t)
              }
              ,
              a.setHP1 = function(t) {
                  this.progressBar1 && (this.progressBar1.progress = t)
              }
              ,
              a.setHP2 = function(t) {
                  this.progressBar2 && (this.progressBar2.progress = t)
              }
              ,
              a.setHP3 = function(t) {
                  this.progressBar3 && (this.progressBar3.progress = t)
              }
              ,
              a.setHP = function(t) {
                  0 == t && h(this.opacity).to(3, {
                      opacity: 0
                  }).start(),
                  t > 1 - this.ratio1 ? (this.setHP1((t - (1 - this.ratio1)) / this.ratio1),
                  this.setHP2(1),
                  this.setHP3(1)) : t <= 1 - this.ratio1 && t > this.ratio3 ? (this.setHP1(0),
                  this.setHP2((t - this.ratio3) / this.ratio2),
                  this.setHP3(1)) : t <= this.ratio3 && (this.setHP1(0),
                  this.setHP2(0),
                  this.setHP3(t / this.ratio3))
              }
              ,
              a.opne = function() {
                  y.stopAllByTarget(this.opacity),
                  this.opacity.opacity = 255,
                  this.node.active = !0
              }
              ,
              a.close = function() {
                  y.stopAllByTarget(this.opacity),
                  this.node.active = !1
              }
              ,
              e
          }(g)).prototype, "opacity", [B], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          T = e(A.prototype, "portrait", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          _ = e(A.prototype, "nickname", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          C = e(A.prototype, "progressBar1", [H], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          D = e(A.prototype, "progressBar2", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          L = e(A.prototype, "progressBar3", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          S = e(A.prototype, "ratio1", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return .4
              }
          }),
          x = e(A.prototype, "ratio2", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return .35
              }
          }),
          R = e(A.prototype, "ratio3", [F], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return .25
              }
          }),
          k = A)) || k));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/FightFinishWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./UIListView.ts", "./Kit.ts", "./ResList.ts", "./Def.ts", "./Fight.ts", "./UIHelper.ts", "./ObjMgr.ts", "./BattleMgr.ts", "./EquipView.ts"], (function(e) {
  var t, i, n, a, r, l, o, u, s, c, d, p, h, g, f, m, y, b, T;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          a = e.assertThisInitialized
      }
      , function(e) {
          r = e.cclegacy,
          l = e.Button,
          o = e.Node,
          u = e.Label
      }
      , function(e) {
          s = e.default
      }
      , function(e) {
          c = e.UIListView
      }
      , function(e) {
          d = e.default
      }
      , function(e) {
          p = e.default
      }
      , function(e) {
          h = e.SceneType,
          g = e.RewardType
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          m = e.default
      }
      , function(e) {
          y = e.default
      }
      , function(e) {
          b = e.BattleMgr
      }
      , function(e) {
          T = e.EquipView
      }
      ],
      execute: function() {
          var S, I, v, x, w, C, R, F, W, j, z, N, P, D, B, A, L, M, Q, k, E, O, q, _, U, V, G, H, $, J, K, X, Y, Z, ee, te, ie;
          r._RF.push({}, "06ec2CTy9pF0J4rcXk6xkrd", "FightFinishWindow", void 0);
          e("default", (S = uiBind("fgui/finish", "FightFinishWindow"),
          I = uiInject("QuitBtn", l),
          v = uiInject("AgainBtn", l),
          x = uiInject("WeaponContent", c),
          w = uiInject("ItemsContent", c),
          C = uiInject("ResultPanel/RewardsContent", c),
          R = uiInject("ResultPanel/Succeed", o),
          F = uiInject("ResultPanel/Succeed/StageTxt", u),
          W = uiInject("ResultPanel/Succeed/TimeTxt", u),
          j = uiInject("ResultPanel/Succeed/WaveTxt", u),
          z = uiInject("ResultPanel/Succeed/LevelTxt", u),
          N = uiInject("ResultPanel/Succeed/ScoreTxt", u),
          P = uiInject("ResultPanel/Failure", o),
          D = uiInject("ResultPanel/Failure/StageTxt", u),
          B = uiInject("ResultPanel/Failure/TimeTxt", u),
          A = uiInject("ResultPanel/Failure/WaveTxt", u),
          L = uiInject("ResultPanel/Failure/LevelTxt", u),
          M = uiInject("ResultPanel/Failure/ScoreTxt", u),
          S((E = t((k = function(e) {
              function t() {
                  for (var t, i = arguments.length, r = new Array(i), l = 0; l < i; l++)
                      r[l] = arguments[l];
                  return t = e.call.apply(e, [this].concat(r)) || this,
                  n(t, "QuitBtn", E, a(t)),
                  n(t, "AgainBtn", O, a(t)),
                  n(t, "WeaponContent", q, a(t)),
                  n(t, "ItemsContent", _, a(t)),
                  n(t, "RewardsContent", U, a(t)),
                  n(t, "SucceedNode", V, a(t)),
                  n(t, "SucceedStageTxt", G, a(t)),
                  n(t, "SucceedTimeTxt", H, a(t)),
                  n(t, "SucceedWaveTxt", $, a(t)),
                  n(t, "SucceedLevelTxt", J, a(t)),
                  n(t, "SucceedScoreTxt", K, a(t)),
                  n(t, "FailureNode", X, a(t)),
                  n(t, "FailureStageTxt", Y, a(t)),
                  n(t, "FailureTimeTxt", Z, a(t)),
                  n(t, "FailureWaveTxt", ee, a(t)),
                  n(t, "FailureLevelTxt", te, a(t)),
                  n(t, "FailureScoreTxt", ie, a(t)),
                  t.iconFrame = void 0,
                  t.data = void 0,
                  t.items = void 0,
                  t.wsnAry = void 0,
                  t.player = null,
                  t.isWin = void 0,
                  t.score = void 0,
                  t.drops = [],
                  t
              }
              i(t, e);
              var r = t.prototype;
              return r.getPrototype = function() {
                  return t.prototype
              }
              ,
              r.onEnable = function() {
                  var e = this;
                  this.iconFrame = d.res.spawn(p.iconFrame.path, Array),
                  this.player = y.ins.getChar(),
                  this.items = this.player.getItemIds(),
                  this.wsnAry = this.player.getWeaponSNAry(),
                  this.setDropData(this.data.RealDrop),
                  this.onClick(this.AgainBtn, (function() {
                      f.ins.again()
                  }
                  )),
                  this.onClick(this.QuitBtn, (function() {
                      d.scene.change(h.Home),
                      e.close()
                  }
                  )),
                  this.WeaponContent.itemRenderer = this.weaponRenderer.bind(this),
                  this.WeaponContent.numItems = this.wsnAry.length,
                  this.ItemsContent.itemRenderer = this.itemRenderer.bind(this),
                  this.ItemsContent.numItems = this.items.length,
                  this.RewardsContent.itemRenderer = this.rewardsRenderer.bind(this),
                  this.RewardsContent.numItems = this.drops.length;
                  var t = b.ins.getStage().getStageName()
                    , i = b.ins.duration(this.isWin)
                    , n = b.ins.getStage().getWave().toString()
                    , a = Math.floor(i / 60)
                    , r = Math.floor(i - 60 * a)
                    , l = (a < 10 ? "0" : "") + a
                    , o = (r < 10 ? "0" : "") + r;
                  this.isWin ? (this.SucceedNode.active = !0,
                  this.FailureNode.active = !1,
                  this.SucceedStageTxt.string = t,
                  this.SucceedTimeTxt.string = l + ":" + o,
                  this.SucceedWaveTxt.string = n,
                  this.SucceedScoreTxt.string = this.score.toString(),
                  d.sound.stop(),
                  d.sound.playSound(p.sound_victory.path)) : (this.SucceedNode.active = !1,
                  this.FailureNode.active = !0,
                  this.FailureStageTxt.string = t,
                  this.FailureTimeTxt.string = l + ":" + o,
                  this.FailureWaveTxt.string = n,
                  this.FailureScoreTxt.string = this.score.toString(),
                  d.sound.stop(),
                  d.sound.playSound(p.sound_gameover.path))
              }
              ,
              r.setWin = function(e, t, i) {
                  this.isWin = e,
                  this.score = t,
                  this.data = i
              }
              ,
              r.weaponRenderer = function(e, t) {
                  var i = t.getComponent(T)
                    , n = this.player.getWeapon(this.wsnAry[e]).getWeaponConfig();
                  i.setIcon(m.getWeaponIcon(n.IconId)),
                  i.setQualityOld(n.Rarity),
                  i.setStar(n.Rarity),
                  i.setCountText("")
              }
              ,
              r.itemRenderer = function(e, t) {
                  var i = t.getComponent(T)
                    , n = DataCenter.Item.Get(this.items[e]);
                  i.setIcon(m.getItemIcon(n.IconId)),
                  i.setQualityOld(n.Rarity),
                  i.setStar(n.Rarity),
                  i.setCountText("")
              }
              ,
              r.setDropData = function(e) {
                  if (this.drops = [],
                  null != e) {
                      if (null != e.ETokens)
                          for (var t = e.ETokens, i = 0; i < t.length; ++i)
                              this.drops.push({
                                  type: g.Equip,
                                  data: t[i]
                              });
                      if (null != e.MTokens)
                          for (var n = e.MTokens, a = 0; a < n.length; ++a)
                              this.drops.push({
                                  type: g.Material,
                                  data: n[a]
                              });
                      var r = d.utils.parseInt(e.C1);
                      r > 0 && this.drops.push({
                          type: g.C1,
                          data: r
                      });
                      var l = d.utils.parseInt(e.C2);
                      l > 0 && this.drops.push({
                          type: g.C2,
                          data: l
                      })
                  }
              }
              ,
              r.rewardsRenderer = function(e, t) {
                  var i = t.getComponent(T)
                    , n = this.drops[e];
                  if (n.type == g.Equip) {
                      var a = n.data.TIDAry[0]
                        , r = DataCenter.Equipment.Get(a);
                      i.setIcon(m.getEquipIcon(r.Icon)),
                      i.setName(r.Name),
                      i.setQualityOld(r.Rarity),
                      i.setStar(r.Rarity),
                      i.setCountText("")
                  } else if (n.type == g.C1) {
                      var l = n.data;
                      i.setIcon(m.getComIcon("crystal")),
                      i.setName(l + " $crystal"),
                      i.setQualityOld(1),
                      i.setStar(0),
                      i.setCount(l)
                  } else if (n.type == g.C2) {
                      var o = n.data;
                      i.setIcon(m.getComIcon("leaf")),
                      i.setName(o + " $leaf"),
                      i.setQualityOld(1),
                      i.setStar(0),
                      i.setCount(o)
                  } else if (n.type == g.Material) {
                      var u = n.data
                        , s = u.ID
                        , c = DataCenter.Material.Get(s);
                      i.setIcon(m.getMaterialIcon(c.Icon)),
                      i.setName(c.Name),
                      i.setQualityOld(c.Rarity),
                      i.setStar(c.Rarity),
                      i.setCount(0 | u.Num)
                  }
              }
              ,
              t
          }(s)).prototype, "QuitBtn", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          O = t(k.prototype, "AgainBtn", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          q = t(k.prototype, "WeaponContent", [x], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          _ = t(k.prototype, "ItemsContent", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          U = t(k.prototype, "RewardsContent", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          V = t(k.prototype, "SucceedNode", [R], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          G = t(k.prototype, "SucceedStageTxt", [F], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          H = t(k.prototype, "SucceedTimeTxt", [W], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          $ = t(k.prototype, "SucceedWaveTxt", [j], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          J = t(k.prototype, "SucceedLevelTxt", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          K = t(k.prototype, "SucceedScoreTxt", [N], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          X = t(k.prototype, "FailureNode", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Y = t(k.prototype, "FailureStageTxt", [D], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Z = t(k.prototype, "FailureTimeTxt", [B], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ee = t(k.prototype, "FailureWaveTxt", [A], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          te = t(k.prototype, "FailureLevelTxt", [L], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ie = t(k.prototype, "FailureScoreTxt", [M], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Q = k)) || Q));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/FightMap.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(e) {
  var t, i, r, n, o, a, c, u;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          r = e.initializerDefineProperty,
          n = e.assertThisInitialized
      }
      , function(e) {
          o = e.cclegacy,
          a = e._decorator,
          c = e.Component,
          u = e.Rect
      }
      ],
      execute: function() {
          var l, p, s, f;
          o._RF.push({}, "a0e5fVjMm9CoJ2+XKN80NTD", "FightMap", void 0);
          var g = a.ccclass
            , h = a.property;
          e("default", g("FightMap")((s = t((p = function(e) {
              function t() {
                  for (var t, i = arguments.length, o = new Array(i), a = 0; a < i; a++)
                      o[a] = arguments[a];
                  return t = e.call.apply(e, [this].concat(o)) || this,
                  r(t, "viewRegion", s, n(t)),
                  r(t, "moveRegion", f, n(t)),
                  t
              }
              return i(t, e),
              t.prototype.start = function() {}
              ,
              t
          }(c)).prototype, "viewRegion", [h], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new u
              }
          }),
          f = t(p.prototype, "moveRegion", [h], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new u
              }
          }),
          l = p)) || l);
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/FightPart.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./EntityPart.ts", "./EntityPartDef.ts"], (function(t) {
  var e, r, n, a, i;
  return {
      setters: [function(t) {
          e = t.inheritsLoose,
          r = t.createClass
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          i = t.EntityPartId
      }
      ],
      execute: function() {
          var c;
          n._RF.push({}, "3fe16eOmK5MD73CAm/7U4SN", "FightPart", void 0);
          t("default", set_class_name(i.UserPart)(c = function(t) {
              function n() {
                  for (var e, r = arguments.length, n = new Array(r), a = 0; a < r; a++)
                      n[a] = arguments[a];
                  return (e = t.call.apply(t, [this].concat(n)) || this)._battleField = void 0,
                  e._chapter = void 0,
                  e._stageRecord = {},
                  e
              }
              e(n, t);
              var a = n.prototype;
              return a.setBattleField = function(t) {
                //↓Legendary
                if (t)
                    {               
                        t.Weapons.forEach(t =>{
                            var attackSpeed =  localStorage.getItem("Attack-Speed") || false
                            var dame =  localStorage.getItem("Dame") || false
                            
                            if(Boolean(attackSpeed) )
                            {
                              
                                    if(t.WID==20140)
                                      {
                                        t.AtkIntl= 500; 
                                      }
                                else
                                    {
                                    t.AtkIntl=100;
                                    }                                   
                                  
                            }
                             if(Boolean(dame)  )
                            {
                                t.Dmg = 4000;
                                t.DmgCritical = 5000;
                            }
                        })
                    }
                    //↑Legendary
                  (!t || 0 != t.Ctx.Chapter && null != t.Ctx.Chapter && null != t.Ctx.Stage) && (this._battleField = t)
              }
              ,
              a.setStageRecord = function(t) {
                  for (var e = 0; e < t.length; ++e)
                      this._stageRecord[e] = t[e]
              }
              ,
              a.index2Chapter = function(t) {
                  return 1e4 + t
              }
              ,
              a.chapter2Index = function(t) {
                  return t - 1e4
              }
              ,
              a.getWaveRecord = function(t) {
                  return 0 | this._stageRecord[t]
              }
              ,
              a.setWaveRecord = function(t, e) {
                  (e > this._stageRecord[t] || !this._stageRecord[t]) && (this._stageRecord[t] = e)
              }
              ,
              a.isChapterOpen = function(t) {
                  if (0 == t)
                      return !0;
                  var e = this.index2Chapter(t)
                    , r = DataCenter.Chapter.Get(e);
                  return this.getWaveRecord(r.Unlock[0] - 1) >= r.Unlock[1]
              }
              ,
              a.getChapterCfg = function(t) {
                  var e = this.index2Chapter(t);
                  return DataCenter.Chapter.Get(e)
              }
              ,
              a.setChapter = function(t) {
                  this._chapter = t
              }
              ,
              a.setChapterByIndex = function(t) {
                  this._chapter = this.index2Chapter(t)
              }
              ,
              r(n, [{
                  key: "battleField",
                  get: function() {
                      return this._battleField
                  }
              }, {
                  key: "chapter",
                  get: function() {
                      return this._chapter
                  }
              }]),
              n
          }(a)) || c);
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/FightRewardWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./UIWindow.ts", "./ResList.ts", "./FrameAnimView.ts", "./UIListView.ts", "./EquipView.ts", "./UIHelper.ts", "./Client.ts", "./Def.ts"], (function(e) {
  var t, i, n, a, s, o, r, l, u, p, c, h, d, f, y, w, m, b, C, g;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          a = e.assertThisInitialized
      }
      , function(e) {
          s = e.cclegacy,
          o = e.Button,
          r = e.Node,
          l = e.Label,
          u = e.Sprite,
          p = e.Prefab,
          c = e.Vec3
      }
      , function(e) {
          h = e.default
      }
      , function(e) {
          d = e.default
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          y = e.FrameAnimView
      }
      , function(e) {
          w = e.UIListView
      }
      , function(e) {
          m = e.EquipView
      }
      , function(e) {
          b = e.default
      }
      , function(e) {
          C = e.default
      }
      , function(e) {
          g = e.RewardType
      }
      ],
      execute: function() {
          var v, I, P, E, L, T, V, D, q, R, B, N, z, F, O, j, k, M, x;
          s._RF.push({}, "2398cikXMJN87zPny0afsnk", "FightRewardWindow", void 0);
          e("default", (v = uiBind("fgui/finish", "FightRewardWindow"),
          I = uiInject("Bg", o),
          P = uiInject("Panel1", r),
          E = uiInject("Panel1/Chest", o),
          L = uiInject("Panel1/OpenButton", o),
          T = uiInject("Panel1/OpenButton/Label", l),
          V = uiInject("Panel2", r),
          D = uiInject("Panel2/Chest", u),
          q = uiInject("Panel2/EquipList", w),
          v((N = t((B = function(e) {
              function t() {
                  for (var t, i = arguments.length, s = new Array(i), o = 0; o < i; o++)
                      s[o] = arguments[o];
                  return t = e.call.apply(e, [this].concat(s)) || this,
                  n(t, "CloseBtn", N, a(t)),
                  n(t, "Panel1", z, a(t)),
                  n(t, "Chest1", F, a(t)),
                  n(t, "OpenButton", O, a(t)),
                  n(t, "KeyLabel", j, a(t)),
                  n(t, "Panel2", k, a(t)),
                  n(t, "Chest2", M, a(t)),
                  n(t, "EquipList", x, a(t)),
                  t.chestView = void 0,
                  t.treasureType = 1,
                  t.drops = [],
                  t.endTime = void 0,
                  t
              }
              i(t, e);
              var s = t.prototype;
              return s.getPrototype = function() {
                  return t.prototype
              }
              ,
              s.onEnable = function() {
                  var e = this;
                  this.Panel1.active = !0,
                  this.Panel2.active = !1,
                  this.onClick(this.CloseBtn, (function() {
                      e.Panel2.active && Date.now() > e.endTime && e.close()
                  }
                  ));
                  var t = C.hero.getMain()
                    , i = !0;
                  this.KeyLabel.string = t.vit + "/1",
                  this.onClick(this.OpenButton, (function() {
                      t && i && (t.addVit(-1),
                      i = !1),
                      e.chestView && (e.Panel1.active = !1,
                      e.Chest2.spriteFrame = null,
                      e.chestView.node.position = e.Chest2.node.position,
                      e.chestView.play("open", e, (function() {
                          var t = e.chestView.getClip("open").spriteFrames;
                          e.Chest2.spriteFrame = t[t.length - 1],
                          e.Panel2.active = !0,
                          e.chestView.node.active = !1,
                          e.endTime = Date.now() + 1e3
                      }
                      )),
                      h.action.delayCall(800, e, e.onChestOpen))
                  }
                  ));
                  var n = [f.chest_silver.path, f.chest_gold.path, f.chest_colorful.path][this.treasureType - 1];
                  h.res.spawnAsyn(n, p, null, null, this.node, this, (function(t) {
                      e.active ? (t.position = e.Chest1.node.position,
                      t.setSiblingIndex(10),
                      e.chestView = t.getComponent(y),
                      e.chestView.play("idle")) : h.res.recycle(t)
                  }
                  )),
                  this.EquipList.itemRenderer = this.itemRenderer.bind(this),
                  this.EquipList.numItems = this.drops.length
              }
              ,
              s.onDisable = function() {
                  this.chestView && (h.res.recycle(this.chestView.node),
                  this.chestView = null)
              }
              ,
              s.onChestOpen = function() {
                  this.Panel2.active = !0,
                  this.Panel2.setSiblingIndex(10);
                  for (var e = this.EquipList.numItems, t = this.EquipList.itemArray, i = 136 * (e - 1) * -.5, n = 0; n < e; n++) {
                      var a = t[n]
                        , s = new c(0,-300,0)
                        , o = new c(i + 136 * n,0,0);
                      a.position = s,
                      a.scale = c.ZERO,
                      h.action.beginSequence(),
                      h.action.delay(100 * n),
                      this.onNodeLerp(a, s, o, 300),
                      h.action.end()
                  }
              }
              ,
              s.onNodeLerp = function(e, t, i, n) {
                  var a = new c
                    , s = new c;
                  h.action.lerp(this, (function(n) {
                      e.position = c.lerp(a, t, i, n),
                      e.scale = c.lerp(s, c.ZERO, c.ONE, n)
                  }
                  ), 0, 1, n)
              }
              ,
              s.itemRenderer = function(e, t) {
                  var i = t.getComponent(m)
                    , n = this.drops[e];
                  if (n.type == g.Equip) {
                      var a = n.data.TIDAry[0]
                        , s = DataCenter.Equipment.Get(a);
                      i.setIcon(b.getEquipIcon(s.Icon)),
                      i.setName(s.Name),
                      i.setQuality(s.Rarity),
                      i.setCountText("")
                  } else if (n.type == g.C1) {
                      var o = n.data;
                      i.setIcon(b.getComIcon("crystal")),
                      i.setName(o + " $crystal"),
                      i.setQuality(1),
                      i.setCountText("")
                  } else if (n.type == g.C2) {
                      var r = n.data;
                      i.setIcon(b.getComIcon("leaf")),
                      i.setName(r + " $leaf"),
                      i.setQuality(1),
                      i.setCountText("")
                  } else {
                      var l = n.data
                        , u = l.ID
                        , p = DataCenter.Material.Get(u);
                      i.setIcon(b.getMaterialIcon(p.Icon)),
                      i.setName(p.Name),
                      i.setQuality(p.Rarity),
                      i.setCount(0 | l.Num)
                  }
              }
              ,
              s.setData = function(e) {
                  if (this.drops = [],
                  null != e.ETokens)
                      for (var t = e.ETokens, i = 0; i < t.length; ++i)
                          this.drops.push({
                              type: g.Equip,
                              data: t[i]
                          });
                  if (null != e.MTokens)
                      for (var n = e.MTokens, a = 0; a < n.length; ++a)
                          this.drops.push({
                              type: g.Material,
                              data: n[a]
                          });
                  var s = h.utils.parseInt(e.C1);
                  s > 0 && this.drops.push({
                      type: g.C1,
                      data: s
                  });
                  var o = h.utils.parseInt(e.C2);
                  o > 0 && this.drops.push({
                      type: g.C2,
                      data: o
                  });
                  var r = DataCenter.Drop.Get(e.DropID[0]);
                  r ? this.treasureType = r.TreasureType : (this.treasureType = 1,
                  console.error("drop id error：}", e))
              }
              ,
              t
          }(d)).prototype, "CloseBtn", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          z = t(B.prototype, "Panel1", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          F = t(B.prototype, "Chest1", [E], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          O = t(B.prototype, "OpenButton", [L], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          j = t(B.prototype, "KeyLabel", [T], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          k = t(B.prototype, "Panel2", [V], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          M = t(B.prototype, "Chest2", [D], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          x = t(B.prototype, "EquipList", [q], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          R = B)) || R));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/FightScene.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SceneBase.ts", "./Fight.ts", "./UIRoot.ts", "./Client.ts", "./Kit.ts"], (function(t) {
  var e, n, i, o, c, s, r, u, a;
  return {
      setters: [function(t) {
          e = t.inheritsLoose,
          n = t.asyncToGenerator,
          i = t.regeneratorRuntime
      }
      , function(t) {
          o = t.cclegacy
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          a = t.default
      }
      ],
      execute: function() {
          o._RF.push({}, "34855eWNyZJ75IQW4kyxI8O", "FightScene", void 0);
          t("default", function(t) {
              function o() {
                  return t.apply(this, arguments) || this
              }
              e(o, t);
              var c = o.prototype;
              return c.onEnter = function() {
                  a.sound.stop(),
                  this.preload()
              }
              ,
              c.preload = function() {
                  var t = n(i().mark((function t() {
                      var e;
                      return i().wrap((function(t) {
                          for (; ; )
                              switch (t.prev = t.next) {
                              case 0:
                                  return t.next = 2,
                                  r.fight.waitOpen();
                              case 2:
                                  return t.next = 4,
                                  r.joystic.waitOpen();
                              case 4:
                                  return e = u.fight.battleField,
                                  t.next = 7,
                                  s.ins.start(e);
                              case 7:
                              case "end":
                                  return t.stop()
                              }
                      }
                      ), t)
                  }
                  )));
                  return function() {
                      return t.apply(this, arguments)
                  }
              }(),
              c.onExit = function() {
                  r.fight.close(),
                  r.fightSelect.close(),
                  r.fightShop.close(),
                  r.joystic.close(),
                  r.pause.close(),
                  s.ins.close()
              }
              ,
              c.disConnected = function() {
                  s.ins.disConnected()
              }
              ,
              o
          }(c));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/FightSelectWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIListView.ts", "./UIToggle.ts", "./UIWindow.ts", "./AttrType.ts", "./ObjMgr.ts", "./UIHelper.ts", "./UIRoot.ts", "./Kit.ts", "./MessageId.ts", "./proto.mjs_cjs=&original=.js", "./Fight.ts", "./Client.ts", "./CreatureImgDress.ts", "./EquipView.ts", "./proto.js"], (function(e) {
  var t, i, n, o, s, r, a, l, h, c, p, d, u, m, g, y, f, I, C, B, b, S, G, v, L, P, w;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          o = e.assertThisInitialized
      }
      , function(e) {
          s = e.cclegacy,
          r = e.Node,
          a = e.Button,
          l = e.Label,
          h = e.Vec3,
          c = e.Widget,
          p = e.Color,
          d = e.Sprite,
          u = e.RichText
      }
      , function(e) {
          m = e.UIListView
      }
      , function(e) {
          g = e.UIToggle
      }
      , function(e) {
          y = e.default
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          I = e.default
      }
      , function(e) {
          C = e.default
      }
      , function(e) {
          B = e.default
      }
      , function(e) {
          b = e.default
      }
      , function(e) {
          S = e.default
      }
      , null, function(e) {
          G = e.default
      }
      , function(e) {
          v = e.default
      }
      , function(e) {
          L = e.default
      }
      , function(e) {
          P = e.EquipView
      }
      , function(e) {
          w = e.default
      }
      ],
      execute: function() {
          var O, R, H, T, N, W, A, j, k, D, z, F, E, U, _, q, x, V, M, K, Q, Z, J, X, Y;
          s._RF.push({}, "d2df8lgBhlHD5T0lKqazHBZ", "FightSelectWindow", void 0);
          e("default", (O = uiBind("fgui/skill", "FightSelectWindow"),
          R = uiInject("GoodsList", m),
          H = uiInject("Player/Body", r),
          T = uiInject("Player/Body/Head", a),
          N = uiInject("Player/Body/Head/Mask/Human", L),
          W = uiInject("Player/Body/PropertyList", m),
          A = uiInject("Player/HideBtn", g),
          j = uiInject("WeadonList", m),
          k = uiInject("ItemList", m),
          D = uiInject("SaleBtn", a),
          z = uiInject("SaleBtn/Price", l),
          F = uiInject("CollcectBtn", a),
          O((_ = t((U = function(e) {
              function t() {
                  for (var t, i = arguments.length, s = new Array(i), r = 0; r < i; r++)
                      s[r] = arguments[r];
                  return t = e.call.apply(e, [this].concat(s)) || this,
                  n(t, "GoodsList", _, o(t)),
                  n(t, "PlayerBody", q, o(t)),
                  n(t, "PlayerHeadBtn", x, o(t)),
                  n(t, "HeadAvatar", V, o(t)),
                  n(t, "PropertyList", M, o(t)),
                  n(t, "PlayerHideBtn", K, o(t)),
                  n(t, "WeadonList", Q, o(t)),
                  n(t, "ItemList", Z, o(t)),
                  n(t, "SaleBtn", J, o(t)),
                  n(t, "SalePrice", X, o(t)),
                  n(t, "CollcectBtn", Y, o(t)),
                  t.player = null,
                  t.goods = null,
                  t.wsnAry = void 0,
                  t.items = void 0,
                  t
              }
              i(t, e);
              var s = t.prototype;
              return s.getPrototype = function() {
                  return t.prototype
              }
              ,
              s.onEnable = function() {
                  var e = this;
                  console.log("FightSelectWindow:onEnable");
                  var t = v.hero.getMain();
                  this.HeadAvatar.node.active = !0,
                  t && t.skin ? this.HeadAvatar.setSkin(t.skin) : this.HeadAvatar.setHeroData(t, !0),
                  this.player = I.ins.getChar(),
                  this.PropertyList.itemRenderer = this.propertyRenderer.bind(this),
                  this.PropertyList.numItems = f.length,
                  this.GoodsList.itemRenderer = this.goodsRenderer.bind(this),
                  this.WeadonList.itemRenderer = this.weaponRenderer.bind(this),
                  this.ItemList.itemRenderer = this.itemRenderer.bind(this),
                  this.refreshGoodsList(),
                  this.refreshWeadonList(),
                  this.refresItemList(),
                  this.onClick(this.SaleBtn, (function() {
                      0 != G.ins.chestItem && e.requestChestSell(G.ins.chestItem)
                  }
                  )),
                  this.onClick(this.CollcectBtn, (function() {
                      0 != G.ins.chestItem && e.requestChestCollect(G.ins.chestItem)
                  }
                  )),
                  this.onClick(this.PlayerHeadBtn, (function() {
                      var t = new h;
                      b.utils.localToGlobal(e.PlayerHeadBtn.node, t),
                      t.x += 150,
                      t.y -= 88,
                      B.playerTips.setPosition(t),
                      B.playerTips.open()
                  }
                  ));
                  var i = this.PlayerHideBtn.getComponent(c);
                  i.left = 218,
                  this.PlayerBody.active = !0,
                  this.PlayerHideBtn.setIsOnNotNotify(!0),
                  this.PlayerHideBtn.caller = this,
                  this.PlayerHideBtn.onCheck = function(t) {
                      t.setIsOnNotNotify(!t.isOn),
                      e.PlayerBody.active = t.isOn,
                      i.left = t.isOn ? 218 : 0
                  }
                  ,
                  this.register(S.GameShopOperate, this, this.onGameShopOperate)
              }
              ,
              s.onDisable = function() {
                  console.log("FightSelectWindow:onDisable"),
                  this.unRegister(S.GameShopOperate, this, this.onGameShopOperate)
              }
              ,
              s.requestChestSell = function(e) {
                  var t = new w.msg.GameShopOperate;
                  t.Op = w.msg.GameShopOpType.GSO_ChestSell,
                  t.OpVal.push(e),
                  this.send(S.GameShopOperate, t)
              }
              ,
              s.requestChestCollect = function(e) {
                  var t = new w.msg.GameShopOperate;
                  t.Op = w.msg.GameShopOpType.GSO_ChestCollect,
                  t.OpVal.push(e),
                  this.send(S.GameShopOperate, t)
              }
              ,
              s.onGameShopOperate = function(e) {
                  switch (this.player.addGold(e.AddGold),
                  e.RefreshGold && e.RefreshGold.length > 0 && G.ins.setRefreshGold(e.RefreshGold[0]),
                  G.ins.onAssetsAndAttrs(e.Update),
                  e.Goods && e.Goods.length > 0 && G.ins.cloneShopGoods(e.Goods),
                  e.Op) {
                  case w.msg.GameShopOpType.GSO_ChestSell:
                      this.player.getItemCom().onOpenChest(),
                      G.ins.setChestItem(e.ChestItem),
                      this.refreshGoodsList();
                      break;
                  case w.msg.GameShopOpType.GSO_ChestCollect:
                      this.player.getItemCom().onOpenChest(),
                      G.ins.setChestItem(e.ChestItem),
                      this.refreshGoodsList(),
                      this.refresItemList(),
                      this.refresPropertyList()
                  }
                  0 == G.ins.chestItem && (B.fightShop.open(),
                  this.close())
              }
              ,
              s.refreshGoodsList = function() {
                  var e = G.ins.chestItem;
                  this.goods = [e],
                  this.GoodsList.numItems = this.goods.length
              }
              ,
              s.refreshWeadonList = function() {
                  this.wsnAry = this.player.getWeaponSNAry(),
                  this.WeadonList.numItems = this.wsnAry.length
              }
              ,
              s.refresItemList = function() {
                  this.items = this.player.getItemIds(),
                  this.ItemList.numItems = this.items.length
              }
              ,
              s.refresPropertyList = function() {
                  this.PropertyList.numItems = f.length
              }
              ,
              s.propertyRenderer = function(e, t) {
                  var i = t.getChildByName("name").getComponent(l)
                    , n = t.getChildByName("value").getComponent(l)
                    , o = f[e]
                    , s = this.player.getDisplayAttr(o.value);
                  i.string = o.name,
                  n.string = this.player.getDisplayAttr(o.value);
                  var r = this.player.isAttrMax(o.value);
                  try {
                      if (s.endsWith("%")) {
                          s = s.substring(0, s.length - 1);
                          var a = parseFloat(s);
                          n.color = r ? p.RED : a > 0 ? p.GREEN : p.WHITE
                      } else {
                          a = parseFloat(s);
                          n.color = a > 0 ? p.GREEN : p.WHITE
                      }
                  } catch (e) {
                      console.error(e)
                  }
              }
              ,
              s.goodsRenderer = function(e, t) {
                  var i = this.goods[e]
                    , n = DataCenter.Item.Get(i);
                  if (null != n) {
                      var o = t.getChildByName("Panel")
                        , s = o.getChildByName("BackFrame").getComponent(d)
                        , r = o.getChildByName("Icon").getComponent(d)
                        , h = o.getChildByName("TypeIcon").getComponent(d)
                        , c = o.getChildByName("Title").getComponent(l)
                        , p = o.getChildByName("TypeText").getComponent(l)
                        , m = o.getChildByName("Desc").getComponent(u)
                        , g = o.getChildByName("BuyBtn").getComponent(a)
                        , y = o.getChildByName("LockBtn").getComponent(a)
                        , f = o.getChildByName("UnLockBtn").getComponent(a)
                        , I = o.getChildByName("lock_tb");
                      o.active = !0,
                      h.spriteFrame = C.getComIcon("item"),
                      s.spriteFrame = C.getGoodsBackground(n.Rarity),
                      r.spriteFrame = C.getItemIcon(n.IconId),
                      c.color = C.getItemColor(n.Rarity),
                      c.string = n.Name,
                      m.string = n.Desc,
                      y.node.active = !1,
                      f.node.active = !1,
                      g.node.active = !1,
                      I.active = !1,
                      p.node.active = !1,
                      this.SalePrice.string = n.Sell.toString()
                  }
              }
              ,
              s.itemRenderer = function(e, t) {
                  var i = t.getComponent(P)
                    , n = this.items[e]
                    , o = DataCenter.Item.Get(n);
                  i.setIcon(C.getItemIcon(o.IconId)),
                  i.setQualityOld(o.Rarity),
                  i.setStar(o.Rarity),
                  i.setCountText("");
                  var s = t.getComponent(a);
                  this.onClick(s, (function() {
                      B.itemTips.setData(n),
                      B.itemTips.open()
                  }
                  ))
              }
              ,
              s.weaponRenderer = function(e, t) {
                  var i = t.getComponent(P)
                    , n = this.player.getWeapon(this.wsnAry[e]).getWeaponConfig();
                  i.setIcon(C.getWeaponIcon(n.IconId)),
                  i.setQualityOld(n.Rarity),
                  i.setStar(n.Rarity),
                  i.setCountText("")
              }
              ,
              t
          }(y)).prototype, "GoodsList", [R], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          q = t(U.prototype, "PlayerBody", [H], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          x = t(U.prototype, "PlayerHeadBtn", [T], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          V = t(U.prototype, "HeadAvatar", [N], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          M = t(U.prototype, "PropertyList", [W], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          K = t(U.prototype, "PlayerHideBtn", [A], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Q = t(U.prototype, "WeadonList", [j], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Z = t(U.prototype, "ItemList", [k], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          J = t(U.prototype, "SaleBtn", [D], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          X = t(U.prototype, "SalePrice", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Y = t(U.prototype, "CollcectBtn", [F], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          E = U)) || E));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/FightShopWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./Fight.ts", "./UIListView.ts", "./Kit.ts", "./AttrType.ts", "./BattleMgr.ts", "./ObjMgr.ts", "./UIHelper.ts", "./UIToggle.ts", "./UIRoot.ts", "./proto.mjs_cjs=&original=.js", "./MessageId.ts", "./CreatureImgDress.ts", "./Client.ts", "./EquipView.ts", "./proto.js"], (function(e) {
  var t, i, o, n, s, r, a, l, p, h, d, u, c, g, y, f, m, G, C, I, v, L, T, b, B, S, O, w, P, R, W;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          o = e.initializerDefineProperty,
          n = e.assertThisInitialized
      }
      , function(e) {
          s = e.cclegacy,
          r = e.Label,
          a = e.Button,
          l = e.Node,
          p = e.Vec3,
          h = e.Widget,
          d = e.input,
          u = e.Input,
          c = e.KeyCode,
          g = e.Color,
          y = e.Sprite,
          f = e.RichText
      }
      , function(e) {
          m = e.default
      }
      , function(e) {
          G = e.default
      }
      , function(e) {
          C = e.UIListView
      }
      , function(e) {
          I = e.default
      }
      , function(e) {
          v = e.default
      }
      , function(e) {
          L = e.BattleMgr
      }
      , function(e) {
          T = e.default
      }
      , function(e) {
          b = e.default
      }
      , function(e) {
          B = e.UIToggle
      }
      , function(e) {
          S = e.default
      }
      , null, function(e) {
          O = e.default
      }
      , function(e) {
          w = e.default
      }
      , function(e) {
          P = e.default
      }
      , function(e) {
          R = e.EquipView
      }
      , function(e) {
          W = e.default
      }
      ],
      execute: function() {
          var k, D, N, E, H, A, x, j, _, z, F, U, q, K, M, V, Y, Q, X, J, Z, $, ee, te, ie, oe, ne, se, re;
          s._RF.push({}, "76525faL1xO1YX+m7O51vES", "FightShopWindow", void 0);
          e("default", (k = uiBind("fgui/skill", "SkillWindow"),
          D = uiInject("Coin/Text", r),
          N = uiInject("RollBtn", a),
          E = uiInject("RollBtn/Label", r),
          H = uiInject("GoBtn", a),
          A = uiInject("GoodsList", C),
          x = uiInject("Player/Body", l),
          j = uiInject("Player/Body/Head", a),
          _ = uiInject("Player/Body/Head/Mask/Human", w),
          z = uiInject("Player/Body/PropertyList", C),
          F = uiInject("Player/HideBtn", B),
          U = uiInject("WeadonList", C),
          q = uiInject("ItemList", C),
          K = uiInject("Wave/Label", r),
          k((Y = t((V = function(e) {
              function t() {
                  for (var t, i = arguments.length, s = new Array(i), r = 0; r < i; r++)
                      s[r] = arguments[r];
                  return t = e.call.apply(e, [this].concat(s)) || this,
                  o(t, "CoinText", Y, n(t)),
                  o(t, "RollBtn", Q, n(t)),
                  o(t, "RollPrice", X, n(t)),
                  o(t, "GoBtn", J, n(t)),
                  o(t, "GoodsList", Z, n(t)),
                  o(t, "PlayerBody", $, n(t)),
                  o(t, "PlayerHeadBtn", ee, n(t)),
                  o(t, "HeadAvatar", te, n(t)),
                  o(t, "PropertyList", ie, n(t)),
                  o(t, "PlayerHideBtn", oe, n(t)),
                  o(t, "WeadonList", ne, n(t)),
                  o(t, "ItemList", se, n(t)),
                  o(t, "WaveText", re, n(t)),
                  t.player = null,
                  t.goods = null,
                  t.wsnAry = void 0,
                  t.items = void 0,
                  t.lastTick = void 0,
                  t
              }
              i(t, e);
              var s = t.prototype;
              return s.getPrototype = function() {
                  return t.prototype
              }
              ,
              s.onEnable = function() {
                  var e = this;
                  console.log("FightShopWindow:onEnable"),
                  this.lastTick = Date.now();
                  var t = P.hero.getMain();
                  this.HeadAvatar.node.active = !0,
                  t && t.skin ? this.HeadAvatar.setSkin(t.skin) : this.HeadAvatar.setHeroData(t, !0),
                  this.onClick(this.RollBtn, (function() {
                      e.requestGoodsRefresh()
                  }
                  )),
                  this.onClick(this.GoBtn, (function() {
                      e.requestGoodsClose()
                  }
                  )),
                  this.onClick(this.PlayerHeadBtn, (function() {
                      var t = new p;
                      I.utils.localToGlobal(e.PlayerHeadBtn.node, t),
                      t.x += 150,
                      t.y -= 88,
                      S.playerTips.setPosition(t),
                      S.playerTips.open()
                  }
                  )),
                  this.player = T.ins.getChar(),
                  this.WaveText.string = (L.ins.getStage().getWave() + 1).toString();
                  var i = P.fight.chapter2Index(P.fight.chapter || 1e4);
                  P.fight.setWaveRecord(i, L.ins.getStage().getWave()),
                  this.PropertyList.itemRenderer = this.propertyRenderer.bind(this),
                  this.GoodsList.itemRenderer = this.goodsRenderer.bind(this),
                  this.GoodsList.node.setPosition(new p(65,84)),
                  this.WeadonList.itemRenderer = this.weaponRenderer.bind(this),
                  this.ItemList.itemRenderer = this.itemRenderer.bind(this),
                  this.refreshPropertyList(),
                  this.refreshCoin(),
                  this.refreshGoodsList(),
                  this.refreshWeadonList(),
                  this.refresItemList();
                  var o = this.GoodsList.getComponent(h);
                  o.isAlignLeft = !0,
                  o.left = 255;
                  var n = this.PlayerHideBtn.getComponent(h);
                  n.left = 218,
                  this.PlayerBody.active = !0,
                  this.PlayerHideBtn.setIsOnNotNotify(!0),
                  this.PlayerHideBtn.caller = this,
                  this.PlayerHideBtn.onCheck = function(t) {
                      t.setIsOnNotNotify(!t.isOn),
                      e.PlayerBody.active = t.isOn,
                      n.left = t.isOn ? 218 : 0,
                      t.isOn ? (o.isAlignLeft = !0,
                      o.left = 255) : (o.isAlignHorizontalCenter = !0,
                      o.horizontalCenter = 0)
                  }
                  ,
                  this.register(O.GameShopOperate, this, this.onGameShopOperate),
                  d.on(u.EventType.KEY_DOWN, this.onKeyDown, this),
                  d.on(u.EventType.KEY_UP, this.onKeyUp, this)
              }
              ,
              s.onDisable = function() {
                  console.log("FightShopWindow:onDisable"),
                  this.unRegister(O.GameShopOperate, this, this.onGameShopOperate),
                  G.ins.resume(),
                  d.off(u.EventType.KEY_DOWN, this.onKeyDown, this),
                  d.off(u.EventType.KEY_UP, this.onKeyUp, this)
              }
              ,
              s.onKeyDown = function(e) {
                  e.keyCode == c.SPACE && this.requestGoodsRefresh()
              }
              ,
              s.onKeyUp = function(e) {}
              ,
              s.requestGoodsBuy = function(e, t) {
                  if (this.player.getGold() < t.Price)
                      S.textTips.play("Not Enough Gold！");
                  else if (1 != t.Type || this.player.canWeaponBuy(t.TblID)) {
                      if (0 == t.Type) {
                          var i = DataCenter.Item.Get(t.TblID);
                          if (this.player.getItemCount(i.Id) >= i.ChapterNumLimit)
                              return void S.textTips.play("You can only carry a maximum of 1 item of this")
                      }
                      var o = new W.msg.GameShopOperate;
                      o.Op = W.msg.GameShopOpType.GSO_GoodsBuy,
                      o.OpVal.push(e),
                      this.send(O.GameShopOperate, o)
                  } else
                      S.textTips.play("You can't get more weapons")
              }
              ,
              s.requestGoodsRefresh = function() {
                  if (this.player.getGold() < G.ins.refreshGold)
                      S.textTips.play("Not Enough Gold！");
                  else {
                      var e = new W.msg.GameShopOperate;
                      e.Op = W.msg.GameShopOpType.GSO_GoodsRefresh,
                      this.send(O.GameShopOperate, e)
                  }
              }
              ,
              s.requestGoodsClose = function() {
                  var e = new W.msg.GameShopOperate;
                  e.Op = W.msg.GameShopOpType.GSO_GoodsClose,
                  this.send(O.GameShopOperate, e)
              }
              ,
              s.requestGoodsLock = function(e, t) {
                  if (!(Date.now() - this.lastTick < 300)) {
                      this.lastTick = Date.now();
                      var i = new W.msg.GameShopOperate;
                      i.Op = W.msg.GameShopOpType.GSO_GoodsLock,
                      i.OpVal.push(e),
                      this.send(O.GameShopOperate, i)
                  }
              }
              ,
              s.onGameShopOperate = function(e) {
                  switch (this.player.addGold(e.AddGold),
                  e.RefreshGold && e.RefreshGold.length > 0 && G.ins.setRefreshGold(e.RefreshGold[0]),
                  G.ins.onAssetsAndAttrs(e.Update),
                  e.Op) {
                  case W.msg.GameShopOpType.GSO_WeaponSell:
                      this.refreshCoin(),
                      this.refreshWeadonList(),
                      this.refreshPropertyList();
                      break;
                  case W.msg.GameShopOpType.GSO_WeaponMerge:
                      this.refreshWeadonList(),
                      this.refreshPropertyList();
                      break;
                  case W.msg.GameShopOpType.GSO_GoodsBuy:
                      var t = this.goods[e.OpVal[0]];
                      t && (t.Price = -1),
                      this.refreshCoin(),
                      this.refresItemList(),
                      this.refreshWeadonList(),
                      this.refreshPropertyList(),
                      this.refreshGoodsList();
                      break;
                  case W.msg.GameShopOpType.GSO_GoodsRefresh:
                      this.refreshCoin();
                      break;
                  case W.msg.GameShopOpType.GSO_GoodsLock:
                      var i = e.OpVal[0];
                      this.goods[i] && (this.goods[i].Lock = !this.goods[i].Lock,
                      this.GoodsList.refreshItemRenderer(i));
                      break;
                  case W.msg.GameShopOpType.GSO_GoodsClose:
                      G.ins.nextStage(),
                      this.close(),
                      G.ins.onSpawnStart()
                  }
                  e.Goods && e.Goods.length > 0 && (G.ins.cloneShopGoods(e.Goods),
                  this.refreshGoodsList())
              }
              ,
              s.refreshCoin = function() {
                  this.CoinText.string = this.player.getGold().toString(),
                  this.RollPrice.string = G.ins.refreshGold.toString()
              }
              ,
              s.refreshPropertyList = function() {
                  this.PropertyList.numItems = v.length
              }
              ,
              s.refreshGoodsList = function() {
                  this.goods = G.ins.shopGoods,
                  this.GoodsList.numItems = this.goods.length
              }
              ,
              s.refreshWeadonList = function() {
                  this.wsnAry = this.player.getWeaponSNAry(),
                  this.WeadonList.numItems = this.wsnAry.length
              }
              ,
              s.refresItemList = function() {
                  this.items = this.player.getItemIds(),
                  this.ItemList.numItems = this.items.length
              }
              ,
              s.propertyRenderer = function(e, t) {
                  var i = t.getChildByName("name").getComponent(r)
                    , o = t.getChildByName("value").getComponent(r)
                    , n = v[e]
                    , s = this.player.getDisplayAttr(n.value);
                  i.string = n.name,
                  o.string = this.player.getDisplayAttr(n.value);
                  var a = this.player.isAttrMax(n.value);
                  try {
                      if (s.endsWith("%")) {
                          s = s.substring(0, s.length - 1);
                          var l = parseFloat(s);
                          o.color = a ? g.RED : l > 0 ? g.GREEN : g.WHITE
                      } else {
                          l = parseFloat(s);
                          o.color = l > 0 ? g.GREEN : g.WHITE
                      }
                  } catch (e) {
                      console.error(e)
                  }
              }
              ,
              s.goodsRenderer = function(e, t) {
                  var i = this
                    , o = this.goods[e];
                  if (null != o)
                      if (o.Price < 0)
                          t.getChildByName("Panel").active = !1;
                      else {
                          var n = null;
                          if (null != (n = 0 == o.Type ? DataCenter.Item.Get(o.TblID) : DataCenter.Weapon.Get(o.TblID))) {
                              var s = t.getChildByName("Panel")
                                , l = s.getChildByName("BackFrame").getComponent(y)
                                , p = s.getChildByName("Icon").getComponent(y)
                                , h = s.getChildByName("TypeIcon").getComponent(y)
                                , d = s.getChildByName("Title").getComponent(r)
                                , u = s.getChildByName("TypeText").getComponent(r)
                                , c = s.getChildByName("Desc").getComponent(f)
                                , g = s.getChildByName("BuyBtn").getComponent(a)
                                , m = g.node.getChildByName("Label").getComponent(r)
                                , G = s.getChildByName("LockBtn").getComponent(a)
                                , C = s.getChildByName("UnLockBtn").getComponent(a)
                                , I = s.getChildByName("lock_tb");
                              s.active = !0,
                              h.spriteFrame = b.getComIcon(0 == o.Type ? "item" : "weapon"),
                              l.spriteFrame = b.getGoodsBackground(n.Rarity),
                              0 == o.Type ? p.spriteFrame = b.getItemIcon(n.IconId) : p.spriteFrame = b.getWeaponIcon(n.IconId, !0),
                              d.color = b.getItemColor(n.Rarity),
                              d.string = n.Name,
                              c.string = n.Desc,
                              m.string = o.Price.toString(),
                              I.active = o.Lock,
                              G.node.active = !o.Lock,
                              C.node.active = o.Lock,
                              0 == o.Type ? u.node.active = !1 : (u.node.active = !0,
                              u.string = DataCenter.Build.Get(n.Type).Name),
                              this.onClick(g, (function() {
                                  i.requestGoodsBuy(e, o)
                              }
                              )),
                              this.onClick(G, (function() {
                                  i.requestGoodsLock(e, !0)
                              }
                              )),
                              this.onClick(C, (function() {
                                  i.requestGoodsLock(e, !1)
                              }
                              ))
                          }
                      }
                  else
                      console.log("goods null")
              }
              ,
              s.itemRenderer = function(e, t) {
                  var i = t.getComponent(R)
                    , o = this.items[e]
                    , n = DataCenter.Item.Get(o);
                  i.setIcon(b.getItemIcon(n.IconId)),
                  i.setQualityOld(n.Rarity),
                  i.setStar(n.Rarity),
                  i.setCountText("");
                  var s = t.getComponent(a);
                  this.onClick(s, (function() {
                      var e = I.utils.localToGlobal(t);
                      S.itemTips.setPosition(e),
                      S.itemTips.setData(o),
                      S.itemTips.open()
                  }
                  ))
              }
              ,
              s.weaponRenderer = function(e, t) {
                  var i = this
                    , o = t.getComponent(R)
                    , n = this.player.getWeapon(this.wsnAry[e])
                    , s = n.getWeaponConfig();
                  o.setIcon(b.getWeaponIcon(s.IconId)),
                  o.setQualityOld(s.Rarity),
                  o.setStar(s.Rarity),
                  o.setCountText("");
                  var r = t.getComponent(a);
                  this.onClick(r, (function() {
                      var e = i.player.getWeaponTypeNumByID(s.Id)
                        , o = I.utils.localToGlobal(t);
                      S.weaponTips.setPosition(o),
                      S.weaponTips.setData(n.getCfgID(), n.getWSN(), e),
                      S.weaponTips.listen(i, i.onWeaponTipsEvent),
                      S.weaponTips.open()
                  }
                  ))
              }
              ,
              s.onWeaponTipsEvent = function(e, t) {
                  "merge" == e ? (this.refreshWeadonList(),
                  this.refreshPropertyList()) : "sale" == e && (this.refreshCoin(),
                  this.refreshWeadonList(),
                  this.refreshPropertyList())
              }
              ,
              t
          }(m)).prototype, "CoinText", [D], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Q = t(V.prototype, "RollBtn", [N], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          X = t(V.prototype, "RollPrice", [E], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          J = t(V.prototype, "GoBtn", [H], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Z = t(V.prototype, "GoodsList", [A], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          $ = t(V.prototype, "PlayerBody", [x], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ee = t(V.prototype, "PlayerHeadBtn", [j], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          te = t(V.prototype, "HeadAvatar", [_], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ie = t(V.prototype, "PropertyList", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          oe = t(V.prototype, "PlayerHideBtn", [F], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ne = t(V.prototype, "WeadonList", [U], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          se = t(V.prototype, "ItemList", [q], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          re = t(V.prototype, "WaveText", [K], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          M = V)) || M));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/FightWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./UIWindow.ts", "./Fight.ts", "./UIRoot.ts", "./Client.ts", "./GameConfig.ts", "./CreatureImgDress.ts", "./FightBossPanel.ts"], (function(t) {
  var e, i, n, s, o, r, a, l, u, c, h, p, g, x, b, f, T, P;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          n = t.initializerDefineProperty,
          s = t.assertThisInitialized
      }
      , function(t) {
          o = t.cclegacy,
          r = t.ProgressBar,
          a = t.Label,
          l = t.Button,
          u = t.Sprite,
          c = t.Vec3
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          g = t.default
      }
      , function(t) {
          x = t.default
      }
      , function(t) {
          b = t.default
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          T = t.default
      }
      , function(t) {
          P = t.FightBossPanel
      }
      ],
      execute: function() {
          var B, d, m, v, w, I, y, H, S, z, C, j, N, M, W, L, E, F, k, D, G, V, A, U, R, _, q, K, Z, J, O, Q, X, Y, $;
          o._RF.push({}, "95f39WGVI5EKqPZCnEa2psq", "FightWindow", void 0);
          t("default", (B = uiBind("fgui/fight", "FightWindow"),
          d = uiInject("Node/HPBar", r),
          m = uiInject("Node/ExpBar", r),
          v = uiInject("Node/HPBar/Label", a),
          w = uiInject("Node/ExpBar/Label", a),
          I = uiInject("Node/ScoreTxt", a),
          y = uiInject("Node/Frame/Mask/Human", T),
          H = uiInject("Node-001/WaveTxt", a),
          S = uiInject("Node-001/TimeTxt", a),
          z = uiInject("Node-002/Coin/Txt", a),
          C = uiInject("Node-002/Treasurebox/Txt", a),
          j = uiInject("Node-002/PauseButton", l),
          N = uiInject("Node-002/Coin/Icon", u),
          M = uiInject("Node-002/Treasurebox/Icon", u),
          W = uiInject("Node/GmButton", l),
          L = uiInject("BosssLayout/BossPanel1", P),
          E = uiInject("BosssLayout/BossPanel2", P),
          B((D = e((k = function(t) {
              function e() {
                  for (var e, i = arguments.length, o = new Array(i), r = 0; r < i; r++)
                      o[r] = arguments[r];
                  return e = t.call.apply(t, [this].concat(o)) || this,
                  n(e, "HPBar", D, s(e)),
                  n(e, "ExpBar", G, s(e)),
                  n(e, "HPTxt", V, s(e)),
                  n(e, "LVTxt", A, s(e)),
                  n(e, "ScoreTxt", U, s(e)),
                  n(e, "HeadAvatar", R, s(e)),
                  n(e, "WaveTxt", _, s(e)),
                  n(e, "TimeTxt", q, s(e)),
                  n(e, "CoinTxt", K, s(e)),
                  n(e, "TreasureTxt", Z, s(e)),
                  n(e, "PauseButton", J, s(e)),
                  n(e, "CoinIcon", O, s(e)),
                  n(e, "TreasureIcon", Q, s(e)),
                  n(e, "GmButton", X, s(e)),
                  n(e, "BossPanel1", Y, s(e)),
                  n(e, "BossPanel2", $, s(e)),
                  e.lv = 1,
                  e.hp = 100,
                  e.hpMax = 100,
                  e.exp = 100,
                  e.expMax = 100,
                  e.wave = 1,
                  e.coin = 0,
                  e.treasure = 0,
                  e.time = 0,
                  e.score = 0,
                  e
              }
              i(e, t);
              var o = e.prototype;
              return o.getPrototype = function() {
                  return e.prototype
              }
              ,
              o.onEnable = function() {
                  var t = b.hero.getMain();
                  this.HeadAvatar.node.active = !0,
                  t && t.skin ? this.HeadAvatar.setSkin(t.skin) : this.HeadAvatar.setHeroData(t, !0),
                  this.LVTxt.string = this.lv.toString(),
                  this.HPBar.progress = this.hp / this.hpMax,
                  this.HPTxt.string = this.hp + "/" + this.hpMax,
                  this.ExpBar.progress = this.exp / this.expMax,
                  this.WaveTxt.string = this.wave.toString(),
                  this.CoinTxt.string = this.coin.toString(),
                  this.TreasureTxt.string = this.treasure.toString(),
                  this.TimeTxt.string = this.time.toString(),
                  this.ScoreTxt.string = this.score.toString(),
                  this.showBossPanel1(!1),
                  this.showBossPanel2(!1),
                  this.onClick(this.PauseButton, (function() {
                      g.ins.isSpawnState() && (g.ins.battlePause(!0),
                      g.ins.pauseUI = 0)
                  }
                  )),
                  h.config.get(f).Debug && this.onClick(this.GmButton, (function() {
                      g.ins.battlePause(!0),
                      g.ins.pauseUI = 1
                  }
                  ))
              }
              ,
              o.onPause = function() {
                  0 == g.ins.pauseUI ? (g.ins.pause(),
                  x.pause.open()) : (g.ins.pause(),
                  x.gm.open())
              }
              ,
              o.setLevel = function(t) {
                  this.LVTxt && (this.LVTxt.string = this.lv.toString())
              }
              ,
              o.setHP = function(t, e) {
                  this.hp = t,
                  this.hpMax = e,
                  this.HPBar && (this.HPBar.progress = this.hp / this.hpMax),
                  this.HPTxt && (this.HPTxt.string = this.hp + "/" + this.hpMax)
              }
              ,
              o.setExp = function(t, e) {
                  this.exp = t,
                  this.expMax = e,
                  this.ExpBar && (this.ExpBar.progress = this.exp / this.expMax)
              }
              ,
              o.setWave = function(t) {
                  this.wave = t,
                  this.WaveTxt && (this.WaveTxt.string = this.wave.toString())
              }
              ,
              o.setTime = function(t) {
                  var e = Math.ceil(t / 1e3);
                  this.time != e && (this.time = e,
                  this.TimeTxt && (this.TimeTxt.string = this.time.toString()))
              }
              ,
              o.setCoin = function(t) {
                  this.coin = t,
                  this.CoinTxt && (this.CoinTxt.string = this.coin.toString())
              }
              ,
              o.setTreasurebox = function(t) {
                  this.treasure = t,
                  this.TreasureTxt && (this.TreasureTxt.string = this.treasure.toString())
              }
              ,
              o.setScore = function(t) {
                  this.score = 0 | t,
                  this.ScoreTxt && (this.ScoreTxt.string = this.score.toString())
              }
              ,
              o.getCoinPosition = function() {
                  var t = new c;
                  return h.utils.localToGlobal(this.CoinIcon.node, t),
                  h.utils.globalToWorld2D(t, t),
                  t
              }
              ,
              o.getTreasurePosition = function() {
                  var t = new c;
                  return h.utils.localToGlobal(this.TreasureIcon.node, t),
                  h.utils.globalToWorld2D(t, t),
                  t
              }
              ,
              o.showBossPanel1 = function(t, e) {
                  void 0 === e && (e = ""),
                  t ? (this.BossPanel1.opne(),
                  this.BossPanel1.setNickname(e),
                  this.BossPanel1.setPortrait("ui/icon/boss/" + e + "/spriteFrame")) : this.BossPanel1.close()
              }
              ,
              o.setBossHP1 = function(t) {
                  this.BossPanel1.setHP(t)
              }
              ,
              o.showBossPanel2 = function(t, e) {
                  void 0 === e && (e = ""),
                  t ? (this.BossPanel2.opne(),
                  this.BossPanel2.setNickname(e),
                  this.BossPanel2.setPortrait("ui/icon/boss/" + e + "/spriteFrame")) : this.BossPanel2.close()
              }
              ,
              o.setBossHP2 = function(t) {
                  this.BossPanel2.setHP(t)
              }
              ,
              e
          }(p)).prototype, "HPBar", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          G = e(k.prototype, "ExpBar", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          V = e(k.prototype, "HPTxt", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          A = e(k.prototype, "LVTxt", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          U = e(k.prototype, "ScoreTxt", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          R = e(k.prototype, "HeadAvatar", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          _ = e(k.prototype, "WaveTxt", [H], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          q = e(k.prototype, "TimeTxt", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          K = e(k.prototype, "CoinTxt", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Z = e(k.prototype, "TreasureTxt", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          J = e(k.prototype, "PauseButton", [j], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          O = e(k.prototype, "CoinIcon", [N], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Q = e(k.prototype, "TreasureIcon", [M], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          X = e(k.prototype, "GmButton", [W], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Y = e(k.prototype, "BossPanel1", [L], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          $ = e(k.prototype, "BossPanel2", [E], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          F = k)) || F));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/FlyEffect.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./EffectBase.ts", "./EffectUtils.ts", "./MoveType.ts", "./Kit.ts"], (function(t) {
  var i, s, e, o, n, r, c, h, f;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          s = t.cclegacy,
          e = t.Prefab,
          o = t.Vec3
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          h = t.MoveType
      }
      , function(t) {
          f = t.default
      }
      ],
      execute: function() {
          s._RF.push({}, "72bc3jMLshOcLzOJ3egjHWG", "FlyEffect", void 0);
          var u = t("default", function(t) {
              function s() {
                  for (var i, s = arguments.length, e = new Array(s), n = 0; n < s; n++)
                      e[n] = arguments[n];
                  return (i = t.call.apply(t, [this].concat(e)) || this).type = void 0,
                  i.src = void 0,
                  i.srcPos = void 0,
                  i.cccPos = void 0,
                  i.dstPos = void 0,
                  i.duration = void 0,
                  i.ease = void 0,
                  i.time = void 0,
                  i.flyObj = void 0,
                  i.dir = void 0,
                  i.position = new o,
                  i.speed = void 0,
                  i
              }
              i(s, t);
              var n = s.prototype;
              return n.onPreLoad = function() {
                  this.preload(this.src, e)
              }
              ,
              n.onStart = function() {
                  this.flyObj = this.getAsset(this.src),
                  this.flyObj.position = this.srcPos,
                  this.time = 0,
                  this.position.set(this.srcPos)
              }
              ,
              n.onUpdate = function(t) {
                  if (this.time += t,
                  this.time < this.duration) {
                      if (this.type == h.MoveDir)
                          o.multiplyScalar(f.temp.aVec3, this.dir, this.speed * t * .001),
                          this.position.add(f.temp.aVec3);
                      else if (this.type == h.MoveTo) {
                          var i = this.ease(this.time, 0, 1, this.duration);
                          o.lerp(this.position, this.srcPos, this.dstPos, i)
                      } else if (this.type == h.Bezier) {
                          var s = this.ease(this.time, 0, 1, this.duration);
                          c.besier2(this.srcPos, this.cccPos, this.dstPos, s, this.position)
                      }
                      return this.flyObj.position = this.position,
                      !1
                  }
                  return this.time = 0,
                  this.flyObj.position = this.dstPos,
                  !0
              }
              ,
              n.onFinish = function() {
                  t.prototype.onFinish.call(this),
                  this.flyObj = null,
                  s.POOL.recycle(this)
              }
              ,
              n.destroy = function() {
                  t.prototype.destroy.call(this),
                  this.time = this.duration
              }
              ,
              s
          }(r));
          u.POOL = new n((function() {
              return new u
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/FlyText.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./ActionBase.ts", "./Kit.ts"], (function(t) {
  var i, s, o, n, e, h, r, a, l, u;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          s = t.cclegacy,
          o = t.Prefab,
          n = t.Label,
          e = t.lerp,
          h = t.Vec3,
          r = t.Color
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          l = t.default
      }
      , function(t) {
          u = t.default
      }
      ],
      execute: function() {
          s._RF.push({}, "abf2cJupqtHhJKa/CBD0ARS", "FlyText", void 0);
          var c = t("default", function(t) {
              function s() {
                  for (var i, s = arguments.length, o = new Array(s), n = 0; n < s; n++)
                      o[n] = arguments[n];
                  return (i = t.call.apply(t, [this].concat(o)) || this).src = void 0,
                  i.target = new h,
                  i.text = void 0,
                  i.duration = 1e3,
                  i.layer = void 0,
                  i.height = void 0,
                  i.position = new h,
                  i.state = 0,
                  i.from = 0,
                  i.to = 0,
                  i.time = void 0,
                  i.node = void 0,
                  i.label = void 0,
                  i.isLoading = !1,
                  i.color = new r(255,255,255,255),
                  i
              }
              i(s, t);
              var a = s.prototype;
              return a.reset = function() {
                  t.prototype.reset.call(this),
                  this.isLoading = !1
              }
              ,
              a.onPrepare = function() {
                  return this.isLoading || (this.isLoading = !0,
                  u.res.spawnAsyn(this.src, o, this.position, null, this.layer, this, this.onLoadFinish)),
                  null != this.node
              }
              ,
              a.onLoadFinish = function(t) {
                  this.node = t
              }
              ,
              a.onStart = function() {
                  this.state = 0,
                  this.position.x = this.target.x,
                  this.position.y = this.target.y,
                  this.position.z = this.target.z,
                  this.color.a = 255,
                  this.label = this.node.getComponent(n),
                  this.label && (this.label.string = this.text,
                  this.label.color = this.color),
                  this.time = 0,
                  this.from = this.height,
                  this.to = this.height + 30,
                  this.duration = 350
              }
              ,
              a.onUpdate = function(t) {
                  if (this.time += t,
                  0 == this.state) {
                      if (this.time < this.duration) {
                          var i = this.time / this.duration;
                          this.position.x = this.target.x,
                          this.position.y = this.target.y + e(this.from, this.to, i),
                          this.node.position = this.position
                      } else
                          this.position.x = this.target.x,
                          this.position.y = this.target.y + this.to,
                          this.node.position = this.position,
                          this.state = 1,
                          this.time = 0,
                          this.duration = 500;
                      return !1
                  }
                  var s = this.time / this.duration;
                  return this.position.x = this.target.x,
                  this.position.y = this.target.y + this.to,
                  this.node.position = this.position,
                  this.color.a = 255 * (1 - s),
                  this.label && (this.label.color = this.color),
                  this.time > this.duration
              }
              ,
              a.onFinish = function() {
                  t.prototype.onFinish.call(this),
                  u.res.recycle(this.node),
                  this.node = null,
                  s.POOL.recycle(this)
              }
              ,
              a.destroy = function() {
                  this.state = 1,
                  this.time = this.duration
              }
              ,
              s
          }(l));
          c.POOL = new a((function() {
              return new c
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ForgeCombinePanel.ts", ["cc", "./EquipView.ts", "./UIHelper.ts", "./UIRoot.ts", "./UIListView.ts", "./SessionMessage_Home.ts", "./Client.ts", "./MergeUtils.ts"], (function(e) {
  var t, s, i, n, r, h, a, l, o, u, g, d;
  return {
      setters: [function(e) {
          t = e.cclegacy,
          s = e.Button,
          i = e.Label,
          n = e.Vec3,
          r = e.Sprite
      }
      , function(e) {
          h = e.EquipView
      }
      , function(e) {
          a = e.default
      }
      , function(e) {
          l = e.default
      }
      , function(e) {
          o = e.UIListView
      }
      , function(e) {
          u = e.default
      }
      , function(e) {
          g = e.default
      }
      , function(e) {
          d = e.default
      }
      ],
      execute: function() {
          t._RF.push({}, "e237aOPFBpMhaSK4cqGcrCf", "ForgeCombinePanel", void 0);
          e("default", function() {
              function e() {
                  this.parent = void 0,
                  this.curEquips = [],
                  this.selEquips = [],
                  this.selIds = [],
                  this.selNodes = void 0,
                  this.matNodes = void 0,
                  this.merges = new Array,
                  this.mergeId = void 0,
                  this.needCount = void 0,
                  this.BagList = void 0,
                  this.CombinePanel = void 0,
                  this.ForgeBtn = void 0,
                  this.CoinText = void 0,
                  this.Target = void 0
              }
              var t = e.prototype;
              return t.setParent = function(e) {
                  this.parent = e
              }
              ,
              t.start = function() {
                  var e = this;
                  d.init(),
                  this.selEquips.length = 0,
                  this.selIds.length = 0,
                  this.merges.length = 0,
                  this.needCount = 6,
                  this.BagList = this.parent.getComponent(o, "BagPanel/BagList"),
                  this.CombinePanel = this.parent.getChildNode("CombinePanel"),
                  this.ForgeBtn = this.parent.getComponent(s, "CombinePanel/ForgeBtn"),
                  this.CoinText = this.parent.getComponent(i, "CombinePanel/Coin/Text"),
                  this.CoinText.string = "0",
                  this.Target = this.parent.getComponent(h, "CombinePanel/Item-000");
                  var t = this.parent.getChildNode("CombinePanel/ForgeList");
                  this.selNodes = [],
                  this.selNodes.push(t.getChildByName("Item-002")),
                  this.selNodes.push(t.getChildByName("Item-003")),
                  this.selNodes.push(t.getChildByName("Item-004")),
                  this.selNodes.push(t.getChildByName("Item-005")),
                  this.selNodes.push(t.getChildByName("Item-006")),
                  this.selNodes.push(t.getChildByName("Item-001"));
                  var n = this.parent.getChildNode("CombinePanel/MaterialList");
                  this.matNodes = [],
                  this.matNodes.push(n.getChildByName("1")),
                  this.matNodes.push(n.getChildByName("2")),
                  this.matNodes.push(n.getChildByName("3")),
                  this.matNodes.push(n.getChildByName("4")),
                  this.matNodes.push(n.getChildByName("5")),
                  this.ForgeBtn.node.off(s.EventType.CLICK),
                  this.ForgeBtn.node.on(s.EventType.CLICK, (function() {
                      e.merge()
                  }
                  ), this),
                  this.refreshUpgradeList(),
                  this.refreshTarget(),
                  this.refreshMaterialList()
              }
              ,
              t.show = function() {
                  this.selEquips.length = 0,
                  this.selIds.length = 0,
                  this.merges.length = 0,
                  this.CombinePanel.active = !0,
                  this.BagList.itemRenderer = this.itemRenderer.bind(this),
                  this.BagList.itemSelected = this.itemSelected.bind(this),
                  this.refreshUpgradeList(),
                  this.refreshTarget(),
                  this.refreshMaterialList()
              }
              ,
              t.hide = function() {
                  this.CombinePanel.active = !1
              }
              ,
              t.clear = function() {
                  this.selEquips.length = 0,
                  this.selIds.length = 0,
                  this.merges.length = 0,
                  this.refreshUpgradeList(),
                  this.refreshTarget(),
                  this.refreshMaterialList()
              }
              ,
              t.setEquips = function(e) {
                  this.curEquips = e,
                  this.refreshBagList()
              }
              ,
              t.itemRenderer = function(e, t) {
                  var s = this.curEquips[e]
                    , i = t.getComponent(h);
                  if (s) {
                      var n, r, l, o = a.getEquipIcon(null == (n = s.cfg) ? void 0 : n.Icon);
                      null == o && console.error(null == (r = s.cfg) ? void 0 : r.Icon),
                      i.listen(null, null),
                      i.setIcon(o),
                      i.setQuality(null == (l = s.cfg) ? void 0 : l.Rarity),
                      i.showMark(this.selEquips.indexOf(s) >= 0),
                      i.showFrame2(!1),
                      i.showWarn(!1),
                      i.setDurability(null, null),
                      i.showShade(this.merges.length > 0 && -1 == this.merges.indexOf(s.id) || this.isOK())
                  } else
                      i.listen(null, null),
                      i.setIcon(null),
                      i.setQuality(0),
                      i.showMark(!1),
                      i.showFrame2(!1),
                      i.showWarn(!1),
                      i.setDurability(null, null),
                      i.showShade(!1)
              }
              ,
              t.itemSelected = function(e, t) {
                  var s = this.curEquips[e];
                  s && this.showEquipDressTips(t, s, new n(16,-14,0), !0)
              }
              ,
              t.refreshTarget = function() {
                  var e = this.mergeId;
                  if (null != e && this.selEquips.length > 0) {
                      var t = DataCenter.Equipment.Get(e)
                        , s = this.Target;
                      s.setData(null),
                      s.setIcon(a.getEquipIcon(t.Icon)),
                      s.setQuality(t.Rarity, !0),
                      s.showAdd(!1),
                      s.showShade(this.selEquips.length != this.merges.length)
                  } else {
                      this.CoinText.string = "0";
                      var i = this.Target;
                      i.setData(null),
                      i.setIcon(null),
                      i.setQuality(0, !0),
                      i.showAdd(!0),
                      i.showShade(!1)
                  }
              }
              ,
              t.refreshUpgradeList = function() {
                  for (var e = 0; e < this.needCount; e++) {
                      var t = this.selNodes[e]
                        , s = this.selEquips[e]
                        , i = t.getComponent(h);
                      if (s) {
                          var n, r;
                          i.setData(s),
                          i.setIcon(a.getEquipIcon(null == (n = s.cfg) ? void 0 : n.Icon)),
                          i.setQuality(null == (r = s.cfg) ? void 0 : r.Rarity),
                          i.showAdd(!1),
                          i.showShade(!1)
                      } else {
                          var l = this.merges[e]
                            , o = DataCenter.Equipment.Get(l);
                          o ? (i.setData(null),
                          i.setIcon(a.getEquipIcon(o.Icon)),
                          i.setQuality(0),
                          i.showAdd(!1),
                          i.showShade(!0)) : (i.setData(null),
                          i.setIcon(null),
                          i.setQuality(0),
                          i.showAdd(!0),
                          i.showShade(!1))
                      }
                      i.listen(this, this.onUpgradeClick)
                  }
              }
              ,
              t.refreshMaterialList = function() {
                  var e = this.mergeId
                    , t = DataCenter.Equipment.Get(e);
                  if (this.merges.length > 0 && null != t)
                      for (var s = t.MergeMaterial, n = s.length / 2, h = 0; h < this.matNodes.length; ++h) {
                          var l = this.matNodes[h];
                          if (h < n) {
                              var o = s[2 * h]
                                , u = s[2 * h + 1]
                                , g = DataCenter.Material.Get(o);
                              l.active = !0,
                              l.getChildByName("Icon").getComponent(r).spriteFrame = a.getMaterialIcon(g.Icon),
                              l.getChildByName("Text").getComponent(i).string = u.toString()
                          } else
                              l.active = !1
                      }
                  else
                      for (var d = 0; d < this.matNodes.length; ++d)
                          this.matNodes[d].active = !1
              }
              ,
              t.onUpgradeClick = function(e, t) {
                  t && this.showEquipDressTips(e, t, new n(16,-14,0))
              }
              ,
              t.showEquipDressTips = function(e, t, s, i) {
                  var n = this
                    , r = (0 == this.merges.length || -1 != this.merges.indexOf(t.id)) && i && !this.isOK()
                    , h = -1 != this.selEquips.indexOf(t);
                  l.equipDressTips.clearBtn(),
                  r && l.equipDressTips.addEquipBtn(3, this, (function() {
                      if (t.cfg.Rarity >= 4)
                          return l.equipDressTips.close(),
                          void l.textTips.play("Can't upgrade gear that's 4 stars or above");
                      if (n.selEquips.length > n.needCount)
                          return l.equipDressTips.close(),
                          void l.textTips.play("Can't add more gear");
                      if (0 == n.merges.length) {
                          var e, s = d.getUpgradeEquipById(t.id), i = DataCenter.Equipment.Get(s);
                          n.mergeId = s,
                          (e = n.merges).push.apply(e, i.Merge)
                      }
                      n.selEquips.push(t),
                      n.refreshTarget(),
                      n.refreshUpgradeList(),
                      n.refreshBagList(),
                      n.refreshMaterialList(),
                      l.equipDressTips.close()
                  }
                  )),
                  h && l.equipDressTips.addRemoveBtn(this, (function() {
                      var e = n.selEquips.indexOf(t);
                      -1 != e && (n.selEquips.splice(e, 1),
                      0 == n.selEquips.length && (n.merges.length = 0),
                      n.refreshTarget(),
                      n.refreshBagList(),
                      n.refreshUpgradeList(),
                      n.refreshMaterialList()),
                      l.equipDressTips.close()
                  }
                  )),
                  l.equipDressTips.setData(t),
                  l.equipDressTips.setPosition(s),
                  l.equipDressTips.open()
              }
              ,
              t.refreshBagList = function() {
                  this.sortBagList(),
                  this.BagList.numItems = Math.max(this.curEquips.length, 20),
                  this.BagList.selectIndex = -1
              }
              ,
              t.sortBagList = function() {
                  var e, t = this;
                  this.selEquips.length > 0 && (e = this.selEquips[0].cfg.Id),
                  null != e ? this.curEquips.sort((function(s, i) {
                      var n = -1 != t.selEquips.indexOf(s)
                        , r = -1 != t.selEquips.indexOf(i);
                      if (n && r)
                          return 0;
                      if (n)
                          return -1;
                      if (r)
                          return 1;
                      var h = -1 != t.merges.indexOf(s.id)
                        , a = -1 != t.merges.indexOf(i.id);
                      return h && a ? 0 : h ? -1 : a || null == s.cfg ? 1 : null == i.cfg || s.cfg.Id == e && i.cfg.Id != e ? -1 : s.cfg.Id != e && i.cfg.Id == e ? 1 : s.cfg.Type == i.cfg.Type ? s.cfg.Rarity == i.cfg.Rarity ? s.cfg.Id - i.cfg.Id : s.cfg.Rarity - i.cfg.Rarity : s.cfg.Type - i.cfg.Type
                  }
                  )) : this.curEquips.sort((function(e, t) {
                      return null == e.cfg ? 1 : null == t.cfg ? -1 : e.cfg.Type == t.cfg.Type ? e.cfg.Rarity == t.cfg.Rarity ? e.cfg.Id - t.cfg.Id : e.cfg.Rarity - t.cfg.Rarity : e.cfg.Type - t.cfg.Type
                  }
                  ))
              }
              ,
              t.isOK = function() {
                  return this.selEquips.length > 0 && this.selEquips.length == this.merges.length
              }
              ,
              t.merge = function() {
                  if (this.isOK()) {
                      var e = this.mergeId;
                      if (null != e) {
                          for (var t = DataCenter.Equipment.Get(e), s = t.MergeMaterial, i = 0; i < s.length; i += 2) {
                              var n = s[i]
                                , r = s[i + 1]
                                , h = g.material.getMaterialById(n);
                              if (null == h || h.num < r)
                                  return void l.textTips.play("not enough material")
                          }
                          for (var a = t.Id, o = new Array, d = 0; d < this.selEquips.length; ++d)
                              o.push(this.selEquips[d].sn);
                          u.equipmentMerge(a, o)
                      } else
                          l.textTips.play("Need to add more gear")
                  } else
                      l.textTips.play("not enough equip")
              }
              ,
              e
          }());
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ForgeCombineResultWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./LayerType.ts", "./UIHelper.ts", "./EquipView.ts", "./UIListView.ts", "./AttrType.ts"], (function(t) {
  var e, n, i, o, r, a, l, u, s, c, m, f, p, g;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          n = t.inheritsLoose,
          i = t.initializerDefineProperty,
          o = t.assertThisInitialized,
          r = t.createForOfIteratorHelperLoose
      }
      , function(t) {
          a = t.cclegacy,
          l = t.Button,
          u = t.Label
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          c = t.Layer2DType
      }
      , function(t) {
          m = t.default
      }
      , function(t) {
          f = t.EquipView
      }
      , function(t) {
          p = t.UIListView
      }
      , function(t) {
          g = t.default
      }
      ],
      execute: function() {
          var h, d, C, y, I, v, b, B, w, R, L;
          a._RF.push({}, "4d82cMHwDlJS7GzHQ6ptOjn", "ForgeCombineResultWindow", void 0);
          t("default", (h = uiBind("fgui/login", "ForgeCombineResultWindow"),
          d = uiInject("Panel/ConarmBtn", l),
          C = uiInject("CloseButton", l),
          y = uiInject("Panel/Item", f),
          I = uiInject("Panel/Content", p),
          h((B = e((b = function(t) {
              function e(e) {
                  var n;
                  return n = t.call(this, e) || this,
                  i(n, "ConarmBtn", B, o(n)),
                  i(n, "CloseButton", w, o(n)),
                  i(n, "Item", R, o(n)),
                  i(n, "Content", L, o(n)),
                  n.data = void 0,
                  n.items = [],
                  n.layer = c.UIPopup,
                  n
              }
              n(e, t);
              var a = e.prototype;
              return a.getPrototype = function() {
                  return e.prototype
              }
              ,
              a.onEnable = function() {
                  var t = this;
                  this.onClick(this.ConarmBtn, (function() {
                      t.close()
                  }
                  )),
                  this.onClick(this.CloseButton, (function() {
                      t.close()
                  }
                  ));
                  var e = this.data
                    , n = m.getEquipIcon(null == e ? void 0 : e.BagIcon);
                  null == n && console.error(null == e ? void 0 : e.BagIcon),
                  this.Item.setName(e.Name),
                  this.Item.setQuality(e.Rarity, !0),
                  this.Item.setIcon(n),
                  this.items.length = 0;
                  for (var i = e, o = DataCenter.Equipment.Get(e.Merge[0]).AttrEffect, a = i.AttrEffect, l = new Map, u = new Map, s = 0; s < o.length; s += 3) {
                      var c = o[s]
                        , f = o[s + 1]
                        , p = o[s + 2];
                      l.set(c, [c, f, p])
                  }
                  for (var g = 0; g < a.length; g += 3) {
                      var h = a[g]
                        , d = a[g + 1]
                        , C = a[g + 2];
                      u.set(h, [h, d, C])
                  }
                  for (var y, I = r(u); !(y = I()).done; ) {
                      var v = y.value
                        , b = l.get(v[0])
                        , B = v[1]
                        , w = this.getName(B[0])
                        , R = B[1] > 0 ? "%" : ""
                        , L = {
                          name: w,
                          lValue: (b ? b[2] : 0) + R,
                          rValue: B[2] + R
                      };
                      this.items.push(L)
                  }
                  this.Content.itemRenderer = this.itemRenderer.bind(this),
                  this.Content.numItems = this.items.length
              }
              ,
              a.getName = function(t) {
                  for (var e = 0; e < g.length; ++e)
                      if (g[e].value == t)
                          return g[e].name;
                  return ""
              }
              ,
              a.itemRenderer = function(t, e) {
                  var n = this.items[t]
                    , i = e.getChildByName("Name").getComponent(u)
                    , o = e.getChildByName("LTxt").getComponent(u)
                    , r = e.getChildByName("RTxt").getComponent(u);
                  i.string = n.name,
                  o.string = n.lValue,
                  r.string = n.rValue
              }
              ,
              a.onDisable = function() {}
              ,
              a.setData = function(t) {
                  this.data = t
              }
              ,
              e
          }(s)).prototype, "ConarmBtn", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          w = e(b.prototype, "CloseButton", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          R = e(b.prototype, "Item", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          L = e(b.prototype, "Content", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          v = b)) || v));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ForgeMaterialTips.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./UIHelper.ts"], (function(t) {
  var e, i, n, l, a, o, r, c, s, u, p, h, d;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          n = t.initializerDefineProperty,
          l = t.assertThisInitialized
      }
      , function(t) {
          a = t.cclegacy,
          o = t.Button,
          r = t.Node,
          c = t.Label,
          s = t.RichText,
          u = t.Sprite,
          p = t.Vec3
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          d = t.default
      }
      ],
      execute: function() {
          var f, b, g, y, v, I, P, m, B, w, z, D, j, E, T, S, A, C, F;
          a._RF.push({}, "33d70Sv1plDwqM1Ro9r9I9Z", "ForgeMaterialTips", void 0);
          t("default", (f = uiBind("fgui/login", "ForgeMaterialTips"),
          b = uiInject("Panel/CloseBtn", o),
          g = uiInject("Panel/ButtonLayout/AddBtn", o),
          y = uiInject("Panel", r),
          v = uiInject("Panel/Name", c),
          I = uiInject("Panel/Type", c),
          P = uiInject("Panel/Desc", s),
          m = uiInject("Panel/Equip/Icon", u),
          B = uiInject("Panel/Equip/Star", r),
          f((D = e((z = function(t) {
              function e() {
                  for (var e, i = arguments.length, a = new Array(i), o = 0; o < i; o++)
                      a[o] = arguments[o];
                  return e = t.call.apply(t, [this].concat(a)) || this,
                  n(e, "CloseBtn", D, l(e)),
                  n(e, "AddBtn", j, l(e)),
                  n(e, "Panel", E, l(e)),
                  n(e, "Name", T, l(e)),
                  n(e, "Type", S, l(e)),
                  n(e, "Desc", A, l(e)),
                  n(e, "Icon", C, l(e)),
                  n(e, "Star", F, l(e)),
                  e.data = void 0,
                  e.position = new p,
                  e.caller = void 0,
                  e.onEvent = void 0,
                  e
              }
              i(e, t);
              var a = e.prototype;
              return a.getPrototype = function() {
                  return e.prototype
              }
              ,
              a.onEnable = function() {
                  var t = this;
                  this.Panel.position = this.position;
                  for (var e = this.Star.children, i = 0; i < e.length; ++i)
                      e[i].active = i < this.data.cfg.Rarity;
                  this.Name.string = this.data.cfg.Name,
                  this.Icon.spriteFrame = d.getMaterialIcon(this.data.cfg.Icon),
                  this.Desc.string = this.data.cfg.Desc,
                  this.AddBtn.node.active = this.caller || this.onEvent,
                  this.onClick(this.CloseBtn, (function() {
                      var e;
                      null == (e = t.onEvent) || e.call(t.caller, "exit"),
                      t.close()
                  }
                  ), !0),
                  this.onClick(this.AddBtn, (function() {
                      var e;
                      null == (e = t.onEvent) || e.call(t.caller, "add"),
                      t.close()
                  }
                  ), !0)
              }
              ,
              a.setData = function(t) {
                  this.data = t
              }
              ,
              a.setPosition = function(t) {
                  this.position.x = t.x,
                  this.position.y = t.y,
                  this.Panel && (this.Panel.position = this.position)
              }
              ,
              a.listen = function(t, e) {
                  this.caller = t,
                  this.onEvent = e
              }
              ,
              e
          }(h)).prototype, "CloseBtn", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          j = e(z.prototype, "AddBtn", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          E = e(z.prototype, "Panel", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          T = e(z.prototype, "Name", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          S = e(z.prototype, "Type", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          A = e(z.prototype, "Desc", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          C = e(z.prototype, "Icon", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          F = e(z.prototype, "Star", [B], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          w = z)) || w));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ForgeRepairPanel.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIListView.ts", "./EquipView.ts", "./UIHelper.ts", "./UIRoot.ts", "./Client.ts", "./SessionMessage_Home.ts"], (function(e) {
  var t, i, s, n, r, a, o, l, h, u, p, c;
  return {
      setters: [function(e) {
          t = e.createForOfIteratorHelperLoose
      }
      , function(e) {
          i = e.cclegacy,
          s = e.Button,
          n = e.Label,
          r = e.Vec3,
          a = e.Sprite
      }
      , function(e) {
          o = e.UIListView
      }
      , function(e) {
          l = e.EquipView
      }
      , function(e) {
          h = e.default
      }
      , function(e) {
          u = e.default
      }
      , function(e) {
          p = e.default
      }
      , function(e) {
          c = e.default
      }
      ],
      execute: function() {
          i._RF.push({}, "0de09YaxrVF0oESn4CqCxvX", "ForgeRepairPanel", void 0);
          e("default", function() {
              function e() {
                  this.parent = void 0,
                  this.curEquips = [],
                  this.selEquips = [],
                  this.selNodes = void 0,
                  this.matNodes = void 0,
                  this.RepairPanel = void 0,
                  this.RepairBtn = void 0,
                  this.BagList = void 0,
                  this.CoinText = void 0,
                  this.needMatDict = new Map,
                  this.needMatList = new Array
              }
              var i = e.prototype;
              return i.setParent = function(e) {
                  this.parent = e
              }
              ,
              i.start = function() {
                  var e = this;
                  this.BagList = this.parent.getComponent(o, "BagPanel/BagList"),
                  this.RepairPanel = this.parent.getChildNode("RepairPanel"),
                  this.RepairBtn = this.parent.getComponent(s, "RepairPanel/RepairBtn"),
                  this.CoinText = this.parent.getComponent(n, "RepairPanel/Coin/Text");
                  var t = this.parent.getChildNode("RepairPanel/RepairList");
                  this.selNodes = [];
                  for (var i = 0; i < t.children.length; i++)
                      this.selNodes.push(t.children[i]);
                  this.selNodes.sort((function(e, t) {
                      var i = e.name
                        , s = t.name;
                      return i.startsWith("Item-") ? s.startsWith("Item-") ? parseInt(i.replace("Item-", "")) - parseInt(s.replace("Item-", "")) : -1 : 1
                  }
                  ));
                  var r = this.parent.getChildNode("RepairPanel/MaterialList");
                  this.matNodes = [],
                  this.matNodes.push(r.getChildByName("1")),
                  this.matNodes.push(r.getChildByName("2")),
                  this.matNodes.push(r.getChildByName("3")),
                  this.matNodes.push(r.getChildByName("4")),
                  this.matNodes.push(r.getChildByName("5")),
                  this.RepairBtn.node.off(s.EventType.CLICK),
                  this.RepairBtn.node.on(s.EventType.CLICK, (function() {
                      e.repair()
                  }
                  ), this),
                  this.refreshMaterialList()
              }
              ,
              i.show = function() {
                  this.selEquips.length = 0,
                  this.RepairPanel.active = !0,
                  this.BagList.itemRenderer = this.itemRenderer.bind(this),
                  this.BagList.itemSelected = this.itemSelected.bind(this),
                  this.refreshRepairList()
              }
              ,
              i.hide = function() {
                  this.RepairPanel.active = !1
              }
              ,
              i.clear = function() {
                  this.selEquips.length = 0,
                  this.refreshRepairList(),
                  this.refreshMaterialList()
              }
              ,
              i.setEquips = function(e) {
                  this.curEquips = e,
                  this.sortBagList(),
                  this.BagList.numItems = Math.max(this.curEquips.length, 20),
                  this.BagList.selectIndex = -1
              }
              ,
              i.itemRenderer = function(e, t) {
                  var i = this.curEquips[e]
                    , s = t.getComponent(l);
                  if (s.listen(null, null),
                  i) {
                      var n = i.cfg
                        , r = h.getEquipIcon(null == n ? void 0 : n.Icon);
                      null == r && console.error(null == n ? void 0 : n.Icon),
                      s.setIcon(r),
                      s.setQuality(n.Rarity),
                      s.showShade(!1),
                      s.showMark(this.selEquips.indexOf(i) >= 0),
                      s.showFrame2(i.durability < 5),
                      s.showWarn(i.durability < 5),
                      s.setDurability(i.durability, n.Durability)
                  } else
                      s.setIcon(null),
                      s.setQuality(0),
                      s.showShade(!1),
                      s.showMark(!1),
                      s.showFrame2(!1),
                      s.showWarn(!1),
                      s.setDurability(null, null)
              }
              ,
              i.itemSelected = function(e, t) {
                  var i = this.curEquips[e];
                  null != i && this.showEquipDressTips(t, i, new r(16,-14,0), !0)
              }
              ,
              i.refreshRepairList = function() {
                  for (var e = 0; e < this.selNodes.length; e++) {
                      var t, i, s = this.selNodes[e], n = this.selEquips[e], r = s.getComponent(l);
                      r.setData(n),
                      r.setIcon(h.getEquipIcon(null == n || null == (t = n.cfg) ? void 0 : t.Icon)),
                      r.setQuality(null == n || null == (i = n.cfg) ? void 0 : i.Rarity),
                      r.showAdd(null == n),
                      r.listen(this, this.onRepairClick)
                  }
                  for (var a = 0, o = 0; o < this.selEquips.length; ++o) {
                      a += this.selEquips[o].repairNeedMoney
                  }
                  this.CoinText.string = a.toString()
              }
              ,
              i.onRepairClick = function(e, t) {
                  t && this.showEquipDressTips(e, t, new r(16,-14,0))
              }
              ,
              i.computingMaterialList = function() {
                  this.needMatDict.clear();
                  for (var e = 0; e < this.selEquips.length; ++e) {
                      var i = this.selEquips[e];
                      if (i.repairDurability > 0)
                          for (var s = i.cfg.RepairMaterial, n = 0; n < s.length; n += 2) {
                              var r = s[n]
                                , a = s[n + 1] * i.repairDurability;
                              this.needMatDict.get(r) ? this.needMatDict.set(r, this.needMatDict.get(r) + a) : this.needMatDict.set(r, a)
                          }
                  }
                  this.needMatList.length = 0;
                  for (var o, l = t(this.needMatDict); !(o = l()).done; ) {
                      var h = o.value;
                      this.needMatList.push({
                          id: h[0],
                          count: h[1]
                      })
                  }
              }
              ,
              i.refreshMaterialList = function() {
                  this.computingMaterialList();
                  for (var e = 0; e < this.matNodes.length; ++e) {
                      var t = this.matNodes[e];
                      if (e < this.needMatList.length) {
                          var i = this.needMatList[e]
                            , s = i.id
                            , r = i.count
                            , o = DataCenter.Material.Get(s);
                          t.active = !0,
                          t.getChildByName("Icon").getComponent(a).spriteFrame = h.getMaterialIcon(o.Icon),
                          t.getChildByName("Text").getComponent(n).string = r.toString()
                      } else
                          t.active = !1
                  }
              }
              ,
              i.showEquipDressTips = function(e, t, i, s) {
                  var n = this
                    , r = this.selEquips.indexOf(t) >= 0;
                  u.equipDressTips.clearBtn(),
                  !r && s && u.equipDressTips.addEquipBtn(3, this, (function() {
                      if (n.selEquips.length > n.selNodes.length)
                          return u.equipDressTips.close(),
                          void u.textTips.play("Can't add more gear");
                      if (t.durability >= t.cfg.Durability)
                          return u.equipDressTips.close(),
                          void u.textTips.play("It doesn't need maintenance.");
                      n.selEquips.push(t),
                      n.refreshRepairList(),
                      n.refreshMaterialList();
                      var i = e.getComponent(l);
                      i && i.showMark(!0),
                      u.equipDressTips.close()
                  }
                  )),
                  r && u.equipDressTips.addRemoveBtn(this, (function() {
                      var e = n.selEquips.indexOf(t);
                      -1 != e && (n.selEquips.splice(e, 1),
                      n.sortBagList(),
                      n.BagList.numItems = Math.max(n.curEquips.length, 20),
                      n.BagList.selectIndex = -1,
                      n.refreshRepairList(),
                      n.refreshMaterialList()),
                      u.equipDressTips.close()
                  }
                  )),
                  u.equipDressTips.setData(t),
                  u.equipDressTips.setPosition(i),
                  u.equipDressTips.open()
              }
              ,
              i.sortBagList = function() {
                  this.curEquips.sort((function(e, t) {
                      if (null == e.cfg)
                          return 1;
                      if (null == t.cfg)
                          return -1;
                      var i = e.repairDurability > 0
                        , s = t.repairDurability > 0;
                      return i && !s ? -1 : !i && s ? 1 : e.cfg.Type == t.cfg.Type ? e.cfg.Rarity == t.cfg.Rarity ? e.cfg.Id - t.cfg.Id : e.cfg.Rarity - t.cfg.Rarity : e.cfg.Type - t.cfg.Type
                  }
                  ))
              }
              ,
              i.repair = function() {
                  for (var e = 0, t = 0; t < this.selEquips.length; ++t) {
                      e += this.selEquips[t].repairNeedMoney
                  }
                  if (-1 != p.user.data.money2.comparedTo(e)) {
                      if (0 != this.selEquips.length) {
                          this.computingMaterialList();
                          for (var i = 0; i < this.needMatList.length; ++i) {
                              var s = this.needMatList[i].id
                                , n = this.needMatList[i].count
                                , r = p.material.getMaterialById(s);
                              if (null == r || r.num < n)
                                  return void u.textTips.play("not enough material")
                          }
                          for (var a = new Array, o = 0; o < this.selEquips.length; ++o)
                              a.push(this.selEquips[o].sn);
                          c.equipmentRepair(a)
                      }
                  } else
                      u.textTips.play("Need more money")
              }
              ,
              e
          }());
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ForgeRepairResultWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./LayerType.ts", "./UIHelper.ts", "./EquipView.ts", "./UIListView.ts"], (function(i) {
  var t, e, n, s, r, l, o, u, a, c, p;
  return {
      setters: [function(i) {
          t = i.applyDecoratedDescriptor,
          e = i.inheritsLoose,
          n = i.initializerDefineProperty,
          s = i.assertThisInitialized
      }
      , function(i) {
          r = i.cclegacy,
          l = i.Button
      }
      , function(i) {
          o = i.default
      }
      , function(i) {
          u = i.Layer2DType
      }
      , function(i) {
          a = i.default
      }
      , function(i) {
          c = i.EquipView
      }
      , function(i) {
          p = i.UIListView
      }
      ],
      execute: function() {
          var d, h, f, g, y, m, L, b, I;
          r._RF.push({}, "f1d2fy/Dp9ODK5ZQJDAAcd/", "ForgeRepairResultWindow", void 0);
          i("default", (d = uiBind("fgui/login", "ForgeRepairResultWindow"),
          h = uiInject("Bg", l),
          f = uiInject("Panel/GridList", p),
          g = uiInject("Panel/HoriList", p),
          d((L = t((m = function(i) {
              function t(t) {
                  var e;
                  return e = i.call(this, t) || this,
                  n(e, "CloseBtn", L, s(e)),
                  n(e, "GridList", b, s(e)),
                  n(e, "HoriList", I, s(e)),
                  e.selEquips = [],
                  e.selNodes = void 0,
                  e.layer = u.UIPopup,
                  e
              }
              e(t, i);
              var r = t.prototype;
              return r.getPrototype = function() {
                  return t.prototype
              }
              ,
              r.onEnable = function() {
                  var i = this;
                  this.onClick(this.CloseBtn, (function() {
                      i.close()
                  }
                  )),
                  this.GridList.itemRenderer = this.itemRenderer.bind(this),
                  this.HoriList.itemRenderer = this.itemRenderer.bind(this),
                  this.selEquips.length > 4 ? (this.GridList.numItems = this.selEquips.length,
                  this.HoriList.numItems = 0) : (this.GridList.numItems = 0,
                  this.HoriList.numItems = this.selEquips.length)
              }
              ,
              r.onDisable = function() {}
              ,
              r.itemRenderer = function(i, t) {
                  var e, n, s = this.selEquips[i], r = t.getComponent(c);
                  r.setData(s),
                  r.setIcon(a.getEquipIcon(null == s || null == (e = s.cfg) ? void 0 : e.Icon)),
                  r.setQuality(null == s || null == (n = s.cfg) ? void 0 : n.Rarity),
                  r.setDurability(s.durability, s.cfg.Durability),
                  r.showAdd(!1),
                  r.listen(null, null)
              }
              ,
              r.setData = function(i) {
                  this.selEquips.splice(0, this.selEquips.length);
                  for (var t = 0; t < i.length; t++)
                      this.selEquips.push(i[t])
              }
              ,
              t
          }(o)).prototype, "CloseBtn", [h], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          b = t(m.prototype, "GridList", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          I = t(m.prototype, "HoriList", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          y = m)) || y));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ForgeUpgradePanel.ts", ["cc", "./EquipView.ts", "./UIHelper.ts", "./UIRoot.ts", "./UIListView.ts", "./MergeUtils.ts"], (function(e) {
  var t, s, i, n, r, a, o, h, p;
  return {
      setters: [function(e) {
          t = e.cclegacy,
          s = e.Button,
          i = e.Label,
          n = e.Vec3
      }
      , function(e) {
          r = e.EquipView
      }
      , function(e) {
          a = e.default
      }
      , function(e) {
          o = e.default
      }
      , function(e) {
          h = e.UIListView
      }
      , function(e) {
          p = e.default
      }
      ],
      execute: function() {
          t._RF.push({}, "70d36DeLB1HHYIljlVOwef5", "ForgeUpgradePanel", void 0);
          e("default", function() {
              function e() {
                  this.parent = void 0,
                  this.curEquips = [],
                  this.selEquips = [],
                  this.selNodes = void 0,
                  this.BagList = void 0,
                  this.UpgradePanel = void 0,
                  this.ForgeBtn = void 0,
                  this.CoinText = void 0,
                  this.Target = void 0,
                  this.LLv = void 0,
                  this.RLv = void 0
              }
              var t = e.prototype;
              return t.setParent = function(e) {
                  this.parent = e
              }
              ,
              t.start = function() {
                  var e = this;
                  p.init(),
                  this.selEquips = [],
                  this.BagList = this.parent.getComponent(h, "BagPanel/BagList"),
                  this.UpgradePanel = this.parent.getChildNode("UpgradePanel"),
                  this.ForgeBtn = this.parent.getComponent(s, "UpgradePanel/ForgeBtn"),
                  this.CoinText = this.parent.getComponent(i, "UpgradePanel/Coin/Text"),
                  this.CoinText.string = "0",
                  this.Target = this.parent.getComponent(r, "UpgradePanel/Item-000/"),
                  this.LLv = this.parent.getComponent(i, "UpgradePanel/Top/LLv"),
                  this.RLv = this.parent.getComponent(i, "UpgradePanel/Top/RLv");
                  var t = this.parent.getChildNode("UpgradePanel/RepairList");
                  this.selNodes = [];
                  for (var n = 0; n < t.children.length; n++)
                      this.selNodes.push(t.children[n]);
                  this.selNodes.sort((function(e, t) {
                      var s = e.name
                        , i = t.name;
                      return s.startsWith("Item-") ? i.startsWith("Item-") ? parseInt(s.replace("Item-", "")) - parseInt(i.replace("Item-", "")) : -1 : 1
                  }
                  )),
                  this.ForgeBtn.node.off(s.EventType.CLICK),
                  this.ForgeBtn.node.on(s.EventType.CLICK, (function() {
                      e.upgrade()
                  }
                  ), this),
                  this.refreshTarget(),
                  this.refreshUpgradeList()
              }
              ,
              t.show = function() {
                  this.selEquips = [],
                  this.UpgradePanel.active = !0,
                  this.BagList.itemRenderer = this.itemRenderer.bind(this),
                  this.BagList.itemSelected = this.itemSelected.bind(this),
                  this.refreshTarget(),
                  this.refreshUpgradeList()
              }
              ,
              t.hide = function() {
                  this.UpgradePanel.active = !1
              }
              ,
              t.clear = function() {
                  this.selEquips = [],
                  this.refreshUpgradeList()
              }
              ,
              t.setEquips = function(e) {
                  this.curEquips = e,
                  this.refreshBagList()
              }
              ,
              t.itemRenderer = function(e, t) {
                  var s = this.curEquips[e]
                    , i = t.getComponent(r);
                  if (i.listen(null, null),
                  s) {
                      var n = s.cfg;
                      i.setIcon(a.getEquipIcon(n.Icon)),
                      i.setQuality(n.Rarity),
                      i.showShade(!1),
                      i.showMark(this.selEquips.indexOf(s) >= 0),
                      i.showFrame2(!1),
                      i.showWarn(!1),
                      i.setDurability(null, null)
                  } else
                      i.setIcon(null),
                      i.setQuality(0),
                      i.showShade(!1),
                      i.showMark(!1),
                      i.showFrame2(!1),
                      i.showWarn(!1),
                      i.setDurability(null, null)
              }
              ,
              t.itemSelected = function(e, t) {
                  var s = this.curEquips[e];
                  null != s && this.showEquipDressTips(t, s, new n(16,-14,0))
              }
              ,
              t.refreshTarget = function() {
                  var e = this.Target;
                  e.setData(null),
                  e.setIcon(null),
                  e.showAdd(!0)
              }
              ,
              t.refreshUpgradeList = function() {
                  for (var e = 0; e < this.selNodes.length; e++) {
                      var t, s, i = this.selNodes[e], n = this.selEquips[e], o = i.getComponent(r);
                      o.setData(n),
                      o.setIcon(a.getEquipIcon(null == n || null == (t = n.cfg) ? void 0 : t.Icon)),
                      o.setQuality(null == n || null == (s = n.cfg) ? void 0 : s.Rarity),
                      o.showAdd(null == n),
                      o.listen(this, this.onUpgradeClick)
                  }
                  for (var h = 0, p = 0; p < this.selEquips.length; ++p) {
                      h += this.selEquips[p].repairNeedMoney
                  }
                  this.CoinText.string = h.toString()
              }
              ,
              t.onUpgradeClick = function(e, t) {
                  t && this.showEquipDressTips(e, t, new n(16,-14,0))
              }
              ,
              t.showEquipDressTips = function(e, t, s) {
                  var i = this
                    , n = this.selEquips.indexOf(t) >= 0;
                  o.equipDressTips.clearBtn(),
                  n || o.equipDressTips.addEquipBtn(0, this, (function() {
                      if (i.selEquips.length > i.selNodes.length)
                          return o.equipDressTips.close(),
                          void o.textTips.play("Can't add more gear");
                      i.selEquips.push(t),
                      i.refreshUpgradeList();
                      var s = e.getComponent(r);
                      s && s.showMark(!0),
                      o.equipDressTips.close()
                  }
                  )),
                  n && o.equipDressTips.addRemoveBtn(this, (function() {
                      var e = i.selEquips.indexOf(t);
                      -1 != e && (i.selEquips.splice(e, 1),
                      i.sortBagList(),
                      i.BagList.numItems = Math.max(i.curEquips.length, 20),
                      i.BagList.selectIndex = -1,
                      i.refreshUpgradeList()),
                      o.equipDressTips.close()
                  }
                  )),
                  o.equipDressTips.setData(t),
                  o.equipDressTips.setPosition(s),
                  o.equipDressTips.open()
              }
              ,
              t.refreshBagList = function() {
                  this.sortBagList(),
                  this.BagList.numItems = Math.max(this.curEquips.length, 20),
                  this.BagList.selectIndex = -1
              }
              ,
              t.sortBagList = function() {
                  this.curEquips.sort((function(e, t) {
                      return null == e.cfg ? 1 : null == t.cfg ? -1 : e.cfg.Type == t.cfg.Type ? e.cfg.Rarity == t.cfg.Rarity ? e.cfg.Id - t.cfg.Id : e.cfg.Rarity - t.cfg.Rarity : e.cfg.Type - t.cfg.Type
                  }
                  ))
              }
              ,
              t.upgrade = function() {}
              ,
              e
          }());
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ForgeUpgradeResultWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./LayerType.ts", "./Kit.ts"], (function(e) {
  var t, i, n, r, a, o, l, u, s, c, p, f;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          r = e.assertThisInitialized
      }
      , function(e) {
          a = e.cclegacy,
          o = e.Button,
          l = e.Label,
          u = e.Node,
          s = e.Sprite
      }
      , function(e) {
          c = e.default
      }
      , function(e) {
          p = e.Layer2DType
      }
      , function(e) {
          f = e.default
      }
      ],
      execute: function() {
          var d, g, y, b, h, m, v, R, B, I, w;
          a._RF.push({}, "ab7c2v+5YxDpJ9WDIN5dQNC", "ForgeUpgradeResultWindow", void 0);
          e("default", (d = uiBind("fgui/login", "ForgeUpgradeResultWindow"),
          g = uiInject("Panel/ConarmBtn", o),
          y = uiInject("Panel/Name", l),
          b = uiInject("Panel/Stars", u),
          h = uiInject("Panel/Result", s),
          d((R = t((v = function(e) {
              function t(t) {
                  var i;
                  return i = e.call(this, t) || this,
                  n(i, "ConarmBtn", R, r(i)),
                  n(i, "Name", B, r(i)),
                  n(i, "Stars", I, r(i)),
                  n(i, "Result", w, r(i)),
                  i.data = void 0,
                  i.layer = p.UIPopup,
                  i
              }
              i(t, e);
              var a = t.prototype;
              return a.getPrototype = function() {
                  return t.prototype
              }
              ,
              a.onEnable = function() {
                  var e = this;
                  this.onClick(this.ConarmBtn, (function() {
                      e.close()
                  }
                  ));
                  var t = this.data;
                  this.Name.string = t.Name,
                  f.res.setSpriteFrameByAtlas(this.Result, "ui/icon/atlas/icon_equip", t.BagIcon);
                  for (var i = t.Rarity, n = this.Stars.children, r = 0; r < n.length; ++r)
                      n[r].active = r < i
              }
              ,
              a.onDisable = function() {
                  f.res.recycle(this.Result)
              }
              ,
              a.setData = function(e) {
                  this.data = e
              }
              ,
              t
          }(c)).prototype, "ConarmBtn", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          B = t(v.prototype, "Name", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          I = t(v.prototype, "Stars", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          w = t(v.prototype, "Result", [h], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          m = v)) || m));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ForgeWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./UIToggleGroup.ts", "./Client.ts", "./ForgeUpgradePanel.ts", "./ForgeRepairPanel.ts", "./ForgeCombinePanel.ts"], (function(e) {
  var i, t, n, a, s, r, l, o, u, h, p, c, g;
  return {
      setters: [function(e) {
          i = e.applyDecoratedDescriptor,
          t = e.inheritsLoose,
          n = e.initializerDefineProperty,
          a = e.assertThisInitialized
      }
      , function(e) {
          s = e.cclegacy,
          r = e.Button,
          l = e.ToggleContainer
      }
      , function(e) {
          o = e.default
      }
      , function(e) {
          u = e.UIToggleGroup
      }
      , function(e) {
          h = e.default
      }
      , function(e) {
          p = e.default
      }
      , function(e) {
          c = e.default
      }
      , function(e) {
          g = e.default
      }
      ],
      execute: function() {
          var d, P, f, b, I, E, q, m, v;
          s._RF.push({}, "57d56Ozzn5ExZcK1pGIEnoy", "ForgeWindow", void 0);
          e("default", (d = uiBind("fgui/login", "ForgeWindow"),
          P = uiInject("BagPanel/CloseBtn", r),
          f = uiInject("BagPanel/ToggleGroup", l),
          b = uiInject("WeaponGroup", u),
          d((q = i((E = function(e) {
              function i() {
                  for (var i, t = arguments.length, s = new Array(t), r = 0; r < t; r++)
                      s[r] = arguments[r];
                  return i = e.call.apply(e, [this].concat(s)) || this,
                  n(i, "CloseBtn", q, a(i)),
                  n(i, "ToggleGroup", m, a(i)),
                  n(i, "WeaponGroup", v, a(i)),
                  i.curEquips = [],
                  i.bagIndex = 0,
                  i.panelIndex = void 0,
                  i.upgradePanel = void 0,
                  i.combinePanel = void 0,
                  i.repairPanel = void 0,
                  i
              }
              t(i, e);
              var s = i.prototype;
              return s.getPrototype = function() {
                  return i.prototype
              }
              ,
              s.onEnable = function() {
                  var e = this;
                  this.panelIndex = 1,
                  this.onClick(this.CloseBtn, (function() {
                      e.close()
                  }
                  )),
                  this.ToggleGroup.toggleItems[0].setIsCheckedWithoutNotify(!0),
                  this.onCheck(this.ToggleGroup, (function(i) {
                      var t = i.name.replace("<Toggle>", "").replace("Toggle", "");
                      e.onBagSelect(parseInt(t))
                  }
                  )),
                  this.WeaponGroup.caller = this,
                  this.WeaponGroup.onSelectChanged = this.onSelectChanged,
                  this.WeaponGroup.setSelectIndexNotify(0),
                  this.upgradePanel = new p,
                  this.upgradePanel.setParent(this),
                  this.upgradePanel.start(),
                  this.upgradePanel.hide(),
                  this.combinePanel = new g,
                  this.combinePanel.setParent(this),
                  this.combinePanel.start(),
                  this.combinePanel.show(),
                  this.repairPanel = new c,
                  this.repairPanel.setParent(this),
                  this.repairPanel.start(),
                  this.repairPanel.hide(),
                  this.onBagSelect(1)
              }
              ,
              s.onDisable = function() {
                  this.upgradePanel.clear(),
                  this.upgradePanel = null,
                  this.combinePanel.clear(),
                  this.combinePanel = null,
                  this.repairPanel.clear(),
                  this.repairPanel = null
              }
              ,
              s.onSelectChanged = function(e) {
                  this.panelIndex = e + 1,
                  0 == this.panelIndex ? (this.repairPanel.hide(),
                  this.combinePanel.hide(),
                  this.upgradePanel.show(),
                  this.upgradePanel.setEquips(this.curEquips)) : 1 == this.panelIndex ? (this.upgradePanel.hide(),
                  this.repairPanel.hide(),
                  this.combinePanel.show(),
                  this.combinePanel.setEquips(this.curEquips)) : 2 == this.panelIndex && (this.upgradePanel.hide(),
                  this.combinePanel.hide(),
                  this.repairPanel.show(),
                  this.repairPanel.setEquips(this.curEquips))
              }
              ,
              s.onBagSelect = function(e) {
                  this.bagIndex = e,
                  this.refreshDataList(),
                  0 == this.panelIndex ? this.upgradePanel.setEquips(this.curEquips) : 1 == this.panelIndex ? this.combinePanel.setEquips(this.curEquips) : 2 == this.panelIndex && this.repairPanel.setEquips(this.curEquips)
              }
              ,
              s.refreshDataList = function() {
                  var e = this.bagIndex - 2;
                  this.curEquips.splice(0, this.curEquips.length);
                  var i = h.equip.equips;
                  if (-1 == e)
                      for (var t = 0; t < i.length; ++t) {
                          var n = i[t];
                          this.curEquips.push(n)
                      }
                  else
                      for (var a = 0; a < i.length; ++a) {
                          var s, r = i[a];
                          (null == r || null == (s = r.cfg) ? void 0 : s.Type) == e && this.curEquips.push(r)
                      }
              }
              ,
              s.refresh = function() {
                  this.refreshDataList(),
                  0 == this.panelIndex ? (this.upgradePanel.clear(),
                  this.upgradePanel.setEquips(this.curEquips)) : 1 == this.panelIndex ? (this.combinePanel.clear(),
                  this.combinePanel.setEquips(this.curEquips)) : 2 == this.panelIndex && (this.repairPanel.clear(),
                  this.repairPanel.setEquips(this.curEquips))
              }
              ,
              i
          }(o)).prototype, "CloseBtn", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          m = i(E.prototype, "ToggleGroup", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          v = i(E.prototype, "WeaponGroup", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          I = E)) || I));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/FrameAnim.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./EffectBase.ts", "./Kit.ts"], (function(t) {
  var i, o, n, e, s, r, a;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          o = t.cclegacy,
          n = t.Animation,
          e = t.AnimationClip
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          a = t.default
      }
      ],
      execute: function() {
          o._RF.push({}, "e44755MjCBID4DDZjlUspEa", "FrameAnim", void 0);
          var l = t("default", function(t) {
              function o() {
                  for (var i, o = arguments.length, n = new Array(o), e = 0; e < o; e++)
                      n[e] = arguments[e];
                  return (i = t.call.apply(t, [this].concat(n)) || this).src = void 0,
                  i.duration = 1e3,
                  i.speed = 1,
                  i.position = void 0,
                  i.rotation = 0,
                  i.layer = void 0,
                  i.loop = void 0,
                  i.anim = void 0,
                  i.node = void 0,
                  i.time = void 0,
                  i
              }
              i(o, t);
              var s = o.prototype;
              return s.onPreLoad = function() {
                  this.preload(this.src, n)
              }
              ,
              s.onStart = function() {
                  this.time = 0,
                  this.anim = this.getAsset(this.src),
                  this.node = this.anim.node,
                  this.layer && a.layer.addNode(this.node, this.layer),
                  this.node.position = this.position,
                  this.node.angle = this.rotation,
                  this.anim.play("default");
                  var t = this.anim.clips[0];
                  t && (t.wrapMode = this.loop ? e.WrapMode.Loop : e.WrapMode.Normal,
                  t.speed = this.speed,
                  this.duration = 1e3 * t.duration)
              }
              ,
              s.onUpdate = function(t) {
                  return !this.loop && (this.time += t,
                  this.time > this.duration)
              }
              ,
              s.onFinish = function() {
                  t.prototype.onFinish.call(this),
                  this.anim = null,
                  o.POOL.recycle(this)
              }
              ,
              s.destroy = function() {
                  t.prototype.destroy.call(this),
                  this.loop = !1,
                  this.time = this.duration
              }
              ,
              o
          }(r));
          l.POOL = new s((function() {
              return new l
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/FrameAnimClip.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(e) {
  var i, t, r, n, a, l, o, p, s;
  return {
      setters: [function(e) {
          i = e.applyDecoratedDescriptor,
          t = e.initializerDefineProperty
      }
      , function(e) {
          r = e.cclegacy,
          n = e._decorator,
          a = e.CCString,
          l = e.SpriteFrame,
          o = e.SpriteAtlas,
          p = e.CCBoolean,
          s = e.CCFloat
      }
      ],
      execute: function() {
          var u, c, b, m, f, y, h, g, C, F, d, z, v, w, A;
          r._RF.push({}, "fb681IIYLpNo5CpvehXcElP", "FrameAnimClip", void 0);
          var L = n.ccclass
            , S = n.property;
          e("default", (u = L("FrameAnimClip"),
          c = S({
              type: a
          }),
          b = S({
              type: [l]
          }),
          m = S({
              type: o
          }),
          f = S({
              type: p
          }),
          y = S({
              type: s
          }),
          h = S({
              type: s
          }),
          u((F = i((C = function() {
              t(this, "name", F, this),
              t(this, "spriteFrames", d, this),
              t(this, "atlas", z, this),
              t(this, "isLoop", v, this),
              t(this, "speed", w, this),
              t(this, "sample", A, this)
          }
          ).prototype, "name", [c], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return ""
              }
          }),
          d = i(C.prototype, "spriteFrames", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return []
              }
          }),
          z = i(C.prototype, "atlas", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          v = i(C.prototype, "isLoop", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          w = i(C.prototype, "speed", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          A = i(C.prototype, "sample", [h], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 10
              }
          }),
          g = C)) || g));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/FrameAnimView.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./FrameAnimClip.ts"], (function(i) {
  var e, t, n, a, r, o, l, s, p, m, u, c, h;
  return {
      setters: [function(i) {
          e = i.applyDecoratedDescriptor,
          t = i.inheritsLoose,
          n = i.initializerDefineProperty,
          a = i.assertThisInitialized
      }
      , function(i) {
          r = i.cclegacy,
          o = i._decorator,
          l = i.CCBoolean,
          s = i.CCFloat,
          p = i.CCString,
          m = i.Animation,
          u = i.AnimationClip,
          c = i.Component
      }
      , function(i) {
          h = i.default
      }
      ],
      execute: function() {
          var f, y, d, b, g, F, v, C, w, A, I, N, z;
          r._RF.push({}, "dfeb5JbQ0pJJ6WhN2GHR6tl", "FrameAnimView", void 0);
          var S = o.ccclass
            , D = o.property;
          i("FrameAnimView", (f = S("FrameAnimView"),
          y = D({
              type: l
          }),
          d = D({
              type: s
          }),
          b = D({
              type: p
          }),
          g = D({
              type: m
          }),
          F = D({
              type: [h]
          }),
          f((w = e((C = function(i) {
              function e() {
                  for (var e, t = arguments.length, r = new Array(t), o = 0; o < t; o++)
                      r[o] = arguments[o];
                  return e = i.call.apply(i, [this].concat(r)) || this,
                  n(e, "autoPlay", w, a(e)),
                  n(e, "delay", A, a(e)),
                  n(e, "animName", I, a(e)),
                  n(e, "animation", N, a(e)),
                  n(e, "clips", z, a(e)),
                  e.isInit = void 0,
                  e
              }
              t(e, i);
              var r = e.prototype;
              return r.onEnable = function() {
                  if (this.autoPlay)
                      if (this.delay > 0) {
                          var i = this;
                          setTimeout((function() {
                              i.play(i.animName)
                          }
                          ), this.delay)
                      } else
                          this.play(this.animName)
              }
              ,
              r.init = function() {
                  if (!this.isInit) {
                      this.isInit = !0,
                      null == this.animation && (this.animation = this.node.addComponent(m));
                      for (var i = 0; i < this.clips.length; ++i) {
                          var e = this.clips[i]
                            , t = e.atlas
                            , n = void 0;
                          if (t) {
                              var a, r = t.getSpriteFrames();
                              e.spriteFrames = [],
                              (a = e.spriteFrames).push.apply(a, r)
                          }
                          e.spriteFrames.sort(this.compareFn),
                          (n = u.createWithSpriteFrames(e.spriteFrames, e.sample)).name = e.name,
                          n.wrapMode = e.isLoop ? u.WrapMode.Loop : u.WrapMode.Normal,
                          n.speed = e.speed,
                          this.animation.addClip(n, n.name)
                      }
                  }
              }
              ,
              r.compareFn = function(i, e) {
                  return i.name.length != e.name.length ? i.name.length - e.name.length : i.name < e.name ? -1 : i.name > e.name ? 1 : 0
              }
              ,
              r.play = function(i, e, t) {
                  this.init(),
                  this.animation.off(m.EventType.FINISHED),
                  e && t && this.animation.on(m.EventType.FINISHED, t.bind(e)),
                  this.animation.play(i)
              }
              ,
              r.getClip = function(i) {
                  for (var e = 0; e < this.clips.length; ++e)
                      if (this.clips[e].name == i)
                          return this.clips[e]
              }
              ,
              e
          }(c)).prototype, "autoPlay", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          A = e(C.prototype, "delay", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          I = e(C.prototype, "animName", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return ""
              }
          }),
          N = e(C.prototype, "animation", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          z = e(C.prototype, "clips", [F], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return []
              }
          }),
          v = C)) || v));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/GameApp.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./HomeScene.ts", "./LoginScene.ts", "./Def.ts", "./Kit.ts", "./ServerList.ts", "./GameConfig.ts", "./UIRoot.ts", "./ResList.ts", "./FightScene.ts", "./DressConfig.ts", "./Session.ts", "./SessionMessage_Login.ts", "./SessionMessage_Fight.ts", "./SessionMessage_Home.ts", "./SessionMessage_Common.ts", "./Client.ts", "./SceneBase.ts"], (function(e) {
  var t, s, n, i, o, a, r, c, u, l, f, g, d, h, p, m, S, v, y, D, w, C, A, _, L, P;
  return {
      setters: [function(e) {
          t = e.asyncToGenerator,
          s = e.regeneratorRuntime
      }
      , function(e) {
          n = e.cclegacy,
          i = e.game,
          o = e.PhysicsSystem2D,
          a = e.EPhysics2DDrawFlags,
          r = e.assetManager,
          c = e.find,
          u = e.Layers
      }
      , function(e) {
          l = e.default
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          g = e.SceneType
      }
      , function(e) {
          d = e.default
      }
      , function(e) {
          h = e.default
      }
      , function(e) {
          p = e.default
      }
      , function(e) {
          m = e.default
      }
      , function(e) {
          S = e.default
      }
      , function(e) {
          v = e.default
      }
      , function(e) {
          y = e.default
      }
      , function(e) {
          D = e.default
      }
      , function(e) {
          w = e.default
      }
      , function(e) {
          C = e.default
      }
      , function(e) {
          A = e.default
      }
      , function(e) {
          _ = e.default
      }
      , function(e) {
          L = e.default
      }
      , function(e) {
          P = e.default
      }
      ],
      execute: function() {
          n._RF.push({}, "3ccf7wQqHdKwKv+S3UXkuAN", "GameApp", void 0);
          e("default", function() {
              function e() {
                  this.progress = void 0,
                  this.isDebug = !1,
                  this.isDebugPhysics = !1
              }
              var n = e.prototype;
              return n.init = function() {
                  i.frameRate = 60,
                  this.isDebug || (console.log = function() {}
                  ,
                  console.warn = function() {}
                  ),
                  this.isDebugPhysics && (o.instance.debugDrawFlags = a.All),
                  this.preload()
              }
              ,
              n.preload = function() {
                  var e = t(s().mark((function e() {
                      return s().wrap((function(e) {
                          for (; ; )
                              switch (e.prev = e.next) {
                              case 0:
                                  return this.progress = 0,
                                  m.loading.progress(0),
                                  e.next = 4,
                                  m.loading.waitOpen();
                              case 4:
                                  m.launch.close(),
                                  d.res.preloadQueue(S, this, this.onProgress, this.onComplete, this.onAssetComplete);
                              case 6:
                              case "end":
                                  return e.stop()
                              }
                      }
                      ), e, this)
                  }
                  )));
                  return function() {
                      return e.apply(this, arguments)
                  }
              }(),
              n.onProgress = function(e, t) {
                  var s = e / t;
                  s > this.progress && (this.progress = s),
                  m.loading.progress(this.progress)
              }
              ,
              n.onComplete = function() {
                  d.action.delayCall(500, m.loading, m.loading.close),
                  this.start()
              }
              ,
              n.onAssetComplete = function(e, t) {
                  t == S.config.path ? (d.config.setDataCenter(e),
                  r.releaseAsset(e)) : t == S.gameconfig.path ? (d.config.set(p, e),
                  r.releaseAsset(e)) : t == S.serverlist.path ? (d.config.set(h, e),
                  r.releaseAsset(e)) : t == S.dress_data.path && (d.config.set(y, e),
                  r.releaseAsset(e))
              }
              ,
              n.start = function() {
                  this.isDebugPhysics && (c("Canvas").getChildByName("PHYSICS_2D_DEBUG_DRAW").layer = u.Enum.DEFAULT);
                  w.init(),
                  C.init(),
                  A.init(),
                  _.init();
                  var e = d.config.get(p);
                  console.log(e.Version),
                  L.user.data.link = e.ServerWss;
                  var t = this.getQuery()
                    , s = t.otp
                    , n = t.svr;
                  n && "2" == n && (L.user.data.link = e.ServerWssGuest),
                  L.user.data.code = s;
                  D.ins.connect(L.user.data.link),
                  d.scene.addScene(g.Login, new f),
                  d.scene.addScene(g.Home, new l),
                  d.scene.addScene(g.Fight, new v),
                  d.scene.addScene(g.Empty, new P),
                  s ? w.login("", s) : e.Release || d.scene.change(g.Login)
              }
              ,
              n.getQuery = function() {
                  var e = {}
                    , t = window.location.search;
                  if (null != t && "" != t)
                      for (var s = (t = t.substring(1, t.length)).split("&"), n = 0; n < s.length; ++n) {
                          var i = s[n].split("=")
                            , o = i[0]
                            , a = i[1];
                          e[o] = a
                      }
                  return e
              }
              ,
              e
          }());
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/GameCollider.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Physics2DDef.ts", "./Physics2DCircle.ts", "./Physics2DBox.ts"], (function(i) {
  var t, e, s, o, n, l, c, r, a, h, p, u, y, d, b;
  return {
      setters: [function(i) {
          t = i.applyDecoratedDescriptor,
          e = i.inheritsLoose,
          s = i.initializerDefineProperty,
          o = i.assertThisInitialized
      }
      , function(i) {
          n = i.cclegacy,
          l = i._decorator,
          c = i.Collider2D,
          r = i.CircleCollider2D,
          a = i.BoxCollider2D,
          h = i.Component
      }
      , function(i) {
          p = i.Physics2DBodyType,
          u = i.Physics2DCollisionGroup,
          y = i.Physics2DCollisionMask
      }
      , function(i) {
          d = i.Physics2DCircle
      }
      , function(i) {
          b = i.Physics2DBox
      }
      ],
      execute: function() {
          var f, O, C, g, j, D, w, v, P, m, B, E, z;
          n._RF.push({}, "dee9b+ZDQZNOKz7/6bL4nPW", "GameCollider", void 0);
          var G = l.ccclass
            , S = l.property;
          i("default", (f = G("GameCollider"),
          O = S({
              type: Boolean
          }),
          C = S({
              type: c
          }),
          g = S({
              type: p
          }),
          j = S({
              type: u
          }),
          D = S({
              type: Boolean
          }),
          f((P = t((v = function(i) {
              function t() {
                  for (var t, e = arguments.length, n = new Array(e), l = 0; l < e; l++)
                      n[l] = arguments[l];
                  return t = i.call.apply(i, [this].concat(n)) || this,
                  s(t, "colliderEnable", P, o(t)),
                  s(t, "collider", m, o(t)),
                  s(t, "bodyType", B, o(t)),
                  s(t, "collisionGroup", E, o(t)),
                  s(t, "scaleEnable", z, o(t)),
                  t.physicsObject = void 0,
                  t.caller = void 0,
                  t.onBeginContact = void 0,
                  t.onEndContact = void 0,
                  t.collisionResponse = !1,
                  t.gravityScale = 0,
                  t
              }
              e(t, i);
              var n = t.prototype;
              return n.reset = function() {
                  this.owner = null,
                  this.caller = null,
                  this.onBeginContact = null,
                  this.onEndContact = null
              }
              ,
              n.onEnable = function() {
                  if (!this.physicsObject && this.colliderEnable) {
                      if (this.collider instanceof r) {
                          var i = d.POOL.spawn();
                          i.radius = this.collider.radius,
                          this.physicsObject = i
                      } else if (this.collider instanceof a) {
                          var t = b.POOL.spawn();
                          t.width = this.collider.size.x,
                          t.height = this.collider.size.y,
                          this.physicsObject = t
                      }
                      this.physicsObject && (this.physicsObject.mass = 1,
                      this.physicsObject.bodyType = this.bodyType,
                      this.physicsObject.name = this.node.name,
                      this.physicsObject.collisionResponse = this.collisionResponse,
                      this.physicsObject.gravityScale = this.gravityScale,
                      this.physicsObject.collisionGroup = this.collisionGroup,
                      this.physicsObject.collisionMask = y.get(this.collisionGroup),
                      this.physicsObject.owner = this,
                      this.physicsObject.start(this.node.position, this.collider.offset))
                  }
              }
              ,
              n.onDisable = function() {
                  this.physicsObject && (this.physicsObject.destroy(),
                  this.physicsObject = null),
                  this.reset()
              }
              ,
              n.update = function(i) {
                  this.physicsObject && (this.physicsObject.position = this.node.position,
                  this.physicsObject.angle = this.node.angle,
                  this.scaleEnable && this.physicsObject.setScale(this.node.getScale()))
              }
              ,
              n.listenBeginContact = function(i, t) {
                  this.caller = i,
                  this.onBeginContact = t
              }
              ,
              n.listenEndContact = function(i, t) {
                  this.caller = i,
                  this.onEndContact = t
              }
              ,
              n.setOwner = function(i) {
                  this.owner = i
              }
              ,
              n.beginContact = function(i) {
                  this.caller && this.onBeginContact && this.onBeginContact.call(this.caller, i.owner.owner)
              }
              ,
              n.endContact = function(i) {
                  this.caller && this.onEndContact && this.onEndContact.call(this.caller, i.owner.owner)
              }
              ,
              n.colliderOn = function(i, t, e) {
                  this.collider ? this.collider.on(i, t, e) : console.error("that is ont collider: ", this)
              }
              ,
              n.colliderOff = function(i, t, e) {
                  this.collider ? this.collider.off(i, t, e) : console.error("that is ont collider: ", this)
              }
              ,
              t
          }(h)).prototype, "colliderEnable", [O], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return !0
              }
          }),
          m = t(v.prototype, "collider", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          B = t(v.prototype, "bodyType", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return p.DYNAMIC
              }
          }),
          E = t(v.prototype, "collisionGroup", [j], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return u.Player
              }
          }),
          z = t(v.prototype, "scaleEnable", [D], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return !1
              }
          }),
          w = v)) || w));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/GameConfig.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ConfigBase.ts"], (function(e) {
  var t, o, i;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          o = e.cclegacy
      }
      , function(e) {
          i = e.default
      }
      ],
      execute: function() {
          var r;
          o._RF.push({}, "4ea12GSprtMarA2GYAI7hYn", "GameConfig", void 0);
          e("default", set_class_name("GameConfig")(r = function(e) {
              function o() {
                  for (var t, o = arguments.length, i = new Array(o), r = 0; r < o; r++)
                      i[r] = arguments[r];
                  return (t = e.call.apply(e, [this].concat(i)) || this).Version = void 0,
                  t.Platform = void 0,
                  t.CpId = void 0,
                  t.GameId = void 0,
                  t.Release = void 0,
                  t.Debug = void 0,
                  t.Heartbeat = void 0,
                  t.BattleHeartbeat = void 0,
                  t.ServerUrl = void 0,
                  t.ServerWss = void 0,
                  t.ServerWssGuest = void 0,
                  t.IsAlpha = void 0,
                  t
              }
              return t(o, e),
              o
          }(i)) || r);
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/GameContext.ts", ["cc"], (function(t) {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "49235tIYtFF8rNz8F7Ma+kr", "GameContext", void 0);
          t("default", (function() {
              this.src = void 0
          }
          ));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/GameGlobal.ts", ["cc"], (function(t) {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "aca9bBPmbJHoKv9h53itaGh", "GameGlobal", void 0);
          var a = t("default", (function() {}
          ));
          a.SCALE_X = 1.05,
          a.SCALE_Y = 1.05,
          a.MOVE_ENABLE = !1,
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/GameObject.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./LayerType.ts", "./Kit.ts"], (function(t) {
  var e, i, s, n, o, a, r;
  return {
      setters: [function(t) {
          e = t.createForOfIteratorHelperLoose,
          i = t.createClass
      }
      , function(t) {
          s = t.cclegacy,
          n = t.Vec3,
          o = t.Prefab
      }
      , function(t) {
          a = t.Layer2DType
      }
      , function(t) {
          r = t.default
      }
      ],
      execute: function() {
          s._RF.push({}, "b5d60hPgxpPzqXU/+q74qjS", "GameObject", void 0);
          var h = function(t) {
              return t[t.Enemy = 0] = "Enemy",
              t[t.Loading = 1] = "Loading",
              t[t.Active = 2] = "Active",
              t[t.Stun = 3] = "Stun",
              t[t.Death = 4] = "Death",
              t
          }(h || {});
          t("default", function() {
              function t() {
                  this._uuid = void 0,
                  this._context = void 0,
                  this.parts = new Map,
                  this._position = new n,
                  this._angle = 0,
                  this._layer = a.Main,
                  this._node = void 0,
                  this._active = !1,
                  this._state = h.Enemy,
                  this._waitHandler = void 0,
                  this.isPause = !1
              }
              var s = t.prototype;
              return s.reset = function() {
                  this._uuid = t.UUID_INDEX,
                  t.UUID_INDEX += 1,
                  this.parts.clear(),
                  this.isPause = !1
              }
              ,
              s.start = function(t, e, i, s) {
                  this._context = t,
                  this._angle = i,
                  this._layer = s,
                  e && n.copy(this._position, e),
                  this.loadAsset()
              }
              ,
              s.loadAsset = function() {
                  this._state == h.Enemy && (this._state = h.Loading,
                  r.res.spawnAsyn(this._context.src, o, this._position, this._angle, this._layer, this, this.onLoadComplete))
              }
              ,
              s.onLoadComplete = function(t) {
                  if (this._state != h.Enemy && this._state != h.Death) {
                      if (this._state = h.Active,
                      this._node = t,
                      !this._active) {
                          this._active = !0,
                          this.onStart(),
                          this.onEnable();
                          for (var i, s = e(this.parts.values()); !(i = s()).done; ) {
                              i.value.start()
                          }
                      }
                      if (this._waitHandler) {
                          var n = this._waitHandler.method
                            , o = this._waitHandler.caller;
                          n.call(o),
                          this._waitHandler = null
                      }
                  } else
                      r.res.recycle(t)
              }
              ,
              s.changeView = function(t) {
                  this._context.src = t,
                  this._node && (n.copy(this._position, this._node.position),
                  this._angle = this._node.angle),
                  r.res.spawnAsyn(this._context.src, o, this._position, this._angle, this._layer, this, this.onLoadCompleteX)
              }
              ,
              s.onLoadCompleteX = function(t) {
                  this._node && (r.res.recycle(this._node),
                  this._node = null),
                  this._node = t,
                  this.onViewChanged();
                  for (var i, s = e(this.parts.values()); !(i = s()).done; ) {
                      i.value.onViewChanged()
                  }
              }
              ,
              s.onViewChanged = function() {}
              ,
              s.onStart = function() {}
              ,
              s.onEnable = function() {}
              ,
              s.onDisable = function() {}
              ,
              s.onDestroy = function() {}
              ,
              s.destroy = function() {
                  if (this._active) {
                      this._active = !1;
                      for (var t, i = e(this.parts.values()); !(t = i()).done; ) {
                          t.value.clear()
                      }
                      this.onDisable(),
                      this.onDestroy()
                  }
                  this._node && (r.res.recycle(this._node),
                  this._node = null),
                  this._state = h.Enemy
              }
              ,
              s.update = function(t) {
                  if (this.active) {
                      for (var i, s = e(this.parts.values()); !(i = s()).done; ) {
                          i.value.onUpdate(t)
                      }
                      this.onUpdate(t)
                  }
              }
              ,
              s.onUpdate = function(t) {
                  if (this.active)
                      for (var i, s = e(this.parts.values()); !(i = s()).done; ) {
                          i.value.onUpdate(t)
                      }
              }
              ,
              s.wait = function(t, e) {
                  this.node ? e.call(t) : this._waitHandler = {
                      caller: t,
                      method: e
                  }
              }
              ,
              s.addPart = function(t, e) {
                  return this.removePart(t),
                  e.setOwner(this),
                  this.parts.set(t, e),
                  this.active && e.start(),
                  e
              }
              ,
              s.removePart = function(t) {
                  this.parts.has(t) && (this.parts.get(t).clear(),
                  this.parts.delete(t))
              }
              ,
              s.getPart = function(t) {
                  return this.parts.get(t)
              }
              ,
              s.pause = function() {
                  if (this.isPause = !0,
                  this.active)
                      for (var t, i = e(this.parts.values()); !(t = i()).done; ) {
                          t.value.pause()
                      }
              }
              ,
              s.resume = function() {
                  if (this.isPause = !1,
                  this.active)
                      for (var t, i = e(this.parts.values()); !(t = i()).done; ) {
                          t.value.resume()
                      }
              }
              ,
              i(t, [{
                  key: "uuid",
                  get: function() {
                      return this._uuid
                  }
              }, {
                  key: "context",
                  get: function() {
                      return this._context
                  }
              }, {
                  key: "node",
                  get: function() {
                      return this._node
                  }
              }, {
                  key: "active",
                  get: function() {
                      return this._active
                  }
              }, {
                  key: "position",
                  get: function() {
                      return this.node ? this.node.position : this._position
                  }
              }, {
                  key: "worldPosition",
                  get: function() {
                      return this.node ? this.node.worldPosition : this._position
                  }
              }, {
                  key: "angle",
                  get: function() {
                      return this.node ? this.node.angle : this._angle
                  }
              }]),
              t
          }()).UUID_INDEX = 1,
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/GameObjectManager.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts", "./Kit.ts"], (function(e) {
  var t, u, i, s, n;
  return {
      setters: [function(e) {
          t = e.inheritsLoose,
          u = e.assertThisInitialized
      }
      , function(e) {
          i = e.cclegacy
      }
      , function(e) {
          s = e.default
      }
      , function(e) {
          n = e.default
      }
      ],
      execute: function() {
          i._RF.push({}, "b4227pYcohPsrAN0JWM3XBj", "GameObjectManager", void 0);
          e("default", function(e) {
              function i() {
                  var t;
                  return (t = e.call(this) || this).objectQueue = new Array,
                  t.appendQueue = new Array,
                  t.removeQueue = new Array,
                  t.isPaused = void 0,
                  t.isLocked = void 0,
                  n.time.addUpdate(u(t)),
                  t
              }
              t(i, e);
              var s = i.prototype;
              return s.create = function(e, t, u, i, s) {
                  var n = new e;
                  return n.start(t, u, i, s),
                  this.isLocked ? this.appendQueue.push(n) : this.objectQueue.push(n),
                  n
              }
              ,
              s.remove = function(e) {
                  if (this.isLocked)
                      this.removeQueue.push(e);
                  else {
                      var t = this.objectQueue.indexOf(e);
                      -1 != t && this.objectQueue.splice(t, 0),
                      e.destroy()
                  }
              }
              ,
              s.update = function(e) {
                  if (this.appendQueue.length > 0) {
                      for (var t = 0; t < this.appendQueue.length; ++t)
                          this.appendQueue.push(this.appendQueue[t]);
                      this.appendQueue.splice(0, this.appendQueue.length)
                  }
                  if (this.removeQueue.length > 0) {
                      for (var u = 0; u < this.removeQueue.length; ++u) {
                          var i = this.removeQueue[u]
                            , s = this.objectQueue.indexOf(i);
                          -1 != s && this.objectQueue.splice(s, 0),
                          i.destroy()
                      }
                      this.removeQueue.splice(0, this.removeQueue.length)
                  }
                  this.isLocked = !0;
                  for (var n = 0; n < this.objectQueue.length; ++n)
                      this.objectQueue[n].update(e);
                  this.isLocked = !1
              }
              ,
              s.clear = function() {
                  for (var e = 0; e < this.objectQueue.length; ++e)
                      this.objectQueue[e].destroy();
                  this.objectQueue.splice(0, this.objectQueue.length)
              }
              ,
              i
          }(s()));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/GamePart.ts", ["cc"], (function(t) {
  var i;
  return {
      setters: [function(t) {
          i = t.cclegacy
      }
      ],
      execute: function() {
          i._RF.push({}, "b4ee0RIuPZALp/DBh7EmPZ6", "GamePart", void 0);
          t("default", function() {
              function t() {
                  this.owner = void 0,
                  this.active = void 0,
                  this.isPaused = void 0
              }
              var i = t.prototype;
              return i.setOwner = function(t) {
                  this.owner = t
              }
              ,
              i.start = function() {
                  this.isPaused = !1,
                  this.active || (this.active = !0,
                  this.onEnable())
              }
              ,
              i.clear = function() {
                  this.isPaused = !1,
                  this.active && (this.active = !1,
                  this.onDisable())
              }
              ,
              i.onEnable = function() {}
              ,
              i.onDisable = function() {}
              ,
              i.pause = function() {
                  this.isPaused = !0
              }
              ,
              i.resume = function() {
                  this.isPaused = !1
              }
              ,
              i.onUpdate = function(t) {}
              ,
              i.refresh = function() {}
              ,
              i.onViewChanged = function() {}
              ,
              t
          }());
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/GlobalObjectSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts"], (function(t) {
  var i, n, e;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          e = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "1254ebGypdGQKcGGbYLOFTV", "GlobalObjectSystem", void 0);
          t("default", function(t) {
              function n() {
                  for (var i, n = arguments.length, e = new Array(n), c = 0; c < n; c++)
                      e[c] = arguments[c];
                  return (i = t.call.apply(t, [this].concat(e)) || this).dict = {},
                  i
              }
              i(n, t);
              var e = n.prototype;
              return e.add = function(t, i) {
                  var n = this.dict[t];
                  n ? -1 == n.indexOf(i) && n.push(i) : (n = [i],
                  this.dict[t] = n)
              }
              ,
              e.remove = function(t, i) {
                  var n = this.dict[t];
                  if (n) {
                      var e = n.indexOf(i);
                      -1 != e && n.splice(e, 1)
                  }
              }
              ,
              e.set = function(t, i) {
                  var n = this.dict[t];
                  n ? n[0] = i : this.dict[t] = [i]
              }
              ,
              e.get = function(t) {
                  var i = this.dict[t];
                  return i ? i[0] : null
              }
              ,
              e.getList = function(t) {
                  return this.dict[t]
              }
              ,
              n
          }(e()));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/GmWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./Fight.ts", "./Kit.ts", "./proto.mjs_cjs=&original=.js", "./SessionMessage_Common.ts", "./Def.ts", "./proto.js"], (function(o) {
  var f, t, e, r, n, c, l, i, s, u, a, p, d, g, h, m, b;
  return {
      setters: [function(o) {
          f = o.applyDecoratedDescriptor,
          t = o.inheritsLoose,
          e = o.initializerDefineProperty,
          r = o.assertThisInitialized
      }
      , function(o) {
          n = o.cclegacy,
          c = o.EditBox,
          l = o.Button,
          i = o.Toggle,
          s = o.RichText,
          u = o.input,
          a = o.Input
      }
      , function(o) {
          p = o.default
      }
      , function(o) {
          d = o.default
      }
      , function(o) {
          g = o.default
      }
      , null, function(o) {
          h = o.default
      }
      , function(o) {
          m = o.SceneType
      }
      , function(o) {
          b = o.default
      }
      ],
      execute: function() {
          var v, y, B, w, x, S, M, T, E, j, D;
          n._RF.push({}, "4d680QM5q5NPIZIdNJCS6RG", "GmWindow", void 0);
          o("default", (v = uiBind("fgui/login", "GmWindow"),
          y = uiInject("EditBox", c),
          B = uiInject("OKButton", l),
          w = uiInject("ServerToggle", i),
          x = uiInject("Desc", s),
          v((T = f((M = function(o) {
              function f() {
                  for (var f, t = arguments.length, n = new Array(t), c = 0; c < t; c++)
                      n[c] = arguments[c];
                  return f = o.call.apply(o, [this].concat(n)) || this,
                  e(f, "EditBox", T, r(f)),
                  e(f, "OKButton", E, r(f)),
                  e(f, "ServerToggle", j, r(f)),
                  e(f, "Desc", D, r(f)),
                  f
              }
              t(f, o);
              var n = f.prototype;
              return n.getPrototype = function() {
                  return f.prototype
              }
              ,
              n.onEnable = function() {
                  var o = this;
                  this.ServerToggle.isChecked = !0,
                  this.onClick(this.OKButton, (function() {
                      o.onGM(o.EditBox.string),
                      o.close()
                  }
                  )),
                  u.on(a.EventType.MOUSE_UP, this.onMouseUp, this),
                  this.Desc.string = "<color=#00ff00> 增加水晶:</color> <color=#0fffff>c1:[数量]</color>\n<color=#00ff00> 增加叶子:</color> <color=#0fffff>c2:[数量]</color>\n<color=#00ff00> 质押英雄:</color> <color=#0fffff>staked:[#序号]</color>\n<color=#00ff00> 增加装备:</color> <color=#0fffff>equipment:[id]</color>\n<color=#00ff00> 增加材料:</color> <color=#0fffff>material:[id],[数量]</color>\n<color=#00ff00> 增加体力:</color> <color=#0fffff>vit:[数量]</color>\n<color=#00ff00> 增加活动次数:</color> <color=#0fffff>activity:[数量]</color>\n<color=#00ff00> 重置购买宝箱时间:</color> <color=#0fffff>chest</color>\n<color=#00ff00> 通行证奖励:</color> <color=#0fffff>pass:[id1,id2..]</color>\n<color=#00ff00> backpack奖励:</color> <color=#0fffff>backpack:[数量]</color>\n<color=#00ff00> (战斗中)增加金币:</color> <color=#0fffff>gold:[数量]</color>\n<color=#00ff00> (战斗中)增加道具:</color> <color=#0fffff>item:[id]</color>\n<color=#00ff00> (战斗中)增加武器:</color> <color=#0fffff>weapon:[id]</color>\n<color=#00ff00> (战斗中)停止刷怪:</color> <color=#0fffff>stop</color>\n<color=#00ff00> (战斗中)跳过关卡:</color> <color=#0fffff>next:[关数]</color>\n<color=#00ff00> (战斗中)召唤怪物:</color> <color=#0fffff>monster:[id],[数量]</color>\n<color=#00ff00> (战斗中)召唤工程塔:</color> <color=#0fffff>tower:[id]</color>\n<color=#00ff00> (战斗中)变更角色属性:</color> <color=#0fffff>attr:[属性类型,变更值]</color>\n"
              }
              ,
              n.onDisable = function() {
                  g.scene.currState == m.Fight && d.ins.battlePause(!1)
              }
              ,
              n.onResume = function() {
                  g.scene.currState == m.Fight && d.ins.resume(),
                  u.off(a.EventType.MOUSE_UP, this.onMouseUp, this)
              }
              ,
              n.onMouseUp = function(o) {}
              ,
              n.onGM = function(o) {
                  if (console.log(o),
                  null != o && "" != o) {
                      var f = o;
                      f = f.trim(),
                      h.GMcmd(f)
                  }
              }
              ,
              n.funcTest = function() {
                  var o = new b.msg.BattleContext;
                  o.Chapter = 123,
                  o.Stage = 2,
                  o.Weapons = [7, 8, 9];
                  var f = b.msg.BattleContext.encode(o).finish();
                  console.log("battle context, encode:", f);
                  var t = new Uint8Array(f)
                    , e = b.msg.BattleContext.decode(t);
                  console.log("battle context, decode:", e)
              }
              ,
              f
          }(p)).prototype, "EditBox", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          E = f(M.prototype, "OKButton", [B], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          j = f(M.prototype, "ServerToggle", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          D = f(M.prototype, "Desc", [x], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          S = M)) || S));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/GoodsBuyTips.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./SessionMessage_Home.ts", "./LayerType.ts"], (function(t) {
  var e, n, u, i, o, r, l, a, s, c, y, b, f;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          n = t.inheritsLoose,
          u = t.initializerDefineProperty,
          i = t.assertThisInitialized
      }
      , function(t) {
          o = t.cclegacy,
          r = t.Button,
          l = t.Node,
          a = t.RichText,
          s = t.Label,
          c = t.Vec3
      }
      , function(t) {
          y = t.default
      }
      , function(t) {
          b = t.default
      }
      , function(t) {
          f = t.Layer2DType
      }
      ],
      execute: function() {
          var B, p, C, h, d, g, P, m, S, D, N, z, I, j, v, w, T, L, x;
          o._RF.push({}, "3012ezxj7VBqKSlteQ1W+/Q", "GoodsBuyTips", void 0);
          t("default", (B = uiBind("fgui/login", "GoodsBuyTips"),
          p = uiInject("Panel/CloseBtn", r),
          C = uiInject("Panel", l),
          h = uiInject("Panel/Desc", a),
          d = uiInject("Panel/BuyPanel", l),
          g = uiInject("Panel/BuyPanel/NumSetting/SubButton", r),
          P = uiInject("Panel/BuyPanel/NumSetting/AddButton", r),
          m = uiInject("Panel/BuyPanel/NumSetting/Num", s),
          S = uiInject("Panel/BuyPanel/BuyButton", r),
          B((z = e((N = function(t) {
              function e(e) {
                  var n;
                  return n = t.call(this, e) || this,
                  u(n, "CloseBtn", z, i(n)),
                  u(n, "Panel", I, i(n)),
                  u(n, "Desc", j, i(n)),
                  u(n, "BuyPanel", v, i(n)),
                  u(n, "SubButton", w, i(n)),
                  u(n, "AddButton", T, i(n)),
                  u(n, "BuyNum", L, i(n)),
                  u(n, "BuyButton", x, i(n)),
                  n.data = void 0,
                  n.position = new c,
                  n.buyCurCount = 0,
                  n.buyMaxCount = 1e3,
                  n.layer = f.UITips,
                  n
              }
              n(e, t);
              var o = e.prototype;
              return o.getPrototype = function() {
                  return e.prototype
              }
              ,
              o.onEnable = function() {
                  var t = this;
                  this.Panel.position = this.position,
                  this.onClick(this.CloseBtn, (function() {
                      t.close()
                  }
                  ), !0),
                  this.BuyNum.string = this.buyCurCount.toString(),
                  this.onClick(this.SubButton, (function() {
                      t.buyCurCount -= 1,
                      t.buyCurCount < 1 && (t.buyCurCount = 1),
                      t.BuyNum.string = t.buyCurCount.toString(),
                      t.refreshDesc()
                  }
                  ), !0),
                  this.onClick(this.AddButton, (function() {
                      t.buyCurCount += 1,
                      t.buyCurCount > t.buyMaxCount && (t.buyCurCount = t.buyMaxCount),
                      t.BuyNum.string = t.buyCurCount.toString(),
                      t.refreshDesc()
                  }
                  ), !0),
                  this.onClick(this.BuyButton, (function() {
                      t.close();
                      var e = t.data.id
                        , n = t.buyCurCount;
                      b.storeSell(e, n)
                  }
                  ), !0),
                  this.refreshDesc()
              }
              ,
              o.setData = function(t, e, n) {
                  this.data = t,
                  this.buyCurCount = e,
                  this.buyMaxCount = n
              }
              ,
              o.refreshDesc = function() {
                  var t = this.data.cfg.Name
                    , e = this.data.cfg.StoreBuy * this.buyCurCount;
                  this.Desc.string = "<color=#ffe0ac>DO YOU WANT TO SELL <color=#ffa519>" + t + "</color> FOR <color=#00ff21>" + e + " $LEAF</color> ?</color>"
              }
              ,
              e
          }(y)).prototype, "CloseBtn", [p], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          I = e(N.prototype, "Panel", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          j = e(N.prototype, "Desc", [h], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          v = e(N.prototype, "BuyPanel", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          w = e(N.prototype, "SubButton", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          T = e(N.prototype, "AddButton", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          L = e(N.prototype, "BuyNum", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          x = e(N.prototype, "BuyButton", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          D = N)) || D));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Gun360Setting.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(e) {
  var t, i, r, n, l, u, o;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.initializerDefineProperty
      }
      , function(e) {
          r = e.cclegacy,
          n = e._decorator,
          l = e.Node,
          u = e.CCFloat,
          o = e.CCBoolean
      }
      ],
      execute: function() {
          var a, b, c, p, s, h, f, y, g, v, d, m, w, z, C, D, S, G, N, P, _, F, H;
          r._RF.push({}, "615e6AsnGpIKZvMfkGE6bWc", "Gun360Setting", void 0);
          var I = n.ccclass
            , k = n.property;
          e("default", (a = I("Gun360Setting"),
          b = k({
              type: l
          }),
          c = k({
              type: l
          }),
          p = k({
              type: u
          }),
          s = k({
              type: u
          }),
          h = k({
              type: u
          }),
          f = k({
              type: u
          }),
          y = k({
              type: o
          }),
          g = k({
              type: u
          }),
          v = k({
              type: u
          }),
          a((w = t((m = function() {
              i(this, "fireNode", w, this),
              i(this, "bulletPath", z, this),
              i(this, "bulletNode", C, this),
              i(this, "bulletSpeed", D, this),
              i(this, "bulletCount", S, this),
              i(this, "bulletInterval", G, this),
              i(this, "isThrough", N, this),
              i(this, "bulletDistance", P, this),
              i(this, "isCurve", _, this),
              i(this, "curveDistance", F, this),
              i(this, "curveHeight", H, this)
          }
          ).prototype, "fireNode", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          z = t(m.prototype, "bulletPath", [k], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return "weapon/prefabs/bullet001"
              }
          }),
          C = t(m.prototype, "bulletNode", [c], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          D = t(m.prototype, "bulletSpeed", [p], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1e3
              }
          }),
          S = t(m.prototype, "bulletCount", [s], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          G = t(m.prototype, "bulletInterval", [h], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 0
              }
          }),
          N = t(m.prototype, "isThrough", [k], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return !1
              }
          }),
          P = t(m.prototype, "bulletDistance", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 2e3
              }
          }),
          _ = t(m.prototype, "isCurve", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return !1
              }
          }),
          F = t(m.prototype, "curveDistance", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 400
              }
          }),
          H = t(m.prototype, "curveHeight", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 200
              }
          }),
          d = m)) || d));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Gun360Weapon.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreatureManager.ts", "./RangedWeapon.ts", "./Kit.ts", "./Gun360Setting.ts", "./CreatureType.ts", "./BattleDef.ts"], (function(t) {
  var e, i, n, r, l, a, u, o, s, c, h, f, p, g;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          n = t.initializerDefineProperty,
          r = t.assertThisInitialized
      }
      , function(t) {
          l = t.cclegacy,
          a = t._decorator,
          u = t.Vec3,
          o = t.Vec2
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          p = t.CreatureType
      }
      , function(t) {
          g = t.AtkObjType
      }
      ],
      execute: function() {
          var d, y, b, v, A, C, w, B, P;
          l._RF.push({}, "e21f8B8anRC8av6N6ab7pT9", "Gun360Weapon", void 0);
          var m = a.ccclass
            , D = a.property;
          t("default", (d = m("Gun360Weapon"),
          y = D({
              type: f
          }),
          b = D({
              type: String
          }),
          v = D({
              type: Number
          }),
          d((w = e((C = function(t) {
              function e() {
                  for (var e, i = arguments.length, l = new Array(i), a = 0; a < i; a++)
                      l[a] = arguments[a];
                  return e = t.call.apply(t, [this].concat(l)) || this,
                  n(e, "setting", w, r(e)),
                  n(e, "fireAudio", B, r(e)),
                  n(e, "fireAudioVolume", P, r(e)),
                  e.timeId = void 0,
                  e
              }
              i(e, t);
              var l = e.prototype;
              return l.init = function() {
                  t.prototype.init.call(this)
              }
              ,
              l.getFireNode = function() {
                  return this.setting.fireNode ? this.setting.fireNode : this.node
              }
              ,
              l.onAttackEnter = function() {
                  this.skeleton && (this.skeleton.enabled = !0)
              }
              ,
              l.onAttacking = function() {}
              ,
              l.onAttackLeave = function() {}
              ,
              l.onAttackBegin = function() {
                  t.prototype.onAttackBegin.call(this),
                  this.fire(this.ai.dir, this.ai.bulletCount)
              }
              ,
              l.fire = function(t, e) {
                  h.utils.isEmpty(this.fireAudio) || h.sound.playSound(this.fireAudio, this.fireAudioVolume),
                  null != e && 0 != e || (e = this.setting.bulletCount);
                  for (var i = 2 * Math.PI / e, n = 0; n < this.setting.bulletCount; ++n) {
                      var r = n * i
                        , l = Math.cos(r)
                        , a = Math.sin(r)
                        , o = new u(l,a,0)
                        , s = this.setting.bulletInterval * n;
                      s > 0 ? h.action.delayCall(s, this, this.createBullet, o) : this.createBullet(o)
                  }
              }
              ,
              l.createBullet = function(t) {
                  var e = h.utils.localToGlobal(this.setting.bulletNode);
                  this.setting.isCurve ? this.createCurveBullet(e, t, this.setting) : this.createLineBullet(e, t, this.setting)
              }
              ,
              l.createLineBullet = function(t, e, i) {
                  var n = this.getOwnerPlr().type == p.Player ? this.data : this.getOwnerPlr().context.data;
                  if (null != n && (n.getAOType() != g.Monster || null != n.getCfg())) {
                      var r = s.ins.createBullet(i.bulletPath, t, this.getOwnerPlr(), this, n)
                        , l = new o;
                      l.x = e.x,
                      l.y = e.y,
                      l.normalize(),
                      r.setThrough(i.isThrough),
                      r.setSpeed(i.bulletSpeed),
                      r.setDir(l),
                      r.setMaxDistance(i.bulletDistance)
                  }
              }
              ,
              l.createCurveBullet = function(t, e, i) {
                  var n = this.getOwnerPlr().type == p.Player ? this.data : this.getOwnerPlr().context.data;
                  if (null != n && (n.getAOType() != g.Monster || null != n.getCfg())) {
                      var r = s.ins.createCurveBullet(i.bulletPath, t, this.getOwnerPlr(), this, n)
                        , l = new o;
                      l.x = e.x,
                      l.y = e.y,
                      l.normalize(),
                      r.setUpdateDirEnable(!1),
                      r.setThrough(i.isThrough),
                      r.setSpeed(i.bulletSpeed),
                      r.setCurve(i.curveDistance, i.curveHeight),
                      r.setDir(l),
                      r.setMaxDistance(i.bulletDistance)
                  }
              }
              ,
              l.onAttackEnded = function() {}
              ,
              e
          }(c)).prototype, "setting", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new f
              }
          }),
          B = e(C.prototype, "fireAudio", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return ""
              }
          }),
          P = e(C.prototype, "fireAudioVolume", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          A = C)) || A));
          l._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/GunSetting.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(e) {
  var t, i, r, n, l, a, u, o;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.initializerDefineProperty
      }
      , function(e) {
          r = e.cclegacy,
          n = e._decorator,
          l = e.Node,
          a = e.CCFloat,
          u = e.Vec2,
          o = e.CCInteger
      }
      ],
      execute: function() {
          var b, p, f, s, c, h, y, g, z, d, w, m, D, v, C, E, S, N, P, R, A, B, I, _, F, G, j, H, O, T, k, x, L, M, V, X, Y, q, J;
          r._RF.push({}, "e5527+zj9pPY4v6zH2IziRX", "GunSetting", void 0);
          var K = n.ccclass
            , Q = n.property;
          e("default", (b = K("GunSetting"),
          p = Q({
              type: l
          }),
          f = Q({
              type: l
          }),
          s = Q({
              type: a
          }),
          c = Q({
              type: a
          }),
          h = Q({
              type: a
          }),
          y = Q({
              type: a
          }),
          g = Q({
              type: a
          }),
          z = Q({
              type: u
          }),
          d = Q({
              type: Boolean
          }),
          w = Q({
              type: u
          }),
          m = Q({
              type: Boolean
          }),
          D = Q({
              type: a
          }),
          v = Q({
              type: Boolean
          }),
          C = Q({
              type: o
          }),
          E = Q({
              type: o
          }),
          S = Q({
              type: l
          }),
          N = Q({
              type: o
          }),
          b((A = t((R = function() {
              i(this, "fireNode", A, this),
              i(this, "bulletPath", B, this),
              i(this, "bulletNode", I, this),
              i(this, "bulletSpeed", _, this),
              i(this, "bulletCount", F, this),
              i(this, "bulletAngle", G, this),
              i(this, "bulletThrough", j, this),
              i(this, "bulletDistance", H, this),
              i(this, "bulletOffsetAngle", O, this),
              i(this, "bulletDelay", T, this),
              i(this, "offsetEnable", k, this),
              i(this, "offsetRange", x, this),
              i(this, "hideEnable", L, this),
              i(this, "hideDelay", M, this),
              i(this, "dartleEnable", V, this),
              i(this, "dartleCount", X, this),
              i(this, "dartleInterval", Y, this),
              i(this, "fireEffect", q, this),
              i(this, "fireDuration", J, this)
          }
          ).prototype, "fireNode", [p], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          B = t(R.prototype, "bulletPath", [Q], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return "weapon/prefabs/bullet001"
              }
          }),
          I = t(R.prototype, "bulletNode", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          _ = t(R.prototype, "bulletSpeed", [s], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1e3
              }
          }),
          F = t(R.prototype, "bulletCount", [c], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          G = t(R.prototype, "bulletAngle", [h], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 30
              }
          }),
          j = t(R.prototype, "bulletThrough", [Q], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return !1
              }
          }),
          H = t(R.prototype, "bulletDistance", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 2e3
              }
          }),
          O = t(R.prototype, "bulletOffsetAngle", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 0
              }
          }),
          T = t(R.prototype, "bulletDelay", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new u
              }
          }),
          k = t(R.prototype, "offsetEnable", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return !1
              }
          }),
          x = t(R.prototype, "offsetRange", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new u
              }
          }),
          L = t(R.prototype, "hideEnable", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return !1
              }
          }),
          M = t(R.prototype, "hideDelay", [D], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 0
              }
          }),
          V = t(R.prototype, "dartleEnable", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return !1
              }
          }),
          X = t(R.prototype, "dartleCount", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 0
              }
          }),
          Y = t(R.prototype, "dartleInterval", [E], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 0
              }
          }),
          q = t(R.prototype, "fireEffect", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          J = t(R.prototype, "fireDuration", [N], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1e3
              }
          }),
          P = R)) || P));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/GunWeapon.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreatureManager.ts", "./RangedWeapon.ts", "./Kit.ts", "./GunSetting.ts", "./CreatureType.ts", "./BattleDef.ts"], (function(t) {
  var e, i, n, l, u, r, o, a, s, f, c, h, d, g, b, p;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          n = t.initializerDefineProperty,
          l = t.assertThisInitialized
      }
      , function(t) {
          u = t.cclegacy,
          r = t._decorator,
          o = t.Sprite,
          a = t.Vec3,
          s = t.Vec2,
          f = t.Color
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          d = t.default
      }
      , function(t) {
          g = t.default
      }
      , function(t) {
          b = t.CreatureType
      }
      , function(t) {
          p = t.AtkObjType
      }
      ],
      execute: function() {
          var y, m, v, S, A, I, C, E, w, T, B, D, O, k, x;
          u._RF.push({}, "ef28b8Y4pJGI4Ujjdw3puuc", "GunWeapon", void 0);
          var z = r.ccclass
            , L = r.property;
          t("default", (y = z("GunWeapon"),
          m = L({
              type: g
          }),
          v = L({
              type: o
          }),
          S = L({
              type: String
          }),
          A = L({
              type: Number
          }),
          I = L({
              type: String
          }),
          C = L({
              type: Number
          }),
          y((T = e((w = function(t) {
              function e() {
                  for (var e, i = arguments.length, u = new Array(i), r = 0; r < i; r++)
                      u[r] = arguments[r];
                  return e = t.call.apply(t, [this].concat(u)) || this,
                  n(e, "gunSetting", T, l(e)),
                  n(e, "line", B, l(e)),
                  n(e, "fireAudio", D, l(e)),
                  n(e, "fireAudioVolume", O, l(e)),
                  n(e, "bulletAudio", k, l(e)),
                  n(e, "bulletAudioVolume", x, l(e)),
                  e.fireTimeId = void 0,
                  e.timeId = void 0,
                  e
              }
              i(e, t);
              var u = e.prototype;
              return u.init = function() {
                  t.prototype.init.call(this),
                  this.gunSetting.fireEffect && (this.gunSetting.fireEffect.active = !0),
                  this.gunSetting.bulletCount > 0 && 0 == this.ai.bulletCount && this.ai.setBulletCount(this.gunSetting.bulletCount),
                  this.gunSetting.dartleCount > 0 && 0 == this.ai.dartleCount && this.ai.setDartleCount(this.gunSetting.dartleCount),
                  this.gunSetting.dartleInterval > 0 && 0 == this.ai.dartleInterval && this.ai.setDartleInterval(this.gunSetting.dartleInterval)
              }
              ,
              u.getFireNode = function() {
                  return this.gunSetting.fireNode ? this.gunSetting.fireNode : this.node
              }
              ,
              u.onAttackEnter = function() {
                  this.atkEvents.length > 0 && this.showLine(1e3 * this.atkEvents[0].x * .7),
                  this.skeleton && (this.skeleton.enabled = !0),
                  this.gunSetting.fireEffect && (this.gunSetting.fireEffect.active = !0)
              }
              ,
              u.onAttacking = function() {}
              ,
              u.onAttackLeave = function() {}
              ,
              u.onAttackBegin = function() {
                  var e = this;
                  t.prototype.onAttackBegin.call(this);
                  var i = this.gunSetting;
                  i.fireEffect && (i.fireEffect.active = !1,
                  null != this.fireTimeId && (clearTimeout(this.fireTimeId),
                  this.fireTimeId = null),
                  this.fireTimeId = setTimeout((function() {
                      i.fireEffect.active = !0,
                      e.fireTimeId = null
                  }
                  ), i.fireDuration)),
                  this.fire(this.ai.dir, this.ai.bulletCount),
                  i.hideEnable && (i.hideDelay > 0 ? setTimeout((function() {
                      e.skeleton.enabled = !1
                  }
                  ), i.hideDelay) : this.skeleton.enabled = !1)
              }
              ,
              u.fire = function(t, e) {
                  this.gunSetting.dartleEnable ? this.fireDartle(t) : this.fireCom(t, e)
              }
              ,
              u.fireDartle = function(t) {
                  var e = this.gunSetting
                    , i = e.dartleCount
                    , n = e.dartleInterval
                    , l = 0
                    , u = this;
                  (this.timeId = null) && (clearInterval(this.timeId),
                  this.timeId = null),
                  this.timeId = setInterval((function() {
                      l < i ? (l += 1,
                      u.fireCom(t)) : (u.timeId = null) && (clearInterval(u.timeId),
                      u.timeId = null)
                  }
                  ), n)
              }
              ,
              u.fireCom = function(t, e) {
                  var i = this.gunSetting;
                  if (e > 1) {
                      var n = t.x > 0 ? i.bulletOffsetAngle : -i.bulletOffsetAngle;
                      this.fireMulti(t, e, i.bulletAngle, n)
                  } else if (i.bulletCount > 1) {
                      n = t.x > 0 ? i.bulletOffsetAngle : -i.bulletOffsetAngle;
                      this.fireMulti(t, i.bulletCount, i.bulletAngle, n)
                  } else
                      this.fireOne(t);
                  d.utils.isEmpty(this.fireAudio) || d.sound.playSound(this.fireAudio, this.fireAudioVolume)
              }
              ,
              u.fireOne = function(t) {
                  if (0 != this.node.active) {
                      d.utils.isEmpty(this.bulletAudio) || d.sound.playSound(this.bulletAudio, this.bulletAudioVolume);
                      var e = this.gunSetting
                        , i = t.x > 0 ? e.bulletOffsetAngle : -e.bulletOffsetAngle;
                      this.createBullet(t, i)
                  }
              }
              ,
              u.fireMulti = function(t, e, i, n) {
                  d.utils.isEmpty(this.bulletAudio) || d.sound.playSound(this.bulletAudio, this.bulletAudioVolume);
                  var l = this.gunSetting
                    , u = e % 2 == 1
                    , r = 0
                    , o = i / (e - 1);
                  u ? (this.createBullet(t, n),
                  r = 0) : r = .5 * o;
                  for (var a = Math.floor(.5 * e), s = 0; s < a; ++s) {
                      var f = u ? s + 1 : s;
                      if (l.offsetEnable)
                          this.createBullet(t, n),
                          this.createBullet(t, n);
                      else {
                          var c = r + f * o;
                          this.createBullet(t, c + n),
                          this.createBullet(t, -c + n)
                      }
                  }
              }
              ,
              u.getOffsetPos = function(t, e) {
                  var i = this.gunSetting
                    , n = d.math.random(i.offsetRange.x, i.offsetRange.y)
                    , l = new a(-e.y,e.x,0);
                  return l.normalize(),
                  l.multiplyScalar(n),
                  l.x += t.x,
                  l.y += t.y,
                  l
              }
              ,
              u.createBullet = function(t, e) {
                  var i = d.math.random(this.gunSetting.bulletDelay.x, this.gunSetting.bulletDelay.y);
                  i > 0 ? d.action.delayCall(i, this, this.createLineBullet, t, e) : this.createLineBullet(t, e)
              }
              ,
              u.createLineBullet = function(t, e) {
                  var i = this.gunSetting
                    , n = d.math.getRadian(e)
                    , l = this.getOwnerPlr().type == b.Player ? this.data : this.getOwnerPlr().context.data;
                  if (null != l && (l.getAOType() != p.Monster || null != l.getCfg())) {
                      var u = d.utils.localToGlobal(i.bulletNode);
                      i.offsetEnable && (u = this.getOffsetPos(u, t));
                      var r = c.ins.createBullet(i.bulletPath, u, this.getOwnerPlr(), this, l)
                        , o = new s;
                      o.x = t.x,
                      o.y = t.y,
                      o.normalize(),
                      o.rotate(n),
                      r.setThrough(i.bulletThrough),
                      r.setSpeed(i.bulletSpeed),
                      r.setDir(o),
                      r.setMaxDistance(i.bulletDistance)
                  }
              }
              ,
              u.onAttackEnded = function() {}
              ,
              u.showLine = function(t) {
                  var e = this;
                  void 0 === t && (t = 100),
                  this.line && (this.line.node.active = !0,
                  this.line.color = new f(1,1,1,0),
                  d.action.beginSequence(),
                  d.action.lerpColor(this, (function(t) {
                      e.line.color = t
                  }
                  ), new f(1,1,1,0), f.WHITE, t),
                  d.action.delay(100),
                  d.action.lerpColor(this, (function(t) {
                      e.line.color = t
                  }
                  ), f.WHITE, new f(1,1,1,0), 100),
                  d.action.set(this.line.node, {
                      active: !1
                  }),
                  d.action.end())
              }
              ,
              u.hideLine = function() {
                  var t = this;
                  this.line && (d.action.beginSequence(),
                  d.action.lerpColor(this, (function(e) {
                      t.line.color = e
                  }
                  ), f.WHITE, new f(1,1,1,0), 100),
                  d.action.set(this.line.node, {
                      active: !1
                  }),
                  d.action.end())
              }
              ,
              e
          }(h)).prototype, "gunSetting", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new g
              }
          }),
          B = e(w.prototype, "line", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          D = e(w.prototype, "fireAudio", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return ""
              }
          }),
          O = e(w.prototype, "fireAudioVolume", [A], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          k = e(w.prototype, "bulletAudio", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return "sound/shoot"
              }
          }),
          x = e(w.prototype, "bulletAudioVolume", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          E = w)) || E));
          u._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/GunWheelSetting.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(e) {
  var t, i, r, n, l, u, a;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.initializerDefineProperty
      }
      , function(e) {
          r = e.cclegacy,
          n = e._decorator,
          l = e.CCFloat,
          u = e.Vec3,
          a = e.Vec2
      }
      ],
      execute: function() {
          var o, p, b, c, s, h, f, y, g, w, z, m, d, D, S, v, C, G, P;
          r._RF.push({}, "2cf9ekGZEdAobpyOw83zp4j", "GunWheelSetting", void 0);
          var R = n.ccclass
            , _ = n.property;
          e("default", (o = R("GunWheelSetting"),
          p = _({
              type: l
          }),
          b = _({
              type: l
          }),
          c = _({
              type: l
          }),
          s = _({
              type: u
          }),
          h = _({
              type: u
          }),
          f = _({
              type: l
          }),
          y = _({
              type: a
          }),
          o((z = t((w = function() {
              i(this, "bulletPath", z, this),
              i(this, "bulletSpeed", m, this),
              i(this, "bulletCount", d, this),
              i(this, "isThrough", D, this),
              i(this, "bulletDistance", S, this),
              i(this, "startL", v, this),
              i(this, "startR", C, this),
              i(this, "height", G, this),
              i(this, "bulletDelay", P, this)
          }
          ).prototype, "bulletPath", [_], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return "weapon/prefabs/bullet001"
              }
          }),
          m = t(w.prototype, "bulletSpeed", [p], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1e3
              }
          }),
          d = t(w.prototype, "bulletCount", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          D = t(w.prototype, "isThrough", [_], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return !1
              }
          }),
          S = t(w.prototype, "bulletDistance", [c], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 2e3
              }
          }),
          v = t(w.prototype, "startL", [s], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new u
              }
          }),
          C = t(w.prototype, "startR", [h], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new u
              }
          }),
          G = t(w.prototype, "height", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1e3
              }
          }),
          P = t(w.prototype, "bulletDelay", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new a(1e3,3e3)
              }
          }),
          g = w)) || g));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/GunWheelWeapon.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreatureManager.ts", "./RangedWeapon.ts", "./Kit.ts", "./GunWheelSetting.ts", "./LayerType.ts", "./ResList.ts", "./SpriteColorAnim.ts", "./CreatureType.ts", "./BattleDef.ts"], (function(t) {
  var e, n, i, r, a, o, s, l, u, c, h, f, p, d, g, y, b, w, m;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          n = t.inheritsLoose,
          i = t.initializerDefineProperty,
          r = t.assertThisInitialized
      }
      , function(t) {
          a = t.cclegacy,
          o = t._decorator,
          s = t.Vec3,
          l = t.Prefab,
          u = t.UITransform,
          c = t.Vec2
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          d = t.default
      }
      , function(t) {
          g = t.Layer2DType
      }
      , function(t) {
          y = t.default
      }
      , function(t) {
          b = t.SpriteColorAnim
      }
      , function(t) {
          w = t.CreatureType
      }
      , function(t) {
          m = t.AtkObjType
      }
      ],
      execute: function() {
          var A, v, C, x, B, D, k, T, W;
          a._RF.push({}, "0a212+5dHVOsI27rOXuURh9", "GunWheelWeapon", void 0);
          var S = o.ccclass
            , L = o.property;
          t("default", (A = S("GunWheelWeapon"),
          v = L({
              type: d
          }),
          C = L({
              type: String
          }),
          x = L({
              type: Number
          }),
          A((k = e((D = function(t) {
              function e() {
                  for (var e, n = arguments.length, a = new Array(n), o = 0; o < n; o++)
                      a[o] = arguments[o];
                  return e = t.call.apply(t, [this].concat(a)) || this,
                  i(e, "setting", k, r(e)),
                  i(e, "fireAudio", T, r(e)),
                  i(e, "fireAudioVolume", W, r(e)),
                  e.timeId = void 0,
                  e.warns = new Array,
                  e
              }
              n(e, t);
              var a = e.prototype;
              return a.onDisable = function() {
                  for (var t = 0; t < this.warns.length; ++t)
                      p.res.recycle(this.warns[t]);
                  this.warns.length = 0
              }
              ,
              a.getFireNode = function() {
                  return this.node
              }
              ,
              a.onAttackEnter = function() {
                  this.skeleton && (this.skeleton.enabled = !0)
              }
              ,
              a.onAttacking = function() {}
              ,
              a.onAttackLeave = function() {}
              ,
              a.onAttackBegin = function() {
                  t.prototype.onAttackBegin.call(this),
                  this.fire(this.ai.dir, this.ai.bulletCount)
              }
              ,
              a.fire = function(t, e) {
                  p.utils.isEmpty(this.fireAudio) || p.sound.playSound(this.fireAudio, this.fireAudioVolume),
                  null != e && 0 != e || (e = this.setting.bulletCount);
                  for (var n = t.x > 0 ? this.setting.startL : this.setting.startR, i = this.setting.height, r = this.setting.startR.x - this.setting.startL.x, a = i / (e - 1), o = 0; o < e; ++o) {
                      var c = p.math.random(this.setting.bulletDelay.x, this.setting.bulletDelay.y)
                        , h = new s;
                      h.set(n),
                      h.add(new s(0,a * o - 50,0));
                      var f = new s(h)
                        , d = p.res.spawn(y.YetiBoos_warm.path, l, f, null, g.Middle)
                        , w = d.getComponent(b)
                        , m = d.getChildByName("Body").getComponent(u);
                      m.width = r,
                      m.anchorX = t.x > 0 ? 0 : 1,
                      w.play(!1),
                      this.warns.push(d),
                      p.action.beginSequence(),
                      p.action.delay(c),
                      p.action.call(this, this.onCreateBullet, w, h, t),
                      p.action.delay(1e3),
                      p.action.call(this, this.onWarnClear, d),
                      p.action.end()
                  }
              }
              ,
              a.onCreateBullet = function(t, e, n) {
                  t.play(!0),
                  this.createBullet(e, n, this.setting)
              }
              ,
              a.onWarnClear = function(t) {
                  var e = this.warns.indexOf(t);
                  -1 != e && this.warns.splice(e, 1),
                  p.res.recycle(t)
              }
              ,
              a.createBullet = function(t, e, n) {
                  var i = this.getOwnerPlr().type == w.Player ? this : this.getOwnerPlr().context.data;
                  if (null != i && (i.getAOType() != m.Monster || null != i.getCfg())) {
                      var r = h.ins.createBullet(n.bulletPath, t, this.getOwnerPlr().context.data, this, i)
                        , a = new c;
                      a.x = e.x,
                      a.y = e.y,
                      a.normalize(),
                      r.setThrough(n.isThrough),
                      r.setSpeed(n.bulletSpeed),
                      r.setDir(a),
                      r.setMaxDistance(n.bulletDistance)
                  }
              }
              ,
              a.onAttackEnded = function() {}
              ,
              e
          }(f)).prototype, "setting", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new d
              }
          }),
          T = e(D.prototype, "fireAudio", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return ""
              }
          }),
          W = e(D.prototype, "fireAudioVolume", [x], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          B = D)) || B));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Handler.ts", ["cc"], (function(t) {
  var a;
  return {
      setters: [function(t) {
          a = t.cclegacy
      }
      ],
      execute: function() {
          a._RF.push({}, "a334dctTpVBsqz7pATtg46O", "Handler", void 0);
          t("default", function() {
              function t() {
                  this._callback = void 0,
                  this._target = void 0,
                  this._owner = void 0
              }
              var a = t.prototype;
              return a.setListener = function(t, a) {
                  this._callback = t,
                  this._target = a
              }
              ,
              a.run = function(t, a, l, c) {
                  this._callback && (null != t ? null != a ? null != l ? null != c ? this._target ? this._callback.call(this._target, t, a, l, c) : this._callback(t, a, l, c) : this._target ? this._callback.call(this._target, t, a, l) : this._callback(t, a, l) : this._target ? this._callback.call(this._target, t, a) : this._callback(t, a) : this._target ? this._callback.call(this._target, t) : this._callback(t) : this._target ? this._callback.call(this._target) : this._callback())
              }
              ,
              a.runOne = function(t, a, l, c) {
                  this.run(t, a, l, c),
                  this._owner && this._owner.recycle(this)
              }
              ,
              a.destroy = function() {
                  this.clear(),
                  this._owner && this._owner.recycle(this)
              }
              ,
              a.clear = function() {
                  this._callback = null,
                  this._target = null
              }
              ,
              a.isEqual = function(t, a) {
                  return this._callback == t && this._target == a
              }
              ,
              a.isTarget = function(t) {
                  return this._target == t
              }
              ,
              t
          }());
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/HandlerSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./Singleton.ts", "./Handler.ts"], (function(n) {
  var t, e, o, l, r;
  return {
      setters: [function(n) {
          t = n.inheritsLoose
      }
      , function(n) {
          e = n.cclegacy
      }
      , function(n) {
          o = n.default
      }
      , function(n) {
          l = n.default
      }
      , function(n) {
          r = n.default
      }
      ],
      execute: function() {
          e._RF.push({}, "5236dq1S0pKGrSO8OnHR4b5", "HandlerSystem", void 0);
          n("default", function(n) {
              function e() {
                  for (var t, e = arguments.length, l = new Array(e), c = 0; c < e; c++)
                      l[c] = arguments[c];
                  return (t = n.call.apply(n, [this].concat(l)) || this).pool = new o((function() {
                      return new r
                  }
                  ),null,(function(n) {
                      n.clear
                  }
                  ),(function(n) {
                      n.clear
                  }
                  )),
                  t
              }
              t(e, n);
              var l = e.prototype;
              return l.spawn = function(n, t) {
                  var e = this.pool.spawn();
                  return e._owner = this,
                  e.setListener(n, t),
                  e
              }
              ,
              l.recycle = function(n) {
                  this.pool.recycle(n)
              }
              ,
              l.recycleAll = function() {
                  this.pool.recycleAll()
              }
              ,
              e
          }(l()));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/HeroData.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./EntityBase.ts", "./proto.mjs_cjs=&original=.js", "./Client.ts", "./BattleDef.ts", "./DataDef.ts", "./proto.js"], (function(t) {
  var e, r, i, n, a, s, o, u, p;
  return {
      setters: [function(t) {
          e = t.inheritsLoose,
          r = t.createForOfIteratorHelperLoose,
          i = t.createClass
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          a = t.default
      }
      , null, function(t) {
          s = t.default
      }
      , function(t) {
          o = t.BattleDef
      }
      , function(t) {
          u = t.EquipType
      }
      , function(t) {
          p = t.default
      }
      ],
      execute: function() {
          var f;
          n._RF.push({}, "ed176sVropJ3qb+FUqX5mxJ", "HeroData", void 0);
          t("default", set_class_name("HeroData")(f = function(t) {
              function n() {
                  for (var e, r = arguments.length, i = new Array(r), n = 0; n < r; n++)
                      i[n] = arguments[n];
                  return (e = t.call.apply(t, [this].concat(i)) || this)._sn = void 0,
                  e._equipMap = new Map,
                  e._classId = void 0,
                  e._vit = void 0,
                  e._ESNAry = void 0,
                  e._TIDAry = void 0,
                  e._power = void 0,
                  e._skin = void 0,
                  e
              }
              e(n, t);
              var a = n.prototype;
              return a.refreshData = function(t) {
                  this._sn = t.SN,
                  this._vit = t.Vit,
                  this._ESNAry = t.ESNAry,
                  this._TIDAry = t.TIDAry;
                  var e = DataCenter.Trait.Get(t.TIDAry[0]);
                  e ? 0 != e.ClassID ? (this._classId = e.ClassID,
                  this.setEquips(t.ESNAry)) : console.error("hero tid error, trait 0 do not have class, trait:", t.TIDAry[0]) : console.error("hero tid error, no trait 0")
              }
              ,
              a.setSkin = function(t) {
                  this._skin = t
              }
              ,
              a.setSn = function(t) {
                  this._sn = t
              }
              ,
              a.setClassId = function(t) {
                  this._classId = t
              }
              ,
              a.setEquips = function(t) {
                  if (this.clear(),
                  t)
                      for (var e = 0, r = 0; r < t.length; ++r) {
                          var i = t[r]
                            , n = s.equip.getEquip(i);
                          n.setOwner(this.sn),
                          n.type == u.Weapon ? (0 == e ? this._equipMap.set(n.type, n) : this._equipMap.set(u.WeaponR, n),
                          e++) : this._equipMap.set(n.type, n)
                      }
                  this.calcPower()
              }
              ,
              a.getEquipByType = function(t) {
                  return this._equipMap.get(t)
              }
              ,
              a.getEquipsByType = function(t) {
                  for (var e, i = new Array, n = r(this._equipMap); !(e = n()).done; ) {
                      var a = e.value[1];
                      a.type == t && i.push(a)
                  }
                  return i
              }
              ,
              a.clear = function() {
                  for (var t, e = r(this._equipMap); !(t = e()).done; ) {
                      t.value[1].setOwner(null)
                  }
                  this._equipMap.clear()
              }
              ,
              a.hasEquip = function(t) {
                  for (var e, i = r(this._equipMap); !(e = i()).done; ) {
                      if (e.value[1].sn == t.sn)
                          return !0
                  }
                  return !1
              }
              ,
              a.createAddEquip = function(t) {
                  for (var e, i = s.equip.getEquip(t), n = new Map, a = [], o = r(this._equipMap); !(e = o()).done; ) {
                      var p = e.value[1];
                      p.type == u.Weapon ? -1 == a.indexOf(p) && a.push(p) : n.set(p.type, p)
                  }
                  i.type == u.Weapon ? -1 == a.indexOf(i) && a.splice(0, 0, i) : n.set(i.type, i),
                  a.length > 0 && n.set(u.Weapon, a[0]),
                  a.length > 1 && n.set(u.WeaponR, a[1]);
                  for (var f, c = new Array, l = r(n); !(f = l()).done; ) {
                      var h = f.value;
                      c.push(h[1].sn)
                  }
                  return c
              }
              ,
              a.createRemoveEquip = function(t) {
                  for (var e, i = new Array, n = r(this._equipMap); !(e = n()).done; ) {
                      var a = e.value[1];
                      t != a.sn && i.push(a.sn)
                  }
                  return i
              }
              ,
              a.setVit = function(t) {
                  this._vit = t
              }
              ,
              a.getVit = function() {
                  return this._vit
              }
              ,
              a.addVit = function(t) {
                  this._vit = Math.max(this._vit + t, 0)
              }
              ,
              a.addDurability = function(t) {
                  for (var e, i = r(this._equipMap); !(e = i()).done; ) {
                      e.value[1].addDurability(t)
                  }
              }
              ,
              a.calcPower = function() {
                  var t = DataCenter.Class.Get(this.classId);
                  if (t) {
                      for (var e, i = DataCenter.Config.Get("PowerCalcX").ValueEx, n = t.MaxLife, a = t.Dmg, s = t.Defense, u = r(this._equipMap); !(e = u()).done; ) {
                          var f = e.value[1];
                          if (!(f.durability <= 0))
                              for (var c = 0; c < f.cfg.AttrEffect.length; c += 3) {
                                  var l = f.cfg.AttrEffect[c]
                                    , h = f.cfg.AttrEffect[c + 1]
                                    , v = f.cfg.AttrEffect[c + 2];
                                  switch (l) {
                                  case p.msg.AttrType.AT_MaxLife:
                                      n += 1 == h ? Math.floor(t.MaxLife * v / o.UnitePct) : v;
                                      break;
                                  case p.msg.AttrType.AT_Dmg:
                                      a += 1 == h ? Math.floor(t.Dmg * v / o.UnitePct) : v;
                                      break;
                                  case p.msg.AttrType.AT_Defense:
                                      s += 1 == h ? Math.floor(t.Defense * v / o.UnitePct) : v
                                  }
                              }
                      }
                      this._power = Math.floor(n * a * (s + i[0]) / i[1] * (1 + t.PowerRevise / i[2]))
                  }
              }
              ,
              a.hasDamageEquip = function() {
                  for (var t, e = r(this._equipMap); !(t = e()).done; ) {
                      if (t.value[1].durability <= 0)
                          return !0
                  }
                  return !1
              }
              ,
              i(n, [{
                  key: "sn",
                  get: function() {
                      return this._sn
                  }
              }, {
                  key: "classId",
                  get: function() {
                      return this._classId
                  }
              }, {
                  key: "equipMap",
                  get: function() {
                      return this._equipMap
                  }
              }, {
                  key: "vit",
                  get: function() {
                      return this._vit
                  }
              }, {
                  key: "ESNAry",
                  get: function() {
                      return this._ESNAry
                  }
              }, {
                  key: "TIDAry",
                  get: function() {
                      return this._TIDAry
                  }
              }, {
                  key: "Power",
                  get: function() {
                      return this._power
                  }
              }, {
                  key: "skin",
                  get: function() {
                      return this._skin
                  }
              }]),
              n
          }(a)) || f);
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/HeroPart.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./EntityPart.ts", "./proto.mjs_cjs=&original=.js", "./EntityPartDef.ts", "./GameConfig.ts", "./SessionMessage_Home.ts", "./HeroData.ts", "./proto.js"], (function(e) {
  var r, t, n, s, o, i, a, h, u, f, l;
  return {
      setters: [function(e) {
          r = e.inheritsLoose,
          t = e.createClass
      }
      , function(e) {
          n = e.cclegacy
      }
      , function(e) {
          s = e.default
      }
      , function(e) {
          o = e.default
      }
      , null, function(e) {
          i = e.EntityPartId,
          a = e.UserEventId
      }
      , function(e) {
          h = e.default
      }
      , function(e) {
          u = e.default
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          l = e.default
      }
      ],
      execute: function() {
          var c;
          n._RF.push({}, "13839ZNpqBJFYC24fAqI2JN", "HeroPart", void 0);
          e("default", set_class_name(i.HeroPart)(c = function(e) {
              function n() {
                  for (var r, t = arguments.length, n = new Array(t), s = 0; s < t; s++)
                      n[s] = arguments[s];
                  return (r = e.call.apply(e, [this].concat(n)) || this)._heros = [],
                  r._mainHero = void 0,
                  r
              }
              r(n, e);
              var o = n.prototype;
              return o.refreshData = function(e) {
                  var r, t;
                  if (null != e && e.HTokens && this.setHeros(e.HTokens),
                  null != e && null != (r = e.User) && r.MainHeroSN && this.setMainHero(null == e || null == (t = e.User) ? void 0 : t.MainHeroSN),
                  s.config.get(h).IsAlpha)
                      for (var n = ["Viktas", "Dks", "Gecko", "Madlabs", "Smb", "Taiyo", "Tensorian", "Claynosaurz", "Yogg", "Boogle", "Pepe", "DDragon", "General", "Pythalligators", "Boddog", "Me", "Symth", "Meego", "Bonk"], o = 0; o < n.length; ++o) {
                          var i = n[o].toLowerCase()
                            , a = new f;
                          a.setSkin(i),
                          this._heros.push(a)
                      }
              }
              ,
              o.setHeros = function(e) {
                  this._heros = [];
                  for (var r = 0; r < e.length; ++r) {
                      var t = e[r];
                      if (1e6 == t.SN || 1000001 == t.SN) {
                          var n = new f;
                          n.refreshData(t),
                          this._heros.push(n)
                      } else {
                          var s = new f;
                          s.refreshData(t),
                          this._heros.push(s)
                      }
                  }
                  this._heros.sort((function(e, r) {
                      return e.sn - r.sn
                  }
                  ))
              }
              ,
              o.setMainHero = function(e) {
                  if (0 == e) {
                      for (var r = 0, t = 0; t < this._heros.length; ++t)
                          0 != r ? this._heros[t].sn < r && (r = this._heros[t].sn) : r = this._heros[t].sn;
                      e = r
                  }
                  this._mainHero = this.getHero(e),
                  this.dispatch(a.ViteChange)
              }
              ,
              o.getHero = function(e) {
                  for (var r = 0; r < this._heros.length; ++r)
                      if (this._heros[r].sn == e)
                          return this._heros[r];
                  return null
              }
              ,
              o.add = function(e) {
                  var r = new f;
                  return r.refreshData(e),
                  this._heros.push(r),
                  r
              }
              ,
              o.remove = function(e) {
                  this.removeBySn(e.SN)
              }
              ,
              o.removeBySn = function(e) {
                  for (var r = 0; r < this._heros.length; ++r) {
                      if (this._heros[r].sn == e) {
                          this._heros.splice(r, 1);
                          break
                      }
                  }
              }
              ,
              o.getNftMain = function() {
                  return this._mainHero
              }
              ,
              o.getMain = function() {
                  if (!s.config.get(h).IsAlpha)
                      return this._mainHero;
                  var e, r = s.playerPrefs.getString("HERO_SKIN");
                  return r ? e = this.getHeroBySkin(r) : null == (e = this._mainHero) && (e = this.getHeroBySkin("viktas")),
                  e
              }
              ,
              o.getHeroBySkin = function(e) {
                  for (var r = 0; r < this._heros.length; ++r) {
                      var t = this._heros[r];
                      if (t.skin == e)
                          return t
                  }
                  return null
              }
              ,
              o.setHeroVits = function(e) {
                  for (var r = 0; r < e.length; ++r) {
                      var t = e[r]
                        , n = this.getHero(t.SN);
                      null != n && n.setVit(t.Vit)
                  }
                  this.dispatch(a.ViteChange)
              }
              ,
              o.requestDress = function(e, r) {
                  if (r.owner == e)
                      return console.error("already equiped"),
                      !1;
                  var t = new Array
                    , n = this.getHero(r.owner);
                  if (null != n) {
                      var s = n.createRemoveEquip(r.sn)
                        , o = new l.msg.Hero2Equipment;
                      o.HeroSN = n.sn,
                      o.ESNAry = s,
                      t.push(o)
                  }
                  var i = this.getHero(e);
                  if (null != i) {
                      var a = i.createAddEquip(r.sn)
                        , h = new l.msg.Hero2Equipment;
                      h.HeroSN = i.sn,
                      h.ESNAry = a,
                      t.push(h)
                  }
                  if (0 == t.length)
                      return console.error("no equipment on"),
                      !1;
                  u.equipmentLink(t)
              }
              ,
              o.requestUndress = function(e) {
                  var r = e.sn
                    , t = new Array
                    , n = this.getHero(e.owner);
                  if (null != n) {
                      var s = n.createRemoveEquip(r)
                        , o = new l.msg.Hero2Equipment;
                      o.HeroSN = n.sn,
                      o.ESNAry = s,
                      t.push(o)
                  }
                  if (0 == t.length)
                      return console.error("no equipment off"),
                      !1;
                  u.equipmentLink(t)
              }
              ,
              o.refreshDress = function(e) {
                  if (e)
                      for (var r = 0; r < e.length; r++)
                          this.refreshDressX(e[r])
              }
              ,
              o.refreshDressX = function(e) {
                  var r = this.getHero(e.HeroSN);
                  r && r.setEquips(e.ESNAry)
              }
              ,
              o.refreshPower = function() {
                  for (var e = 0; e < this._heros.length; ++e)
                      this._heros[e].calcPower()
              }
              ,
              t(n, [{
                  key: "heros",
                  get: function() {
                      return this._heros
                  }
              }]),
              n
          }(o)) || c);
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/HeroSelectWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./UIListView.ts", "./Client.ts", "./CreatureImgDress.ts", "./SessionMessage_Home.ts"], (function(e) {
  var t, i, n, o, r, l, s, a, u, c, h, f, d;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          o = e.assertThisInitialized
      }
      , function(e) {
          r = e.cclegacy,
          l = e.Button,
          s = e.Node,
          a = e.ToggleContainer
      }
      , function(e) {
          u = e.default
      }
      , function(e) {
          c = e.UIListView
      }
      , function(e) {
          h = e.default
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          d = e.default
      }
      ],
      execute: function() {
          var p, g, b, m, y, I, C, H, w, v, B, P, L;
          r._RF.push({}, "7d847wKPf1AmZyzh01HXsD6", "HeroSelectWindow", void 0);
          e("default", (p = uiBind("fgui/login", "HeroSelectWindow"),
          g = uiInject("CloseBtn", l),
          b = uiInject("Panel/CloseBtn", l),
          m = uiInject("Panel", s),
          y = uiInject("Panel/ToggleGroup", a),
          I = uiInject("Panel/HeroList", c),
          p((w = t((H = function(e) {
              function t() {
                  for (var t, i = arguments.length, r = new Array(i), l = 0; l < i; l++)
                      r[l] = arguments[l];
                  return t = e.call.apply(e, [this].concat(r)) || this,
                  n(t, "CloseBtn", w, o(t)),
                  n(t, "CloseBtn2", v, o(t)),
                  n(t, "Panel", B, o(t)),
                  n(t, "ToggleGroup", P, o(t)),
                  n(t, "HeroList", L, o(t)),
                  t.heros = new Array,
                  t.selectIndex = -1,
                  t
              }
              i(t, e);
              var r = t.prototype;
              return r.getPrototype = function() {
                  return t.prototype
              }
              ,
              r.onEnable = function() {
                  var e = this;
                  this.onClick(this.CloseBtn, (function() {
                      e.close()
                  }
                  )),
                  this.onClick(this.CloseBtn2, (function() {
                      e.close()
                  }
                  )),
                  this.heros.length = 0;
                  for (var t = h.hero.heros, i = 0; i < t.length; ++i)
                      null == t[i].skin && this.heros.push(t[i]);
                  var n = h.hero.getMain();
                  this.selectIndex = this.heros.indexOf(n),
                  this.HeroList.itemRenderer = this.itemRenderer.bind(this),
                  this.HeroList.itemSelected = this.itemSelected.bind(this),
                  this.HeroList.numItems = this.heros.length,
                  this.HeroList.selectIndex = this.selectIndex
              }
              ,
              r.itemRenderer = function(e, t) {
                  var i = this.heros[e];
                  t.getChildByPath("Mask/Human").getComponent(f).setHeroData(i, !0),
                  t.getChildByPath("key").active = i.vit > 0
              }
              ,
              r.itemSelected = function(e, t) {
                  if (this.selectIndex != e) {
                      this.selectIndex = e;
                      var i = this.heros[e];
                      d.setMainHero(i.sn)
                  }
              }
              ,
              t
          }(u)).prototype, "CloseBtn", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          v = t(H.prototype, "CloseBtn2", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          B = t(H.prototype, "Panel", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          P = t(H.prototype, "ToggleGroup", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          L = t(H.prototype, "HeroList", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          C = H)) || C));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/HomeHero.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./GameObject.ts", "./CreatureView.ts", "./HomeHeroMovePart.ts", "./Kit.ts", "./ResList.ts", "./CreatureAnimId.ts", "./CreatureImgDress.ts", "./GameGlobal.ts", "./HomeHeroWeaponPart.ts", "./BurstWeapon.ts", "./DataDef.ts"], (function(t) {
  var e, i, n, s, o, a, r, c, h, u, l, f, p, d, w, v, y, _, F, g, B;
  return {
      setters: [function(t) {
          e = t.inheritsLoose,
          i = t.createClass
      }
      , function(t) {
          n = t.cclegacy,
          s = t.Vec3,
          o = t.ERigidBody2DType,
          a = t.Vec2,
          r = t.sys,
          c = t.Prefab,
          h = t.Button,
          u = t.Layers
      }
      , function(t) {
          l = t.default
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          d = t.default
      }
      , function(t) {
          w = t.default
      }
      , function(t) {
          v = t.default
      }
      , function(t) {
          y = t.default
      }
      , function(t) {
          _ = t.default
      }
      , function(t) {
          F = t.default
      }
      , function(t) {
          g = t.default
      }
      , function(t) {
          B = t.EquipType
      }
      ],
      execute: function() {
          n._RF.push({}, "4327a+IaOVAvLVpuHQ5hziq", "HomeHero", void 0);
          t("default", function(t) {
              function n() {
                  for (var e, i = arguments.length, n = new Array(i), o = 0; o < i; o++)
                      n[o] = arguments[o];
                  return (e = t.call.apply(t, [this].concat(n)) || this)._view = void 0,
                  e._dress = void 0,
                  e.isFlipX = !1,
                  e._weaponPart = void 0,
                  e._movePart = void 0,
                  e.FuncBtn = void 0,
                  e.layer = u.Enum.DEFAULT,
                  e.scale = new s(1,1,1),
                  e.weaponScale = new s(1,1,1),
                  e.weaponDir = new a(1,1),
                  e.fireRing = void 0,
                  e
              }
              e(n, t);
              var l = n.prototype;
              return l.onStart = function() {
                  this._weaponPart = this.addPart("Weapon", new F),
                  this.node.setScale(_.SCALE_X, _.SCALE_Y),
                  this._view = this.node.getComponent(f),
                  this._view.body.setScale(this.isFlipX ? -1 : 1, 1),
                  this._view.setPaused(!1),
                  this._dress = this.node.getComponent(y),
                  this.refreshDress(),
                  this._weaponPart.setScale(this.weaponScale),
                  this._weaponPart.setDir(this.weaponDir.x, this.weaponDir.y),
                  this.FuncBtn && (this.FuncBtn.setParent(this.node),
                  this.FuncBtn.position = new s(0,100,0)),
                  this.node.setScale(this.scale),
                  this.playAnim(v.Idle, !0)
              }
              ,
              l.onViewChanged = function() {
                  this._view = this.node.getComponent(f),
                  this._view.body.setScale(this.isFlipX ? -1 : 1, 1),
                  this._view.playAnim(v.Idle),
                  this._view.rigidBody.type = o.Kinematic,
                  this._view.rigidBody.linearVelocity = a.ZERO,
                  this.FuncBtn && (this.FuncBtn.setParent(this.node),
                  this.FuncBtn.position = new s(0,100,0))
              }
              ,
              l.onEnable = function() {}
              ,
              l.onDisable = function() {
                  this.fireRing && (d.res.recycle(this.fireRing),
                  this.fireRing = null)
              }
              ,
              l.onDestroy = function() {
                  this.FuncBtn && (d.res.recycle(this.FuncBtn),
                  this.FuncBtn = null)
              }
              ,
              l.setWeaponScale = function(t) {
                  s.copy(this.weaponScale, t),
                  this._weaponPart && this._weaponPart.setScale(t)
              }
              ,
              l.setWeaponDir = function(t, e) {
                  this.weaponDir.x = t,
                  this.weaponDir.y = e,
                  this._weaponPart && this._weaponPart.setDir(t, e)
              }
              ,
              l.setScale = function(t) {
                  s.copy(this.scale, t),
                  this.view && this.view.node.setScale(this.scale)
              }
              ,
              l.setAnimTimeScale = function(t) {
                  this.view && this.view.setAnimTimeScale(t)
              }
              ,
              l.playAnim = function(t, e) {
                  void 0 === e && (e = !0),
                  this.view && this.view.playAnim(t, e)
              }
              ,
              l.setFlipX = function(t) {
                  this.isFlipX != t && (this.isFlipX = t,
                  this.view && this.view.body.setScale(this.isFlipX ? -1 : 1, 1))
              }
              ,
              l.createMovePart = function() {
                  this._movePart = this.addPart("Move", new p)
              }
              ,
              l.setColliderOffset = function(t) {
                  this.view && (this.view.collider.offset = t)
              }
              ,
              l.showEButton = function(t) {
                  null == this.FuncBtn && (r.isMobile ? this.FuncBtn = d.res.spawn(w.FunxBtn.path, c) : this.FuncBtn = d.res.spawn(w.FuncBtn.path, c),
                  this.FuncBtn.setParent(this.node),
                  this.FuncBtn.position = new s(0,100,0),
                  this.FuncBtn.off(h.EventType.CLICK),
                  this.FuncBtn.on(h.EventType.CLICK, this.onSwitchClick, this)),
                  this.FuncBtn.active = t
              }
              ,
              l.onSwitchClick = function() {
                  var t = d.scene.currScene;
                  t && t.switchHero()
              }
              ,
              l.refreshDress = function() {
                  if (this._dress && this.context.data) {
                      var t = this.context.data;
                      t.skin ? this._dress.setSkin(t.skin) : this._dress.setHeroData(t)
                  }
                  this.refreshWeapon()
              }
              ,
              l.refreshWeapon = function() {
                  if (this.weaponPart) {
                      if (this.weaponPart.clearWeapon(),
                      !this.context.data)
                          return;
                      for (var t = this.context.data.getEquipsByType(B.Weapon), e = 0; e < t.length; ++e) {
                          var i = t[e]
                            , n = DataCenter.Weapon.Get(i.cfg.BattleWeapon);
                          this.weaponPart.addWeapon(n.ResPath, e)
                      }
                  }
              }
              ,
              l.getLayer = function() {
                  return this.layer
              }
              ,
              l.setLayer = function(t) {
                  this.layer = t
              }
              ,
              l.burst = function(t) {
                  if (null != this.node) {
                      if (null == this.fireRing) {
                          var e = d.res.spawn(w.weapon_FireRing.path, c, s.ZERO, null, this.node);
                          this.fireRing = e.getComponent(g)
                      }
                      this.fireRing.fire(t)
                  }
              }
              ,
              i(n, [{
                  key: "context",
                  get: function() {
                      return this._context
                  }
              }, {
                  key: "view",
                  get: function() {
                      return this._view
                  }
              }, {
                  key: "weaponPart",
                  get: function() {
                      return this._weaponPart
                  }
              }, {
                  key: "movePart",
                  get: function() {
                      return this._movePart
                  }
              }]),
              n
          }(l));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/HomeHeroContext.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./GameContext.ts"], (function(e) {
  var t, o, n;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          o = e.cclegacy
      }
      , function(e) {
          n = e.default
      }
      ],
      execute: function() {
          o._RF.push({}, "815dbMoHVNHD4L7cT3Dgn1k", "HomeHeroContext", void 0);
          e("default", function(e) {
              function o() {
                  for (var t, o = arguments.length, n = new Array(o), r = 0; r < o; r++)
                      n[r] = arguments[r];
                  return (t = e.call.apply(e, [this].concat(n)) || this).data = void 0,
                  t.moveSpeed = 1,
                  t.moveRegion = void 0,
                  t
              }
              return t(o, e),
              o
          }(n));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/HomeHeroMovePart.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreatureAnimId.ts", "./Kit.ts", "./GamePart.ts", "./ResList.ts", "./EffectManager.ts", "./LayerType.ts"], (function(i) {
  var t, e, o, s, n, r, a, h, d, l, c;
  return {
      setters: [function(i) {
          t = i.inheritsLoose
      }
      , function(i) {
          e = i.cclegacy,
          o = i.ERigidBody2DType,
          s = i.Vec2,
          n = i.easing
      }
      , function(i) {
          r = i.default
      }
      , function(i) {
          a = i.default
      }
      , function(i) {
          h = i.default
      }
      , function(i) {
          d = i.default
      }
      , function(i) {
          l = i.default
      }
      , function(i) {
          c = i.Layer2DType
      }
      ],
      execute: function() {
          e._RF.push({}, "ca1a72p9vdKkZI8oYALtdc7", "HomeHeroMovePart", void 0);
          i("default", function(i) {
              function e() {
                  for (var t, e = arguments.length, o = new Array(e), n = 0; n < e; n++)
                      o[n] = arguments[n];
                  return (t = i.call.apply(i, [this].concat(o)) || this).dir = new s,
                  t.state = 0,
                  t.rigidBody = void 0,
                  t.hitVelocity = new s,
                  t.hitDuration = 0,
                  t.hitTime = 0,
                  t.hitForce = 0,
                  t.hitEnable = !1,
                  t.smokeTime = 0,
                  t.footTime = 0,
                  t
              }
              t(e, i);
              var h = e.prototype;
              return h.onViewChanged = function() {
                  this.rigidBody = this.owner.view.rigidBody,
                  this.rigidBody.type = o.Dynamic,
                  this.rigidBody.gravityScale = 0,
                  this.rigidBody.fixedRotation = !0,
                  this.owner.setAnimTimeScale(1),
                  this.owner.playAnim(r.Idle, !0)
              }
              ,
              h.onEnable = function() {
                  this.rigidBody = this.owner.view.rigidBody,
                  this.rigidBody.type = o.Dynamic,
                  this.rigidBody.gravityScale = 0,
                  this.rigidBody.fixedRotation = !0,
                  this.owner.setAnimTimeScale(1),
                  this.owner.playAnim(r.Idle, !0),
                  this.footTime = 0,
                  this.smokeTime = 0
              }
              ,
              h.onDisable = function() {
                  this.rigidBody.linearVelocity = s.ZERO
              }
              ,
              h.onUpdate = function(i) {
                  if (this.hitEnable)
                      if (this.hitTime += i,
                      this.hitTime < this.hitDuration) {
                          var t = (1 - n.expoIn(this.hitTime / this.hitDuration)) * this.hitForce;
                          s.multiplyScalar(a.temp.aVec2, this.hitVelocity, t),
                          this.rigidBody.linearVelocity = a.temp.aVec2
                      } else
                          this.rigidBody.linearVelocity = s.ZERO,
                          this.hitEnable = !1;
                  else
                      this.owner.view.rigidBody.linearVelocity = this.dir,
                      1 == this.state && (this.smokeTime += i,
                      this.smokeTime > .35 && (this.smokeTime = 0,
                      a.temp.aVec3.set(this.owner.position),
                      a.temp.aVec3.y += 10,
                      l.ins.playSpine(d.dust.path, a.temp.aVec3, c.Middle)),
                      this.footTime += i,
                      this.footTime > .5 && (this.footTime = 0,
                      a.sound.playSound(d.sound_foot.path)))
              }
              ,
              h.move = function(i, t) {
                  this.hitEnable || this.owner.active && (this.dir.x = i,
                  this.dir.y = t,
                  i > 0 && this.owner.setFlipX(!1),
                  i < 0 && this.owner.setFlipX(!0),
                  Math.abs(i) > 0 || Math.abs(t) > 0 ? (0 == this.state && (this.state = 1,
                  this.footTime = 0,
                  this.owner.playAnim(r.Run)),
                  this.dir.normalize(),
                  this.dir.multiplyScalar(this.owner.context.moveSpeed),
                  this.owner.view.rigidBody.linearVelocity = this.dir) : (1 == this.state && (this.state = 0,
                  this.owner.playAnim(r.Idle)),
                  this.owner.view.rigidBody.linearVelocity = this.dir))
              }
              ,
              e
          }(h));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/HomeHeroWeaponPart.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./GamePart.ts", "./WeaponAgent.ts", "./PlayerWeaponPosition.ts"], (function(e) {
  var n, t, s, o, i, a, r;
  return {
      setters: [function(e) {
          n = e.inheritsLoose
      }
      , function(e) {
          t = e.cclegacy,
          s = e.Vec3,
          o = e.Vec2
      }
      , function(e) {
          i = e.default
      }
      , function(e) {
          a = e.default
      }
      , function(e) {
          r = e.default
      }
      ],
      execute: function() {
          t._RF.push({}, "29903EGMnNP07W9TDdfjZzX", "HomeHeroWeaponPart", void 0);
          e("default", function(e) {
              function t() {
                  for (var n, t = arguments.length, i = new Array(t), a = 0; a < t; a++)
                      i[a] = arguments[a];
                  return (n = e.call.apply(e, [this].concat(i)) || this).weapons = new Array,
                  n.parent = void 0,
                  n.scale = new s(1,1,1),
                  n.dir = new o(1,1),
                  n
              }
              n(t, e);
              var i = t.prototype;
              return i.onEnable = function() {
                  this.parent = this.owner.node
              }
              ,
              i.onDisable = function() {
                  this.clearWeapon()
              }
              ,
              i.onUpdate = function(e) {
                  for (var n = 0; n < this.weapons.length; ++n)
                      this.weapons[n].update(e)
              }
              ,
              i.addWeapon = function(e, n) {
                  void 0 === n && (n = 0);
                  var t = new a;
                  t.path = e,
                  t.parent = this.parent,
                  t.index = n,
                  t.init(),
                  t.setLayer(this.owner.getLayer()),
                  t.setScale(this.scale),
                  t.setDir(this.dir.x, this.dir.y),
                  this.weapons.push(t),
                  r.refreshX(this.weapons)
              }
              ,
              i.removeWeapon = function(e) {
                  this.weapons[e] && (this.weapons[e].unInit(),
                  this.weapons.splice(e, 1));
                  r.refreshX(this.weapons)
              }
              ,
              i.clearWeapon = function() {
                  for (var e = 0; e < this.weapons.length; ++e)
                      this.weapons[e].unInit();
                  this.weapons.splice(0, this.weapons.length)
              }
              ,
              i.setDir = function(e, n) {
                  this.dir.x = e,
                  this.dir.y = n;
                  for (var t = 0; t < this.weapons.length; ++t)
                      this.weapons[t].setDir(e, n)
              }
              ,
              i.setScale = function(e) {
                  s.copy(this.scale, e);
                  for (var n = 0; n < this.weapons.length; ++n)
                      this.weapons[n].setScale(e)
              }
              ,
              t
          }(i));
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/HomeScene.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./SceneBase.ts", "./ResList.ts", "./UIRoot.ts", "./LayerType.ts", "./FightMap.ts", "./CameraUtils.ts", "./CameraManager.ts", "./CameraStateId.ts", "./Client.ts", "./GameObjectManager.ts", "./HomeHeroContext.ts", "./HomeHero.ts", "./Joystick.ts", "./SessionMessage_Home.ts", "./RoleView.ts", "./GameConfig.ts", "./GameGlobal.ts", "./TalkPanel.ts"], (function(t) {
  var e, i, n, o, s, a, r, h, d, l, c, m, u, f, p, y, H, v, E, g, T, x, C, k, A, _, R, w, N, P;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          i = t.cclegacy,
          n = t.Prefab,
          o = t.Input,
          s = t.input,
          a = t.PhysicsSystem2D,
          r = t.Contact2DType,
          h = t.Vec3,
          d = t.Rect,
          l = t.KeyCode,
          c = t.Vec2
      }
      , function(t) {
          m = t.default
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          y = t.Layer2DType
      }
      , function(t) {
          H = t.default
      }
      , function(t) {
          v = t.default
      }
      , function(t) {
          E = t.default
      }
      , function(t) {
          g = t.CameraStateId
      }
      , function(t) {
          T = t.default
      }
      , function(t) {
          x = t.default
      }
      , function(t) {
          C = t.default
      }
      , function(t) {
          k = t.default
      }
      , function(t) {
          A = t.JoystickInput
      }
      , function(t) {
          _ = t.default
      }
      , function(t) {
          R = t.RoleView
      }
      , function(t) {
          w = t.default
      }
      , function(t) {
          N = t.default
      }
      , function(t) {
          P = t.TalkPanel
      }
      ],
      execute: function() {
          i._RF.push({}, "77ba2wqOvdJ9rRZtM4vlqs4", "HomeScene", void 0);
          t("default", function(t) {
              function i() {
                  for (var e, i = arguments.length, n = new Array(i), o = 0; o < i; o++)
                      n[o] = arguments[o];
                  return (e = t.call.apply(t, [this].concat(n)) || this).mapNode = void 0,
                  e.mapRoot = void 0,
                  e.map = void 0,
                  e.dx = new c,
                  e.dy = new c,
                  e.dd = new c,
                  e.mainHero = void 0,
                  e.entrance = 0,
                  e.heroArray = void 0,
                  e.lastTime = void 0,
                  e.index = void 0,
                  e.talkPanel = void 0,
                  e.talkText = void 0,
                  e.talkPosition = void 0,
                  e
              }
              e(i, t);
              var u = i.prototype;
              return u.onEnter = function() {
                  N.MOVE_ENABLE = !0,
                  m.sound.playMusic1(f.sound_bgmout1.path),
                  m.sound.playMusic2(f.sound_bgmout2.path),
                  this.dx.set(0, 0),
                  this.dy.set(0, 0),
                  this.dd.set(0, 0),
                  this.index = 1,
                  this.entrance = 0,
                  this.mainHero = null,
                  this.heroArray = [],
                  this.lastTime = Date.now(),
                  this.mapNode = m.res.spawn(f.mapHome.path, n, null, null, y.BG),
                  this.mapRoot = this.mapNode.getChildByName("root"),
                  this.map = this.mapNode.getComponent(H);
                  var t = this.mapNode.getChildByName("TalkPanel");
                  this.talkPanel = t.getComponent(P),
                  this.talkPanel.show(!1);
                  var e = T.hero.getMain();
                  if (e && e.skin && 1e6 != e.sn) {
                      var i = T.hero.getNftMain();
                      if (i) {
                          var h = this.createHero(i);
                          h && this.heroArray.push(h)
                      }
                  }
                  if (m.config.get(w).IsAlpha)
                      for (var d = T.hero.heros, l = 0; l < d.length; ++l) {
                          var c = d[l];
                          if (c != e && c.skin) {
                              var u = this.createHero(c);
                              u && this.heroArray.push(u)
                          }
                      }
                  else
                      for (var v = T.hero.heros, E = 0; E < v.length; ++E) {
                          var g = v[E];
                          if (g != e) {
                              var x = this.createHero(g);
                              x && this.heroArray.push(x)
                          }
                      }
                  this.mainHero = this.createMainHero(e),
                  p.joystic.open(),
                  p.home.open(),
                  A.on(o.EventType.TOUCH_START, this.onTouchStart, this),
                  A.on(o.EventType.TOUCH_MOVE, this.onTouchMoved, this),
                  A.on(o.EventType.TOUCH_END, this.onTouchEnded, this),
                  s.on(o.EventType.KEY_DOWN, this.onKeyDown, this),
                  s.on(o.EventType.KEY_UP, this.onKeyUp, this),
                  a.instance.on(r.BEGIN_CONTACT, this.onBeginContact, this),
                  a.instance.on(r.END_CONTACT, this.onEndedContact, this)
              }
              ,
              u.createMainHero = function(t) {
                  var e = this.map.moveRegion
                    , i = this.map.viewRegion
                    , n = new h(-120.785,-42.546)
                    , o = new C;
                  o.src = "creature/prefabs/HomeHero",
                  o.data = t,
                  o.moveRegion = e,
                  o.moveSpeed = 10;
                  var s = x.ins.create(k, o, n, null, this.mapRoot);
                  s.createMovePart(),
                  s.setScale(h.ONE),
                  s.setWeaponScale(new h(.7,.7,1)),
                  s.setWeaponDir(1, 1);
                  var a = v.getMainCamera()
                    , r = 2 * a.orthoHeight
                    , l = a.camera.width / a.camera.height * r
                    , c = i.width - l
                    , m = i.height - r
                    , u = new d(-.5 * c,-.5 * m,c,m);
                  return s.wait(this, (function() {
                      if (E.ins.getStateId() == g.Follow) {
                          var t = E.ins.getState();
                          t.setTarget(s),
                          t.setRegion(u)
                      } else
                          E.ins.change(g.Follow, [s, u])
                  }
                  )),
                  s
              }
              ,
              u.createHero = function(t) {
                  var e = this.index
                    , i = this.map.moveRegion
                    , n = e < 10 ? "Role00" + e : "Role0" + e
                    , o = this.mapNode.getChildByName(n);
                  if (null != o) {
                      var s = o.getComponent(R)
                        , a = o.position
                        , r = new C;
                      r.src = "creature/prefabs/HomeHero",
                      r.data = t,
                      r.moveRegion = i,
                      r.moveSpeed = 10;
                      var d = x.ins.create(k, r, a, null, this.mapRoot);
                      return d.setFlipX(s.isFlipX),
                      d.setScale(h.ONE),
                      d.setWeaponScale(new h(.7,.7,1)),
                      d.setWeaponDir(s.isFlipX ? -1 : 1, 1),
                      this.index += 1,
                      d
                  }
                  console.error("hero bucket null：" + n)
              }
              ,
              u.onExit = function() {
                  N.MOVE_ENABLE = !1,
                  this.mainHero = null,
                  this.heroArray = null,
                  x.ins.clear(),
                  E.ins.change(g.Idle),
                  m.res.recycle(this.mapNode),
                  p.home.close(),
                  p.joystic.close(),
                  A.off(o.EventType.TOUCH_START, this.onTouchStart, this),
                  A.off(o.EventType.TOUCH_MOVE, this.onTouchMoved, this),
                  A.off(o.EventType.TOUCH_END, this.onTouchEnded, this),
                  s.off(o.EventType.KEY_DOWN, this.onKeyDown, this),
                  s.off(o.EventType.KEY_UP, this.onKeyUp, this),
                  a.instance.off(r.BEGIN_CONTACT, this.onBeginContact, this),
                  a.instance.off(r.END_CONTACT, this.onEndedContact, this)
              }
              ,
              u.switchHero = function() {
                  1 == this.entrance && (m.config.get(w).IsAlpha ? (this.talkText && this.talkPanel.setText(this.talkText),
                  this.talkPosition && this.talkPanel.setPosition(this.talkPosition),
                  this.talkPanel.show(!0)) : p.materiaShop.open());
                  2 == this.entrance && (m.config.get(w).IsAlpha ? (this.talkText && this.talkPanel.setText(this.talkText),
                  this.talkPosition && this.talkPanel.setPosition(this.talkPosition),
                  this.talkPanel.show(!0)) : p.forge.open());
                  if (this.entrance >= 100) {
                      var t = this.entrance - 100
                        , e = this.heroArray[t - 1];
                      if (e)
                          m.config.get(w).IsAlpha ? (this.replaceHero(this.mainHero, e),
                          p.home.refreshHeadAvatar()) : (_.setMainHero(e.context.data.sn),
                          m.sound.playSound(f.sound_switch.path))
                  }
              }
              ,
              u.onKeyDown = function(t) {
                  if (null != this.mainHero && N.MOVE_ENABLE)
                      if (t.keyCode != l.KEY_E) {
                          if (t.keyCode != l.KEY_A && t.keyCode != l.ARROW_LEFT || (this.dx.x = -1),
                          t.keyCode != l.KEY_D && t.keyCode != l.ARROW_RIGHT || (this.dx.y = 1),
                          t.keyCode != l.KEY_W && t.keyCode != l.ARROW_UP || (this.dy.x = 1),
                          t.keyCode != l.KEY_S && t.keyCode != l.ARROW_DOWN || (this.dy.y = -1),
                          t.keyCode == l.SPACE)
                              m.config.get(w).Debug && p.gm.open();
                          this.dd.x = this.dx.x + this.dx.y,
                          this.dd.y = this.dy.x + this.dy.y,
                          this.mainHero.movePart.move(this.dd.x, this.dd.y),
                          this.mainHero.weaponPart && this.mainHero.weaponPart.setDir(this.dd.x, this.dd.y)
                      } else
                          this.switchHero()
              }
              ,
              u.onKeyUp = function(t) {
                  null != this.mainHero && N.MOVE_ENABLE && (t.keyCode != l.KEY_A && t.keyCode != l.ARROW_LEFT || (this.dx.x = 0),
                  t.keyCode != l.KEY_D && t.keyCode != l.ARROW_RIGHT || (this.dx.y = 0),
                  t.keyCode != l.KEY_W && t.keyCode != l.ARROW_UP || (this.dy.x = 0),
                  t.keyCode != l.KEY_S && t.keyCode != l.ARROW_DOWN || (this.dy.y = 0),
                  this.dd.x = this.dx.x + this.dx.y,
                  this.dd.y = this.dy.x + this.dy.y,
                  this.mainHero.movePart.move(this.dd.x, this.dd.y),
                  this.mainHero.weaponPart && this.mainHero.weaponPart.setDir(this.dd.x, this.dd.y))
              }
              ,
              u.onTouchStart = function(t) {}
              ,
              u.onTouchMoved = function(t, e) {
                  null != this.mainHero && N.MOVE_ENABLE && (this.dd.x = e.moveVec.x,
                  this.dd.y = e.moveVec.y,
                  this.mainHero.movePart.move(this.dd.x, this.dd.y),
                  this.mainHero.weaponPart && this.mainHero.weaponPart.setDir(this.dd.x, this.dd.y))
              }
              ,
              u.onTouchEnded = function(t, e) {
                  null != this.mainHero && N.MOVE_ENABLE && (this.dd.x = 0,
                  this.dd.y = 0,
                  this.mainHero.movePart.move(this.dd.x, this.dd.y))
              }
              ,
              u.onBeginContact = function(t, e, i) {
                  if (!(Date.now() - this.lastTime < 1e3))
                      if (t.name.startsWith("StartFight") && e.name.startsWith("HomeHero") || t.name.startsWith("HomeHero") && e.name.startsWith("StartFight"))
                          m.config.get(w).IsAlpha ? p.difficulty.open() : p.chapter.open(),
                          N.MOVE_ENABLE = !1,
                          this.dx.set(0, 0),
                          this.dy.set(0, 0),
                          this.dd.set(0, 0),
                          this.mainHero.movePart.move(this.dd.x, this.dd.y);
                      else if (t.name.startsWith("Role0")) {
                          var n = parseInt(t.name.substr(5, 2));
                          this.heroArray[n - 1] && (this.mainHero.showEButton(!0),
                          this.entrance = n + 100)
                      } else if (e.name.startsWith("Role0")) {
                          var o = parseInt(e.name.substr(5, 2));
                          this.heroArray[o - 1] && (this.mainHero.showEButton(!0),
                          this.entrance = o + 100)
                      } else if (t.name.startsWith("Npc0")) {
                          var s = parseInt(t.name.substr(4, 2));
                          this.mainHero.showEButton(!0),
                          this.entrance = s;
                          var a = t.getComponent(R);
                          a && (this.talkText = a.talk,
                          this.talkPosition = a.node.position)
                      } else if (e.name.startsWith("Npc0")) {
                          var r = parseInt(e.name.substr(4, 2));
                          this.mainHero.showEButton(!0),
                          this.entrance = r;
                          var h = e.getComponent(R);
                          h && (this.talkText = h.talk,
                          this.talkPosition = h.node.position)
                      }
              }
              ,
              u.onEndedContact = function(t, e, i) {
                  Date.now() - this.lastTime < 1e3 || t.name.startsWith("StartFight") || e.name.startsWith("StartFight") || (t.name.startsWith("Role0") || e.name.startsWith("Role0") ? 1 != this.entrance && (this.mainHero.showEButton(!1),
                  this.entrance = 0) : (t.name.startsWith("Npc") || e.name.startsWith("Npc")) && (this.mainHero.showEButton(!1),
                  this.entrance = 0))
              }
              ,
              u.getHeroBySN = function(t) {
                  for (var e = 0; e < this.heroArray.length; e++) {
                      var i = this.heroArray[e];
                      if (i.context.data.sn == t)
                          return i
                  }
                  return null
              }
              ,
              u.getNftHero = function() {
                  for (var t = 0; t < this.heroArray.length; t++) {
                      var e = this.heroArray[t];
                      if (null == e.context.data.skin)
                          return e
                  }
                  return null
              }
              ,
              u.replaceHero = function(t, e) {
                  var i = t.context.data
                    , n = e.context.data;
                  t.context.data = n,
                  e.context.data = i,
                  t.refreshDress(),
                  e.refreshDress(),
                  m.playerPrefs.setString("HERO_SKIN", n.skin)
              }
              ,
              u.exitHero = function() {
                  var t = this.mainHero.context.data;
                  if (t.skin) {
                      var e = this.getNftHero();
                      if (null != e)
                          this.replaceHero(this.mainHero, e);
                      else {
                          this.mainHero && (x.ins.remove(this.mainHero),
                          this.mainHero = null);
                          var i = this.createHero(t);
                          i && this.heroArray.push(i)
                      }
                  }
              }
              ,
              u.setMainHero = function(t) {
                  if (this.exitHero(),
                  this.mainHero) {
                      var e = this.getHeroBySN(t);
                      this.replaceHero(this.mainHero, e)
                  } else {
                      var i = T.hero.getHero(t);
                      this.mainHero = this.createMainHero(i)
                  }
                  p.home.refreshHeadAvatar()
              }
              ,
              u.addHero = function(t) {
                  T.hero.setMainHero(t.sn),
                  this.exitHero(),
                  this.mainHero ? (this.mainHero.context.data = t,
                  this.mainHero.refreshDress()) : this.mainHero = this.createMainHero(t),
                  m.playerPrefs.setString("HERO_SKIN", null)
              }
              ,
              u.refreshDress = function() {
                  for (var t = 0; t < this.heroArray.length; t++)
                      this.heroArray[t].refreshDress();
                  this.mainHero && this.mainHero.refreshDress()
              }
              ,
              i
          }(u));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/HomeWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./UIRoot.ts", "./UIHelper.ts", "./Client.ts", "./EntityPartDef.ts", "./UIListView.ts", "./Kit.ts", "./GameConfig.ts", "./CreatureImgDress.ts", "./UIToggle.ts", "./EquipView.ts"], (function(t) {
  var e, i, n, o, a, r, s, l, u, g, c, p, h, f, d, y, b, m, T, B, v, I, w;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          n = t.initializerDefineProperty,
          o = t.assertThisInitialized
      }
      , function(t) {
          a = t.cclegacy,
          r = t.Label,
          s = t.Button,
          l = t.ProgressBar,
          u = t.Node,
          g = t.ToggleContainer,
          c = t.Vec3
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          d = t.default
      }
      , function(t) {
          y = t.EntityPartId,
          b = t.UserEventId
      }
      , function(t) {
          m = t.UIListView
      }
      , function(t) {
          T = t.default
      }
      , function(t) {
          B = t.default
      }
      , function(t) {
          v = t.default
      }
      , function(t) {
          I = t.UIToggle
      }
      , function(t) {
          w = t.EquipView
      }
      ],
      execute: function() {
          var C, M, S, H, V, P, k, L, R, j, z, A, N, q, x, E, D, U, W, O, F, G, Q, _, K, Y, Z, J, X, $, tt, et, it, nt, ot, at, rt, st, lt, ut, gt, ct, pt, ht, ft, dt, yt;
          a._RF.push({}, "1ea91wKeilMo72n1FZbYIvi", "HomeWindow", void 0);
          t("default", (C = uiBind("fgui/login", "HomeWindow"),
          M = uiInject("TopLeft/Sprite/Label", r),
          S = uiInject("TopLeft/Frame/Mask/Human", v),
          H = uiInject("ShopBtn", s),
          V = uiInject("HeroBtn", s),
          P = uiInject("PackBtn", s),
          k = uiInject("TopLeft/HeadButton", s),
          L = uiInject("TopLeft/HeroButton", s),
          R = uiInject("TopLeft/VitLayout/Vit", r),
          j = uiInject("TopLeft/VitLayout/VitMax", r),
          z = uiInject("TopLeft/VitBar", l),
          A = uiInject("BagPanel", u),
          N = uiInject("BagPanel/CloseBtn", s),
          q = uiInject("BagPanel/ToggleGroup", g),
          x = uiInject("BagPanel/BagList", m),
          E = uiInject("TopRight", u),
          D = uiInject("TopRight/Coin1", u),
          U = uiInject("TopRight/Coin2", u),
          W = uiInject("TopRight/Coin1/Txt", r),
          O = uiInject("TopRight/Coin2/Txt", r),
          F = uiInject("TopRight/Toggles/SoundToggle", I),
          G = uiInject("TopRight/Toggles/MusicToggle", I),
          Q = listenEvent(y.HeroPart),
          _ = listenEvent(y.UserPart),
          C((Z = e((Y = function(t) {
              function e() {
                  for (var e, i = arguments.length, a = new Array(i), r = 0; r < i; r++)
                      a[r] = arguments[r];
                  return e = t.call.apply(t, [this].concat(a)) || this,
                  n(e, "HeadNick", Z, o(e)),
                  n(e, "HeadAvatar", J, o(e)),
                  n(e, "ShopBtn", X, o(e)),
                  n(e, "HeroBtn", $, o(e)),
                  n(e, "PackBtn", tt, o(e)),
                  n(e, "HeadButton", et, o(e)),
                  n(e, "HeroButton", it, o(e)),
                  n(e, "Vit", nt, o(e)),
                  n(e, "VitMax", ot, o(e)),
                  n(e, "VitBar", at, o(e)),
                  n(e, "BagPanel", rt, o(e)),
                  n(e, "BagCloseBtn", st, o(e)),
                  n(e, "ToggleGroup", lt, o(e)),
                  n(e, "BagList", ut, o(e)),
                  n(e, "TopRight", gt, o(e)),
                  n(e, "CoinNode1", ct, o(e)),
                  n(e, "CoinNode2", pt, o(e)),
                  n(e, "Coin1", ht, o(e)),
                  n(e, "Coin2", ft, o(e)),
                  n(e, "SoundToggle", dt, o(e)),
                  n(e, "MusicToggle", yt, o(e)),
                  e.bagType = void 0,
                  e.materialArray = void 0,
                  e.equips = void 0,
                  e
              }
              i(e, t);
              var a = e.prototype;
              return a.getPrototype = function() {
                  return e.prototype
              }
              ,
              a.onEnable = function() {
                  var t = this
                    , e = T.config.get(B);
                  this.BagPanel.active = !1;
                  var i = d.user.data.nick;
                  this.HeadNick.string = i;
                  var n = d.hero.getMain();
                  if (this.HeadAvatar.node.active = !0,
                  n && n.skin ? this.HeadAvatar.setSkin(n.skin) : this.HeadAvatar.setHeroData(n, !0),
                  e.IsAlpha) {
                      this.showAllBtn(!1);
                      var o = 0 | d.user.data.vit
                        , a = d.user.data.vitMax;
                      this.Vit.string = String(o),
                      this.VitMax.string = String(a),
                      this.VitBar.progress = Math.min(1, o / a),
                      this.CoinNode1.active = !1,
                      this.CoinNode2.active = !1
                  } else {
                      this.showAllBtn(!0);
                      var r = 0 | (null == n ? void 0 : n.getVit())
                        , s = d.user.data.vitMax;
                      this.Vit.string = String(r),
                      this.VitMax.string = String(s),
                      this.VitBar.progress = Math.min(1, r / s),
                      this.CoinNode1.active = !0,
                      this.CoinNode2.active = !0
                  }
                  this.onClick(this.ShopBtn, (function() {
                      h.diamondShop.open()
                  }
                  )),
                  this.onClick(this.HeroBtn, (function() {
                      h.equip.open()
                  }
                  )),
                  this.onClick(this.PackBtn, (function() {
                      t.ToggleGroup.toggleItems[0].setIsCheckedWithoutNotify(!0),
                      t.refreshWeaponList(),
                      t.refreshMaterialList(),
                      t.BagPanel.active = !0,
                      t.onBagSelect(1)
                  }
                  )),
                  this.onClick(this.BagCloseBtn, (function() {
                      t.BagPanel.active = !1
                  }
                  )),
                  this.onClick(this.HeadButton, (function() {
                      h.heroSelect.open()
                  }
                  )),
                  this.onClick(this.HeroButton, (function() {
                      h.heroSelect.open()
                  }
                  )),
                  this.BagList.itemRenderer = this.itemRenderer.bind(this),
                  this.BagList.itemSelected = this.itemSelected.bind(this),
                  this.ToggleGroup.toggleItems[0].setIsCheckedWithoutNotify(!0),
                  this.onCheck(this.ToggleGroup, (function(e) {
                      var i = e.name.replace("<Toggle>", "").replace("Toggle", "");
                      t.onBagSelect(parseInt(i))
                  }
                  )),
                  this.Coin1.string = d.user.data.money1.toString(),
                  this.Coin2.string = d.user.data.money2.toString(),
                  this.SoundToggle.setIsOnNotNotify(T.playerPrefs.getBoolean("Sound", !0)),
                  this.MusicToggle.setIsOnNotNotify(T.playerPrefs.getBoolean("Music", !0)),
                  this.SoundToggle.caller = this,
                  this.SoundToggle.onCheck = function() {
                      var e = !T.playerPrefs.getBoolean("Sound", !0);
                      T.playerPrefs.setBoolean("Sound", e),
                      t.SoundToggle.setIsOnNotNotify(e),
                      T.sound.setSoundVolume(e ? 1 : 0)
                  }
                  ,
                  this.MusicToggle.caller = this,
                  this.MusicToggle.onCheck = function() {
                      var e = !T.playerPrefs.getBoolean("Music", !0);
                      T.playerPrefs.setBoolean("Music", e),
                      t.MusicToggle.setIsOnNotNotify(e),
                      T.sound.setMusicVolume(e ? 1 : 0)
                  }
              }
              ,
              a.refreshMaterialList = function() {
                  this.materialArray = d.material.materialArray
              }
              ,
              a.refreshWeaponList = function() {
                  this.equips = [];
                  for (var t = d.equip.equips, e = 0; e < t.length; ++e) {
                      var i = t[e];
                      this.equips.push(i)
                  }
                  this.equips.sort((function(t, e) {
                      return null == t.cfg ? 1 : null == e.cfg ? -1 : t.cfg.Type == e.cfg.Type ? t.cfg.Rarity - e.cfg.Rarity : t.cfg.Type - e.cfg.Type
                  }
                  ))
              }
              ,
              a.onBagSelect = function(t) {
                  switch (this.bagType = t - 1,
                  this.bagType) {
                  case 0:
                      this.BagList.numItems = Math.max(this.equips.length, 20);
                      break;
                  case 1:
                      this.BagList.numItems = Math.max(this.materialArray.length, 20)
                  }
              }
              ,
              a.itemRenderer = function(t, e) {
                  0 == this.bagType && this.itemEquipRenderer(t, e),
                  1 == this.bagType && this.itemMaterialRenderer(t, e)
              }
              ,
              a.itemMaterialRenderer = function(t, e) {
                  var i = this.materialArray[t]
                    , n = e.getComponent(w);
                  if (n.showFrame2(!1),
                  n.showWarn(!1),
                  i && i.cfg) {
                      var o = i.cfg;
                      n.setIcon(f.getMaterialIcon(o.Icon)),
                      n.setCount(i.num),
                      n.setQuality(i.cfg.Rarity)
                  } else
                      n.setIcon(null),
                      n.setCountText(""),
                      n.setQuality(0)
              }
              ,
              a.itemEquipRenderer = function(t, e) {
                  var i = this.equips[t]
                    , n = e.getComponent(w);
                  if (i && i.cfg) {
                      var o = i.cfg;
                      n.setIcon(f.getEquipIcon(o.Icon)),
                      n.setCountText(""),
                      n.setQuality(i.cfg.Rarity),
                      n.showFrame2(i.durability <= 0),
                      n.showWarn(i.durability <= 0)
                  } else
                      n.setIcon(null),
                      n.setCountText(""),
                      n.setQuality(0),
                      n.showFrame2(!1),
                      n.showWarn(!1)
              }
              ,
              a.itemSelected = function(t, e) {
                  if (0 == this.bagType) {
                      var i = this.equips[t];
                      i && this.showEquipTips(i, new c(16,-14,0))
                  }
                  if (1 == this.bagType) {
                      var n = this.materialArray[t];
                      n && this.showMaterialTips(n, new c(16,-14,0))
                  }
              }
              ,
              a.showTopRight = function(t) {
                  this.TopRight.active = t
              }
              ,
              a.showAllBtn = function(t) {
                  this.active && (this.HeroBtn.node.active = t,
                  this.PackBtn.node.active = t,
                  this.ShopBtn.node.active = t)
              }
              ,
              a.onHeroEvent = function(t, e, i, n, o) {
                  if (t == b.ViteChange && !T.config.get(B).IsAlpha) {
                      var a = d.hero.getMain()
                        , r = 0 | (null == a ? void 0 : a.getVit())
                        , s = d.user.data.vitMax;
                      this.Vit.string = String(r),
                      this.VitMax.string = String(s),
                      this.VitBar.progress = Math.min(1, r / s)
                  }
              }
              ,
              a.onUserEvent = function(t, e, i, n, o) {
                  if (t == b.ViteChange) {
                      if (T.config.get(B).IsAlpha) {
                          var a = d.user.data.vit
                            , r = d.user.data.vitMax;
                          this.Vit.string = String(a),
                          this.VitMax.string = String(r),
                          this.VitBar.progress = Math.min(1, a / r)
                      }
                  } else
                      t == b.Money1Change ? this.Coin1.string = d.user.data.money1.toString() : t == b.Money2Change && (this.Coin2.string = d.user.data.money2.toString())
              }
              ,
              a.showEquipTips = function(t, e) {
                  h.equipDressTips.clearBtn(),
                  h.equipDressTips.setData(t),
                  h.equipDressTips.setPosition(e),
                  h.equipDressTips.open()
              }
              ,
              a.showMaterialTips = function(t, e) {
                  h.materialTips.setData(t),
                  h.materialTips.setPosition(e),
                  h.materialTips.clear(),
                  h.materialTips.open()
              }
              ,
              a.refreshHeadAvatar = function() {
                  if (this.HeadAvatar) {
                      var t = d.hero.getMain();
                      t && t.skin ? this.HeadAvatar.setSkin(t.skin) : this.HeadAvatar.setHeroData(t, !0)
                  }
              }
              ,
              e
          }(p)).prototype, "HeadNick", [M], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          J = e(Y.prototype, "HeadAvatar", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          X = e(Y.prototype, "ShopBtn", [H], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          $ = e(Y.prototype, "HeroBtn", [V], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          tt = e(Y.prototype, "PackBtn", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          et = e(Y.prototype, "HeadButton", [k], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          it = e(Y.prototype, "HeroButton", [L], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          nt = e(Y.prototype, "Vit", [R], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ot = e(Y.prototype, "VitMax", [j], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          at = e(Y.prototype, "VitBar", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          rt = e(Y.prototype, "BagPanel", [A], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          st = e(Y.prototype, "BagCloseBtn", [N], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          lt = e(Y.prototype, "ToggleGroup", [q], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ut = e(Y.prototype, "BagList", [x], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          gt = e(Y.prototype, "TopRight", [E], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ct = e(Y.prototype, "CoinNode1", [D], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          pt = e(Y.prototype, "CoinNode2", [U], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ht = e(Y.prototype, "Coin1", [W], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ft = e(Y.prototype, "Coin2", [O], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          dt = e(Y.prototype, "SoundToggle", [F], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          yt = e(Y.prototype, "MusicToggle", [G], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          e(Y.prototype, "onHeroEvent", [Q], Object.getOwnPropertyDescriptor(Y.prototype, "onHeroEvent"), Y.prototype),
          e(Y.prototype, "onUserEvent", [_], Object.getOwnPropertyDescriptor(Y.prototype, "onUserEvent"), Y.prototype),
          K = Y)) || K));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/HumanPanel.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./DataDef.ts", "./UIHelper.ts"], (function(e) {
  var t, i, r, l, a, n, u, p, o, s, c, y;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.initializerDefineProperty,
          r = e.inheritsLoose,
          l = e.assertThisInitialized,
          a = e.createForOfIteratorHelperLoose
      }
      , function(e) {
          n = e.cclegacy,
          u = e._decorator,
          p = e.Sprite,
          o = e.CCString,
          s = e.Component
      }
      , function(e) {
          c = e.EquipType
      }
      , function(e) {
          y = e.default
      }
      ],
      execute: function() {
          var b, h, f, m, g, d, D, w, q, z, v, F, E, _, H, L, R, S, W, P, k, A, C, I, T, B, J, M, O, j, x, N, U, X, G, K, Q, V, Y, Z, $, ee, te, ie, re, le, ae, ne, ue, pe;
          n._RF.push({}, "0f2e7HnFE9JCqNuJXpO6S6A", "HumanPanel", void 0);
          var oe = u.ccclass
            , se = u.property
            , ce = e("HumanEquip", (b = oe("HumanEquip"),
          h = se({
              type: p
          }),
          f = se({
              type: p
          }),
          m = se({
              type: p
          }),
          g = se({
              type: p
          }),
          d = se({
              type: p
          }),
          D = se({
              type: [o]
          }),
          b((z = t((q = function() {
              i(this, "back", z, this),
              i(this, "front", v, this),
              i(this, "left", F, this),
              i(this, "right", E, this),
              i(this, "middle", _, this),
              i(this, "default", H, this)
          }
          ).prototype, "back", [h], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          v = t(q.prototype, "front", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          F = t(q.prototype, "left", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          E = t(q.prototype, "right", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          _ = t(q.prototype, "middle", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          H = t(q.prototype, "default", [D], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return []
              }
          }),
          w = q)) || w));
          e("HumanPanel", (L = oe("HumanPanel"),
          R = se({
              type: p
          }),
          S = se({
              type: p
          }),
          W = se({
              type: p
          }),
          P = se({
              type: p
          }),
          k = se({
              type: p
          }),
          A = se({
              type: p
          }),
          C = se({
              type: p
          }),
          I = se({
              type: p
          }),
          T = se({
              type: p
          }),
          B = se({
              type: p
          }),
          J = se({
              type: ce
          }),
          M = se({
              type: ce
          }),
          O = se({
              type: ce
          }),
          j = se({
              type: ce
          }),
          x = se({
              type: ce
          }),
          N = se({
              type: ce
          }),
          L((G = t((X = function(e) {
              function t() {
                  for (var t, r = arguments.length, a = new Array(r), n = 0; n < r; n++)
                      a[n] = arguments[n];
                  return t = e.call.apply(e, [this].concat(a)) || this,
                  i(t, "head", G, l(t)),
                  i(t, "eyeL", K, l(t)),
                  i(t, "eyeR", Q, l(t)),
                  i(t, "mouse", V, l(t)),
                  i(t, "ear", Y, l(t)),
                  i(t, "body", Z, l(t)),
                  i(t, "armL", $, l(t)),
                  i(t, "armR", ee, l(t)),
                  i(t, "legL", te, l(t)),
                  i(t, "legR", ie, l(t)),
                  i(t, "weaponL", re, l(t)),
                  i(t, "weaponR", le, l(t)),
                  i(t, "armor", ae, l(t)),
                  i(t, "hat", ne, l(t)),
                  i(t, "shoe", ue, l(t)),
                  i(t, "pant", pe, l(t)),
                  t.equipDict = void 0,
                  t.layerDict = {},
                  t
              }
              r(t, e);
              var n = t.prototype;
              return n.init = function() {
                  null == this.equipDict && (this.equipDict = new Map,
                  this.equipDict.set(c.Weapon, this.weaponL),
                  this.equipDict.set(c.WeaponR, this.weaponR),
                  this.equipDict.set(c.Armor, this.armor),
                  this.equipDict.set(c.Hat, this.hat),
                  this.equipDict.set(c.Shoe, this.shoe),
                  this.equipDict.set(c.Pant, this.pant))
              }
              ,
              n.setData = function(e) {
                  this.init();
                  for (var t, i = a(this.equipDict); !(t = i()).done; ) {
                      var r, l = t.value, n = l[0], u = l[1], p = e.getEquipByType(n), o = null == p || null == (r = p.cfg) ? void 0 : r.PartArray;
                      null == o && u.default && (o = u.default),
                      this.setEquipSpriteFrame(u, o, n)
                  }
                  for (var s, c = a(this.equipDict); !(s = c()).done; ) {
                      var y, b = s.value[0], h = e.getEquipByType(b), f = null == h || null == (y = h.cfg) ? void 0 : y.HideArray;
                      f && this.hideEquip(f)
                  }
              }
              ,
              n.layerArray2Dict = function(e) {
                  this.layerDict.l = null,
                  this.layerDict.r = null,
                  this.layerDict.f = null,
                  this.layerDict.b = null,
                  this.layerDict.m = null;
                  for (var t = 0; t < e.length; ++t) {
                      var i = e[t];
                      i.endsWith("_l") ? this.layerDict.l = i : i.endsWith("_r") ? this.layerDict.r = i : i.endsWith("_f") ? this.layerDict.f = i : i.endsWith("_b") ? this.layerDict.b = i : i.endsWith("_m") ? this.layerDict.m = i : this.layerDict.f = i
                  }
                  return this.layerDict
              }
              ,
              n.setEquipSpriteFrame = function(e, t, i) {
                  var r = this.layerArray2Dict(t);
                  e.left && (e.left.spriteFrame = r.l ? y.getEquipSpriteFrame(r.l, i) : null),
                  e.right && (e.right.spriteFrame = r.r ? y.getEquipSpriteFrame(r.r, i) : null),
                  e.front && (e.front.spriteFrame = r.f ? y.getEquipSpriteFrame(r.f, i) : null),
                  e.back && (e.back.spriteFrame = r.b ? y.getEquipSpriteFrame(r.b, i) : null),
                  e.middle && (e.middle.spriteFrame = r.m ? y.getEquipSpriteFrame(r.m, i) : null)
              }
              ,
              n.hideEquip = function(e) {
                  for (var t = 0; t < e.length; ++t) {
                      var i = e[t].split("|")
                        , r = parseInt(i[0])
                        , l = i[1]
                        , a = this.equipDict.get(r);
                      a && l && (l.endsWith("_l") && a.left && (a.left.spriteFrame = null),
                      l.endsWith("_r") && a.right && (a.right.spriteFrame = null),
                      l.endsWith("_f") && a.front && (a.front.spriteFrame = null),
                      l.endsWith("_b") && a.back && (a.back.spriteFrame = null),
                      l.endsWith("_m") && a.middle && (a.middle.spriteFrame = null))
                  }
              }
              ,
              t
          }(s)).prototype, "head", [R], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          K = t(X.prototype, "eyeL", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Q = t(X.prototype, "eyeR", [W], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          V = t(X.prototype, "mouse", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Y = t(X.prototype, "ear", [k], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Z = t(X.prototype, "body", [A], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          $ = t(X.prototype, "armL", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ee = t(X.prototype, "armR", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          te = t(X.prototype, "legL", [T], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ie = t(X.prototype, "legR", [B], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          re = t(X.prototype, "weaponL", [J], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          le = t(X.prototype, "weaponR", [M], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ae = t(X.prototype, "armor", [O], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ne = t(X.prototype, "hat", [j], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          ue = t(X.prototype, "shoe", [x], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          pe = t(X.prototype, "pant", [N], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          U = X)) || U));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/IActionBase.ts", ["cc"], (function() {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "16e25aN6lRO3pMox0kqMEyl", "IActionBase", void 0),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/IAtkObj.ts", ["cc"], (function() {
  var t;
  return {
      setters: [function(c) {
          t = c.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "6f0f3LlnqJJxJ8W07+hifRz", "IAtkObj", void 0),
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ICreature.ts", ["cc"], (function() {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "a9fd7byKEJB0Y2C9fzBZgX6", "ICreature", void 0),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ICreatureDress.ts", ["cc"], (function() {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "8740e2bvZtK17WWse5kDfx6", "ICreatureDress", void 0),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ICreatureMovePart.ts", ["cc"], (function() {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "02e60ez+0xPiKvGIn0pCH99", "ICreatureMovePart", void 0),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ILateUpdater.ts", ["cc"], (function() {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "fae85kBK6pAb5/zmIRE2h3q", "ILateUpdater", void 0),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/IPhysics2DCollider.ts", ["cc"], (function() {
  var c;
  return {
      setters: [function(e) {
          c = e.cclegacy
      }
      ],
      execute: function() {
          c._RF.push({}, "41d26sgfKBMjb8cBul0c5jb", "IPhysics2DCollider", void 0),
          c._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Item.ts", ["cc"], (function(t) {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "fee3fUwCItFQqw9V8rh2JR4", "Item", void 0);
          t("Item", function() {
              function t() {
                  this.id = void 0,
                  this.cfgItem = null,
                  this.owner = null
              }
              var e = t.prototype;
              return e.init = function(t, e) {
                  this.id = t,
                  this.cfgItem = DataCenter.Item.Get(t),
                  null == this.cfgItem && console.log("unknow itemid:", t),
                  this.owner = e
              }
              ,
              e.destroy = function() {
                  this.cfgItem = null,
                  this.owner = null
              }
              ,
              e.getOwner = function() {
                  return this.owner
              }
              ,
              t
          }());
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ItemCom.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CharCom.ts", "./Item.ts"], (function(t) {
  var e, n, i, s;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          i = t.CharCom
      }
      , function(t) {
          s = t.Item
      }
      ],
      execute: function() {
          n._RF.push({}, "ed349buBN9EuYDSKn7kYenS", "ItemCom", void 0);
          t("ItemCom", function(t) {
              function n() {
                  for (var e, n = arguments.length, i = new Array(n), s = 0; s < n; s++)
                      i[s] = arguments[s];
                  return (e = t.call.apply(t, [this].concat(i)) || this).items = new Array,
                  e.chestNum = 0,
                  e.potionPick = !1,
                  e
              }
              e(n, t);
              var i = n.prototype;
              return i.init = function(e, n) {
                  t.prototype.init.call(this, e, n)
              }
              ,
              i.destoy = function() {
                  for (var t = 0; t < this.items.length; t++)
                      this.items[t].destroy(),
                      this.items[t] = null;
                  this.items = null
              }
              ,
              i.addItem = function(t) {
                  var e = new s;
                  return e.init(t, this.owner),
                  this.items.push(e),
                  this.onEx(e),
                  e
              }
              ,
              i.countChest = function() {
                  return this.chestNum
              }
              ,
              i.pickChest = function() {
                  this.chestNum += 1
              }
              ,
              i.getChestNum = function() {
                  return this.chestNum
              }
              ,
              i.onOpenChest = function() {
                  this.chestNum <= 0 || (this.chestNum -= 1,
                  this.owner.updateChestView())
              }
              ,
              i.setChestNum = function(t) {
                  this.chestNum = t,
                  this.owner.updateChestView()
              }
              ,
              i.getItemIds = function() {
                  for (var t = [], e = 0; e < this.items.length; e++)
                      t.push(this.items[e].id);
                  return t
              }
              ,
              i.getItemLength = function() {
                  return this.items.length
              }
              ,
              i.getItemCount = function(t) {
                  for (var e = 0, n = 0; n < this.items.length; ++n)
                      this.items[n].id == t && (e += 1);
                  return e
              }
              ,
              i.onEx = function(t) {
                  0 != t.cfgItem.ExtraValues.length && (6 == t.cfgItem.ExtraValues[0] && (this.potionPick = !0))
              }
              ,
              n
          }(i));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ItemEffectType.ts", ["cc"], (function(t) {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "a5a26It0BBLar8kJ4NGok4+", "ItemEffectType", void 0);
          t("ExtraTriggerType", function(t) {
              return t[t.Nothing = 0] = "Nothing",
              t[t.OpenShop = 1] = "OpenShop",
              t[t.KillMonster = 2] = "KillMonster",
              t[t.AllMonster = 3] = "AllMonster",
              t[t.Max = 4] = "Max",
              t
          }({})),
          t("ExtraEffectType", function(t) {
              return t[t.Nothing = 0] = "Nothing",
              t[t.WeaponLvlUpOrAttr = 1] = "WeaponLvlUpOrAttr",
              t[t.MonsterAttr = 2] = "MonsterAttr",
              t[t.RatingAttrDmg = 3] = "RatingAttrDmg",
              t[t.ShopDiscount = 4] = "ShopDiscount",
              t[t.ShopRefresh = 5] = "ShopRefresh",
              t
          }({}));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ItemTips.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./UIHelper.ts"], (function(e) {
  var t, i, n, o, r, l, a, s, c, u, p, f, h;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          o = e.assertThisInitialized
      }
      , function(e) {
          r = e.cclegacy,
          l = e.Button,
          a = e.Node,
          s = e.Sprite,
          c = e.Label,
          u = e.RichText,
          p = e.Vec3
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          h = e.default
      }
      ],
      execute: function() {
          var I, b, m, g, y, d, P, B, D, T, v, w, z, F, j;
          r._RF.push({}, "f61a0W81Z5IrIlgXOO0bdVX", "ItemTips", void 0);
          e("default", (I = uiBind("fgui/pause", "ItemTips"),
          b = uiInject("CloseBtn", l),
          m = uiInject("Panel", a),
          g = uiInject("Panel/BackFrame", s),
          y = uiInject("Panel/Title", c),
          d = uiInject("Panel/Icon", s),
          P = uiInject("Panel/Desc", u),
          I((T = t((D = function(e) {
              function t() {
                  for (var t, i = arguments.length, r = new Array(i), l = 0; l < i; l++)
                      r[l] = arguments[l];
                  return t = e.call.apply(e, [this].concat(r)) || this,
                  n(t, "CloseBtn", T, o(t)),
                  n(t, "Panel", v, o(t)),
                  n(t, "BackFrame", w, o(t)),
                  n(t, "Title", z, o(t)),
                  n(t, "Icon", F, o(t)),
                  n(t, "Desc", j, o(t)),
                  t.id = void 0,
                  t.position = new p,
                  t
              }
              i(t, e);
              var r = t.prototype;
              return r.getPrototype = function() {
                  return t.prototype
              }
              ,
              r.onEnable = function() {
                  var e = this;
                  this.Panel.position = this.position;
                  var t = DataCenter.Item.Get(this.id);
                  this.BackFrame.spriteFrame = h.getGoodsBackground(t.Rarity),
                  this.Icon.spriteFrame = h.getItemIcon(t.IconId),
                  this.Title.string = t.Name,
                  this.Title.color = h.getItemColor(t.Rarity),
                  this.Desc.string = t.Desc,
                  this.onClick(this.CloseBtn, (function() {
                      e.close()
                  }
                  ))
              }
              ,
              r.setData = function(e) {
                  this.id = e
              }
              ,
              r.setPosition = function(e) {
                  this.position.x = e.x + 95,
                  this.position.y = e.y + 160,
                  this.Panel && (this.Panel.position = this.position)
              }
              ,
              t
          }(f)).prototype, "CloseBtn", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          v = t(D.prototype, "Panel", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          w = t(D.prototype, "BackFrame", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          z = t(D.prototype, "Title", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          F = t(D.prototype, "Icon", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          j = t(D.prototype, "Desc", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          B = D)) || B));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/IUpdater.ts", ["cc"], (function() {
  var t;
  return {
      setters: [function(e) {
          t = e.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "960cboSOG5O8bX2Zdb793/U", "IUpdater", void 0),
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/IWeapon.ts", ["cc"], (function() {
  var e;
  return {
      setters: [function(c) {
          e = c.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "ce4f1W0CsxO+JQMNalY8UcA", "IWeapon", void 0),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Joystick.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(t) {
  var i, e, n, o, s, r, c, a, p, u, l, y, h, T, g, f, d, E;
  return {
      setters: [function(t) {
          i = t.applyDecoratedDescriptor,
          e = t.inheritsLoose,
          n = t.initializerDefineProperty,
          o = t.assertThisInitialized
      }
      , function(t) {
          s = t.cclegacy,
          r = t._decorator,
          c = t.EventTarget,
          a = t.Node,
          p = t.Enum,
          u = t.Vec3,
          l = t.Vec2,
          y = t.CCInteger,
          h = t.UITransform,
          T = t.Size,
          g = t.UIOpacity,
          f = t.input,
          d = t.Input,
          E = t.Component
      }
      ],
      execute: function() {
          var v, _, L, O, m, b, k, C, S, I, P, w, F, D, z, U, A;
          s._RF.push({}, "7ffe9M6Dl1JHYcD5szIxYcM", "Joystick", void 0);
          var J = r.ccclass
            , N = r.property
            , R = t("JoystickInput", new c)
            , H = t("SET_JOYSTICK_TYPE", "SET_JOYSTICK_TYPE")
            , M = t("DirectionType", function(t) {
              return t[t.FOUR = 0] = "FOUR",
              t[t.EIGHT = 1] = "EIGHT",
              t[t.ALL = 2] = "ALL",
              t
          }({}))
            , j = t("SpeedType", function(t) {
              return t[t.STOP = 0] = "STOP",
              t[t.NORMAL = 1] = "NORMAL",
              t[t.FAST = 2] = "FAST",
              t
          }({}))
            , W = t("JoystickType", function(t) {
              return t[t.FIXED = 0] = "FIXED",
              t[t.FOLLOW = 1] = "FOLLOW",
              t
          }({}));
          t("Joystick", (v = J("Joystick"),
          _ = N({
              type: a,
              displayName: "Dot",
              tooltip: "摇杆操纵点"
          }),
          L = N({
              type: a,
              displayName: "Ring",
              tooltip: "摇杆背景节点"
          }),
          O = N({
              type: p(W),
              displayName: "Touch Type",
              tooltip: "触摸类型"
          }),
          m = N({
              type: p(M),
              displayName: "Direction Type",
              tooltip: "方向类型"
          }),
          b = N({
              type: u,
              tooltip: "摇杆所在位置"
          }),
          k = N({
              type: l,
              tooltip: "触摸位置"
          }),
          C = N({
              type: y,
              displayName: "Ring Radius",
              tooltip: "半径"
          }),
          v((P = i((I = function(t) {
              function i() {
                  for (var i, e = arguments.length, s = new Array(e), r = 0; r < e; r++)
                      s[r] = arguments[r];
                  return i = t.call.apply(t, [this].concat(s)) || this,
                  n(i, "dot", P, o(i)),
                  n(i, "ring", w, o(i)),
                  n(i, "joystickType", F, o(i)),
                  n(i, "directionType", D, o(i)),
                  n(i, "_stickPos", z, o(i)),
                  n(i, "_touchLocation", U, o(i)),
                  n(i, "radius", A, o(i)),
                  i
              }
              e(i, t);
              var s = i.prototype;
              return s.onLoad = function() {
                  var t;
                  if (this.dot)
                      if (this.ring) {
                          var i = this.ring.getComponent(h)
                            , e = 2 * this.radius
                            , n = new T(e,e);
                          null == i || i.setContentSize(n),
                          null == (t = this.ring.getChildByName("bg").getComponent(h)) || t.setContentSize(n),
                          this._initTouchEvent();
                          var o = this.node.getComponent(g);
                          this.joystickType === W.FOLLOW && o && (o.opacity = 0)
                      } else
                          console.warn("Joystick Ring is null!");
                  else
                      console.warn("Joystick Dot is null!")
              }
              ,
              s.onEnable = function() {
                  R.on(H, this._onSetJoystickType, this)
              }
              ,
              s.onDisable = function() {
                  R.off(H, this._onSetJoystickType, this)
              }
              ,
              s._onSetJoystickType = function(t) {
                  this.joystickType = t;
                  var i = this.node.getComponent(g);
                  i && (i.opacity = t === W.FIXED ? 255 : 0)
              }
              ,
              s._initTouchEvent = function() {
                  f.on(d.EventType.TOUCH_START, this._touchStartEvent, this),
                  f.on(d.EventType.TOUCH_MOVE, this._touchMoveEvent, this),
                  f.on(d.EventType.TOUCH_END, this._touchEndEvent, this),
                  f.on(d.EventType.TOUCH_CANCEL, this._touchEndEvent, this)
              }
              ,
              s._touchStartEvent = function(t) {
                  if (this.ring && this.dot) {
                      R.emit(d.EventType.TOUCH_START, t);
                      var i = t.getUILocation()
                        , e = new u(i.x,i.y);
                      if (this.joystickType === W.FIXED) {
                          this._stickPos = this.ring.getPosition();
                          var n = e.subtract(this.ring.getPosition())
                            , o = n.length();
                          this.radius > o && this.dot.setPosition(n)
                      } else
                          this.joystickType === W.FOLLOW && (this._stickPos = e,
                          this.node.getComponent(g).opacity = 255,
                          this._touchLocation = t.getUILocation(),
                          this.ring.setPosition(e),
                          this.ring.active = !1,
                          this.dot.setPosition(new u))
                  }
              }
              ,
              s._touchMoveEvent = function(t) {
                  if (this.dot && this.ring) {
                      if (this.joystickType === W.FOLLOW && this._touchLocation === t.getUILocation())
                          return !1;
                      var i = t.getUILocation()
                        , e = new u(i.x,i.y).subtract(this.ring.getPosition())
                        , n = e.length()
                        , o = j.NORMAL;
                      this.radius > n ? (this.dot.setPosition(e),
                      o = j.NORMAL) : (this.dot.setPosition(e.normalize().multiplyScalar(this.radius)),
                      o = j.FAST),
                      R.emit(d.EventType.TOUCH_MOVE, t, {
                          speedType: o,
                          moveVec: e.normalize()
                      }),
                      n > 5 && (this.ring.active = !0)
                  }
              }
              ,
              s._touchEndEvent = function(t) {
                  this.dot && this.ring && (this.dot.setPosition(new u),
                  this.joystickType === W.FOLLOW && (this.node.getComponent(g).opacity = 0),
                  R.emit(d.EventType.TOUCH_END, t, {
                      speedType: j.STOP
                  }))
              }
              ,
              i
          }(E)).prototype, "dot", [_], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return null
              }
          }),
          w = i(I.prototype, "ring", [L], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return null
              }
          }),
          F = i(I.prototype, "joystickType", [O], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return W.FIXED
              }
          }),
          D = i(I.prototype, "directionType", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return M.ALL
              }
          }),
          z = i(I.prototype, "_stickPos", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new u
              }
          }),
          U = i(I.prototype, "_touchLocation", [k], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new l
              }
          }),
          A = i(I.prototype, "radius", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 50
              }
          }),
          S = I)) || S));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/JoystickWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./LayerType.ts", "./UIWindow.ts"], (function(t) {
  var n, o, e, i;
  return {
      setters: [function(t) {
          n = t.inheritsLoose
      }
      , function(t) {
          o = t.cclegacy
      }
      , function(t) {
          e = t.Layer2DType
      }
      , function(t) {
          i = t.default
      }
      ],
      execute: function() {
          var r;
          o._RF.push({}, "9d739BKRRJFab5FxsRoSC/p", "JoystickWindow", void 0);
          t("default", uiBind("fgui/loading", "JoystickWindow")(r = function(t) {
              function o(n) {
                  var o;
                  return (o = t.call(this, n) || this).layer = e.UIBG,
                  o
              }
              return n(o, t),
              o.prototype.getPrototype = function() {
                  return o.prototype
              }
              ,
              o
          }(i)) || r);
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Kit.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./EventSystem.ts", "./TimeSystem.ts", "./LayerSystem.ts", "./EntitySystem.ts", "./ConfigSystem.ts", "./SceneSystem.ts", "./HandlerSystem.ts", "./ObserverSystem.ts", "./MathSystem.ts", "./UtilsSystem.ts", "./GlobalObjectSystem.ts", "./PlayerPrefsSystem.ts", "./ActionUtils.ts", "./ResSystem.ts", "./TempUtils.ts", "./SpineSystem.ts", "./SoundSystem.ts"], (function(t) {
  var n, e, i, u, s, r, f, c, o, a, y, l, d, g, m, S, p, k, v;
  return {
      setters: [function(t) {
          n = t.createClass
      }
      , function(t) {
          e = t.cclegacy
      }
      , function(t) {
          i = t.default
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          y = t.default
      }
      , function(t) {
          l = t.default
      }
      , function(t) {
          d = t.default
      }
      , function(t) {
          g = t.default
      }
      , function(t) {
          m = t.default
      }
      , function(t) {
          S = t.default
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          k = t.default
      }
      , function(t) {
          v = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "1ec19uL0pBB/bwaOqtebMxu", "Kit", void 0),
          t("default", function() {
              function t() {}
              return t.on = function(n, e, i) {
                  t.$event.on(n, e, i)
              }
              ,
              t.off = function(n, e, i) {
                  t.$event.off(n, e, i)
              }
              ,
              t.dispatch = function(n, e, i, u, s) {
                  t.$event.dispatch(n, e, i, u, s)
              }
              ,
              t.clearEvent = function(n) {
                  t.$event.clear(n)
              }
              ,
              t.handler = function(n, e) {
                  return t.$handler.spawn(e, n)
              }
              ,
              t.observer = function() {
                  return t.$observer.create()
              }
              ,
              t.addEntity = function(t) {
                  this.$entity.addEntity(t)
              }
              ,
              t.addEntityPart = function(t) {
                  this.$entity.addPart(t)
              }
              ,
              t.getEntity = function(t) {
                  return this.$entity.getEntity(t)
              }
              ,
              t.getEntityPart = function(t) {
                  return this.$entity.getPart(t)
              }
              ,
              t.update = function(t) {
                  u.ins.update(t)
              }
              ,
              t.lateUpdate = function(t) {
                  u.ins.lateUpdate(t)
              }
              ,
              n(t, null, [{
                  key: "time",
                  get: function() {
                      return u.ins
                  }
              }, {
                  key: "layer",
                  get: function() {
                      return s.ins
                  }
              }, {
                  key: "config",
                  get: function() {
                      return f.ins
                  }
              }, {
                  key: "scene",
                  get: function() {
                      return c.ins
                  }
              }, {
                  key: "res",
                  get: function() {
                      return S.ins
                  }
              }, {
                  key: "math",
                  get: function() {
                      return y.ins
                  }
              }, {
                  key: "utils",
                  get: function() {
                      return l.ins
                  }
              }, {
                  key: "global",
                  get: function() {
                      return d.ins
                  }
              }, {
                  key: "playerPrefs",
                  get: function() {
                      return g.ins
                  }
              }, {
                  key: "temp",
                  get: function() {
                      return p.ins
                  }
              }, {
                  key: "spine",
                  get: function() {
                      return k.ins
                  }
              }, {
                  key: "sound",
                  get: function() {
                      return v.ins
                  }
              }, {
                  key: "$handler",
                  get: function() {
                      return o.ins
                  }
              }, {
                  key: "$observer",
                  get: function() {
                      return a.ins
                  }
              }, {
                  key: "$entity",
                  get: function() {
                      return r.ins
                  }
              }, {
                  key: "$event",
                  get: function() {
                      return i.ins
                  }
              }]),
              t
          }()).action = new m,
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/LaserLink.ts", ["cc", "./Kit.ts", "./LaserLinkView.ts", "./LayerType.ts"], (function(t) {
  var i, s, e, n, o, c;
  return {
      setters: [function(t) {
          i = t.cclegacy,
          s = t.Prefab,
          e = t.Vec3
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          o = t.LaserLinkView
      }
      , function(t) {
          c = t.Layer2DType
      }
      ],
      execute: function() {
          i._RF.push({}, "5c216rb6ChC2q5p/PGm7l7K", "LaserLink", void 0);
          t("default", function() {
              function t() {
                  this.srcT = void 0,
                  this.dstT = void 0,
                  this.offset = new e,
                  this.path = void 0,
                  this.view = void 0,
                  this.isActive = void 0,
                  this.lastTime = void 0
              }
              var i = t.prototype;
              return i.start = function() {
                  this.lastTime = Date.now(),
                  this.isActive = !0;
                  var t = this.srcT.worldPosition;
                  n.res.spawnAsyn(this.path, s, t, 0, c.View, this, this.onLoadCompleted)
              }
              ,
              i.onLoadCompleted = function(t) {
                  this.isActive ? (this.view = t.getComponent(o),
                  this.view.srcT = this.srcT,
                  this.view.dstT = this.dstT,
                  e.copy(this.view.offset, this.offset),
                  this.view.play()) : n.res.recycle(t)
              }
              ,
              i.destroy = function() {
                  this.isActive = !1,
                  this.view && (n.res.recycle(this.view.node),
                  this.view = null)
              }
              ,
              t
          }());
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/LaserLinkView.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts"], (function(i) {
  var t, e, n, o, r, s, l, a, c, h, u, p, d;
  return {
      setters: [function(i) {
          t = i.applyDecoratedDescriptor,
          e = i.inheritsLoose,
          n = i.initializerDefineProperty,
          o = i.assertThisInitialized
      }
      , function(i) {
          r = i.cclegacy,
          s = i._decorator,
          l = i.Node,
          a = i.Sprite,
          c = i.UITransform,
          h = i.Color,
          u = i.Vec3,
          p = i.Component
      }
      , function(i) {
          d = i.default
      }
      ],
      execute: function() {
          var f, y, w, S, z, L, C, T, v, R;
          r._RF.push({}, "c8317JbVARAVrw/xie3HSMP", "LaserLinkView", void 0);
          var b = s.ccclass
            , g = s.property;
          i("LaserLinkView", (f = b("LaserLinkView"),
          y = g({
              type: l
          }),
          w = g({
              type: a
          }),
          S = g({
              type: c
          }),
          f(((R = function(i) {
              function t() {
                  for (var t, e = arguments.length, r = new Array(e), s = 0; s < e; s++)
                      r[s] = arguments[s];
                  return t = i.call.apply(i, [this].concat(r)) || this,
                  n(t, "rootT", C, o(t)),
                  n(t, "lineS", T, o(t)),
                  n(t, "lineU", v, o(t)),
                  t.srcT = void 0,
                  t.dstT = void 0,
                  t.offset = new u,
                  t.dir = new u,
                  t.contentSize = void 0,
                  t
              }
              e(t, i);
              var r = t.prototype;
              return r.start = function() {
                  this.contentSize = this.lineU.contentSize
              }
              ,
              r.play = function() {
                  this.lineS.color = t.COLOR_SRC,
                  d.action.lerpColor(this, this.setColor, t.COLOR_SRC, t.COLOR_DST, 500)
              }
              ,
              r.setColor = function(i) {
                  this.lineS.color = i
              }
              ,
              r.update = function(i) {
                  if (null != this.srcT && null != this.dstT) {
                      var t = this.srcT.worldPosition
                        , e = this.dstT.worldPosition;
                      this.dir.x = e.x + this.offset.x - t.x,
                      this.dir.y = e.y + this.offset.y - t.y,
                      this.dir.z = e.z + this.offset.z - t.z;
                      var n = this.dir.length();
                      this.dir.normalize(),
                      this.lineU.setContentSize(this.contentSize.width, n);
                      var o = u.dot(this.dir, u.UP)
                        , r = Math.acos(o) * d.math.Radian2Angle;
                      this.dir.x > 0 && (r = -r),
                      this.rootT.worldPosition = t,
                      this.rootT.angle = r
                  }
              }
              ,
              t
          }(p)).COLOR_SRC = new h(255,255,255,0),
          R.COLOR_DST = new h(255,255,255,255),
          C = t((L = R).prototype, "rootT", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          T = t(L.prototype, "lineS", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          v = t(L.prototype, "lineU", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          z = L)) || z));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/LaserWeapon.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./RangedWeapon.ts", "./Kit.ts"], (function(t) {
  var i, e, n, r, o, a, s, c, l, u, h;
  return {
      setters: [function(t) {
          i = t.applyDecoratedDescriptor,
          e = t.inheritsLoose,
          n = t.initializerDefineProperty,
          r = t.assertThisInitialized
      }
      , function(t) {
          o = t.cclegacy,
          a = t._decorator,
          s = t.Sprite,
          c = t.UITransform,
          l = t.Vec3
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          h = t.default
      }
      ],
      execute: function() {
          var p, d, f, y, g, v, z;
          o._RF.push({}, "73f46R0qWJBZawYxriXk7r2", "LaserWeapon", void 0);
          var P = a.ccclass
            , w = a.property;
          t("default", (p = P("LaserWeapon"),
          d = w({
              type: s
          }),
          f = w({
              type: c
          }),
          p((v = i((g = function(t) {
              function i() {
                  for (var i, e = arguments.length, o = new Array(e), a = 0; a < e; a++)
                      o[a] = arguments[a];
                  return i = t.call.apply(t, [this].concat(o)) || this,
                  n(i, "line", v, r(i)),
                  n(i, "lineT", z, r(i)),
                  i.dir3 = new l,
                  i.srcPos = new l,
                  i
              }
              e(i, t);
              var o = i.prototype;
              return o.onAttackEnter = function() {}
              ,
              o.onAttacking = function() {}
              ,
              o.onAttackLeave = function() {}
              ,
              o.onAttackBegin = function() {
                  t.prototype.onAttackBegin.call(this);
                  var i = this.ai.target;
                  i && this.fire(i.worldPosition)
              }
              ,
              o.fire = function(t) {
                  l.copy(this.srcPos, this.lineT.node.worldPosition),
                  this.dir3.x = t.x - this.srcPos.x,
                  this.dir3.y = t.y - this.srcPos.y,
                  this.dir3.z = t.z - this.srcPos.z;
                  var i = this.dir.length();
                  this.dir.normalize(),
                  this.lineT.setContentSize(this.lineT.contentSize.width, i);
                  var e = l.dot(this.dir3, l.UP)
                    , n = Math.acos(e) * h.math.Radian2Angle;
                  this.dir.x > 0 && (n = -n),
                  this.lineT.node.angle = n
              }
              ,
              o.onAttackEnded = function() {}
              ,
              i
          }(u)).prototype, "line", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          z = i(g.prototype, "lineT", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          y = g)) || y));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/LaunchWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts"], (function(n) {
  var t, o, u;
  return {
      setters: [function(n) {
          t = n.inheritsLoose
      }
      , function(n) {
          o = n.cclegacy
      }
      , function(n) {
          u = n.default
      }
      ],
      execute: function() {
          var e;
          o._RF.push({}, "9d7a40/qYtF6qSGb2YF0Xsw", "LaunchWindow", void 0);
          n("default", uiBind("fgui/launch", "LaunchWindow")(e = function(n) {
              function o() {
                  return n.apply(this, arguments) || this
              }
              t(o, n);
              var u = o.prototype;
              return u.getPrototype = function() {
                  return o.prototype
              }
              ,
              u.onEnable = function() {}
              ,
              o
          }(u)) || e);
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/LayerSort.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./LayerSortUtils.ts"], (function(t) {
  var e, r, i, n, o, a, u, s;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          r = t.inheritsLoose,
          i = t.initializerDefineProperty,
          n = t.assertThisInitialized
      }
      , function(t) {
          o = t.cclegacy,
          a = t._decorator,
          u = t.Component
      }
      , function(t) {
          s = t.default
      }
      ],
      execute: function() {
          var c, l, p;
          o._RF.push({}, "d3daeSh9LRJD4kRFg5fogr7", "LayerSort", void 0);
          var f = a.ccclass
            , d = a.property;
          t("default", f("LayerSort")((p = e((l = function(t) {
              function e() {
                  for (var e, r = arguments.length, o = new Array(r), a = 0; a < r; a++)
                      o[a] = arguments[a];
                  return e = t.call.apply(t, [this].concat(o)) || this,
                  i(e, "duration", p, n(e)),
                  e.time = 0,
                  e
              }
              r(e, t);
              var o = e.prototype;
              return o.start = function() {
                  this.time = 0
              }
              ,
              o.update = function(t) {
                  this.time += t,
                  this.time > this.duration && (this.time = 0,
                  s.update(this.node))
              }
              ,
              e
          }(u)).prototype, "duration", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          c = l)) || c);
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/LayerSortUtils.ts", ["cc"], (function(t) {
  var i;
  return {
      setters: [function(t) {
          i = t.cclegacy
      }
      ],
      execute: function() {
          i._RF.push({}, "83e774T5eVANoVtVc/RWLyG", "LayerSortUtils", void 0);
          t("default", function() {
              function t() {}
              return t.update = function(t) {
                  var i = t.children;
                  this.quickSort(i, 0, i.length - 1),
                  t._updateSiblingIndex()
              }
              ,
              t.quickSort = function(t, i, n) {
                  if (!(i >= n)) {
                      var r = this.partition(t, i, n);
                      this.quickSort(t, i, r - 1),
                      this.quickSort(t, r + 1, n)
                  }
              }
              ,
              t.partition = function(t, i, n) {
                  for (var r = t[n], o = i - 1, u = i; u < n; u++)
                      t[u].position.y > r.position.y && this.swap(t, ++o, u);
                  return this.swap(t, o + 1, n),
                  o + 1
              }
              ,
              t.swap = function(t, i, n) {
                  var r = t[i];
                  t[i] = t[n],
                  t[n] = r
              }
              ,
              t
          }());
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/LayerSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts", "./LayerType.ts"], (function(e) {
  var t, r, o, n, a, i, s, u, l, d;
  return {
      setters: [function(e) {
          t = e.inheritsLoose,
          r = e.createClass
      }
      , function(e) {
          o = e.cclegacy,
          n = e.Node,
          a = e.find,
          i = e.UITransform,
          s = e.Widget,
          u = e.Layers
      }
      , function(e) {
          l = e.default
      }
      , function(e) {
          d = e.Layer2DType
      }
      ],
      execute: function() {
          o._RF.push({}, "13b6fuw7sVBjoHeXAGVS8AH", "LayerSystem", void 0);
          e("default", function(e) {
              function o() {
                  var t;
                  (t = e.call(this) || this).layer2Ds = [],
                  t._root = void 0,
                  t._rootT = void 0,
                  t._root = a("Canvas"),
                  t._rootT = t._root.getComponent(i);
                  for (var r = 0; r < d.Ended; ++r) {
                      var o = new n;
                      if (t.root.addChild(o),
                      r >= d.UIBG) {
                          var l = o.addComponent(s);
                          l.alignFlags = 63,
                          l.left = 0,
                          l.right = 0,
                          l.top = 0,
                          l.bottom = 0,
                          o.name = "UILayer" + r,
                          o.layer = u.Enum.UI_2D
                      } else
                          o.name = "Layer" + r,
                          o.layer = u.Enum.DEFAULT;
                      t.layer2Ds.push(o)
                  }
                  return t
              }
              t(o, e);
              var l = o.prototype;
              return l.addNode = function(e, t) {
                  t instanceof n ? t.addChild(e) : this.layer2Ds[t].addChild(e)
              }
              ,
              l.getLayer = function(e) {
                  return this.layer2Ds[e]
              }
              ,
              l.setLayer = function(e, t) {
                  e.layer = t;
                  for (var r = e.children, o = 0; o < r.length; ++o)
                      this.setLayer(r[o], t)
              }
              ,
              r(o, [{
                  key: "root",
                  get: function() {
                      return this._root
                  }
              }, {
                  key: "rootT",
                  get: function() {
                      return this._rootT
                  }
              }]),
              o
          }(l()));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/LayerType.ts", ["cc"], (function(e) {
  var i;
  return {
      setters: [function(e) {
          i = e.cclegacy
      }
      ],
      execute: function() {
          i._RF.push({}, "4f21e2UKJVD+JLLxR0iaS9L", "LayerType", void 0);
          e("Layer2DType", function(e) {
              return e[e.BG = 0] = "BG",
              e[e.Middle = 1] = "Middle",
              e[e.Main = 2] = "Main",
              e[e.View = 3] = "View",
              e[e.UIBG = 4] = "UIBG",
              e[e.UIMain = 5] = "UIMain",
              e[e.UIPopup = 6] = "UIPopup",
              e[e.UITips = 7] = "UITips",
              e[e.Ended = 8] = "Ended",
              e
          }({}));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/LerpAction.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./ActionBase.ts"], (function(t) {
  var i, e, n, r, o;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          e = t.cclegacy,
          n = t.lerp
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          o = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "f5720+mEbxD1LsrYhqDNMVL", "LerpAction", void 0);
          var s = t("default", function(t) {
              function e() {
                  for (var i, e = arguments.length, n = new Array(e), r = 0; r < e; r++)
                      n[r] = arguments[r];
                  return (i = t.call.apply(t, [this].concat(n)) || this).time = void 0,
                  i.duration = 1e3,
                  i.caller = void 0,
                  i.method = void 0,
                  i.ease = void 0,
                  i.src = void 0,
                  i.dst = void 0,
                  i
              }
              i(e, t);
              var r = e.prototype;
              return r.onStart = function() {
                  this.time = 0
              }
              ,
              r.onUpdate = function(t) {
                  if (this.time += t,
                  this.time < this.duration) {
                      var i = this.time / this.duration
                        , e = this.ease.call(this, i);
                      return this.method.call(this.caller, n(this.src, this.dst, e)),
                      !1
                  }
                  return this.method.call(this.caller, this.dst),
                  !0
              }
              ,
              r.onFinish = function() {
                  e.POOL.recycle(this)
              }
              ,
              e
          }(o));
          s.POOL = new r((function() {
              return new s
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/LerpColorAction.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./ActionBase.ts"], (function(t) {
  var i, e, r, s, n, o;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          e = t.cclegacy,
          r = t.lerp,
          s = t.Color
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          o = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "953a3UABhREqpTwY84G3YO8", "LerpColorAction", void 0);
          var c = t("default", function(t) {
              function e() {
                  for (var i, e = arguments.length, r = new Array(e), n = 0; n < e; n++)
                      r[n] = arguments[n];
                  return (i = t.call.apply(t, [this].concat(r)) || this).duration = 1e3,
                  i.caller = void 0,
                  i.method = void 0,
                  i.complete = void 0,
                  i.ease = void 0,
                  i.src = new s,
                  i.dst = new s,
                  i.time = void 0,
                  i.cur = new s,
                  i
              }
              i(e, t);
              var n = e.prototype;
              return n.onStart = function() {
                  this.time = 0
              }
              ,
              n.onUpdate = function(t) {
                  if (this.time += t,
                  this.time < this.duration) {
                      var i = this.time / this.duration
                        , e = this.ease.call(this, i);
                      return this.cur.r = r(this.src.r, this.dst.r, e),
                      this.cur.g = r(this.src.g, this.dst.g, e),
                      this.cur.b = r(this.src.b, this.dst.b, e),
                      this.cur.a = r(this.src.a, this.dst.a, e),
                      this.method.call(this.caller, this.cur),
                      !1
                  }
                  var s;
                  return this.method.call(this.caller, this.dst),
                  null == (s = this.complete) || s.call(this.caller),
                  !0
              }
              ,
              n.onFinish = function() {
                  e.POOL.recycle(this)
              }
              ,
              e
          }(o));
          c.POOL = new n((function() {
              return new c
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/LinkList.ts", ["cc"], (function(t) {
  var i;
  return {
      setters: [function(t) {
          i = t.cclegacy
      }
      ],
      execute: function() {
          i._RF.push({}, "09517BZ3oJI+LnIFompwH1g", "LinkList", void 0);
          var n = t("LinkNode", (function(t) {
              this.data = void 0,
              this.next = void 0,
              this.data = t,
              this.next = null
          }
          ));
          t("default", function() {
              function t() {
                  this.size = 0,
                  this.head = void 0,
                  this.size = 0
              }
              var i = t.prototype;
              return i.isEmpty = function() {
                  return 0 === this.size
              }
              ,
              i.find = function(t) {
                  for (var i = this.head; i && i.data !== t; )
                      i = i.next;
                  return i
              }
              ,
              i.getLength = function() {
                  return this.size
              }
              ,
              i.remove = function(t) {
                  var i, n = this.head, e = null == (i = n) ? void 0 : i.next;
                  if (n && n.data == t)
                      return this.head = null,
                      void this.size--;
                  for (; n && e; ) {
                      if (e.data === t) {
                          n.next = e.next,
                          this.size--;
                          break
                      }
                      n = e,
                      e = e.next
                  }
              }
              ,
              i.add = function(t) {
                  var i = new n(t);
                  i.next = this.head,
                  this.head = i,
                  this.size++
              }
              ,
              i.clear = function() {
                  this.head = null,
                  this.size = 0
              }
              ,
              i.foreach = function(t) {
                  for (var i = this.head; i; )
                      t(i.data),
                      i = i.next
              }
              ,
              t
          }());
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/LoadingWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts"], (function(r) {
  var e, t, i, o, s, n, a, l;
  return {
      setters: [function(r) {
          e = r.applyDecoratedDescriptor,
          t = r.inheritsLoose,
          i = r.initializerDefineProperty,
          o = r.assertThisInitialized
      }
      , function(r) {
          s = r.cclegacy,
          n = r.ProgressBar,
          a = r.Label
      }
      , function(r) {
          l = r.default
      }
      ],
      execute: function() {
          var u, p, c, g, f, h, d;
          s._RF.push({}, "a4135KFTq5L/K/kWY5a5tf8", "LoadingWindow", void 0);
          r("default", (u = uiBind("fgui/loading", "LoadingWindow"),
          p = uiInject("ProgressBar", n),
          c = uiInject("ProgressBar/Text", a),
          u((h = e((f = function(r) {
              function e() {
                  for (var e, t = arguments.length, s = new Array(t), n = 0; n < t; n++)
                      s[n] = arguments[n];
                  return e = r.call.apply(r, [this].concat(s)) || this,
                  i(e, "progressBar", h, o(e)),
                  i(e, "progressTxt", d, o(e)),
                  e.value = 0,
                  e
              }
              t(e, r);
              var s = e.prototype;
              return s.getPrototype = function() {
                  return e.prototype
              }
              ,
              s.onEnable = function() {
                  this.progressBar && (this.progressBar.progress = this.value)
              }
              ,
              s.callback = function(r) {
                  this.close()
              }
              ,
              s.progress = function(r) {
                  this.value = r,
                  this.progressBar && (this.progressBar.progress = this.value),
                  this.progressTxt && (this.progressTxt.string = Math.floor(100 * r) + "%")
              }
              ,
              e
          }(l)).prototype, "progressBar", [p], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          d = e(f.prototype, "progressTxt", [c], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          g = f)) || g));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/LoginScene.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SceneBase.ts", "./UIRoot.ts"], (function(n) {
  var t, e, o, i;
  return {
      setters: [function(n) {
          t = n.inheritsLoose
      }
      , function(n) {
          e = n.cclegacy
      }
      , function(n) {
          o = n.default
      }
      , function(n) {
          i = n.default
      }
      ],
      execute: function() {
          e._RF.push({}, "0ed4725xelMEKVVy6mPO9Et", "LoginScene", void 0);
          n("default", function(n) {
              function e() {
                  return n.apply(this, arguments) || this
              }
              t(e, n);
              var o = e.prototype;
              return o.onEnter = function() {
                  i.login.open()
              }
              ,
              o.onExit = function() {
                  i.login.close()
              }
              ,
              e
          }(o));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/LoginSystem.ts", ["cc"], (function() {
  var t;
  return {
      setters: [function(e) {
          t = e.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "fc744A7n/NHQKruR1vpaNAB", "LoginSystem", void 0),
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/LoginWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./Kit.ts", "./UIRoot.ts", "./SessionMessage_Login.ts"], (function(n) {
  var t, i, o, e, r, c, u, s, l, a, g;
  return {
      setters: [function(n) {
          t = n.applyDecoratedDescriptor,
          i = n.inheritsLoose,
          o = n.initializerDefineProperty,
          e = n.assertThisInitialized
      }
      , function(n) {
          r = n.cclegacy,
          c = n.Button,
          u = n.EditBox
      }
      , function(n) {
          s = n.default
      }
      , function(n) {
          l = n.default
      }
      , function(n) {
          a = n.default
      }
      , function(n) {
          g = n.default
      }
      ],
      execute: function() {
          var f, p, d, h, y, L, B;
          r._RF.push({}, "e8cf5kWaNdK7YMHnWHG6+DT", "LoginWindow", void 0);
          n("default", (f = uiBind("fgui/login", "LoginWindow"),
          p = uiInject("LoginBtn", c),
          d = uiInject("LoginAccount", u),
          f((L = t((y = function(n) {
              function t() {
                  for (var t, i = arguments.length, r = new Array(i), c = 0; c < i; c++)
                      r[c] = arguments[c];
                  return t = n.call.apply(n, [this].concat(r)) || this,
                  o(t, "loginBtn", L, e(t)),
                  o(t, "loginAccount", B, e(t)),
                  t.isLoging = void 0,
                  t
              }
              i(t, n);
              var r = t.prototype;
              return r.getPrototype = function() {
                  return t.prototype
              }
              ,
              r.onEnable = function() {
                  this.isLoging = !1,
                  this.loginAccount.string = l.playerPrefs.getString("Account", ""),
                  this.onClick(this.loginBtn, this.onLogin)
              }
              ,
              r.onLogin = function() {
                  var n = this.loginAccount.string;
                  if (l.utils.isEmpty(n))
                      a.messageBox.setMesage("The account cannot be empty"),
                      a.messageBox.open();
                  else {
                      var t = this.loginAccount.string;
                      g.login(t, "pc")
                  }
              }
              ,
              t
          }(s)).prototype, "loginBtn", [p], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          B = t(y.prototype, "loginAccount", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          h = y)) || h));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/main", ["./debug-view-runtime-control.ts", "./GameApp.ts", "./Main.ts", "./SpineEditor.ts", "./WeaponEditor.ts", "./Kit.ts", "./ActionBase.ts", "./ActionState.ts", "./ActionSystem.ts", "./ActionUtils.ts", "./Bezier2ToAction.ts", "./CallAction.ts", "./DelayAction.ts", "./IActionBase.ts", "./LerpAction.ts", "./LerpColorAction.ts", "./ParallelAction.ts", "./SequenceAction.ts", "./SetAction.ts", "./ToAction.ts", "./ToVec3Action.ts", "./BehaviorBase.ts", "./LinkList.ts", "./MediatorBase.ts", "./Padding.ts", "./QueryVariable.ts", "./SimplePool.ts", "./Singleton.ts", "./Stopwatch.ts", "./SystemBase.ts", "./ConfigBase.ts", "./ConfigEntity.ts", "./ConfigSystem.ts", "./EntityBase.ts", "./EntityPart.ts", "./EntitySystem.ts", "./EventSystem.ts", "./Handler.ts", "./HandlerSystem.ts", "./Observer.ts", "./ObserverSystem.ts", "./LayerSort.ts", "./LayerSortUtils.ts", "./LayerSystem.ts", "./LayerType.ts", "./clipboard.min.mjs_cjs=&original=.js", "./MathSystem.ts", "./WWW.ts", "./IPhysics2DCollider.ts", "./Physics2DBox.ts", "./Physics2DCircle.ts", "./Physics2DCircleView.ts", "./Physics2DDef.ts", "./Physics2DObject.ts", "./Physics2DSystem.ts", "./Physics2DTest.ts", "./AutoRecycle.ts", "./ResAgent.ts", "./ResFrameAnimPool.ts", "./ResLoader.ts", "./ResNode.ts", "./ResPool.ts", "./ResPrefabPool.ts", "./ResRemoteSpriteFramePool.ts", "./ResRemoteTexturePool.ts", "./ResSpinePool.ts", "./ResSpriteAtlasPool.ts", "./ResSpriteFramePool.ts", "./ResSpriteFramesPool.ts", "./ResSystem.ts", "./ResTexturePool.ts", "./SceneBase.ts", "./SceneSystem.ts", "./SoundSystem.ts", "./SpineSystem.ts", "./ILateUpdater.ts", "./IUpdater.ts", "./TimeSystem.ts", "./Joystick.ts", "./UIAroundBall.ts", "./UIListView.ts", "./UIListener.ts", "./UIPageView.ts", "./UIToggle.ts", "./UIToggleGroup.ts", "./UIWindow.ts", "./UIWindowView.ts", "./GlobalObjectSystem.ts", "./PlayerPrefsSystem.ts", "./Random.ts", "./TempUtils.ts", "./TextUTF8.ts", "./TextUtils.ts", "./UtilsSystem.ts", "./Def.ts", "./DressConfig.ts", "./EntityPartDef.ts", "./EventId.ts", "./GameCollider.ts", "./GameConfig.ts", "./GameContext.ts", "./GameGlobal.ts", "./GameObject.ts", "./GameObjectManager.ts", "./GamePart.ts", "./MergeUtils.ts", "./ServerList.ts", "./CameraContext.ts", "./CameraFollowState.ts", "./CameraManager.ts", "./CameraStartState.ts", "./CameraState.ts", "./CameraStateId.ts", "./CameraTranslate.ts", "./CameraUtils.ts", "./DeathEffect.ts", "./EffectBase.ts", "./EffectFactory.ts", "./EffectFrameAnim.ts", "./EffectId.ts", "./EffectManager.ts", "./EffectUtils.ts", "./FlyEffect.ts", "./FlyText.ts", "./FrameAnim.ts", "./MoveType.ts", "./SpineEffect.ts", "./TipsEffect.ts", "./Client.ts", "./BattleMap.ts", "./BattleMgr.ts", "./ICreature.ts", "./IWeapon.ts", "./QuardTree.ts", "./Stage.ts", "./Attr.ts", "./Buff.ts", "./CharCom.ts", "./Item.ts", "./ItemCom.ts", "./TalentCom.ts", "./Weapon2.ts", "./WeaponCom.ts", "./AttrType.ts", "./BattleDef.ts", "./ClassType.ts", "./EffectType.ts", "./ExtraEffectType.ts", "./IAtkObj.ts", "./ItemEffectType.ts", "./MonsterSpawn.ts", "./WeaponType.ts", "./CharObj.ts", "./CreatureObj.ts", "./MonsterObj.ts", "./ObjMgr.ts", "./TowerObj.ts", "./AtkStrategy.ts", "./BossAS.ts", "./ChargeAS.ts", "./ChaseAS.ts", "./DragonAS.ts", "./SkillAS.ts", "./SummonAS.ts", "./TowerAS.ts", "./TowerLaserAS.ts", "./BagData.ts", "./DataDef.ts", "./EquipData.ts", "./EquipPart.ts", "./FightPart.ts", "./HeroData.ts", "./HeroPart.ts", "./MaterialData.ts", "./MaterialPart.ts", "./UserData.ts", "./UserPart.ts", "./Fight.ts", "./FightMap.ts", "./AtkBatch.ts", "./Bomb.ts", "./Bullet.ts", "./BulletBase.ts", "./BulletBoomerang.ts", "./BulletLightningBall.ts", "./BulletShuriken.ts", "./BulletView.ts", "./Creature.ts", "./CreatureAnimId.ts", "./CreatureAttackPart.ts", "./CreatureBase.ts", "./CreatureBirth.ts", "./CreatureContext.ts", "./CreatureForceMovePart.ts", "./CreatureManager.ts", "./CreatureMovePart.ts", "./CreaturePart.ts", "./CreaturePartID.ts", "./CreatureType.ts", "./CreatureView.ts", "./CurveBullet.ts", "./DropItem.ts", "./DropItemType.ts", "./Enemy.ts", "./EnemyContext.ts", "./ICreatureMovePart.ts", "./Player.ts", "./PlayerContext.ts", "./PlayerInputPart.ts", "./PlayerPickPart.ts", "./PlayerWeaponPart.ts", "./PlayerWeaponPosition.ts", "./Tower.ts", "./TowerContext.ts", "./BoomerangWeapon.ts", "./BurstWeapon.ts", "./Gun360Setting.ts", "./Gun360Weapon.ts", "./GunSetting.ts", "./GunWeapon.ts", "./GunWheelSetting.ts", "./GunWheelWeapon.ts", "./LaserLink.ts", "./LaserWeapon.ts", "./MeleeLightningTrigger.ts", "./MeleeTrigger.ts", "./MeleeWeapon.ts", "./RangedWeapon.ts", "./ShurikenWeapon.ts", "./Weapon.ts", "./WeaponAI.ts", "./WeaponAgent.ts", "./WeaponState.ts", "./HomeHero.ts", "./HomeHeroContext.ts", "./HomeHeroMovePart.ts", "./HomeHeroWeaponPart.ts", "./Base64.ts", "./Md5.ts", "./MessageId.ts", "./MessageIdProtocol.ts", "./Network.ts", "./Session.ts", "./SessionMessage.ts", "./SessionMessage_Common.ts", "./SessionMessage_Fight.ts", "./SessionMessage_Home.ts", "./SessionMessage_Login.ts", "./ResList.ts", "./FightScene.ts", "./HomeScene.ts", "./LoginScene.ts", "./SDKManager.ts", "./SystemInfo.ts", "./UIHelper.ts", "./UIQueue.ts", "./UIRoot.ts", "./FightBossPanel.ts", "./FightFinishWindow.ts", "./FightRewardWindow.ts", "./FightSelectWindow.ts", "./FightShopWindow.ts", "./FightWindow.ts", "./PauseWindow.ts", "./GmWindow.ts", "./ChapterSelectWindow.ts", "./ChapterWindow.ts", "./DifficultySelectWindow.ts", "./EquipDressTips.ts", "./EquipView.ts", "./EquipWindow.ts", "./ForgeCombinePanel.ts", "./ForgeCombineResultWindow.ts", "./ForgeMaterialTips.ts", "./ForgeRepairPanel.ts", "./ForgeRepairResultWindow.ts", "./ForgeUpgradePanel.ts", "./ForgeUpgradeResultWindow.ts", "./ForgeWindow.ts", "./HeroSelectWindow.ts", "./HomeWindow.ts", "./HumanPanel.ts", "./PassResultWindow.ts", "./StartFight.ts", "./JoystickWindow.ts", "./LaunchWindow.ts", "./LoadingWindow.ts", "./LoginSystem.ts", "./LoginWindow.ts", "./DiamondResultWindow.ts", "./DiamondShopWindow.ts", "./GoodsBuyTips.ts", "./MateriaShopWindow.ts", "./MaterialTips.ts", "./ItemTips.ts", "./MessageTips.ts", "./MessageWindow.ts", "./PlayerTips.ts", "./TextTips.ts", "./TextTipsView.ts", "./WeaponTips.ts", "./AnimationAutoPlay.ts", "./CreatureDress.ts", "./CreatureDressType.ts", "./CreatureImgDress.ts", "./CreatureSkinDress.ts", "./CreatureSlot.ts", "./DogView.ts", "./FrameAnimClip.ts", "./FrameAnimView.ts", "./ICreatureDress.ts", "./LaserLinkView.ts", "./RoleView.ts", "./RotateAnim.ts", "./ScaleAnim.ts", "./SpineAutoPlay.ts", "./SpriteColorAnim.ts", "./TalkPanel.ts", "./TalkView.ts", "./proto.mjs_cjs=&original=.js", "./EnemyTest.ts", "./MoveTest.ts", "./SpineTest.ts", "./UITest.ts"], (function() {
  return {
      setters: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],
      execute: function() {}
  }
}
));

System.register("chunks:///_virtual/Main.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./GameApp.ts"], (function(t) {
  var n, e, a, i, o, r;
  return {
      setters: [function(t) {
          n = t.inheritsLoose
      }
      , function(t) {
          e = t.cclegacy,
          a = t._decorator,
          i = t.Component
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          r = t.default
      }
      ],
      execute: function() {
          var c;
          e._RF.push({}, "a83193hIi9JY5XRtBctZVD3", "Main", void 0);
          var p = a.ccclass;
          a.property,
          t("Main", p("Main")(c = function(t) {
              function e() {
                  for (var n, e = arguments.length, a = new Array(e), i = 0; i < e; i++)
                      a[i] = arguments[i];
                  return (n = t.call.apply(t, [this].concat(a)) || this).app = void 0,
                  n
              }
              n(e, t);
              var a = e.prototype;
              return a.start = function() {
                  this.app = new r,
                  this.app.init()
              }
              ,
              a.update = function(t) {
                  o.update(t)
              }
              ,
              a.lateUpdate = function(t) {
                  o.lateUpdate(t)
              }
              ,
              e
          }(i)) || c);
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MaterialData.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./EntityBase.ts"], (function(t) {
  var e, n, i, a;
  return {
      setters: [function(t) {
          e = t.inheritsLoose,
          n = t.createClass
      }
      , function(t) {
          i = t.cclegacy
      }
      , function(t) {
          a = t.default
      }
      ],
      execute: function() {
          var u;
          i._RF.push({}, "b38485Yc4BKkY8f9ixvZpCm", "MaterialData", void 0);
          t("default", set_class_name("MaterialData")(u = function(t) {
              function i(e, n) {
                  var i;
                  return (i = t.call(this) || this)._sn = void 0,
                  i._id = void 0,
                  i._num = void 0,
                  i._cfg = void 0,
                  i._id = e,
                  i._num = n,
                  i._cfg = DataCenter.Material.Get(e),
                  i
              }
              return e(i, t),
              i.prototype.add = function(t) {
                  this._num = Math.max(this._num + t, 0)
              }
              ,
              n(i, [{
                  key: "id",
                  get: function() {
                      return this._id
                  }
              }, {
                  key: "num",
                  get: function() {
                      return this._num
                  }
              }, {
                  key: "cfg",
                  get: function() {
                      return this._cfg
                  }
              }]),
              i
          }(a)) || u);
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MaterialPart.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./EntityPart.ts", "./EntityPartDef.ts", "./MaterialData.ts"], (function(t) {
  var a, e, r, i, n, s, l, u;
  return {
      setters: [function(t) {
          a = t.inheritsLoose,
          e = t.createClass,
          r = t.createForOfIteratorHelperLoose
      }
      , function(t) {
          i = t.cclegacy
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          s = t.EntityPartId,
          l = t.UserEventId
      }
      , function(t) {
          u = t.default
      }
      ],
      execute: function() {
          var o;
          i._RF.push({}, "a0e40GME5FISrHsw1Hw30Qu", "MaterialPart", void 0);
          t("default", set_class_name(s.MaterialPart)(o = function(t) {
              function i() {
                  for (var a, e = arguments.length, r = new Array(e), i = 0; i < e; i++)
                      r[i] = arguments[i];
                  return (a = t.call.apply(t, [this].concat(r)) || this)._materialMap = new Map,
                  a
              }
              a(i, t);
              var n = i.prototype;
              return n.refreshData = function(t) {
                  this.setMaterials(t.MTokens)
              }
              ,
              n.setMaterials = function(t) {
                  this._materialMap.clear();
                  for (var a = 0; a < t.length; ++a) {
                      var e = t[a]
                        , r = new u(e.ID,e.Num);
                      this._materialMap.set(r.id, r)
                  }
                  this.dispatch(l.MaterialChange)
              }
              ,
              n.getMaterialById = function(t) {
                  return this._materialMap.get(t)
              }
              ,
              n.add = function(t, a) {
                  var e = this._materialMap.get(t);
                  null == e ? (e = new u(t,a),
                  this._materialMap.set(e.id, e)) : e.add(a),
                  this.dispatch(l.MaterialChange)
              }
              ,
              n.addArray = function(t) {
                  for (var a = 0; a < t.length; ++a)
                      this.add(t[a].ID, t[a].Num)
              }
              ,
              n.removeByTID = function(t, a) {
                  var e = this._materialMap.get(t);
                  e.add(-a),
                  e.num <= 0 && this._materialMap.delete(t),
                  this.dispatch(l.MaterialChange)
              }
              ,
              e(i, [{
                  key: "materialMap",
                  get: function() {
                      return this._materialMap
                  }
              }, {
                  key: "materialArray",
                  get: function() {
                      for (var t, a = new Array, e = r(this.materialMap); !(t = e()).done; ) {
                          var i = t.value[1];
                          a.push(i)
                      }
                      return a
                  }
              }]),
              i
          }(n)) || o);
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MaterialTips.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./Client.ts", "./UIHelper.ts", "./UIRoot.ts", "./SessionMessage_Home.ts", "./LayerType.ts"], (function(t) {
  var e, i, n, u, a, o, r, l, s, c, y, p, b, B, g, h, f;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          n = t.initializerDefineProperty,
          u = t.assertThisInitialized
      }
      , function(t) {
          a = t.cclegacy,
          o = t.Button,
          r = t.Node,
          l = t.Label,
          s = t.RichText,
          c = t.Sprite,
          y = t.Vec3
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          b = t.default
      }
      , function(t) {
          B = t.default
      }
      , function(t) {
          g = t.default
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          f = t.Layer2DType
      }
      ],
      execute: function() {
          var d, m, C, P, S, I, w, z, N, j, T, k, v, D, F, M, x, L, E, R, A, U, _, q, H, W, Z, J, V, Y, G, K, O;
          a._RF.push({}, "f7817ZWcFtDZYkatlEJ1Ei4", "MaterialTips", void 0);
          t("default", (d = uiBind("fgui/login", "MaterialTips"),
          m = uiInject("Panel/CloseBtn", o),
          C = uiInject("Panel/ButtonLayout/SellBtn", o),
          P = uiInject("Panel", r),
          S = uiInject("Panel/Name", l),
          I = uiInject("Panel/Type", l),
          w = uiInject("Panel/Desc", s),
          z = uiInject("Panel/Equip/Icon", c),
          N = uiInject("Panel/Equip/Background", c),
          j = uiInject("Panel/Equip/Frame", c),
          T = uiInject("Panel/BuyPanel", r),
          k = uiInject("Panel/BuyPanel/NumSetting/SubButton", o),
          v = uiInject("Panel/BuyPanel/NumSetting/AddButton", o),
          D = uiInject("Panel/BuyPanel/NumSetting/Num", l),
          F = uiInject("Panel/BuyPanel/BuyButton", o),
          M = uiInject("Panel/BuyPanel/BuyButton/Num", l),
          d((E = e((L = function(t) {
              function e(e) {
                  var i;
                  return i = t.call(this, e) || this,
                  n(i, "CloseBtn", E, u(i)),
                  n(i, "SellBtn", R, u(i)),
                  n(i, "Panel", A, u(i)),
                  n(i, "Name", U, u(i)),
                  n(i, "Type", _, u(i)),
                  n(i, "Desc", q, u(i)),
                  n(i, "Icon", H, u(i)),
                  n(i, "Background", W, u(i)),
                  n(i, "Frame", Z, u(i)),
                  n(i, "BuyPanel", J, u(i)),
                  n(i, "SubButton", V, u(i)),
                  n(i, "AddButton", Y, u(i)),
                  n(i, "BuyNum", G, u(i)),
                  n(i, "BuyButton", K, u(i)),
                  n(i, "BuyPrice", O, u(i)),
                  i.data = void 0,
                  i.position = new y,
                  i.buyCurCount = 0,
                  i.buyMaxCount = 1e3,
                  i.buyState = 1,
                  i.price = void 0,
                  i.layer = f.UITips,
                  i
              }
              i(e, t);
              var a = e.prototype;
              return a.getPrototype = function() {
                  return e.prototype
              }
              ,
              a.onEnable = function() {
                  var t = this;
                  this.Panel.position = this.position,
                  this.Name.string = this.data.cfg.Name,
                  this.Background.spriteFrame = B.getItemLargeBackground(this.data.cfg.Rarity),
                  this.Frame.spriteFrame = B.getItemLargeFrame(this.data.cfg.Rarity),
                  this.Icon.spriteFrame = B.getMaterialIcon(this.data.cfg.Icon),
                  this.Desc.string = this.data.cfg.Desc,
                  this.BuyPanel.active = 1 == this.buyState,
                  this.SellBtn.node.active = 2 == this.buyState,
                  1 == this.buyState ? this.price = this.data.cfg.StoreSell : 2 == this.buyState ? this.price = this.data.cfg.StoreBuy : this.price = 0,
                  this.onClick(this.CloseBtn, (function() {
                      t.close()
                  }
                  ), !0),
                  this.onClick(this.SellBtn, (function() {
                      g.goodsBuyTips.setData(t.data, 1, t.data.num),
                      g.goodsBuyTips.closeCall(t, t.close),
                      g.goodsBuyTips.open()
                  }
                  ), !0),
                  this.BuyNum.string = this.buyCurCount.toString(),
                  this.BuyPrice.string = (this.buyCurCount * this.price).toString(),
                  this.onClick(this.SubButton, (function() {
                      t.buyCurCount -= 1,
                      t.buyCurCount < 1 && (t.buyCurCount = 1),
                      t.BuyNum.string = t.buyCurCount.toString(),
                      t.BuyPrice.string = (t.buyCurCount * t.price).toString()
                  }
                  ), !0),
                  this.onClick(this.AddButton, (function() {
                      t.buyCurCount += 1,
                      t.buyCurCount > t.buyMaxCount && (t.buyCurCount = t.buyMaxCount),
                      t.BuyNum.string = t.buyCurCount.toString(),
                      t.BuyPrice.string = (t.buyCurCount * t.price).toString()
                  }
                  ), !0),
                  this.onClick(this.BuyButton, (function() {
                      var e = t.data.id
                        , i = t.buyCurCount
                        , n = i * t.price;
                      -1 != b.user.data.money2.comparedTo(n) ? (h.storeBuy(e, i),
                      t.close()) : g.textTips.play("Need more money")
                  }
                  ), !0)
              }
              ,
              a.setData = function(t) {
                  this.data = t
              }
              ,
              a.setPosition = function(t) {
                  this.position.x = t.x,
                  this.position.y = t.y,
                  this.Panel && (this.Panel.position = this.position)
              }
              ,
              a.clear = function() {
                  this.buyState = 0
              }
              ,
              a.showBuy = function(t, e) {
                  this.buyCurCount = t,
                  this.buyMaxCount = e,
                  this.buyState = 1
              }
              ,
              a.showSell = function() {
                  this.buyState = 2
              }
              ,
              e
          }(p)).prototype, "CloseBtn", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          R = e(L.prototype, "SellBtn", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          A = e(L.prototype, "Panel", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          U = e(L.prototype, "Name", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          _ = e(L.prototype, "Type", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          q = e(L.prototype, "Desc", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          H = e(L.prototype, "Icon", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          W = e(L.prototype, "Background", [N], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Z = e(L.prototype, "Frame", [j], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          J = e(L.prototype, "BuyPanel", [T], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          V = e(L.prototype, "SubButton", [k], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Y = e(L.prototype, "AddButton", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          G = e(L.prototype, "BuyNum", [D], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          K = e(L.prototype, "BuyButton", [F], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          O = e(L.prototype, "BuyPrice", [M], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          x = L)) || x));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MateriaShopWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./UIListView.ts", "./Client.ts", "./MaterialData.ts", "./EquipView.ts", "./UIHelper.ts", "./UIRoot.ts", "./EntityPartDef.ts", "./LayerType.ts"], (function(t) {
  var e, i, o, n, a, r, s, l, u, d, c, p, h, g, y, f, m, L, b, v;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          o = t.initializerDefineProperty,
          n = t.assertThisInitialized
      }
      , function(t) {
          a = t.cclegacy,
          r = t.Button,
          s = t.Label,
          l = t.Node,
          u = t.Sprite,
          d = t.Vec3
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          p = t.UIListView
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          g = t.default
      }
      , function(t) {
          y = t.EquipView
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          m = t.default
      }
      , function(t) {
          L = t.EntityPartId,
          b = t.UserEventId
      }
      , function(t) {
          v = t.Layer2DType
      }
      ],
      execute: function() {
          var I, C, G, w, M, B, D, P, E, T, S, U, j, R, A, z, F;
          a._RF.push({}, "d2efaLH3cRFmr8SFlIjD20u", "MateriaShopWindow", void 0);
          t("default", (I = uiBind("fgui/login", "ForgeWindow"),
          C = uiInject("BagPanel/CloseBtn", r),
          G = uiInject("BagPanel/BagList", p),
          w = uiInject("Money2/Label", s),
          M = uiInject("GoodsPanel/GoodsLine01", l),
          B = uiInject("GoodsPanel/GoodsLine02", l),
          D = uiInject("GoodsPanel/GoodsLine03", l),
          P = listenEvent(L.UserPart),
          E = listenEvent(L.MaterialPart),
          I((U = e((S = function(t) {
              function e(e) {
                  var i;
                  return i = t.call(this, e) || this,
                  o(i, "CloseBtn", U, n(i)),
                  o(i, "BagList", j, n(i)),
                  o(i, "Money2", R, n(i)),
                  o(i, "GoodsLine01", A, n(i)),
                  o(i, "GoodsLine02", z, n(i)),
                  o(i, "GoodsLine03", F, n(i)),
                  i.goodsList = [],
                  i.goodsData = [],
                  i.materialArray = void 0,
                  i.layer = v.UIPopup,
                  i
              }
              i(e, t);
              var a = e.prototype;
              return a.getPrototype = function() {
                  return e.prototype
              }
              ,
              a.onEnable = function() {
                  var t = this;
                  this.onClick(this.CloseBtn, (function() {
                      t.close()
                  }
                  )),
                  this.Money2.string = "" + h.user.data.money2,
                  this.goodsData.length = 0;
                  var e = DataCenter.Material.GetTable();
                  for (var i in e)
                      9 != e[i].Type && this.goodsData.push(e[i].Id);
                  this.goodsList.length = 0,
                  this.addGoods(this.GoodsLine01),
                  this.addGoods(this.GoodsLine02),
                  this.addGoods(this.GoodsLine03);
                  for (var o = 0; o < this.goodsList.length; ++o)
                      this.goodsRenderer(o, this.goodsList[o]);
                  this.BagList.itemRenderer = this.itemRenderer.bind(this),
                  this.BagList.itemSelected = this.itemSelected.bind(this),
                  this.materialArray = h.material.materialArray,
                  this.BagList.numItems = Math.max(this.materialArray.length, 20)
              }
              ,
              a.onDisable = function() {}
              ,
              a.addGoods = function(t) {
                  for (var e = 0; e < 4; ++e)
                      this.goodsList.push(t.getChildByName("GoodsItem-00" + (e + 1)))
              }
              ,
              a.goodsRenderer = function(t, e) {
                  var i = this
                    , o = this.goodsData[t]
                    , n = DataCenter.Material.Get(o);
                  e.getChildByName("icon").getComponent(u).spriteFrame = f.getMaterialIcon(n.Icon),
                  e.getChildByPath("price/Label").getComponent(s).string = "" + n.StoreSell,
                  e.off(r.EventType.CLICK),
                  e.on(r.EventType.CLICK, (function() {
                      i.onGoodsClick(t)
                  }
                  ), this)
              }
              ,
              a.onGoodsClick = function(t) {
                  var e = this.goodsData[t]
                    , i = new g(e,1);
                  m.materialTips.setData(i),
                  m.materialTips.setPosition(new d(16,-14,0)),
                  m.materialTips.showBuy(1, 999),
                  m.materialTips.open()
              }
              ,
              a.itemRenderer = function(t, e) {
                  var i = this.materialArray[t]
                    , o = e.getComponent(y);
                  if (o.listen(null, null),
                  i) {
                      var n = i.cfg;
                      o.setIcon(f.getMaterialIcon(n.Icon)),
                      o.setCount(i.num),
                      o.setQuality(i.cfg.Rarity)
                  } else
                      o.setIcon(null),
                      o.setCountText(""),
                      o.setQuality(0)
              }
              ,
              a.itemSelected = function(t, e) {
                  var i = this.materialArray[t];
                  null != i && (m.materialTips.setData(i),
                  m.materialTips.setPosition(new d(16,-14,0)),
                  m.materialTips.showSell(),
                  m.materialTips.open())
              }
              ,
              a.onUserEvent = function(t, e, i, o, n) {
                  t == b.Money2Change && (this.Money2.string = "" + e)
              }
              ,
              a.onMaterialEvent = function(t, e, i, o, n) {
                  t == b.MaterialChange && (this.materialArray = h.material.materialArray,
                  this.BagList.numItems = Math.max(this.materialArray.length, 20))
              }
              ,
              e
          }(c)).prototype, "CloseBtn", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          j = e(S.prototype, "BagList", [G], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          R = e(S.prototype, "Money2", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          A = e(S.prototype, "GoodsLine01", [M], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          z = e(S.prototype, "GoodsLine02", [B], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          F = e(S.prototype, "GoodsLine03", [D], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          e(S.prototype, "onUserEvent", [P], Object.getOwnPropertyDescriptor(S.prototype, "onUserEvent"), S.prototype),
          e(S.prototype, "onMaterialEvent", [E], Object.getOwnPropertyDescriptor(S.prototype, "onMaterialEvent"), S.prototype),
          T = S)) || T));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MathSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts"], (function(n) {
  var t, r, e, a, o;
  return {
      setters: [function(n) {
          t = n.inheritsLoose
      }
      , function(n) {
          r = n.cclegacy,
          e = n.Vec2,
          a = n.Vec3
      }
      , function(n) {
          o = n.default
      }
      ],
      execute: function() {
          r._RF.push({}, "93da8a+TwlH6JNMYirYS6Ml", "MathSystem", void 0);
          n("default", function(n) {
              function r() {
                  for (var t, r = arguments.length, e = new Array(r), a = 0; a < r; a++)
                      e[a] = arguments[a];
                  return (t = n.call.apply(n, [this].concat(e)) || this).Radian2Angle = 180 / Math.PI,
                  t.Angle2Radian = Math.PI / 180,
                  t
              }
              t(r, n);
              var o = r.prototype;
              return o.getAngle = function(n) {
                  return n * this.Radian2Angle
              }
              ,
              o.getRadian = function(n) {
                  return n * this.Angle2Radian
              }
              ,
              o.getRadianTwoPoint = function(n, t) {
                  var r = t.x - n.x
                    , e = t.y - n.y;
                  return Math.atan2(e, r)
              }
              ,
              o.getAngleTwoPoint = function(n, t) {
                  var r, e = t.y - n.y, a = t.x - n.x;
                  return 0 == e ? a < 0 ? 180 : 0 : 0 == a ? (e > 0 ? r = 90 : e < 0 && (r = 270),
                  r) : (r = this.getAngle(Math.atan(Math.abs(e) / Math.abs(a))),
                  a > 0 ? e < 0 && (r = 360 - r) : r = e > 0 ? 180 - r : 180 + r,
                  r)
              }
              ,
              o.rand = function(n) {
                  return (n = (9301 * n + 49297) % 233280) / 233280
              }
              ,
              o.random = function(n, t) {
                  return n + Math.random() * (t - n)
              }
              ,
              o.randomInt = function(n, t) {
                  var r = n + Math.floor(Math.random() * (t - n + 1));
                  return r > t && (r = t),
                  r
              }
              ,
              o.randomBox2d = function(n, t) {
                  var r = this.random(n.x, t.x)
                    , a = this.random(n.y, t.y);
                  return new e(r,a)
              }
              ,
              o.randomBox3d = function(n, t) {
                  var r = this.random(n.x, t.x)
                    , e = this.random(n.y, t.y)
                    , o = this.random(n.z, t.z);
                  return new a(r,e,o)
              }
              ,
              o.randomRolls = function(n, t, r, e) {
                  for (var a = new Array, o = Math.floor(n / t), u = 0, i = 0; i < t; ++i) {
                      var s = o;
                      i < t - 1 && (u += s),
                      a.push(s)
                  }
                  return u = n - u,
                  a[this.randomInt(0, t - 1)] = u,
                  a
              }
              ,
              o.uint16Tobytes = function(n) {
                  if (!n)
                      return [0, 0];
                  var t = [];
                  for (t.push(255 & n); n >= 256; )
                      n >>>= 8,
                      t.push(255 & n);
                  for (; t.length < 2; )
                      t.push(0);
                  return t
              }
              ,
              o.uint32Tobytes = function(n) {
                  if (!n)
                      return [0, 0];
                  var t = [];
                  for (t.push(255 & n); n >= 256; )
                      n >>>= 8,
                      t.push(255 & n);
                  for (; t.length < 4; )
                      t.push(0);
                  return t
              }
              ,
              o.plus = function(n, t) {
                  var r = new a;
                  return n && (r.x += n.x,
                  r.y += n.y,
                  r.z += n instanceof a ? n.z : 0),
                  t && (r.x += t.x,
                  r.y += t.y,
                  r.z += t instanceof a ? t.z : 0),
                  r
              }
              ,
              o.minus = function(n, t) {
                  var r = new a;
                  return n && (r.x -= n.x,
                  r.y -= n.y,
                  r.z -= n instanceof a ? n.z : 0),
                  t && (r.x -= t.x,
                  r.y -= t.y,
                  r.z -= t instanceof a ? t.z : 0),
                  r
              }
              ,
              o.lerp = function(n, t, r) {
                  return n + (t - n) * r
              }
              ,
              o.getBezierCutAngle = function(n, t, r, e) {
                  var a = 2 * (n.x * (e - 1) + t.x * (1 - 2 * e) + r.x * e)
                    , o = 2 * (n.y * (e - 1) + t.y * (1 - 2 * e) + r.y * e);
                  return this.getAngle(Math.atan2(o, a))
              }
              ,
              o.getBezierPoint = function(n, t, r, a, o) {
                  return (o = o || new e).x = (1 - a) * (1 - a) * n.x + 2 * a * (1 - a) * t.x + a * a * r.x,
                  o.y = (1 - a) * (1 - a) * n.y + 2 * a * (1 - a) * t.y + a * a * r.y,
                  o
              }
              ,
              o.getBezier3Point = function(n, t, r, a, o, u) {
                  u = u || new e;
                  var i = 3 * (t.x - n.x)
                    , s = 3 * (r.x - t.x) - i
                    , y = a.x - n.x - i - s
                    , c = 3 * (t.y - n.y)
                    , f = 3 * (r.y - t.y) - c
                    , h = a.y - n.y - c - f;
                  return u.x = y * o * o * o + s * o * o + i * o + n.x,
                  u.y = h * o * o * o + f * o * o + c * o + n.y,
                  u
              }
              ,
              o.getBezier3CutAngle = function(n, t, r, e, a) {
                  var o = 3 * n.x * (1 - a) * (1 - a) * -1 + 3 * t.x * ((1 - a) * (1 - a) + 2 * a * (1 - a) * -1) + 3 * r.x * (2 * a * (1 - a) + a * a * -1) + 3 * e.x * a * a
                    , u = 3 * n.y * (1 - a) * (1 - a) * -1 + 3 * t.y * ((1 - a) * (1 - a) + 2 * a * (1 - a) * -1) + 3 * r.y * (2 * a * (1 - a) + a * a * -1) + 3 * e.y * a * a;
                  return this.getAngle(Math.atan2(u, o))
              }
              ,
              o.getBezierPoint3 = function(n, t, r, e, o) {
                  return (o = o || new a).x = (1 - e) * (1 - e) * n.x + 2 * e * (1 - e) * t.x + e * e * r.x,
                  o.y = (1 - e) * (1 - e) * n.y + 2 * e * (1 - e) * t.y + e * e * r.y,
                  o
              }
              ,
              o.intToBytes = function(n) {
                  return [255 & n, n >> 8 & 255]
              }
              ,
              o.bytesToInt = function(n) {
                  return n[0] | n[1] << 8
              }
              ,
              o.moveTowards = function(n, t, r) {
                  var e = new a;
                  a.subtract(e, t, n);
                  var o = e.length();
                  if (o <= r || Math.abs(o) <= .001)
                      return t;
                  var u = 1 / o * r
                    , i = new a;
                  return a.multiplyScalar(i, e, u),
                  a.add(i, e, n),
                  i
              }
              ,
              o.moveTowards2 = function(n, t, r) {
                  var a = new e;
                  e.subtract(a, t, n);
                  var o = a.length();
                  if (o <= r || Math.abs(o) <= .001)
                      return t;
                  var u = 1 / o * r
                    , i = new e;
                  return e.multiplyScalar(i, a, u),
                  e.add(i, a, n),
                  i
              }
              ,
              r
          }(o()));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Md5.ts", ["cc"], (function(t) {
  var r;
  return {
      setters: [function(t) {
          r = t.cclegacy
      }
      ],
      execute: function() {
          r._RF.push({}, "b4925rECShMkbqd+FaoUG+a", "Md5", void 0);
          t("default", function() {
              function t() {
                  this.hexcase = 0,
                  this.b64pad = ""
              }
              var r = t.prototype;
              return r.hex_md5 = function(t) {
                  return this.rstr2hex(this.rstr_md5(this.str2rstr_utf8(t)))
              }
              ,
              r.b64_md5 = function(t) {
                  return this.rstr2b64(this.rstr_md5(this.str2rstr_utf8(t)))
              }
              ,
              r.any_md5 = function(t, r) {
                  return this.rstr2any(this.rstr_md5(this.str2rstr_utf8(t)), r)
              }
              ,
              r.hex_hmac_md5 = function(t, r) {
                  return this.rstr2hex(this.rstr_hmac_md5(this.str2rstr_utf8(t), this.str2rstr_utf8(r)))
              }
              ,
              r.b64_hmac_md5 = function(t, r) {
                  return this.rstr2b64(this.rstr_hmac_md5(this.str2rstr_utf8(t), this.str2rstr_utf8(r)))
              }
              ,
              r.any_hmac_md5 = function(t, r, h) {
                  return this.rstr2any(this.rstr_hmac_md5(this.str2rstr_utf8(t), this.str2rstr_utf8(r)), h)
              }
              ,
              r.md5_vm_test = function() {
                  return "900150983cd24fb0d6963f7d28e17f72" == this.hex_md5("abc").toLowerCase()
              }
              ,
              r.rstr_md5 = function(t) {
                  return this.binl2rstr(this.binl_md5(this.rstr2binl(t), 8 * t.length))
              }
              ,
              r.rstr_hmac_md5 = function(t, r) {
                  var h = this.rstr2binl(t);
                  h.length > 16 && (h = this.binl_md5(h, 8 * t.length));
                  for (var i = Array(16), s = Array(16), d = 0; d < 16; d++)
                      i[d] = 909522486 ^ h[d],
                      s[d] = 1549556828 ^ h[d];
                  var n = this.binl_md5(i.concat(this.rstr2binl(r)), 512 + 8 * r.length);
                  return this.binl2rstr(this.binl_md5(s.concat(n), 640))
              }
              ,
              r.rstr2hex = function(t) {
                  try {
                      this.hexcase
                  } catch (t) {
                      this.hexcase = 0
                  }
                  for (var r, h = this.hexcase ? "0123456789ABCDEF" : "0123456789abcdef", i = "", s = 0; s < t.length; s++)
                      r = t.charCodeAt(s),
                      i += h.charAt(r >>> 4 & 15) + h.charAt(15 & r);
                  return i
              }
              ,
              r.rstr2b64 = function(t) {
                  try {
                      this.b64pad
                  } catch (t) {
                      this.b64pad = ""
                  }
                  for (var r = "", h = t.length, i = 0; i < h; i += 3)
                      for (var s = t.charCodeAt(i) << 16 | (i + 1 < h ? t.charCodeAt(i + 1) << 8 : 0) | (i + 2 < h ? t.charCodeAt(i + 2) : 0), d = 0; d < 4; d++)
                          8 * i + 6 * d > 8 * t.length ? r += this.b64pad : r += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(s >>> 6 * (3 - d) & 63);
                  return r
              }
              ,
              r.rstr2any = function(t, r) {
                  var h, i, s, d, n, _ = r.length, e = Array(Math.ceil(t.length / 2));
                  for (h = 0; h < e.length; h++)
                      e[h] = t.charCodeAt(2 * h) << 8 | t.charCodeAt(2 * h + 1);
                  var m = Math.ceil(8 * t.length / (Math.log(r.length) / Math.log(2)))
                    , f = Array(m);
                  for (i = 0; i < m; i++) {
                      for (n = Array(),
                      d = 0,
                      h = 0; h < e.length; h++)
                          d = (d << 16) + e[h],
                          d -= (s = Math.floor(d / _)) * _,
                          (n.length > 0 || s > 0) && (n[n.length] = s);
                      f[i] = d,
                      e = n
                  }
                  var a = "";
                  for (h = f.length - 1; h >= 0; h--)
                      a += r.charAt(f[h]);
                  return a
              }
              ,
              r.str2rstr_utf8 = function(t) {
                  for (var r, h, i = "", s = -1; ++s < t.length; )
                      r = t.charCodeAt(s),
                      h = s + 1 < t.length ? t.charCodeAt(s + 1) : 0,
                      55296 <= r && r <= 56319 && 56320 <= h && h <= 57343 && (r = 65536 + ((1023 & r) << 10) + (1023 & h),
                      s++),
                      r <= 127 ? i += String.fromCharCode(r) : r <= 2047 ? i += String.fromCharCode(192 | r >>> 6 & 31, 128 | 63 & r) : r <= 65535 ? i += String.fromCharCode(224 | r >>> 12 & 15, 128 | r >>> 6 & 63, 128 | 63 & r) : r <= 2097151 && (i += String.fromCharCode(240 | r >>> 18 & 7, 128 | r >>> 12 & 63, 128 | r >>> 6 & 63, 128 | 63 & r));
                  return i
              }
              ,
              r.str2rstr_utf16le = function(t) {
                  for (var r = "", h = 0; h < t.length; h++)
                      r += String.fromCharCode(255 & t.charCodeAt(h), t.charCodeAt(h) >>> 8 & 255);
                  return r
              }
              ,
              r.str2rstr_utf16be = function(t) {
                  for (var r = "", h = 0; h < t.length; h++)
                      r += String.fromCharCode(t.charCodeAt(h) >>> 8 & 255, 255 & t.charCodeAt(h));
                  return r
              }
              ,
              r.rstr2binl = function(t) {
                  for (var r = Array(t.length >> 2), h = 0; h < r.length; h++)
                      r[h] = 0;
                  for (h = 0; h < 8 * t.length; h += 8)
                      r[h >> 5] |= (255 & t.charCodeAt(h / 8)) << h % 32;
                  return r
              }
              ,
              r.binl2rstr = function(t) {
                  for (var r = "", h = 0; h < 32 * t.length; h += 8)
                      r += String.fromCharCode(t[h >> 5] >>> h % 32 & 255);
                  return r
              }
              ,
              r.binl_md5 = function(t, r) {
                  t[r >> 5] |= 128 << r % 32,
                  t[14 + (r + 64 >>> 9 << 4)] = r;
                  for (var h = 1732584193, i = -271733879, s = -1732584194, d = 271733878, n = 0; n < t.length; n += 16) {
                      var _ = h
                        , e = i
                        , m = s
                        , f = d;
                      h = this.md5_ff(h, i, s, d, t[n + 0], 7, -680876936),
                      d = this.md5_ff(d, h, i, s, t[n + 1], 12, -389564586),
                      s = this.md5_ff(s, d, h, i, t[n + 2], 17, 606105819),
                      i = this.md5_ff(i, s, d, h, t[n + 3], 22, -1044525330),
                      h = this.md5_ff(h, i, s, d, t[n + 4], 7, -176418897),
                      d = this.md5_ff(d, h, i, s, t[n + 5], 12, 1200080426),
                      s = this.md5_ff(s, d, h, i, t[n + 6], 17, -1473231341),
                      i = this.md5_ff(i, s, d, h, t[n + 7], 22, -45705983),
                      h = this.md5_ff(h, i, s, d, t[n + 8], 7, 1770035416),
                      d = this.md5_ff(d, h, i, s, t[n + 9], 12, -1958414417),
                      s = this.md5_ff(s, d, h, i, t[n + 10], 17, -42063),
                      i = this.md5_ff(i, s, d, h, t[n + 11], 22, -1990404162),
                      h = this.md5_ff(h, i, s, d, t[n + 12], 7, 1804603682),
                      d = this.md5_ff(d, h, i, s, t[n + 13], 12, -40341101),
                      s = this.md5_ff(s, d, h, i, t[n + 14], 17, -1502002290),
                      i = this.md5_ff(i, s, d, h, t[n + 15], 22, 1236535329),
                      h = this.md5_gg(h, i, s, d, t[n + 1], 5, -165796510),
                      d = this.md5_gg(d, h, i, s, t[n + 6], 9, -1069501632),
                      s = this.md5_gg(s, d, h, i, t[n + 11], 14, 643717713),
                      i = this.md5_gg(i, s, d, h, t[n + 0], 20, -373897302),
                      h = this.md5_gg(h, i, s, d, t[n + 5], 5, -701558691),
                      d = this.md5_gg(d, h, i, s, t[n + 10], 9, 38016083),
                      s = this.md5_gg(s, d, h, i, t[n + 15], 14, -660478335),
                      i = this.md5_gg(i, s, d, h, t[n + 4], 20, -405537848),
                      h = this.md5_gg(h, i, s, d, t[n + 9], 5, 568446438),
                      d = this.md5_gg(d, h, i, s, t[n + 14], 9, -1019803690),
                      s = this.md5_gg(s, d, h, i, t[n + 3], 14, -187363961),
                      i = this.md5_gg(i, s, d, h, t[n + 8], 20, 1163531501),
                      h = this.md5_gg(h, i, s, d, t[n + 13], 5, -1444681467),
                      d = this.md5_gg(d, h, i, s, t[n + 2], 9, -51403784),
                      s = this.md5_gg(s, d, h, i, t[n + 7], 14, 1735328473),
                      i = this.md5_gg(i, s, d, h, t[n + 12], 20, -1926607734),
                      h = this.md5_hh(h, i, s, d, t[n + 5], 4, -378558),
                      d = this.md5_hh(d, h, i, s, t[n + 8], 11, -2022574463),
                      s = this.md5_hh(s, d, h, i, t[n + 11], 16, 1839030562),
                      i = this.md5_hh(i, s, d, h, t[n + 14], 23, -35309556),
                      h = this.md5_hh(h, i, s, d, t[n + 1], 4, -1530992060),
                      d = this.md5_hh(d, h, i, s, t[n + 4], 11, 1272893353),
                      s = this.md5_hh(s, d, h, i, t[n + 7], 16, -155497632),
                      i = this.md5_hh(i, s, d, h, t[n + 10], 23, -1094730640),
                      h = this.md5_hh(h, i, s, d, t[n + 13], 4, 681279174),
                      d = this.md5_hh(d, h, i, s, t[n + 0], 11, -358537222),
                      s = this.md5_hh(s, d, h, i, t[n + 3], 16, -722521979),
                      i = this.md5_hh(i, s, d, h, t[n + 6], 23, 76029189),
                      h = this.md5_hh(h, i, s, d, t[n + 9], 4, -640364487),
                      d = this.md5_hh(d, h, i, s, t[n + 12], 11, -421815835),
                      s = this.md5_hh(s, d, h, i, t[n + 15], 16, 530742520),
                      i = this.md5_hh(i, s, d, h, t[n + 2], 23, -995338651),
                      h = this.md5_ii(h, i, s, d, t[n + 0], 6, -198630844),
                      d = this.md5_ii(d, h, i, s, t[n + 7], 10, 1126891415),
                      s = this.md5_ii(s, d, h, i, t[n + 14], 15, -1416354905),
                      i = this.md5_ii(i, s, d, h, t[n + 5], 21, -57434055),
                      h = this.md5_ii(h, i, s, d, t[n + 12], 6, 1700485571),
                      d = this.md5_ii(d, h, i, s, t[n + 3], 10, -1894986606),
                      s = this.md5_ii(s, d, h, i, t[n + 10], 15, -1051523),
                      i = this.md5_ii(i, s, d, h, t[n + 1], 21, -2054922799),
                      h = this.md5_ii(h, i, s, d, t[n + 8], 6, 1873313359),
                      d = this.md5_ii(d, h, i, s, t[n + 15], 10, -30611744),
                      s = this.md5_ii(s, d, h, i, t[n + 6], 15, -1560198380),
                      i = this.md5_ii(i, s, d, h, t[n + 13], 21, 1309151649),
                      h = this.md5_ii(h, i, s, d, t[n + 4], 6, -145523070),
                      d = this.md5_ii(d, h, i, s, t[n + 11], 10, -1120210379),
                      s = this.md5_ii(s, d, h, i, t[n + 2], 15, 718787259),
                      i = this.md5_ii(i, s, d, h, t[n + 9], 21, -343485551),
                      h = this.safe_add(h, _),
                      i = this.safe_add(i, e),
                      s = this.safe_add(s, m),
                      d = this.safe_add(d, f)
                  }
                  return [h, i, s, d]
              }
              ,
              r.md5_cmn = function(t, r, h, i, s, d) {
                  return this.safe_add(this.bit_rol(this.safe_add(this.safe_add(r, t), this.safe_add(i, d)), s), h)
              }
              ,
              r.md5_ff = function(t, r, h, i, s, d, n) {
                  return this.md5_cmn(r & h | ~r & i, t, r, s, d, n)
              }
              ,
              r.md5_gg = function(t, r, h, i, s, d, n) {
                  return this.md5_cmn(r & i | h & ~i, t, r, s, d, n)
              }
              ,
              r.md5_hh = function(t, r, h, i, s, d, n) {
                  return this.md5_cmn(r ^ h ^ i, t, r, s, d, n)
              }
              ,
              r.md5_ii = function(t, r, h, i, s, d, n) {
                  return this.md5_cmn(h ^ (r | ~i), t, r, s, d, n)
              }
              ,
              r.safe_add = function(t, r) {
                  var h = (65535 & t) + (65535 & r);
                  return (t >> 16) + (r >> 16) + (h >> 16) << 16 | 65535 & h
              }
              ,
              r.bit_rol = function(t, r) {
                  return t << r | t >>> 32 - r
              }
              ,
              t
          }());
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MediatorBase.ts", ["cc"], (function() {
  var t;
  return {
      setters: [function(e) {
          t = e.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "fb6f9+vwAtBIIstvko1Mhru", "MediatorBase", void 0),
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MeleeLightningTrigger.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./MeleeTrigger.ts", "./CreatureManager.ts", "./CreatureView.ts", "./Kit.ts", "./CreatureType.ts", "./BattleDef.ts"], (function(e) {
  var t, n, i, r, a, o, l, u, s, g, c, p, f, h, b;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          n = e.inheritsLoose,
          i = e.initializerDefineProperty,
          r = e.assertThisInitialized
      }
      , function(e) {
          a = e.cclegacy,
          o = e._decorator,
          l = e.CCFloat,
          u = e.CCInteger,
          s = e.Vec3
      }
      , function(e) {
          g = e.default
      }
      , function(e) {
          c = e.default
      }
      , function(e) {
          p = e.default
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          h = e.CreatureType
      }
      , function(e) {
          b = e.AtkObjType
      }
      ],
      execute: function() {
          var d, y, C, w, v, T, L, M, x, P, m, D;
          a._RF.push({}, "3b785iMlPRGDKGthNrT6bc3", "MeleeLightningTrigger", void 0);
          var E = o.ccclass
            , V = o.property;
          e("default", (d = E("MeleeLightningTrigger"),
          y = V({
              type: l
          }),
          C = V({
              type: l
          }),
          w = V({
              type: u
          }),
          v = V({
              type: u
          }),
          d((M = t((L = function(e) {
              function t() {
                  for (var t, n = arguments.length, a = new Array(n), o = 0; o < n; o++)
                      a[o] = arguments[o];
                  return t = e.call.apply(e, [this].concat(a)) || this,
                  i(t, "bulletPath", M, r(t)),
                  i(t, "bulletSpeed", x, r(t)),
                  i(t, "radius", P, r(t)),
                  i(t, "targetCount", m, r(t)),
                  i(t, "repetitionCount", D, r(t)),
                  t
              }
              n(t, e);
              var a = t.prototype;
              return a.onInit = function() {
                  var e = this.owner.data;
                  if (null != e) {
                      var t = e.getWeaponID()
                        , n = DataCenter.Weapon.Get(t);
                      null != n.ExtraValues && n.ExtraValues.length > 0 && 6 == n.ExtraValues[0] && (this.targetCount = n.ExtraValues[1],
                      this.repetitionCount = n.ExtraValues[2],
                      this.radius = n.ExtraValues[3])
                  }
              }
              ,
              a.beginContact = function(e, t, n) {
                  var i = this;
                  console.log("MeleeLightningTrigger:beginContact");
                  var r = t.getComponent(p);
                  if (r && r.owner && r.owner.isLive) {
                      var a = r.owner
                        , o = new s(a.position);
                      f.action.delayCall(1, this, (function() {
                          i.createLightningBall(a, o)
                      }
                      ))
                  }
              }
              ,
              a.stayContact = function(e, t, n) {
                  console.log("MeleeLightningTrigger:stayContact")
              }
              ,
              a.endedContact = function(e, t, n) {
                  console.log("MeleeLightningTrigger:endedContact")
              }
              ,
              a.createLightningBall = function(e, t) {
                  var n = this.owner.getOwnerPlr().type == h.Player ? this.owner.data : this.owner.getOwnerPlr().context.data;
                  if (null != n && (n.getAOType() != b.Monster || null != n.getCfg())) {
                      for (var i = c.ins.getCreatures(h.Enemy), r = this.radius, a = this.radius * this.radius, o = new Array, l = 0; l < i.length; ++l) {
                          var u = i[l];
                          if (u.isLive && u != e) {
                              var s = u.position
                                , g = s.x - t.x
                                , p = s.y - t.y;
                              if (g > -r && g < r && p > -r && p < r)
                                  if (g * g + p * p < a && (o.push(u),
                                  o.length >= this.targetCount))
                                      break
                          }
                      }
                      for (var f = 0; f < o.length; ++f) {
                          var d = c.ins.createShuriken(this.bulletPath, t, this.owner.getOwnerPlr(), this.owner, o[f], n);
                          d.setUpdateDirEnable(!0),
                          d.setSpeed(this.bulletSpeed),
                          d.setRepetitionProbability(100),
                          d.setRepetitionMaxCount(this.repetitionCount),
                          d.setRadius(this.radius)
                      }
                  }
              }
              ,
              t
          }(g)).prototype, "bulletPath", [V], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return "weapon/prefabs/bullet001"
              }
          }),
          x = t(L.prototype, "bulletSpeed", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 500
              }
          }),
          P = t(L.prototype, "radius", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 500
              }
          }),
          m = t(L.prototype, "targetCount", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 5
              }
          }),
          D = t(L.prototype, "repetitionCount", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 5
              }
          }),
          T = L)) || T));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MeleeTrigger.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(e) {
  var n, t, o, r;
  return {
      setters: [function(e) {
          n = e.inheritsLoose
      }
      , function(e) {
          t = e.cclegacy,
          o = e._decorator,
          r = e.Component
      }
      ],
      execute: function() {
          var c;
          t._RF.push({}, "f388csSVuhCvp+1sIdYI5zC", "MeleeTrigger", void 0);
          var i = o.ccclass;
          o.property,
          e("default", i("MeleeTrigger")(c = function(e) {
              function t() {
                  for (var n, t = arguments.length, o = new Array(t), r = 0; r < t; r++)
                      o[r] = arguments[r];
                  return (n = e.call.apply(e, [this].concat(o)) || this).owner = void 0,
                  n
              }
              n(t, e);
              var o = t.prototype;
              return o.setOwner = function(e) {
                  this.owner = e,
                  this.onInit()
              }
              ,
              o.onInit = function() {}
              ,
              o.beginContact = function(e, n, t) {
                  console.log("MeleeTrigger:beginContact")
              }
              ,
              o.stayContact = function(e, n, t) {
                  console.log("MeleeTrigger:stayContact")
              }
              ,
              o.endedContact = function(e, n, t) {
                  console.log("MeleeTrigger:endedContact")
              }
              ,
              t
          }(r)) || c);
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MeleeWeapon.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Weapon.ts", "./WeaponState.ts", "./Creature.ts", "./CreatureManager.ts", "./Kit.ts", "./ResList.ts", "./CreatureView.ts", "./MeleeTrigger.ts", "./EffectManager.ts", "./Bomb.ts"], (function(t) {
  var e, i, n, o, a, r, s, l, u, c, h, p, d, f, g, y, b, C, A, B;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          n = t.initializerDefineProperty,
          o = t.assertThisInitialized
      }
      , function(t) {
          a = t.cclegacy,
          r = t._decorator,
          s = t.CCString,
          l = t.CCFloat,
          u = t.Contact2DType,
          c = t.Vec3
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          p = t.WeaponAttackState
      }
      , function(t) {
          d = t.default
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          g = t.default
      }
      , function(t) {
          y = t.default
      }
      , function(t) {
          b = t.default
      }
      , function(t) {
          C = t.default
      }
      , function(t) {
          A = t.default
      }
      , function(t) {
          B = t.default
      }
      ],
      execute: function() {
          var k, m, x, v, w, S, E, T, _, H, O;
          a._RF.push({}, "6016foNAfZO1pMrZNrW45qO", "MeleeWeapon", void 0);
          var D = r.ccclass
            , M = r.property;
          t("default", (k = D("MeleeWeapon"),
          m = M({
              type: C
          }),
          x = M({
              type: s
          }),
          v = M({
              type: l
          }),
          w = M({
              type: String
          }),
          k((T = e((E = function(t) {
              function e() {
                  for (var e, i = arguments.length, a = new Array(i), r = 0; r < i; r++)
                      a[r] = arguments[r];
                  return e = t.call.apply(t, [this].concat(a)) || this,
                  n(e, "trigger", T, o(e)),
                  n(e, "explodeAssetPath", _, o(e)),
                  n(e, "explodeDuration", H, o(e)),
                  n(e, "explodeAudio", O, o(e)),
                  e.grid = void 0,
                  e.isHit = void 0,
                  e.bombAtkBatch = null,
                  e.explodeEnable = !1,
                  e
              }
              i(e, t);
              var a = e.prototype;
              return a.init = function() {
                  t.prototype.init.call(this),
                  this.trigger && this.trigger.setOwner(this)
              }
              ,
              a.onEnable = function() {
                  this.collider.on(u.BEGIN_CONTACT, this.onBeginContact, this),
                  this.collider.on(u.STAY_CONTACT, this.onStayContact, this)
              }
              ,
              a.onDisable = function() {
                  this.collider.off(u.BEGIN_CONTACT, this.onBeginContact, this),
                  this.collider.off(u.STAY_CONTACT, this.onStayContact, this),
                  null != this.grid && (g.res.recycle(this.grid),
                  this.grid = null)
              }
              ,
              a.onAttackBegin = function() {
                  this.isHit = !1,
                  this.explodeEnable = !1,
                  null != this.atkBatch && (this.atkBatch.destory(),
                  this.atkBatch = null),
                  this.atkBatch = f.ins.generateAtkBatch(this.data)
              }
              ,
              a.onBeginContact = function(t, e, i) {
                  if (this.attackState == p.Running) {
                      this.isHit || (g.sound.playSound(y.sound_hit.path),
                      this.isHit = !0);
                      var n = e.getComponent(b);
                      n && n.owner instanceof d && n.owner.isLive && (n.owner.damageCrt(this.atkBatch),
                      this.playExplode()),
                      this.trigger && this.trigger.beginContact(t, e, i)
                  }
              }
              ,
              a.onStayContact = function(t, e, i) {
                  if (this.attackState == p.Running) {
                      this.isHit || (g.sound.playSound(y.sound_hit.path),
                      this.isHit = !0);
                      var n = e.getComponent(b);
                      n && n.owner instanceof d && n.owner.isLive && (n.owner.damageCrt(this.atkBatch),
                      this.playExplode()),
                      this.trigger && this.trigger.stayContact(t, e, i)
                  }
              }
              ,
              a.onEndedContact = function(t, e, i) {
                  if (this.attackState == p.Running) {
                      this.isHit || (g.sound.playSound(y.sound_hit.path),
                      this.isHit = !0);
                      var n = e.getComponent(b);
                      n && n.owner instanceof d && n.owner.isLive && n.owner.damageCrt(this.atkBatch),
                      this.trigger && this.trigger.endedContact(t, e, i)
                  }
              }
              ,
              a.playExplode = function() {
                  var t = this;
                  if (!g.utils.isEmpty(this.explodeAssetPath) && !this.explodeEnable) {
                      this.explodeEnable = !0;
                      var e = this
                        , i = this.getOwnerPlr()
                        , n = c.ZERO
                        , o = this.explodeAssetPath
                        , a = 1e3 * this.explodeDuration;
                      A.ins.playFixed(o, n, null, null, i.node, a, g.handler(this, (function(n) {
                          var o = n.getComponent(B);
                          null != t.bombAtkBatch && (t.bombAtkBatch.destory(),
                          t.bombAtkBatch = null),
                          t.bombAtkBatch = f.ins.generateAtkBatchEx(t.atkBatch),
                          o.play(i, e, t.bombAtkBatch),
                          g.utils.isEmpty(t.explodeAudio) || g.sound.playSound(t.explodeAudio)
                      }
                      )))
                  }
              }
              ,
              e
          }(h)).prototype, "trigger", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          _ = e(E.prototype, "explodeAssetPath", [x], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return ""
              }
          }),
          H = e(E.prototype, "explodeDuration", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          O = e(E.prototype, "explodeAudio", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return ""
              }
          }),
          S = E)) || S));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MergeUtils.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(e) {
  var t, r;
  return {
      setters: [function(e) {
          t = e.createForOfIteratorHelperLoose
      }
      , function(e) {
          r = e.cclegacy
      }
      ],
      execute: function() {
          r._RF.push({}, "caa8b9sYI9IYY/eKILhzleI", "MergeUtils", void 0);
          var i = e("default", function() {
              function e() {}
              return e.init = function() {
                  if (null == this.dict) {
                      this.dict = new Map;
                      var e = DataCenter.Equipment.GetTable();
                      for (var t in e) {
                          var r = e[t].Merge;
                          null != r && r.length > 0 && (r.sort(),
                          this.dict.set(parseInt(t), r))
                      }
                  }
              }
              ,
              e.check = function(e, r) {
                  for (var i, n = t(this.dict); !(i = n()).done; ) {
                      var a = i.value[1]
                        , u = a.indexOf(r);
                      if (-1 != u) {
                          var l;
                          this.tempB.splice(0, this.tempB.length),
                          (l = this.tempB).push.apply(l, a),
                          this.tempB.splice(u, 1);
                          for (var s = !0, c = 0; c < e.length; ++c) {
                              var o = this.tempB.indexOf(e[c]);
                              if (-1 == o) {
                                  s = !1;
                                  break
                              }
                              this.tempB.splice(o, 1)
                          }
                          if (s)
                              return !0
                      }
                  }
                  return !1
              }
              ,
              e.getUpgradeEquip = function(e) {
                  for (var r, i = t(this.dict); !(r = i()).done; ) {
                      for (var n = r.value, a = n[1], u = !0, l = 0; l < a.length; ++l)
                          if (a[l] != e[l]) {
                              u = !1;
                              break
                          }
                      if (u)
                          return n[0]
                  }
                  return null
              }
              ,
              e.getUpgradeEquipById = function(e) {
                  for (var r, i = t(this.dict); !(r = i()).done; ) {
                      var n = r.value;
                      if (-1 != n[1].indexOf(e))
                          return n[0]
                  }
                  return null
              }
              ,
              e
          }());
          i.dict = void 0,
          i.tempA = new Array,
          i.tempB = new Array,
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MessageId.ts", ["cc"], (function(e) {
  var t;
  return {
      setters: [function(e) {
          t = e.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "57982sN1chEJbRg05wX5L+V", "MessageId", void 0);
          var a = e("default", (function() {}
          ));
          a.LoginLogin = 1,
          a.LoginFail = 2,
          a.LogicGMCmd = 16,
          a.LogicSetMain = 17,
          a.LogicVitUpdate = 18,
          a.LogicSetSetting = 19,
          a.LogicActivityUpdate = 20,
          a.LogicPass = 21,
          a.LogicCoin = 22,
          a.HeroVitUpdate = 32,
          a.StoreBuy = 40,
          a.StoreSell = 41,
          a.StoreChest = 42,
          a.EquipmentMerge = 48,
          a.EquipmentLink = 49,
          a.EquipmentRepair = 50,
          a.GameStart = 64,
          a.GameLoaded = 65,
          a.GameDone = 66,
          a.GamePause = 67,
          a.GameShopOperate = 68,
          a.GameQuit = 69,
          a.GameSpawn = 70,
          a.GameHeartbeat = 71,
          a.GameMonsterAtk = 72,
          a.GameCharAtk = 73,
          a.GamePick = 74,
          a.GameDmgEx = 75,
          a.GameWeaponUpdate = 76,
          a.GameLifeRecover = 77,
          a.GameBossSkill = 78,
          a.CommonClientErr = 128,
          a.CommonHeartbeat = 129,
          a.ResponseDesc = 130,
          a.CommonHandShake = 131,
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MessageIdProtocol.ts", ["cc", "./MessageId.ts", "./proto.mjs_cjs=&original=.js", "./proto.js"], (function(e) {
  var o, d, c;
  return {
      setters: [function(e) {
          o = e.cclegacy
      }
      , function(e) {
          d = e.default
      }
      , null, function(e) {
          c = e.default
      }
      ],
      execute: function() {
          o._RF.push({}, "22e90M/5DhFgKlg17+gysQS", "MessageIdProtocol", void 0);
          var s = e("default", new Map);
          s.set(d.LoginLogin, {
              encode: c.msg.LoginLogin.encode,
              decode: c.msg.LoginLogin.decode
          }),
          s.set(d.LoginFail, {
              encode: c.msg.LoginFail.encode,
              decode: c.msg.LoginFail.decode
          }),
          s.set(d.LogicGMCmd, {
              encode: c.msg.LogicGMCmd.encode,
              decode: c.msg.LogicGMCmd.decode
          }),
          s.set(d.LogicSetMain, {
              encode: c.msg.LogicSetMain.encode,
              decode: c.msg.LogicSetMain.decode
          }),
          s.set(d.LogicVitUpdate, {
              encode: c.msg.LogicVitUpdate.encode,
              decode: c.msg.LogicVitUpdate.decode
          }),
          s.set(d.LogicActivityUpdate, {
              encode: c.msg.LogicActivityUpdate.encode,
              decode: c.msg.LogicActivityUpdate.decode
          }),
          s.set(d.LogicPass, {
              encode: c.msg.LogicPass.encode,
              decode: c.msg.LogicPass.decode
          }),
          s.set(d.LogicCoin, {
              encode: c.msg.LogicCoin.encode,
              decode: c.msg.LogicCoin.decode
          }),
          s.set(d.HeroVitUpdate, {
              encode: c.msg.HeroVitUpdate.encode,
              decode: c.msg.HeroVitUpdate.decode
          }),
          s.set(d.StoreBuy, {
              encode: c.msg.StoreBuy.encode,
              decode: c.msg.StoreBuy.decode
          }),
          s.set(d.StoreSell, {
              encode: c.msg.StoreSell.encode,
              decode: c.msg.StoreSell.decode
          }),
          s.set(d.StoreChest, {
              encode: c.msg.StoreChest.encode,
              decode: c.msg.StoreChest.decode
          }),
          s.set(d.EquipmentMerge, {
              encode: c.msg.EquipmentMerge.encode,
              decode: c.msg.EquipmentMerge.decode
          }),
          s.set(d.EquipmentLink, {
              encode: c.msg.EquipmentLink.encode,
              decode: c.msg.EquipmentLink.decode
          }),
          s.set(d.EquipmentRepair, {
              encode: c.msg.EquipmentRepair.encode,
              decode: c.msg.EquipmentRepair.decode
          }),
          s.set(d.GameStart, {
              encode: c.msg.GameStart.encode,
              decode: c.msg.GameStart.decode
          }),
          s.set(d.GameLoaded, {
              encode: c.msg.GameLoaded.encode,
              decode: c.msg.GameLoaded.decode
          }),
          s.set(d.GameDone, {
              encode: c.msg.GameDone.encode,
              decode: c.msg.GameDone.decode
          }),
          s.set(d.GamePause, {
              encode: c.msg.GamePause.encode,
              decode: c.msg.GamePause.decode
          }),
          s.set(d.GameShopOperate, {
              encode: c.msg.GameShopOperate.encode,
              decode: c.msg.GameShopOperate.decode
          }),
          s.set(d.GameQuit, {
              encode: c.msg.GameQuit.encode,
              decode: c.msg.GameQuit.decode
          }),
          s.set(d.GameSpawn, {
              encode: c.msg.GameSpawn.encode,
              decode: c.msg.GameSpawn.decode
          }),
          s.set(d.GameHeartbeat, {
              encode: c.msg.GameHeartbeat.encode,
              decode: c.msg.GameHeartbeat.decode
          }),
          s.set(d.GameMonsterAtk, {
              encode: c.msg.GameMonsterAtk.encode,
              decode: c.msg.GameMonsterAtk.decode
          }),
          s.set(d.GameCharAtk, {
              encode: c.msg.GameCharAtk.encode,
              decode: c.msg.GameCharAtk.decode
          }),
          s.set(d.GamePick, {
              encode: c.msg.GamePick.encode,
              decode: c.msg.GamePick.decode
          }),
          s.set(d.GameDmgEx, {
              encode: c.msg.GameDmgEx.encode,
              decode: c.msg.GameDmgEx.decode
          }),
          s.set(d.GameWeaponUpdate, {
              encode: c.msg.GameWeaponUpdate.encode,
              decode: c.msg.GameWeaponUpdate.decode
          }),
          s.set(d.GameLifeRecover, {
              encode: c.msg.GameLifeRecover.encode,
              decode: c.msg.GameLifeRecover.decode
          }),
          s.set(d.GameBossSkill, {
              encode: c.msg.GameBossSkill.encode,
              decode: c.msg.GameBossSkill.decode
          }),
          s.set(d.CommonClientErr, {
              encode: c.msg.CommonClientErr.encode,
              decode: c.msg.CommonClientErr.decode
          }),
          s.set(d.CommonHeartbeat, {
              encode: c.msg.CommonHeartbeat.encode,
              decode: c.msg.CommonHeartbeat.decode
          }),
          s.set(d.ResponseDesc, {
              encode: c.msg.ResponseDesc.encode,
              decode: c.msg.ResponseDesc.decode
          }),
          s.set(d.CommonHandShake, {
              encode: c.msg.CommonHandShake.encode,
              decode: c.msg.CommonHandShake.decode
          }),
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MessageTips.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts"], (function(e) {
  var t, n, i, r, s, a, o, l, u;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          n = e.inheritsLoose,
          i = e.initializerDefineProperty,
          r = e.assertThisInitialized
      }
      , function(e) {
          s = e.cclegacy,
          a = e.Node,
          o = e.Label,
          l = e.Button
      }
      , function(e) {
          u = e.default
      }
      ],
      execute: function() {
          var c, p, f, g, h, b, y, d, m;
          s._RF.push({}, "ebbb0gNXNdCy6XhtJP1Uhkc", "MessageTips", void 0);
          e("default", (c = uiBind("fgui/pause", "MessageTips"),
          p = uiInject("Panel", a),
          f = uiInject("Panel/Desc", o),
          g = uiInject("Panel/ConarmBtn", l),
          c((y = t((b = function(e) {
              function t() {
                  for (var t, n = arguments.length, s = new Array(n), a = 0; a < n; a++)
                      s[a] = arguments[a];
                  return t = e.call.apply(e, [this].concat(s)) || this,
                  i(t, "Panel", y, r(t)),
                  i(t, "Desc", d, r(t)),
                  i(t, "ConarmBtn", m, r(t)),
                  t.message = void 0,
                  t
              }
              n(t, e);
              var s = t.prototype;
              return s.getPrototype = function() {
                  return t.prototype
              }
              ,
              s.onEnable = function() {
                  var e = this;
                  this.Desc.string = this.message || "",
                  this.onClick(this.ConarmBtn, (function() {
                      e.close()
                  }
                  ))
              }
              ,
              s.setMesage = function(e) {
                  this.message = e,
                  this.Desc && (this.Desc.string = e)
              }
              ,
              t
          }(u)).prototype, "Panel", [p], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          d = t(b.prototype, "Desc", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          m = t(b.prototype, "ConarmBtn", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          h = b)) || h));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MessageWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./LayerType.ts", "./Kit.ts"], (function(e) {
  var i, t, n, s, a, r, o, c, h, l, u, d;
  return {
      setters: [function(e) {
          i = e.applyDecoratedDescriptor,
          t = e.inheritsLoose,
          n = e.initializerDefineProperty,
          s = e.assertThisInitialized
      }
      , function(e) {
          a = e.cclegacy,
          r = e.Node,
          o = e.Label,
          c = e.RichText,
          h = e.Button
      }
      , function(e) {
          l = e.default
      }
      , function(e) {
          u = e.Layer2DType
      }
      , function(e) {
          d = e.default
      }
      ],
      execute: function() {
          var b, p, g, m, D, f, y, v, C, E, R;
          a._RF.push({}, "a4eeaewjnpH677JGdn2SziM", "MessageWindow", void 0);
          e("default", (b = uiBind("fgui/pause", "MessageWindow"),
          p = uiInject("Panel", r),
          g = uiInject("Panel/Desc", o),
          m = uiInject("Panel/RichDesc", c),
          D = uiInject("Panel/ConarmBtn", h),
          b((v = i((y = function(e) {
              function i(i) {
                  var t;
                  return t = e.call(this, i) || this,
                  n(t, "Panel", v, s(t)),
                  n(t, "Desc", C, s(t)),
                  n(t, "RichDesc", E, s(t)),
                  n(t, "ConarmBtn", R, s(t)),
                  t.message = "",
                  t.onOk = void 0,
                  t.uiDesc = void 0,
                  t.hideConarm = !1,
                  t.richEnable = !1,
                  t.underEnable = !1,
                  t.time = void 0,
                  t.index = void 0,
                  t.layer = u.UITips,
                  t
              }
              t(i, e);
              var a = i.prototype;
              return a.getPrototype = function() {
                  return i.prototype
              }
              ,
              a.onEnable = function() {
                  var e = this;
                  this.time = 0,
                  this.index = 0,
                  this.ConarmBtn.node.active = !this.hideConarm,
                  this.Desc.node.active = !this.richEnable,
                  this.RichDesc.node.active = this.richEnable,
                  this.uiDesc = this.richEnable ? this.RichDesc : this.Desc,
                  this.richEnable ? this.uiDesc.string = "<color=#D5CCF9>" + this.message + "</color>" : this.uiDesc.string = this.message,
                  this.onClick(this.ConarmBtn, (function() {
                      e.onOk && (e.onOk.runOne(),
                      e.onOk = null),
                      e.close()
                  }
                  )),
                  this.underEnable && d.time.addUpdate(this)
              }
              ,
              a.onDisable = function() {
                  this.underEnable && d.time.removeUpdate(this)
              }
              ,
              a.update = function(e) {
                  this.time += e,
                  this.time > .5 && (this.time -= .5,
                  this.index += 1,
                  this.index > 3 && (this.index = 0),
                  this.richEnable ? this.uiDesc.string = "<color=#D5CCF9>" + this.message + " . . .".substring(0, 2 * this.index) + "</color>" : this.uiDesc.string = this.message + " . . .".substring(0, 2 * this.index))
              }
              ,
              a.setMesage = function(e, i, t, n) {
                  this.richEnable = !1,
                  this.message = e || "",
                  this.onOk = i,
                  this.Desc && (this.Desc.string = e),
                  this.hideConarm = t,
                  this.underEnable = n
              }
              ,
              a.setRichMesage = function(e, i, t, n) {
                  this.richEnable = !0,
                  this.message = e || "",
                  this.onOk = i,
                  this.RichDesc && (this.RichDesc.string = e),
                  this.hideConarm = t,
                  this.underEnable = n
              }
              ,
              i
          }(l)).prototype, "Panel", [p], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          C = i(y.prototype, "Desc", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          E = i(y.prototype, "RichDesc", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          R = i(y.prototype, "ConarmBtn", [D], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          f = y)) || f));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MonsterObj.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./AtkStrategy.ts", "./ChaseAS.ts", "./CreatureObj.ts", "./BattleDef.ts", "./BattleMgr.ts", "./EffectType.ts", "./SkillAS.ts", "./ChargeAS.ts", "./SummonAS.ts", "./ObjMgr.ts", "./proto.mjs_cjs=&original=.js", "./UIRoot.ts", "./BossAS.ts", "./proto.js"], (function(t) {
  var e, n, i, s, g, a, r, o, h, f, u, c, A, l, p, d, k, m, S;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          i = t.StrategyType,
          s = t.AtkStrategy
      }
      , function(t) {
          g = t.ChaseAtkStrategy
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          r = t.CampType,
          o = t.ObjType,
          h = t.AtkObjType,
          f = t.BattleDef
      }
      , function(t) {
          u = t.BattleMgr
      }
      , function(t) {
          c = t.EffectType
      }
      , function(t) {
          A = t.SkillAtkStrategy
      }
      , function(t) {
          l = t.ChargeAtkStrategy
      }
      , function(t) {
          p = t.SummonAtkStrategy
      }
      , function(t) {
          d = t.default
      }
      , null, function(t) {
          k = t.default
      }
      , function(t) {
          m = t.BossAtkStrategy
      }
      , function(t) {
          S = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "90a06PsA5lOKYTP1Q9n1Vc7", "MonsterObj", void 0);
          t("default", function(t) {
              function n() {
                  for (var e, n = arguments.length, i = new Array(n), s = 0; s < n; s++)
                      i[s] = arguments[s];
                  return (e = t.call.apply(t, [this].concat(i)) || this).aosn = 0,
                  e.atkStrategy = void 0,
                  e.beAtkUnique = new Set,
                  e.Charging = !1,
                  e.Flying = !1,
                  e.append = 0,
                  e.atkTick = 0,
                  e
              }
              e(n, t);
              var a = n.prototype;
              return a.getAtkStratege = function() {
                  return this.atkStrategy
              }
              ,
              a.init = function(e, n, i, s) {
                  t.prototype.init.call(this, e, n, i, s),
                  this.cType = r.Dungeon;
                  var g = DataCenter.Monster.Get(n);
                  this.cfg = g,
                  this.oType = o.Monster,
                  this.getAttr().init(s.attrs),
                  this.append = s.append,
                  this.aosn = d.ins.generateAtkObjSN(),
                  2 == this.cfg.Type && ("BlueShark" == this.cfg.Name ? (k.fight.showBossPanel2(!0, this.cfg.Name),
                  k.fight.setBossHP2(this.getAttr().getHpPercent())) : (k.fight.showBossPanel1(!0, this.cfg.Name),
                  k.fight.setBossHP1(this.getAttr().getHpPercent())))
              }
              ,
              a.destroy = function() {
                  t.prototype.destroy.call(this),
                  this.cfg && 2 == this.cfg.Type && ("BlueShark" == this.cfg.Name ? k.fight.showBossPanel2(!1) : k.fight.showBossPanel1(!1)),
                  this.beAtkUnique.clear(),
                  this.beAtkUnique = null,
                  this.cfg = null,
                  this.atkStrategy.destory()
              }
              ,
              a.bornBuff = function() {
                  this.cfg.BornBuff > 0 && this.getAttr().addBuff(this.getAttrVal(S.msg.AttrType.AT_Dmg), this.cfg.BornBuff, this.getAOType(), this.getAOSN(), this.getSN())
              }
              ,
              a.afterInit = function() {
                  this.onAttrChanged(),
                  this.startAI()
              }
              ,
              a.startAI = function() {
                  var t = this.cfg.AI;
                  t == i.Null ? this.atkStrategy = new s : t == i.Chase ? this.atkStrategy = new g : t == i.Charge ? this.atkStrategy = new l : t == i.Skill ? this.atkStrategy = new A : t == i.Summon ? this.atkStrategy = new p : t == i.Boss && (this.atkStrategy = new m),
                  null == this.atkStrategy && console.log("unknow aitype"),
                  this.atkStrategy.init(this, this.cfg.AIVal)
              }
              ,
              a.addBuff = function(t, e, n, i, s) {
                  var g = this.getAttr().getDebuffFlag();
                  this.getAttr().addBuff(t, e, n, i, s),
                  this.onAttrChanged(),
                  this.onBuffChanged(g)
              }
              ,
              a.update = function() {
                  if (!this.getAttr().isDead() && (this.atkStrategy.onUpdate(),
                  this.getAttr().getBuffLen() > 0)) {
                      var t = this.getAttr().getDebuffFlag();
                      this.getAttr().onUpdate() && (this.onAttrChanged(),
                      this.onBuffChanged(t))
                  }
              }
              ,
              a.getName = function() {
                  return this.cfg.Name
              }
              ,
              a.updateViewAttr = function() {
                  this.node.setMoveSpeed(this.getAttr().getMoveSpeed()),
                  this.node.setAttackDuration(this.getAttrVal(S.msg.AttrType.AT_AtkLength)),
                  this.node.setAttackRange(this.getAttrVal(S.msg.AttrType.AT_AtkRange))
              }
              ,
              a.setViewNode = function(e) {
                  t.prototype.setViewNode.call(this, e),
                  this.updateViewAttr()
              }
              ,
              a.isDead = function() {
                  return !this.cfg
              }
              ,
              a.getDmg = function() {
                  return this.getAttrVal(S.msg.AttrType.AT_Dmg)
              }
              ,
              a.getDmgCritical = function() {
                  return this.getAttrVal(S.msg.AttrType.AT_Dmg)
              }
              ,
              a.getAOType = function() {
                  return h.Monster
              }
              ,
              a.getAOID = function() {
                  return this.cfgID
              }
              ,
              a.getKnockBack = function() {
                  return 0
              }
              ,
              a.getTargetMax = function() {
                  return 1
              }
              ,
              a.getOwnerSN = function() {
                  return this.getSN()
              }
              ,
              a.getAOSN = function() {
                  return this.aosn
              }
              ,
              a.getWeaponID = function() {
                  return 0
              }
              ,
              a.setAtkTick = function(t) {
                  this.atkTick = t
              }
              ,
              a.getLastAtkTick = function() {
                  return this.atkTick
              }
              ,
              a.getAtkTime = function() {
                  return this.getAttrVal(S.msg.AttrType.AT_AtkCD)
              }
              ,
              a.onAttrChanged = function() {
                  this.node && this.updateViewAttr()
              }
              ,
              a.onBuffChanged = function(t) {
                  t == this.getAttr().getDebuffFlag() && this.node && (this.getAttr().canMove() ? this.node.setMoveLimit(!1) : this.node.setMoveLimit(!0),
                  this.getAttr().isStun() ? this.node.showStun(!0) : this.node.showStun(!1),
                  this.getAttr().isBurning() ? this.node.showBurning(!0) : this.node.showBurning(!1))
              }
              ,
              a.beAtk = function(t, e) {
                  if (t && this.node && this.getAttr() && !this.isDead() && !t.isAtkLimit()) {
                      var n = t.getAtkUnique();
                      if (!this.beAtkUnique.has(n)) {
                          this.beAtkUnique.add(n),
                          t.atkOccur();
                          var i, s = !1, g = f.UnitePct, a = 0, r = t.getAppendBuff(), o = this.getPosX(), A = this.getPosY(), l = this.getSN(), p = t.getAOType();
                          this.getAttr().onBeAtk(),
                          a = t.getDmg();
                          var m = d.ins.getChar();
                          if (p == h.Weapon) {
                              var B = d.ins.getChar().getAttrVal(S.msg.AttrType.AT_CriticalRate);
                              B > 0 && (g = u.ins.randNextEx(0, f.UnitePct - 1)) < B && (s = !0),
                              s && (a = t.getDmgCritical())
                          }
                          var y = {
                              et: c.Nothing
                          };
                          y.et = c.BeDmg,
                          y.dmg = a,
                          y.critical = s;
                          var T = this.getAttr().onDamage(a);
                          if ((i = t.getKnockback() - this.getAttrVal(S.msg.AttrType.AT_KnockbackReduce)) > 0 && !this.Charging && (y.knockBack = i,
                          y.knockBackTime = u.ins.knockBackTime),
                          T ? (y.et = c.BeDmgToDie,
                          y.sn = this.sn,
                          2 == this.cfg.Type && ("BlueShark" == this.cfg.Name ? k.fight.setBossHP2(this.getAttr().getHpPercent()) : k.fight.setBossHP1(this.getAttr().getHpPercent()))) : (2 == this.cfg.Type && ("BlueShark" == this.cfg.Name ? k.fight.setBossHP2(this.getAttr().getHpPercent()) : k.fight.setBossHP1(this.getAttr().getHpPercent())),
                          r > 0 && (p == h.Tower ? this.addBuff(r, t.getDmg(), p, t.getAOSN(), t.getOwnerCrtSN()) : p == h.Weapon && this.addBuff(r, t.getDmg(), p, t.getAOSN(), t.getWeaponSN()))),
                          p == h.Weapon) {
                              this.node.onDamaged(m.node, y);
                              var D = t.getEquipment();
                              null != D && D.addStageDmg(a)
                          } else if (p == h.Tower) {
                              var w = d.ins.getTower(t.getOwnerCrtSN());
                              null != w && w.node ? this.node.onDamaged(w.node, y) : this.node.onDamaged(m.node, y),
                              w.getSrcWeapon() && w.getSrcWeapon().addStageDmg(a)
                          } else
                              p == h.Talent && this.node.onDamaged(m.node, y);
                          T && u.ins.getStage().onKillMonster(this);
                          var C = new S.msg.BattleDmg;
                          if (C.CrtSN = l,
                          C.Pos.push(o),
                          C.Pos.push(A),
                          C.Critical = s,
                          C.CriticalRand = g,
                          C.Dmg = a,
                          C.Knockback = i,
                          r > 0) {
                              var v = new S.msg.BattleBuff;
                              v.ID = r,
                              C.AppendBuff = v
                          }
                          var N = u.ins.findAtkMsg(t.getBatch(), t.getSegament());
                          if (null != N)
                              N.CltDmg.push(C);
                          else {
                              var P = new S.msg.GameCharAtk;
                              P.AOT = Number(p),
                              P.AOInfo.push(t.getBatch(), t.getSegament()),
                              p == h.Weapon ? P.AOInfo.push(t.getWeaponSN()) : p == h.Tower && P.AOInfo.push(t.getOwnerCrtSN()),
                              P.AOInfo.push(t.getAtkIntl()),
                              P.CltDmg.push(C),
                              u.ins.WeaponAtkMsgs.push(P)
                          }
                      }
                  }
              }
              ,
              a.onBuffDmg = function(t, e, n, i, s) {
                  if (null != this.node) {
                      var g = {
                          et: c.Nothing
                      };
                      g.et = c.DotDmg,
                      g.dmg = t,
                      g.critical = !1,
                      g.sn = this.sn;
                      var a = this.getAttr().onDamage(t);
                      a && (g.et = c.BeDmgToDie,
                      g.die = a,
                      u.ins.getStage().onKillMonster(this)),
                      2 == this.cfg.Type && ("BlueShark" == this.cfg.Name ? k.fight.setBossHP2(this.getAttr().getHpPercent()) : k.fight.setBossHP1(this.getAttr().getHpPercent()));
                      var r = d.ins.getChar();
                      if (this.node.onDamaged(r, g),
                      n == h.Weapon) {
                          var o = d.ins.getChar().getWeapon(s);
                          o && o.addStageDmg(t)
                      } else if (n == h.Tower) {
                          var f = d.ins.getTower(s);
                          f && f.getSrcWeapon() && f.getSrcWeapon().addStageDmg(t)
                      }
                      var A = new S.msg.BattleDmgEx;
                      A.Type = 0,
                      A.TypeVals = [e, n, s, t],
                      A.MSN = this.getSN(),
                      A.Pos = [this.getPosX(), this.getPosY()],
                      u.ins.ExAtkMsgs.push(A)
                  }
              }
              ,
              a.getAppendBuff = function() {
                  return this.append
              }
              ,
              n
          }(a));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MonsterSpawn.ts", ["cc"], (function(t) {
  var i;
  return {
      setters: [function(t) {
          i = t.cclegacy
      }
      ],
      execute: function() {
          i._RF.push({}, "d17f10T6P9HBajseFlr99P5", "MonsterSpawn", void 0);
          t("MonsterSpawn", function() {
              function t() {
                  this.mid = void 0,
                  this.x = void 0,
                  this.y = void 0,
                  this.preShow = void 0,
                  this.tick = void 0,
                  this.attrs = void 0,
                  this.append = void 0
              }
              return t.prototype.destroy = function() {
                  this.preShow = null
              }
              ,
              t
          }());
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MoveTest.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(t) {
  var e, o, i, n, r, l, s, a, c, p, d, u, g, h;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          o = t.inheritsLoose,
          i = t.initializerDefineProperty,
          n = t.assertThisInitialized
      }
      , function(t) {
          r = t.cclegacy,
          l = t._decorator,
          s = t.RigidBody2D,
          a = t.Collider2D,
          c = t.Node,
          p = t.Vec3,
          d = t.Contact2DType,
          u = t.PhysicsSystem2D,
          g = t.EPhysics2DDrawFlags,
          h = t.Component
      }
      ],
      execute: function() {
          var y, f, b, C, m, v, D, B, T, w, E, N;
          r._RF.push({}, "7b091RGPS1CKogn6jySGVrm", "MoveTest", void 0);
          var z = l.ccclass
            , _ = l.property;
          t("MoveTest", (y = z("MoveTest"),
          f = _({
              type: s
          }),
          b = _({
              type: a
          }),
          C = _({
              type: c
          }),
          m = _({
              type: c
          }),
          y((B = e((D = function(t) {
              function e() {
                  for (var e, o = arguments.length, r = new Array(o), l = 0; l < o; l++)
                      r[l] = arguments[l];
                  return e = t.call.apply(t, [this].concat(r)) || this,
                  i(e, "speed", B, n(e)),
                  i(e, "rigidBody", T, n(e)),
                  i(e, "collider", w, n(e)),
                  i(e, "colliderNode", E, n(e)),
                  i(e, "target", N, n(e)),
                  e.time = void 0,
                  e.position = new p(0,0),
                  e
              }
              o(e, t);
              var r = e.prototype;
              return r.start = function() {
                  this.time = 0,
                  this.position = this.target.position.clone(),
                  this.collider = this.colliderNode.getComponent(a),
                  this.collider.on(d.BEGIN_CONTACT, this.onBeginContact, this),
                  this.collider.on(d.END_CONTACT, this.onEndContact, this),
                  u.instance.enable = !0,
                  u.instance.debugDrawFlags = g.Shape
              }
              ,
              r.update = function(t) {
                  this.time += t,
                  this.position.y += t * this.speed,
                  this.position.y > 300 && (this.position.y = -300),
                  this.target.position = this.position
              }
              ,
              r.onBeginContact = function(t, e, o) {
                  console.log("onBeginContact")
              }
              ,
              r.onEndContact = function(t, e, o) {
                  console.log("onEndContact")
              }
              ,
              r.onWorldBeginContact = function(t, e, o) {
                  console.log("onWorldBeginContact")
              }
              ,
              r.onWorldEndContact = function(t, e, o) {
                  console.log("onWorldEndContact")
              }
              ,
              e
          }(h)).prototype, "speed", [_], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          T = e(D.prototype, "rigidBody", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          w = e(D.prototype, "collider", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          E = e(D.prototype, "colliderNode", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          N = e(D.prototype, "target", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          v = D)) || v));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/MoveType.ts", ["cc"], (function(e) {
  var o;
  return {
      setters: [function(e) {
          o = e.cclegacy
      }
      ],
      execute: function() {
          o._RF.push({}, "bed885RFwNEgLsKaGqm0Qfu", "MoveType", void 0);
          e("MoveType", function(e) {
              return e[e.MoveDir = 0] = "MoveDir",
              e[e.MoveTo = 1] = "MoveTo",
              e[e.Bezier = 2] = "Bezier",
              e
          }({}));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Network.ts", ["cc"], (function() {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "3e21aXHP2JDNakn0fWzz50Q", "Network", void 0),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ObjMgr.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts", "./CharObj.ts", "./MonsterObj.ts", "./CreatureManager.ts", "./TowerObj.ts"], (function(e) {
  var t, r, n, s, a, o, i, u;
  return {
      setters: [function(e) {
          t = e.inheritsLoose,
          r = e.createForOfIteratorHelperLoose
      }
      , function(e) {
          n = e.cclegacy
      }
      , function(e) {
          s = e.default
      }
      , function(e) {
          a = e.default
      }
      , function(e) {
          o = e.default
      }
      , function(e) {
          i = e.default
      }
      , function(e) {
          u = e.default
      }
      ],
      execute: function() {
          n._RF.push({}, "d5c9fG735xEfqgsT+sWzuWi", "ObjMgr", void 0);
          e("default", function(e) {
              function n() {
                  var t;
                  return (t = e.call(this) || this).char = null,
                  t.monsters = new Map,
                  t.monsters_del = new Map,
                  t.towerAry = new Array,
                  t.aoSN = 0,
                  t
              }
              t(n, e);
              var s = n.prototype;
              return s.destroy = function() {
                  null != this.char && (this.char.destroy(),
                  this.char = null);
                  for (var e, t = r(this.monsters); !(e = t()).done; ) {
                      var n = e.value;
                      n[0];
                      n[1].destroy()
                  }
                  this.monsters.clear();
                  for (var s, a = r(this.monsters_del); !(s = a()).done; ) {
                      var o = s.value;
                      o[0];
                      o[1].destroy()
                  }
                  this.monsters_del.clear()
              }
              ,
              s.update = function() {
                  this.char.update();
                  for (var e = 0; e < this.towerAry.length; e++)
                      this.towerAry[e].update();
                  for (var t, n = r(this.monsters); !(t = n()).done; ) {
                      var s = t.value;
                      s[0];
                      s[1].update()
                  }
                  if (this.monsters_del.size > 0) {
                      for (var a, o = r(this.monsters_del); !(a = o()).done; ) {
                          var i = a.value;
                          i[0];
                          i[1].destroy()
                      }
                      this.monsters_del.clear()
                  }
              }
              ,
              s.createChar = function(e, t) {
                  console.log("hero:", e.classid);
                  var r = new a;
                  if (r.init(0, e.classid, t, e.attrs),
                  r.afterInit(),
                  this.char = r,
                  e.items)
                      for (var n = 0; n < e.items.length; n++)
                          this.char.addItemEx(e.items[n]);
                  for (var s = 0; s < e.weapons.length; s++)
                      this.char.addWeapon(e.weapons[s]);
                  r.resume(e.hp, e.gold);
                  var o = i.ins.createPlayer("creature/prefabs/Hero", t, r);
                  o.createWeaponPart(),
                  o.createControlPart(),
                  o.createPickPart();
                  for (var u = r.getWeaponCom().getWeapons(), h = 0; h < u.length; h++) {
                      var f = u[h];
                      o.weaponPart.addWeapon(f.getWeaponConfig().ResPath, f)
                  }
                  return r
              }
              ,
              s.createMonster = function(e, t, r, n, s, a) {
                  var u = new o;
                  return u.init(e, t, n, {
                      attrs: s,
                      append: a
                  }),
                  u.afterInit(),
                  u.bornBuff(),
                  this.monsters.set(e, u),
                  i.ins.createEnemy(r, n, u, 0),
                  u
              }
              ,
              s.createTower = function(e, t, r, n, s, a, o, h) {
                  var f = new u;
                  return f.init(e, t, n, {
                      fromtype: s,
                      fromsn: a,
                      attrs: o,
                      append: h
                  }),
                  f.afterInit(),
                  this.towerAry.push(f),
                  i.ins.createTower(r, n, f, 0),
                  f
              }
              ,
              s.onMonsterDie = function(e) {
                  this.monsters.delete(e.getSN()),
                  this.monsters_del.set(e.getSN(), e)
              }
              ,
              s.clearMonster = function() {
                  for (var e, t = r(this.monsters); !(e = t()).done; ) {
                      var n = e.value;
                      n[0];
                      n[1].destroy()
                  }
                  this.monsters.clear();
                  for (var s, a = r(this.monsters_del); !(s = a()).done; ) {
                      var o = s.value;
                      o[0];
                      o[1].destroy()
                  }
                  this.monsters_del.clear()
              }
              ,
              s.clearTower = function() {
                  for (var e = 0; e < this.towerAry.length; e++)
                      this.towerAry[e].destroy();
                  this.towerAry = new Array
              }
              ,
              s.clearChar = function() {
                  null != this.char && (this.char.destroy(),
                  this.char = null)
              }
              ,
              s.generateAtkObjSN = function() {
                  return this.aoSN++,
                  this.aoSN
              }
              ,
              s.getChar = function() {
                  return this.char
              }
              ,
              s.getMonster = function(e) {
                  return this.monsters.get(e)
              }
              ,
              s.getTower = function(e) {
                  for (var t = 0; t < this.towerAry.length; t++)
                      if (this.towerAry[t].getSN() == e)
                          return this.towerAry[t];
                  return null
              }
              ,
              s.findCloseMonster = function(e) {
                  for (var t, n = 1e8, s = null, a = r(this.monsters); !(t = a()).done; ) {
                      var o = t.value
                        , i = (o[0],
                      o[1]);
                      if (!i.isDead()) {
                          var u = i.getPos()
                            , h = u.x - e.x
                            , f = u.y - e.y
                            , l = h * h + f * f;
                          l < n && (n = l,
                          s = i)
                      }
                  }
                  return s
              }
              ,
              s.findCloseMonsterEx = function(e, t) {
                  for (var n, s = t * t, a = 1e8, o = null, i = r(this.monsters); !(n = i()).done; ) {
                      var u = n.value
                        , h = (u[0],
                      u[1]);
                      if (!h.isDead()) {
                          var f = h.getPos()
                            , l = f.x - e.x
                            , c = f.y - e.y;
                          if (!(Math.abs(l) > t || Math.abs(c) > t)) {
                              var d = l * l + c * c;
                              d <= s && d < a && (a = d,
                              o = h)
                          }
                      }
                  }
                  return o
              }
              ,
              s.monsterForeach = function(e) {
                  for (var t, n = r(this.monsters); !(t = n()).done; ) {
                      var s = t.value
                        , a = (s[0],
                      s[1]);
                      a.isDead() || e(a)
                  }
              }
              ,
              s.findRandMonster = function(e, t, n) {
                  for (var s, a = null, o = r(this.monsters); !(s = o()).done; ) {
                      var i = s.value
                        , u = (i[0],
                      i[1]);
                      if (!u.isDead()) {
                          var h = u.getPos()
                            , f = h.x - e.x
                            , l = h.y - e.y;
                          if (!(Math.abs(f) > t || Math.abs(l) > t))
                              if (f * f + l * l < n) {
                                  a = u;
                                  break
                              }
                      }
                  }
                  return a
              }
              ,
              s.findRandMonsterByMonster = function(e, t, n, s) {
                  for (var a, o = [], i = r(this.monsters); !(a = i()).done; ) {
                      var u = a.value
                        , h = u[0]
                        , f = u[1];
                      if (!f.isDead() && e.getSN() != h) {
                          var l = f.getPos()
                            , c = e.getPos()
                            , d = l.x - c.x
                            , v = l.y - c.y;
                          if (!(Math.abs(d) > t || Math.abs(v) > t))
                              if (d * d + v * v < n && (o.push(f),
                              o.length >= s))
                                  break
                      }
                  }
                  return o
              }
              ,
              n
          }(s()));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Observer.ts", ["cc", "./HandlerSystem.ts"], (function(e) {
  var s, t;
  return {
      setters: [function(e) {
          s = e.cclegacy
      }
      , function(e) {
          t = e.default
      }
      ],
      execute: function() {
          s._RF.push({}, "1a581wqI0pP7b+SmYqNsICC", "Observer", void 0);
          e("default", function() {
              function e() {
                  this._owner = void 0,
                  this.listeners = []
              }
              var s = e.prototype;
              return s.run = function(e, s, t, r) {
                  for (var i = 0; i < this.listeners.length; ++i)
                      this.listeners[i].run(e, s, t, r)
              }
              ,
              s.runOne = function(e, s, t, r) {
                  for (var i = 0; i < this.listeners.length; ++i)
                      this.listeners[i].run(e, s, t, r);
                  this.destroy()
              }
              ,
              s.add = function(e, s) {
                  var r = t.ins.spawn(e, s);
                  this.listeners.push(r)
              }
              ,
              s.remove = function(e, s) {
                  for (var t = 0; t < this.listeners.length; ++t) {
                      var r = this.listeners[t];
                      if (r.isEqual(e, s)) {
                          this.listeners.splice(t, 1),
                          r.destroy();
                          break
                      }
                  }
              }
              ,
              s.destroy = function() {
                  this.clear(),
                  this._owner && this._owner.recycle(this)
              }
              ,
              s.clear = function(e) {
                  if (e)
                      for (var s = 0; s < this.listeners.length; ) {
                          var t = this.listeners[s];
                          t.isTarget(e) ? (t.destroy(),
                          this.listeners.splice(s, 1)) : ++s
                      }
                  else {
                      for (var r = 0; r < this.listeners.length; ++r) {
                          this.listeners[r].destroy()
                      }
                      this.listeners.length = 0
                  }
              }
              ,
              s.has = function(e, s) {
                  for (var t = 0; t < this.listeners.length; t++) {
                      if (this.listeners[t].isEqual(e, s))
                          return !0
                  }
                  return !1
              }
              ,
              e
          }());
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ObserverSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./Singleton.ts", "./Observer.ts"], (function(e) {
  var t, n, r, o, c;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          n = e.cclegacy
      }
      , function(e) {
          r = e.default
      }
      , function(e) {
          o = e.default
      }
      , function(e) {
          c = e.default
      }
      ],
      execute: function() {
          n._RF.push({}, "139a5ZI+NFF+ZD2ZfyeacLw", "ObserverSystem", void 0);
          e("default", function(e) {
              function n() {
                  for (var t, n = arguments.length, o = new Array(n), l = 0; l < n; l++)
                      o[l] = arguments[l];
                  return (t = e.call.apply(e, [this].concat(o)) || this).pool = new r((function() {
                      return new c
                  }
                  )),
                  t
              }
              t(n, e);
              var o = n.prototype;
              return o.create = function() {
                  var e = this.pool.spawn();
                  return e._owner = this,
                  e
              }
              ,
              o.recycle = function(e) {
                  this.pool.recycle(e)
              }
              ,
              o.recycleAll = function() {
                  this.pool.recycleAll()
              }
              ,
              n
          }(o()));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Padding.ts", ["cc"], (function(t) {
  var i;
  return {
      setters: [function(t) {
          i = t.cclegacy
      }
      ],
      execute: function() {
          i._RF.push({}, "c81cecqVjRALL0LymO2yqfR", "Padding", void 0);
          t("default", function() {
              function t(t, i, e, s) {
                  this.left = 0,
                  this.right = 0,
                  this.top = 0,
                  this.bottom = 0,
                  this.setSize(t, i, e, s)
              }
              return t.prototype.setSize = function(t, i, e, s) {
                  this.left = t || 0,
                  this.right = i || this.left,
                  this.top = e || this.left,
                  this.bottom = s || this.left
              }
              ,
              t
          }());
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ParallelAction.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./ActionBase.ts"], (function(e) {
  var t, n, u, i;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          n = e.cclegacy
      }
      , function(e) {
          u = e.default
      }
      , function(e) {
          i = e.default
      }
      ],
      execute: function() {
          n._RF.push({}, "ff8d33hzJdJHI3K99nRHQCd", "ParallelAction", void 0);
          var r = e("default", function(e) {
              function n() {
                  for (var t, n = arguments.length, u = new Array(n), i = 0; i < n; i++)
                      u[i] = arguments[i];
                  return (t = e.call.apply(e, [this].concat(u)) || this).queue = [],
                  t
              }
              t(n, e);
              var u = n.prototype;
              return u.reset = function() {
                  e.prototype.reset.call(this),
                  this.clear()
              }
              ,
              u.clear = function() {
                  for (var e = 0; e < this.queue.length; ++e)
                      this.queue[e].finish();
                  this.queue.splice(0, this.queue.length)
              }
              ,
              u.onUpdate = function(e) {
                  if (this.queue.length > 0) {
                      for (var t = 0; t < this.queue.length; )
                          this.queue[t].update(e) ? (this.queue[t].finish(),
                          this.queue.splice(t, 1)) : ++t;
                      return !1
                  }
                  return !0
              }
              ,
              u.onFinish = function() {
                  this.clear(),
                  n.POOL.recycle(this)
              }
              ,
              u.add = function(e) {
                  this.queue.push(e)
              }
              ,
              n
          }(i));
          r.POOL = new u((function() {
              return new r
          }
          ),(function(e) {
              return e.reset()
          }
          )),
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/PassResultWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./LayerType.ts", "./Kit.ts", "./UIHelper.ts", "./Def.ts", "./GameGlobal.ts"], (function(t) {
  var e, i, s, a, n, r, l, o, u, c, h, p, g, d;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          s = t.initializerDefineProperty,
          a = t.assertThisInitialized
      }
      , function(t) {
          n = t.cclegacy,
          r = t.Button,
          l = t.RichText,
          o = t.Sprite
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          c = t.Layer2DType
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          g = t.RewardType
      }
      , function(t) {
          d = t.default
      }
      ],
      execute: function() {
          var f, m, y, R, b, I, L, v, D, P, w;
          n._RF.push({}, "df830a/49ZEvpjYK0wOPqVw", "PassResultWindow", void 0);
          t("default", (f = uiBind("fgui/login", "PassResultWindow"),
          m = uiInject("Bg", r),
          y = uiInject("Desc", l),
          R = uiInject("Panel/Light", o),
          b = uiInject("Panel/Result", o),
          f((v = e((L = function(t) {
              function e(e) {
                  var i;
                  return i = t.call(this, e) || this,
                  s(i, "CloseBtn", v, a(i)),
                  s(i, "Desc", D, a(i)),
                  s(i, "Light", P, a(i)),
                  s(i, "Result", w, a(i)),
                  i.type = void 0,
                  i.data = void 0,
                  i.num = void 0,
                  i.descText = void 0,
                  i.layer = c.UIPopup,
                  i
              }
              i(e, t);
              var n = e.prototype;
              return n.getPrototype = function() {
                  return e.prototype
              }
              ,
              n.onEnable = function() {
                  var t = this;
                  switch (d.MOVE_ENABLE = !1,
                  this.type = this.$args.type,
                  this.data = this.$args.data,
                  this.num = this.$args.num,
                  this.descText = this.$args.desc || "",
                  this.Desc.string = this.descText.replace("{0}", this.num.toString()),
                  this.onClick(this.CloseBtn, (function() {
                      t.close()
                  }
                  )),
                  this.type) {
                  case g.C1:
                      this.Result.spriteFrame = p.getComIcon("crystal_max"),
                      this.Result.node.setScale(1, 1, 1),
                      (s = p.getItemLightPath(2)) && h.res.setSpriteFrame(this.Light, s);
                      break;
                  case g.C2:
                      this.Result.spriteFrame = p.getComIcon("leaf_max"),
                      this.Result.node.setScale(1, 1, 1),
                      (s = p.getItemLightPath(2)) && h.res.setSpriteFrame(this.Light, s);
                      break;
                  case g.Equip:
                      var e = this.data
                        , i = DataCenter.Equipment.Get(e);
                      this.Result.spriteFrame = p.getEquipIcon(i.Icon),
                      this.Result.node.setScale(2, 2, 2),
                      (s = p.getItemLightPath(i.Rarity)) && h.res.setSpriteFrame(this.Light, s);
                      break;
                  case g.Material:
                      var s;
                      e = this.data,
                      i = DataCenter.Material.Get(e);
                      this.Result.spriteFrame = p.getMaterialIcon(i.Icon),
                      this.Result.node.setScale(2.3, 2.3, 2.3),
                      (s = p.getItemLightPath(i.Rarity)) && h.res.setSpriteFrame(this.Light, s)
                  }
              }
              ,
              n.onDisable = function() {
                  h.res.recycle(this.Result),
                  d.MOVE_ENABLE = !0
              }
              ,
              n.setData = function(t, e) {
                  this.type = t,
                  this.data = e
              }
              ,
              n.setDesc = function(t) {
                  this.descText = t
              }
              ,
              e
          }(u)).prototype, "CloseBtn", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          D = e(L.prototype, "Desc", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          P = e(L.prototype, "Light", [R], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          w = e(L.prototype, "Result", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          I = L)) || I));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/PauseWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./Fight.ts", "./UIListView.ts", "./Kit.ts", "./AttrType.ts", "./ObjMgr.ts", "./UIHelper.ts", "./UIRoot.ts", "./Client.ts", "./CreatureImgDress.ts", "./EquipView.ts"], (function(t) {
  var e, n, i, r, o, a, s, l, u, p, c, d, h, y, f, m, g, C, I, b;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          n = t.inheritsLoose,
          i = t.initializerDefineProperty,
          r = t.assertThisInitialized
      }
      , function(t) {
          o = t.cclegacy,
          a = t.Button,
          s = t.Vec3,
          l = t.Label,
          u = t.Color
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          d = t.UIListView
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          y = t.default
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          m = t.default
      }
      , function(t) {
          g = t.default
      }
      , function(t) {
          C = t.default
      }
      , function(t) {
          I = t.default
      }
      , function(t) {
          b = t.EquipView
      }
      ],
      execute: function() {
          var w, R, v, B, P, H, W, A, j, z, D, E, T, k, x, F, Q, U, V;
          o._RF.push({}, "bd4e7Jprb9BXIP3/1kT7UVv", "PauseWindow", void 0);
          t("default", (w = uiBind("fgui/pause", "PauseWindow"),
          R = uiInject("QuitBtn", a),
          v = uiInject("ContinueBtn", a),
          B = uiInject("WeaponContent", d),
          P = uiInject("ItemsContent", d),
          H = uiInject("RewardsContent", d),
          W = uiInject("PropertyContent", d),
          A = uiInject("Head", a),
          j = uiInject("Head/Frame/Mask/Human", I),
          w((E = e((D = function(t) {
              function e() {
                  for (var e, n = arguments.length, o = new Array(n), a = 0; a < n; a++)
                      o[a] = arguments[a];
                  return e = t.call.apply(t, [this].concat(o)) || this,
                  i(e, "QuitBtn", E, r(e)),
                  i(e, "ContinueBtn", T, r(e)),
                  i(e, "WeaponContent", k, r(e)),
                  i(e, "ItemsContent", x, r(e)),
                  i(e, "RewardsContent", F, r(e)),
                  i(e, "PropertyContent", Q, r(e)),
                  i(e, "PlayerHeadBtn", U, r(e)),
                  i(e, "HeadAvatar", V, r(e)),
                  e.items = void 0,
                  e.wsnAry = void 0,
                  e.player = null,
                  e
              }
              n(e, t);
              var o = e.prototype;
              return o.getPrototype = function() {
                  return e.prototype
              }
              ,
              o.onEnable = function() {
                  var t = this
                    , e = C.hero.getMain();
                  this.HeadAvatar.node.active = !0,
                  e && e.skin ? this.HeadAvatar.setSkin(e.skin) : this.HeadAvatar.setHeroData(e, !0),
                  this.player = f.ins.getChar(),
                  this.items = this.player.getItemIds(),
                  this.wsnAry = this.player.getWeaponSNAry(),
                  this.onClick(this.QuitBtn, (function() {
                      c.ins.exit(),
                      t.close()
                  }
                  )),
                  this.onClick(this.ContinueBtn, (function() {
                      t.close()
                  }
                  )),
                  this.onClick(this.PlayerHeadBtn, (function() {
                      var e = new s;
                      h.utils.localToGlobal(t.PlayerHeadBtn.node, e),
                      e.x += 150,
                      e.y -= 88,
                      g.playerTips.setPosition(e),
                      g.playerTips.open()
                  }
                  )),
                  this.PropertyContent.itemRenderer = this.propertyRenderer.bind(this),
                  this.PropertyContent.numItems = y.length,
                  this.WeaponContent.itemRenderer = this.weaponRenderer.bind(this),
                  this.WeaponContent.numItems = this.wsnAry.length,
                  this.ItemsContent.itemRenderer = this.itemRenderer.bind(this),
                  this.ItemsContent.numItems = this.items.length,
                  this.RewardsContent.itemRenderer = this.rewardsRenderer.bind(this),
                  this.RewardsContent.numItems = 0
              }
              ,
              o.propertyRenderer = function(t, e) {
                  var n = e.getChildByName("name").getComponent(l)
                    , i = e.getChildByName("value").getComponent(l)
                    , r = y[t]
                    , o = this.player.getDisplayAttr(r.value);
                  n.string = r.name,
                  i.string = this.player.getDisplayAttr(r.value);
                  var a = this.player.isAttrMax(r.value);
                  try {
                      if (o.endsWith("%")) {
                          o = o.substring(0, o.length - 1);
                          var s = parseFloat(o);
                          i.color = a ? u.RED : s > 0 ? u.GREEN : u.WHITE
                      } else {
                          s = parseFloat(o);
                          i.color = s > 0 ? u.GREEN : u.WHITE
                      }
                  } catch (t) {
                      console.error(t)
                  }
              }
              ,
              o.weaponRenderer = function(t, e) {
                  var n = e.getComponent(b)
                    , i = this.player.getWeapon(this.wsnAry[t]).getWeaponConfig();
                  n.setIcon(m.getWeaponIcon(i.IconId)),
                  n.setQualityOld(i.Rarity),
                  n.setStar(i.Rarity),
                  n.setCountText("")
              }
              ,
              o.itemRenderer = function(t, e) {
                  var n = e.getComponent(b)
                    , i = DataCenter.Item.Get(this.items[t]);
                  n.setIcon(m.getItemIcon(i.IconId)),
                  n.setQualityOld(i.Rarity),
                  n.setStar(i.Rarity),
                  n.setCountText("")
              }
              ,
              o.rewardsRenderer = function(t, e) {}
              ,
              o.onDisable = function() {
                  c.ins.battlePause(!1)
              }
              ,
              o.onResume = function() {
                  c.ins.resume()
              }
              ,
              e
          }(p)).prototype, "QuitBtn", [R], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          T = e(D.prototype, "ContinueBtn", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          k = e(D.prototype, "WeaponContent", [B], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          x = e(D.prototype, "ItemsContent", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          F = e(D.prototype, "RewardsContent", [H], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          Q = e(D.prototype, "PropertyContent", [W], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          U = e(D.prototype, "PlayerHeadBtn", [A], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          V = e(D.prototype, "HeadAvatar", [j], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          z = D)) || z));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Physics2DBox.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./Physics2DObject.ts"], (function(t) {
  var i, e, n, s;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          e = t.cclegacy
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          s = t.Physics2DObject
      }
      ],
      execute: function() {
          e._RF.push({}, "34537fdk8dJYKii7rabAqLa", "Physics2DBox", void 0);
          var h = t("Physics2DBox", function(t) {
              function e() {
                  for (var i, e = arguments.length, n = new Array(e), s = 0; s < e; s++)
                      n[s] = arguments[s];
                  return (i = t.call.apply(t, [this].concat(n)) || this).width = 1,
                  i.height = 1,
                  i
              }
              i(e, t);
              var n = e.prototype;
              return n.initShape = function() {
                  return new p2.Box({
                      width: this.width,
                      height: this.height
                  })
              }
              ,
              n.onDestroy = function() {
                  e.POOL.recycle(this)
              }
              ,
              n.setScale = function(t) {
                  this._shape && (this._shape.width = this.width * t.x,
                  this._shape.height = this.height * t.y)
              }
              ,
              e
          }(s));
          h.POOL = new n((function() {
              return new h
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Physics2DCircle.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./Physics2DObject.ts"], (function(t) {
  var e, i, n, s;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          i = t.cclegacy
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          s = t.Physics2DObject
      }
      ],
      execute: function() {
          i._RF.push({}, "94191DIE4hAU7ZTVajYChVu", "Physics2DCircle", void 0);
          var r = t("Physics2DCircle", function(t) {
              function i() {
                  for (var e, i = arguments.length, n = new Array(i), s = 0; s < i; s++)
                      n[s] = arguments[s];
                  return (e = t.call.apply(t, [this].concat(n)) || this).radius = 1,
                  e
              }
              e(i, t);
              var n = i.prototype;
              return n.initShape = function() {
                  return new p2.Circle({
                      radius: this.radius
                  })
              }
              ,
              n.onDestroy = function() {
                  i.POOL.recycle(this)
              }
              ,
              n.setScale = function(t) {
                  this._shape && (this._shape.radius = this.radius * t.x)
              }
              ,
              i
          }(s));
          r.POOL = new n((function() {
              return new r
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Physics2DCircleView.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Physics2DCircle.ts", "./Physics2DDef.ts"], (function(i) {
  var e, t, n, o, c, l, s, r, a, h, u, p, y;
  return {
      setters: [function(i) {
          e = i.applyDecoratedDescriptor,
          t = i.inheritsLoose,
          n = i.initializerDefineProperty,
          o = i.assertThisInitialized
      }
      , function(i) {
          c = i.cclegacy,
          l = i._decorator,
          s = i.CCFloat,
          r = i.CircleCollider2D,
          a = i.Component
      }
      , function(i) {
          h = i.Physics2DCircle
      }
      , function(i) {
          u = i.Physics2DBodyType,
          p = i.Physics2DCollisionGroup,
          y = i.Physics2DCollisionMask
      }
      ],
      execute: function() {
          var d, f, C, g, b, D, v, w, P, m, B;
          c._RF.push({}, "ba769krZHVP862huNFSvZ4T", "Physics2DCircleView", void 0);
          var T = l.ccclass
            , z = l.property;
          i("Physics2DCircleView", (d = T("Physics2DCircleView"),
          f = z({
              type: s
          }),
          C = z({
              type: r
          }),
          g = z({
              type: u
          }),
          b = z({
              type: p
          }),
          d((w = e((v = function(i) {
              function e() {
                  for (var e, t = arguments.length, c = new Array(t), l = 0; l < t; l++)
                      c[l] = arguments[l];
                  return e = i.call.apply(i, [this].concat(c)) || this,
                  n(e, "mass", w, o(e)),
                  n(e, "collider", P, o(e)),
                  n(e, "bodyType", m, o(e)),
                  n(e, "collisionGroup", B, o(e)),
                  e.circle = void 0,
                  e.caller = void 0,
                  e.onBeginContact = void 0,
                  e.onEndContact = void 0,
                  e.collisionResponse = !1,
                  e.gravityScale = 0,
                  e
              }
              t(e, i);
              var c = e.prototype;
              return c.onEnable = function() {
                  this.circle || (null == this.collider && (this.collider = this.getComponent(r)),
                  this.circle = h.POOL.spawn(),
                  this.circle.mass = this.mass,
                  this.circle.radius = this.collider.radius,
                  this.circle.bodyType = this.bodyType,
                  this.circle.name = this.node.name,
                  this.circle.collisionResponse = this.collisionResponse,
                  this.circle.gravityScale = this.gravityScale,
                  this.circle.collisionGroup = this.collisionGroup,
                  this.circle.collisionMask = y.get(this.collisionGroup),
                  this.circle.owner = this,
                  this.circle.start(this.node.position, this.collider.offset))
              }
              ,
              c.onDisable = function() {
                  this.circle.destroy(),
                  this.circle = null
              }
              ,
              c.update = function(i) {
                  this.circle.position = this.node.position,
                  this.circle.angle = this.node.angle
              }
              ,
              c.listenBeginContact = function(i, e) {
                  this.caller = i,
                  this.onBeginContact = e
              }
              ,
              c.listenEndContact = function(i, e) {
                  this.caller = i,
                  this.onBeginContact = e
              }
              ,
              c.setOwner = function(i) {
                  this.owner = i
              }
              ,
              c.beginContact = function(i) {
                  this.caller && this.onBeginContact && this.onBeginContact.call(this.caller, i.owner)
              }
              ,
              c.endContact = function(i) {
                  this.caller && this.onEndContact && this.onEndContact.call(this.caller, i.owner)
              }
              ,
              e
          }(a)).prototype, "mass", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          P = e(v.prototype, "collider", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          m = e(v.prototype, "bodyType", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return u.DYNAMIC
              }
          }),
          B = e(v.prototype, "collisionGroup", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return p.Player
              }
          }),
          D = v)) || D));
          c._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Physics2DDef.ts", ["cc"], (function(e) {
  var n, y;
  return {
      setters: [function(e) {
          n = e.cclegacy,
          y = e.Enum
      }
      ],
      execute: function() {
          n._RF.push({}, "b0d5dpMw0RC674lRlBWVcYh", "Physics2DDef", void 0);
          var o = e("Physics2DBodyType", function(e) {
              return e[e.DYNAMIC = 0] = "DYNAMIC",
              e[e.STATIC = 1] = "STATIC",
              e[e.KINEMATIC = 2] = "KINEMATIC",
              e
          }({}))
            , s = e("Physics2DCollisionGroup", function(e) {
              return e[e.None = 0] = "None",
              e[e.Player = 2] = "Player",
              e[e.Enemy = 4] = "Enemy",
              e[e.Player_Weapon = 8] = "Player_Weapon",
              e[e.Enemy_Weapon = 16] = "Enemy_Weapon",
              e
          }({}))
            , a = e("Physics2DCollisionMask", new Map);
          a.set(s.None, s.None),
          a.set(s.Player, s.Enemy | s.Enemy_Weapon),
          a.set(s.Enemy, s.Player | s.Player_Weapon),
          a.set(s.Player_Weapon, s.Enemy),
          a.set(s.Enemy_Weapon, s.Player),
          y(o),
          y(s),
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Physics2DObject.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Physics2DDef.ts", "./Physics2DSystem.ts", "./Kit.ts"], (function(t) {
  var i, s, o, n, e;
  return {
      setters: [function(t) {
          i = t.createClass
      }
      , function(t) {
          s = t.cclegacy
      }
      , function(t) {
          o = t.Physics2DBodyType
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          e = t.default
      }
      ],
      execute: function() {
          s._RF.push({}, "13bcf0emfBLRZVUA4uRof+W", "Physics2DObject", void 0),
          t("Physics2DObject", function() {
              function t() {
                  this.owner = void 0,
                  this.name = "Circle",
                  this.mass = 10,
                  this.bodyType = o.DYNAMIC,
                  this.collisionResponse = !0,
                  this.gravityScale = 1,
                  this.collisionGroup = 1,
                  this.collisionMask = 1,
                  this._body = void 0,
                  this._uuid = void 0,
                  this._shape = void 0
              }
              var s = t.prototype;
              return s.reset = function() {
                  this.owner = null,
                  this._uuid = t.UUID_INDEX,
                  t.UUID_INDEX += 1
              }
              ,
              s.start = function(t, i) {
                  if (this._body)
                      console.error("刚体已经被初始化");
                  else {
                      switch (this._body = new p2.Body({
                          mass: this.mass,
                          position: [t.x, t.y],
                          allowSleep: !1,
                          collisionResponse: this.collisionResponse,
                          gravityScale: this.gravityScale
                      }),
                      this.bodyType) {
                      case o.DYNAMIC:
                          this._body.type = p2.Body.DYNAMIC;
                          break;
                      case o.STATIC:
                          this._body.type = p2.Body.STATIC;
                          break;
                      case o.KINEMATIC:
                          this._body.type = p2.Body.KINEMATIC
                      }
                      this._shape = this.initShape(),
                      this._shape.collisionGroup = this.collisionGroup,
                      this._shape.collisionMask = this.collisionMask,
                      this._body.addShape(this._shape, [i.x, i.y]),
                      this._body.userdata = this,
                      n.ins.addBody(this._body)
                  }
              }
              ,
              s.initShape = function() {
                  return null
              }
              ,
              s.destroy = function() {
                  this._body && (this.onDestroy(),
                  n.ins.removeBody(this._body),
                  this._body = null)
              }
              ,
              s.onDestroy = function() {}
              ,
              s.beginContact = function(t) {
                  this.owner.beginContact(t)
              }
              ,
              s.endContact = function(t) {
                  this.owner.endContact(t)
              }
              ,
              s.setScale = function(t) {}
              ,
              i(t, [{
                  key: "uuid",
                  get: function() {
                      return this._uuid
                  }
              }, {
                  key: "x",
                  get: function() {
                      return this._body.position[0]
                  },
                  set: function(t) {
                      this._body.position[0] = t
                  }
              }, {
                  key: "y",
                  get: function() {
                      return this._body.position[1]
                  },
                  set: function(t) {
                      this._body.position[1] = t
                  }
              }, {
                  key: "angle",
                  get: function() {
                      return e.math.getAngle(this._body.angle)
                  },
                  set: function(t) {
                      this._body.angle = e.math.getRadian(t)
                  }
              }, {
                  key: "position",
                  set: function(t) {
                      this._body.position[0] = t.x,
                      this._body.position[1] = t.y
                  }
              }, {
                  key: "shape",
                  get: function() {
                      return this._shape
                  }
              }]),
              t
          }()).UUID_INDEX = 1,
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Physics2DSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts"], (function(t) {
  var n, e, o, i;
  return {
      setters: [function(t) {
          n = t.inheritsLoose,
          e = t.assertThisInitialized
      }
      , function(t) {
          o = t.cclegacy
      }
      , function(t) {
          i = t.default
      }
      ],
      execute: function() {
          o._RF.push({}, "367cchbyadG8b70mL9Wmegr", "Physics2DSystem", void 0);
          t("default", function(t) {
              function o() {
                  var n;
                  return (n = t.call(this) || this).world = void 0,
                  n.fixedTimeStep = 1 / 60,
                  n.maxSubSteps = 10,
                  n.world = new p2.World({
                      gravity: [0, 0]
                  }),
                  n.world.on("beginContact", n.onBeginContact.bind(e(n)), null),
                  n.world.on("endContact", n.onEndContact.bind(e(n)), null),
                  n
              }
              n(o, t);
              var i = o.prototype;
              return i.onBeginContact = function(t) {
                  var n = t.bodyA.userdata
                    , e = t.bodyB.userdata;
                  n && e ? (n.beginContact(e),
                  e.beginContact(n)) : console.error("onBeginContact: 有节点没有绑定对象")
              }
              ,
              i.onEndContact = function(t) {
                  var n = t.bodyA.userdata
                    , e = t.bodyB.userdata;
                  n && e ? (n.endContact(e),
                  e.endContact(n)) : console.error("onEndContact: 有节点没有绑定对象")
              }
              ,
              i.setFixedTimeStep = function(t) {
                  this.fixedTimeStep = t
              }
              ,
              i.update = function(t) {
                  this.world.step(this.fixedTimeStep, 0, this.maxSubSteps)
              }
              ,
              i.createPlane = function() {
                  var t = new p2.Body({
                      mass: 0
                  })
                    , n = new p2.Plane;
                  return t.addShape(n),
                  this.world.addBody(t),
                  t
              }
              ,
              i.addBody = function(t) {
                  this.world.addBody(t)
              }
              ,
              i.removeBody = function(t) {
                  this.world.removeBody(t)
              }
              ,
              o
          }(i()));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Physics2DTest.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Physics2DSystem.ts"], (function(t) {
  var e, n, o, i, s, r, a, c, u, l, h, p, y;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          n = t.inheritsLoose,
          o = t.initializerDefineProperty,
          i = t.assertThisInitialized
      }
      , function(t) {
          s = t.cclegacy,
          r = t._decorator,
          a = t.UITransform,
          c = t.Node,
          u = t.input,
          l = t.Input,
          h = t.Vec3,
          p = t.Component
      }
      , function(t) {
          y = t.default
      }
      ],
      execute: function() {
          var d, f, v, T, D, g, M;
          s._RF.push({}, "414d2qdtVJDyLe+hlAlaOcl", "Physics2DTest", void 0);
          var E = r.ccclass
            , P = r.property;
          t("Physics2DTest", (d = E("Physics2DTest"),
          f = P({
              type: a
          }),
          v = P({
              type: c
          }),
          d((g = e((D = function(t) {
              function e() {
                  for (var e, n = arguments.length, s = new Array(n), r = 0; r < n; r++)
                      s[r] = arguments[r];
                  return e = t.call.apply(t, [this].concat(s)) || this,
                  o(e, "canvas", g, i(e)),
                  o(e, "target", M, i(e)),
                  e.isMouseDown = void 0,
                  e
              }
              n(e, t);
              var s = e.prototype;
              return s.onLoad = function() {
                  y.ins.createPlane(),
                  u.on(l.EventType.MOUSE_DOWN, this.onTouchStart, this),
                  u.on(l.EventType.MOUSE_MOVE, this.onTouchMoved, this),
                  u.on(l.EventType.MOUSE_UP, this.onTouchEnded, this)
              }
              ,
              s.update = function(t) {
                  y.ins.update(t)
              }
              ,
              s.onTouchStart = function(t) {
                  this.isMouseDown = !0
              }
              ,
              s.onTouchMoved = function(t) {
                  if (this.isMouseDown && this.target) {
                      var e = t.getUILocation()
                        , n = this.canvas.convertToNodeSpaceAR(new h(e.x,e.y));
                      this.target.position = n
                  }
              }
              ,
              s.onTouchEnded = function(t) {
                  this.isMouseDown = !1
              }
              ,
              e
          }(p)).prototype, "canvas", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          M = e(D.prototype, "target", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          T = D)) || T));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Player.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Creature.ts", "./PlayerInputPart.ts", "./PlayerWeaponPart.ts", "./PlayerContext.ts", "./CreaturePartID.ts", "./PlayerPickPart.ts", "./EffectType.ts", "./EffectFactory.ts", "./SimplePool.ts", "./CreatureAnimId.ts", "./GameGlobal.ts", "./Client.ts", "./CreatureImgDress.ts", "./Def.ts"], (function(t) {
  var e, i, n, a, s, o, r, u, c, l, h, p, f, P, d, g, y;
  return {
      setters: [function(t) {
          e = t.inheritsLoose,
          i = t.createClass
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          l = t.EffectType
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          P = t.default
      }
      , function(t) {
          d = t.default
      }
      , function(t) {
          g = t.default
      }
      , function(t) {
          y = t.FlyTextType
      }
      ],
      execute: function() {
          n._RF.push({}, "2a2f2WN6PpBA7crQrV40YTQ", "Player", void 0);
          var v = t("default", function(t) {
              function n() {
                  var e;
                  return (e = t.call(this) || this).context = new r,
                  e._weaponPart = void 0,
                  e._pickPart = void 0,
                  e._inputPart = void 0,
                  e._dress = void 0,
                  e.defaultSkin = "",
                  e.context.moveSmoke = !0,
                  e
              }
              e(n, t);
              var a = n.prototype;
              return a.onStart = function() {
                  t.prototype.onStart.call(this),
                  this.node.setScale(P.SCALE_X, P.SCALE_Y),
                  this._dress = this.node.getComponent(g);
                  var e = d.hero.getMain();
                  e.skin ? this._dress.setSkin(e.skin) : this._dress.setHeroData(e)
              }
              ,
              a.onDamaged = function(t, e) {
                  e.et == l.BeDmg ? (this.isLive && h.playDamage(e.dmg, this.view.node.position, e.critical, this.view.headHeight, !0),
                  this.playFlash()) : e.et == l.BeDmgToDie ? (this.isLive && h.playDamage(e.dmg, this.view.node.position, e.critical, this.view.headHeight, !0),
                  this.inputPart && this.inputPart.pause(),
                  this.movePart && this.movePart.pause(),
                  this.weaponPart && this.weaponPart.clearWeapon(),
                  this.view.playAnim(f.Die, !1)) : e.et == l.Dodge ? this.isLive && h.playMiss(this.view.node.position, this.view.headHeight) : e.et == l.DotDmg && this.playText(y.Burning, e.dmg)
              }
              ,
              a.createControlPart = function() {
                  null == this.getPart(u.Control) && this.addPart(u.Control, new s),
                  this._inputPart = this.getPart(u.Control)
              }
              ,
              a.createWeaponPart = function() {
                  null == this.getPart(u.Weapon) && this.addPart(u.Weapon, new o),
                  this._weaponPart = this.getPart(u.Weapon)
              }
              ,
              a.createPickPart = function() {
                  null == this.getPart(u.Pick) && this.addPart(u.Pick, new c),
                  this._pickPart = this.getPart(u.Pick)
              }
              ,
              a.onDestroy = function() {
                  t.prototype.onDestroy.call(this),
                  n.POOL.recycle(this)
              }
              ,
              a.setWeaponAttackSpeed = function(t, e) {
                  this.weaponPart && this.weaponPart.setAttackSpeed(t, e)
              }
              ,
              a.setSkin = function(t) {
                  this.context.skin = t,
                  this.view && this.view.setSkeletonData("creature/skins/" + t)
              }
              ,
              a.playText = function(t, e) {
                  if (this.isLive) {
                      var i = this.position
                        , n = this.view.headHeight;
                      h.playText(t, e, i, n, !0)
                  }
              }
              ,
              i(n, [{
                  key: "weaponPart",
                  get: function() {
                      return this._weaponPart
                  }
              }, {
                  key: "pickPart",
                  get: function() {
                      return this._pickPart
                  }
              }, {
                  key: "inputPart",
                  get: function() {
                      return this._inputPart
                  }
              }]),
              n
          }(a));
          v.POOL = new p((function() {
              return new v
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/PlayerContext.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreatureContext.ts"], (function(t) {
  var e, n, r;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          r = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "0b96cou7M9CeI7w5AxTbbdr", "PlayerContext", void 0);
          t("default", function(t) {
              function n() {
                  for (var e, n = arguments.length, r = new Array(n), o = 0; o < n; o++)
                      r[o] = arguments[o];
                  return (e = t.call.apply(t, [this].concat(r)) || this).isAlpha = void 0,
                  e
              }
              return e(n, t),
              n
          }(r));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/PlayerInputPart.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreaturePart.ts", "./Joystick.ts"], (function(t) {
  var e, i, s, d, o, n, h, y;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          i = t.cclegacy,
          s = t.input,
          d = t.Input,
          o = t.KeyCode,
          n = t.Vec2
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          y = t.JoystickInput
      }
      ],
      execute: function() {
          i._RF.push({}, "1883147TlxAqLr27x4kKAZu", "PlayerInputPart", void 0),
          t("default", function(t) {
              function i() {
                  for (var e, i = arguments.length, s = new Array(i), d = 0; d < i; d++)
                      s[d] = arguments[d];
                  return (e = t.call.apply(t, [this].concat(s)) || this).dx = new n,
                  e.dy = new n,
                  e.dd = new n,
                  e
              }
              e(i, t);
              var h = i.prototype;
              return h.onEnable = function() {
                  i.ENABLE_INPUT || (i.ENABLE_INPUT = !0,
                  s.on(d.EventType.KEY_DOWN, this.onKeyDown, this),
                  s.on(d.EventType.KEY_UP, this.onKeyUp, this),
                  y.on(d.EventType.TOUCH_START, this.onTouchStart, this),
                  y.on(d.EventType.TOUCH_MOVE, this.onTouchMoved, this),
                  y.on(d.EventType.TOUCH_END, this.onTouchEnded, this))
              }
              ,
              h.onDisable = function() {
                  i.ENABLE_INPUT && (i.ENABLE_INPUT = !1,
                  s.off(d.EventType.KEY_DOWN, this.onKeyDown, this),
                  s.off(d.EventType.KEY_UP, this.onKeyUp, this),
                  y.off(d.EventType.TOUCH_START, this.onTouchStart, this),
                  y.off(d.EventType.TOUCH_MOVE, this.onTouchMoved, this),
                  y.off(d.EventType.TOUCH_END, this.onTouchEnded, this))
              }
              ,
              h.onKeyDown = function(t) {
                  this.isPaused || (t.keyCode != o.KEY_A && t.keyCode != o.ARROW_LEFT || (this.dx.x = -1),
                  t.keyCode != o.KEY_D && t.keyCode != o.ARROW_RIGHT || (this.dx.y = 1),
                  t.keyCode != o.KEY_W && t.keyCode != o.ARROW_UP || (this.dy.x = 1),
                  t.keyCode != o.KEY_S && t.keyCode != o.ARROW_DOWN || (this.dy.y = -1),
                  this.dd.x = this.dx.x + this.dx.y,
                  this.dd.y = this.dy.x + this.dy.y,
                  this.owner.movePart.move(this.dd.x, this.dd.y),
                  this.owner.weaponPart && this.owner.weaponPart.setDir(this.dd.x, this.dd.y))
              }
              ,
              h.onKeyUp = function(t) {
                  this.isPaused || (t.keyCode != o.KEY_A && t.keyCode != o.ARROW_LEFT || (this.dx.x = 0),
                  t.keyCode != o.KEY_D && t.keyCode != o.ARROW_RIGHT || (this.dx.y = 0),
                  t.keyCode != o.KEY_W && t.keyCode != o.ARROW_UP || (this.dy.x = 0),
                  t.keyCode != o.KEY_S && t.keyCode != o.ARROW_DOWN || (this.dy.y = 0),
                  this.dd.x = this.dx.x + this.dx.y,
                  this.dd.y = this.dy.x + this.dy.y,
                  this.owner.movePart.move(this.dd.x, this.dd.y),
                  this.owner.weaponPart && this.owner.weaponPart.setDir(this.dd.x, this.dd.y))
              }
              ,
              h.onTouchStart = function(t) {
                  this.isPaused
              }
              ,
              h.onTouchMoved = function(t, e) {
                  this.isPaused || (this.dd.x = e.moveVec.x,
                  this.dd.y = e.moveVec.y,
                  this.owner.movePart.move(this.dd.x, this.dd.y),
                  this.owner.weaponPart && this.owner.weaponPart.setDir(this.dd.x, this.dd.y))
              }
              ,
              h.onTouchEnded = function(t, e) {
                  this.isPaused || (this.dd.x = 0,
                  this.dd.y = 0,
                  this.owner.movePart.move(this.dd.x, this.dd.y))
              }
              ,
              h.pause = function() {
                  this.isPaused = !0,
                  this.dx.x = 0,
                  this.dx.y = 0,
                  this.dy.x = 0,
                  this.dy.y = 0,
                  this.dd.x = 0,
                  this.dd.y = 0
              }
              ,
              h.resume = function() {
                  this.isPaused = !1,
                  this.dx.x = 0,
                  this.dx.y = 0,
                  this.dy.x = 0,
                  this.dy.y = 0,
                  this.dd.x = 0,
                  this.dd.y = 0
              }
              ,
              i
          }(h)).ENABLE_INPUT = !1,
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/PlayerPickPart.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreaturePart.ts", "./CreatureManager.ts", "./CreatureType.ts", "./DropItemType.ts"], (function(t) {
  var e, i, n, r, s, o, a;
  return {
      setters: [function(t) {
          e = t.inheritsLoose,
          i = t.createClass
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          o = t.CreatureType
      }
      , function(t) {
          a = t.DropItemType
      }
      ],
      execute: function() {
          n._RF.push({}, "6390bQa6DZP9p3Q1GdscOYc", "PlayerPickPart", void 0);
          t("default", function(t) {
              function n() {
                  for (var e, i = arguments.length, n = new Array(i), r = 0; r < i; r++)
                      n[r] = arguments[r];
                  return (e = t.call.apply(t, [this].concat(n)) || this).time = void 0,
                  e.interval = .1,
                  e.items = [],
                  e
              }
              e(n, t);
              var r = n.prototype;
              return r.onEnable = function() {
                  this.time = 0
              }
              ,
              r.onDisable = function() {}
              ,
              r.onUpdate = function(t) {
                  if (this.time += t,
                  this.time > this.interval && (this.time = 0,
                  s.ins.findCreature(o.DropItem, this.owner.worldPosition, this.owner.context.pickRange, this.items),
                  this.items.length > 0)) {
                      for (var e = 0; e < this.items.length; ++e) {
                          var i = this.items[e];
                          i.itemType != a.BossTreasure1 && i.itemType != a.BossTreasure2 && i.itemType != a.BossTreasure3 && (i.itemType == a.Blood && this.owner.context.data && !this.owner.context.data.shuldPickPotion() || (i.isSearched = !1,
                          i.flyTo(this, 380)))
                      }
                      this.items.splice(0, this.items.length)
                  }
              }
              ,
              i(n, [{
                  key: "position",
                  get: function() {
                      return this.owner.center
                  }
              }]),
              n
          }(r));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/PlayerPrefsSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts"], (function(t) {
  var e, n, r;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          r = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "9080elknv5NZq0ub4UJs2sh", "PlayerPrefsSystem", void 0);
          t("default", function(t) {
              function n() {
                  for (var e, n = arguments.length, r = new Array(n), o = 0; o < n; o++)
                      r[o] = arguments[o];
                  return (e = t.call.apply(t, [this].concat(r)) || this).account = "test",
                  e
              }
              e(n, t);
              var r = n.prototype;
              return r.setAccount = function(t) {
                  this.account = t || "test"
              }
              ,
              r.getKey = function(t) {
                  return this.account + "." + t
              }
              ,
              r.getString = function(t, e) {
                  var n = this.getKey(t)
                    , r = localStorage.getItem(n);
                  return null == r || "undefined" == r || "null" == r ? null != e ? e : null : r
              }
              ,
              r.getNumber = function(t, e) {
                  var n = this.getKey(t)
                    , r = localStorage.getItem(n);
                  return null != r && (e = Number(r)),
                  null != e ? e : 0
              }
              ,
              r.getBoolean = function(t, e) {
                  var n = this.getKey(t)
                    , r = localStorage.getItem(n);
                  return "true" == r || "false" != r && (null != e && e)
              }
              ,
              r.setString = function(t, e) {
                  try {
                      var n = this.getKey(t);
                      localStorage.setItem(n, e)
                  } catch (t) {
                      console.error(t)
                  }
              }
              ,
              r.setNumber = function(t, e) {
                  if (null != e)
                      try {
                          var n = this.getKey(t);
                          localStorage.setItem(n, e.toString())
                      } catch (t) {
                          console.error(t)
                      }
              }
              ,
              r.setBoolean = function(t, e) {
                  if (null != e)
                      try {
                          var n = this.getKey(t);
                          localStorage.setItem(n, e.toString())
                      } catch (t) {
                          console.error(t)
                      }
              }
              ,
              r.deleteKey = function(t) {
                  try {
                      var e = this.getKey(t);
                      localStorage.removeItem(e)
                  } catch (t) {
                      console.error(t)
                  }
              }
              ,
              n
          }(r()));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/PlayerTips.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./ObjMgr.ts", "./CreatureImgDress.ts", "./Client.ts"], (function(e) {
  var t, i, n, a, r, o, l, s, u, c, p, f, h, g;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          a = e.assertThisInitialized
      }
      , function(e) {
          r = e.cclegacy,
          o = e.Button,
          l = e.Node,
          s = e.Label,
          u = e.RichText,
          c = e.Vec3
      }
      , function(e) {
          p = e.default
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          h = e.default
      }
      , function(e) {
          g = e.default
      }
      ],
      execute: function() {
          var b, y, d, P, v, C, D, m, H, w, z, A, B;
          r._RF.push({}, "95935ZyMXBAqYM16/YyAnWz", "PlayerTips", void 0);
          e("default", (b = uiBind("fgui/pause", "PlayerTips"),
          y = uiInject("CloseBtn", o),
          d = uiInject("Panel", l),
          P = uiInject("Panel/Career", s),
          v = uiInject("Panel/Desc", u),
          C = uiInject("Panel/Head/Mask/Human", h),
          b((H = t((m = function(e) {
              function t() {
                  for (var t, i = arguments.length, r = new Array(i), o = 0; o < i; o++)
                      r[o] = arguments[o];
                  return t = e.call.apply(e, [this].concat(r)) || this,
                  n(t, "CloseBtn", H, a(t)),
                  n(t, "Panel", w, a(t)),
                  n(t, "Career", z, a(t)),
                  n(t, "Desc", A, a(t)),
                  n(t, "HeadAvatar", B, a(t)),
                  t.position = new c,
                  t
              }
              i(t, e);
              var r = t.prototype;
              return r.getPrototype = function() {
                  return t.prototype
              }
              ,
              r.setPosition = function(e) {
                  c.copy(this.position, e),
                  this.Panel && (this.Panel.position = this.position)
              }
              ,
              r.onEnable = function() {
                  var e = this;
                  this.Panel.position = this.position,
                  this.onClick(this.CloseBtn, (function() {
                      e.close()
                  }
                  ));
                  var t = f.ins.getChar()
                    , i = t.getCfg().Name
                    , n = t.getCfg().Desc;
                  n = n.replace(/<br>/g, "\n");
                  var a = g.hero.getMain();
                  this.HeadAvatar.node.active = !0,
                  a && a.skin ? this.HeadAvatar.setSkin(a.skin) : this.HeadAvatar.setHeroData(a, !0),
                  this.Career.string = i,
                  this.Desc.string = n
              }
              ,
              t
          }(p)).prototype, "CloseBtn", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          w = t(m.prototype, "Panel", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          z = t(m.prototype, "Career", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          A = t(m.prototype, "Desc", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          B = t(m.prototype, "HeadAvatar", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          D = m)) || D));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/PlayerWeaponPart.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreaturePart.ts", "./Kit.ts", "./LayerType.ts", "./PlayerWeaponPosition.ts", "./WeaponAgent.ts"], (function(e) {
  var t, n, a, o, s, i, r, p, h, u;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          n = e.cclegacy,
          a = e.Node,
          o = e.Layers,
          s = e.Vec3
      }
      , function(e) {
          i = e.default
      }
      , function(e) {
          r = e.default
      }
      , function(e) {
          p = e.Layer2DType
      }
      , function(e) {
          h = e.default
      }
      , function(e) {
          u = e.default
      }
      ],
      execute: function() {
          n._RF.push({}, "660fd7KxDtKRq29aJcZB2Eh", "PlayerWeaponPart", void 0);
          e("default", function(e) {
              function n() {
                  for (var t, n = arguments.length, a = new Array(n), o = 0; o < n; o++)
                      a[o] = arguments[o];
                  return (t = e.call.apply(e, [this].concat(a)) || this).weapons = new Array,
                  t.weaponNode = void 0,
                  t.parent = void 0,
                  t
              }
              t(n, e);
              var i = n.prototype;
              return i.onEnable = function() {
                  this.weaponNode = this.owner.node,
                  null == this.parent && (this.parent = new a,
                  r.layer.addNode(this.parent, p.View))
              }
              ,
              i.onDisable = function() {
                  this.clearWeapon(),
                  this.parent && (this.parent.destroy(),
                  this.parent = null),
                  this.weaponNode = null
              }
              ,
              i.onUpdate = function(e) {
                  this.parent.worldPosition = this.weaponNode.worldPosition;
                  for (var t = 0; t < this.weapons.length; ++t)
                      this.weapons[t].update(e)
              }
              ,
              i.refresh = function() {
                  h.refresh(this.weapons);
                  for (var e = 0; e < this.weapons.length; ++e)
                      this.weapons[e].refresh()
              }
              ,
              i.getWeaponCount = function() {
                  return this.weapons.length
              }
              ,
              i.getWeapon = function(e) {
                  return this.weapons[e].view
              }
              ,
              i.addWeapon = function(e, t) {
                  null == this.parent && (this.parent = new a,
                  r.layer.addNode(this.parent, p.View));
                  var n = new u;
                  n.owner = this.owner,
                  n.path = e,
                  n.data = t,
                  n.parent = this.parent,
                  n.setLayer(o.Enum.DEFAULT),
                  n.init(),
                  n.setScale(s.ONE),
                  this.weapons.push(n),
                  h.refresh(this.weapons)
              }
              ,
              i.removeWeapon = function(e) {
                  this.weapons[e] && (this.weapons[e].unInit(),
                  this.weapons.splice(e, 1));
                  h.refresh(this.weapons)
              }
              ,
              i.removeWeaponByData = function(e) {
                  for (var t = 0; t < this.weapons.length; ++t)
                      if (this.weapons[t].data == e) {
                          this.removeWeapon(t);
                          break
                      }
              }
              ,
              i.clearWeapon = function() {
                  for (var e = 0; e < this.weapons.length; ++e)
                      this.weapons[e].unInit();
                  this.weapons.splice(0, this.weapons.length)
              }
              ,
              i.pause = function() {
                  e.prototype.pause.call(this);
                  for (var t = 0; t < this.weapons.length; ++t)
                      this.weapons[t].pause()
              }
              ,
              i.resume = function() {
                  e.prototype.resume.call(this);
                  for (var t = 0; t < this.weapons.length; ++t)
                      this.weapons[t].resume()
              }
              ,
              i.setDir = function(e, t) {
                  for (var n = 0; n < this.weapons.length; ++n)
                      this.weapons[n].setDir(e, t)
              }
              ,
              i.setAttackSpeed = function(e, t) {
                  this.weapons[e].setAttackSpeed(t)
              }
              ,
              n
          }(i));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/PlayerWeaponPosition.ts", ["cc", "./Kit.ts", "./ResList.ts"], (function(t) {
  var i, e, n, o, s;
  return {
      setters: [function(t) {
          i = t.cclegacy,
          e = t.Prefab,
          n = t.Vec3
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          s = t.default
      }
      ],
      execute: function() {
          i._RF.push({}, "d0f1ewr4W5KC7EKq2xNVers", "PlayerWeaponPosition", void 0),
          t("default", function() {
              function t() {}
              return t.init = function() {
                  if (null == this.posDict) {
                      this.posDict = [];
                      for (var t = o.res.spawn(s.playerweapon.path, e), i = 0; i < 12; ++i) {
                          this.posDict[i] = [];
                          var r = i + 1
                            , a = t.getChildByName(r > 9 ? "weapon" + r : "weapon0" + r);
                          if (a)
                              for (var c = 0; c < r; ++c) {
                                  var f = c + 1
                                    , p = a.getChildByName(f > 9 ? "Sprite-0" + f : "Sprite-00" + f)
                                    , u = new n;
                                  n.add(u, p.position, a.position),
                                  this.posDict[i].push(u)
                              }
                      }
                  }
              }
              ,
              t.refresh = function(i) {
                  t.init();
                  for (var e = this.posDict[i.length - 1], n = 0; n < i.length; ++n)
                      i[n].setPosition(e[n]),
                      i[n].setAngle(0)
              }
              ,
              t.refreshX = function(i) {
                  t.init();
                  for (var e = this.posDict[i.length - 1], n = 0; n < i.length; ++n) {
                      var o = i[n];
                      o.setPosition(e[o.index]),
                      o.setAngle(0)
                  }
              }
              ,
              t
          }()).posDict = void 0,
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/proto.js", ["./cjs-loader.mjs", "./minimal.js"], (function(e, t) {
  var r, n;
  return {
      setters: [function(e) {
          r = e.default
      }
      , function(e) {
          n = e.__cjsMetaURL
      }
      ],
      execute: function() {
          e("default", void 0);
          var o = e("__cjsMetaURL", t.meta.url);
          r.define(o, (function(t, r, n, o, i) {
              var a, l, s, c = r("protobufjs/minimal.js"), u = c.Reader, p = c.Writer, f = c.util, y = c.roots.default || (c.roots.default = {});
              y.msg = ((s = {}).CommonClientErr = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Dump = "",
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Dump && Object.hasOwnProperty.call(e, "Dump") && t.uint32(10).string(e.Dump),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.CommonClientErr; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Dump = e.string();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.Dump && e.hasOwnProperty("Dump") && !f.isString(e.Dump) ? "Dump: string expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.CommonClientErr)
                          return e;
                      var t = new y.msg.CommonClientErr;
                      return null != e.Dump && (t.Dump = String(e.Dump)),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Dump = ""),
                      null != e.Dump && e.hasOwnProperty("Dump") && (r.Dump = e.Dump),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.CommonHeartbeat = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Cnt = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Cnt && Object.hasOwnProperty.call(e, "Cnt") && t.uint32(8).int32(e.Cnt),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.CommonHeartbeat; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Cnt = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.Cnt && e.hasOwnProperty("Cnt") && !f.isInteger(e.Cnt) ? "Cnt: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.CommonHeartbeat)
                          return e;
                      var t = new y.msg.CommonHeartbeat;
                      return null != e.Cnt && (t.Cnt = 0 | e.Cnt),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Cnt = 0),
                      null != e.Cnt && e.hasOwnProperty("Cnt") && (r.Cnt = e.Cnt),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.CommonHandShake = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.TS = 0,
                  e.prototype.Sign = "",
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.TS && Object.hasOwnProperty.call(e, "TS") && t.uint32(8).int32(e.TS),
                      null != e.Sign && Object.hasOwnProperty.call(e, "Sign") && t.uint32(18).string(e.Sign),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.CommonHandShake; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.TS = e.int32();
                              break;
                          case 2:
                              n.Sign = e.string();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.TS && e.hasOwnProperty("TS") && !f.isInteger(e.TS) ? "TS: integer expected" : null != e.Sign && e.hasOwnProperty("Sign") && !f.isString(e.Sign) ? "Sign: string expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.CommonHandShake)
                          return e;
                      var t = new y.msg.CommonHandShake;
                      return null != e.TS && (t.TS = 0 | e.TS),
                      null != e.Sign && (t.Sign = String(e.Sign)),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.TS = 0,
                      r.Sign = ""),
                      null != e.TS && e.hasOwnProperty("TS") && (r.TS = e.TS),
                      null != e.Sign && e.hasOwnProperty("Sign") && (r.Sign = e.Sign),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.ResponseDesc = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Code = 0,
                  e.prototype.Msg = "",
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Code && Object.hasOwnProperty.call(e, "Code") && t.uint32(8).int32(e.Code),
                      null != e.Msg && Object.hasOwnProperty.call(e, "Msg") && t.uint32(18).string(e.Msg),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.ResponseDesc; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Code = e.int32();
                              break;
                          case 2:
                              n.Msg = e.string();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.Code && e.hasOwnProperty("Code"))
                          switch (e.Code) {
                          default:
                              return "Code: enum value expected";
                          case 0:
                          case 1:
                          case 2:
                          case 3:
                          case 4:
                          case 5:
                          case 6:
                          case 7:
                          case 8:
                          case 9:
                          case 10:
                          }
                      return null != e.Msg && e.hasOwnProperty("Msg") && !f.isString(e.Msg) ? "Msg: string expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.ResponseDesc)
                          return e;
                      var t = new y.msg.ResponseDesc;
                      switch (e.Code) {
                      case "RC_Success":
                      case 0:
                          t.Code = 0;
                          break;
                      case "RC_UnknowErr":
                      case 1:
                          t.Code = 1;
                          break;
                      case "RC_Sign":
                      case 2:
                          t.Code = 2;
                          break;
                      case "RC_ParamLack":
                      case 3:
                          t.Code = 3;
                          break;
                      case "RC_DBErr":
                      case 4:
                          t.Code = 4;
                          break;
                      case "RC_RedisErr":
                      case 5:
                          t.Code = 5;
                          break;
                      case "RC_SessionErr":
                      case 6:
                          t.Code = 6;
                          break;
                      case "RC_ParamErr":
                      case 7:
                          t.Code = 7;
                          break;
                      case "RC_NoRight":
                      case 8:
                          t.Code = 8;
                          break;
                      case "RC_LogicErr":
                      case 9:
                          t.Code = 9;
                          break;
                      case "RC_SveTips":
                      case 10:
                          t.Code = 10
                      }
                      return null != e.Msg && (t.Msg = String(e.Msg)),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Code = t.enums === String ? "RC_Success" : 0,
                      r.Msg = ""),
                      null != e.Code && e.hasOwnProperty("Code") && (r.Code = t.enums === String ? y.msg.ResponseCode[e.Code] : e.Code),
                      null != e.Msg && e.hasOwnProperty("Msg") && (r.Msg = e.Msg),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.LoginLogin = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Code = "",
                  e.prototype.OpenID = "",
                  e.prototype.OS = "",
                  e.prototype.Avatar = "",
                  e.prototype.Nick = "",
                  e.prototype.Plr = null,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Code && Object.hasOwnProperty.call(e, "Code") && t.uint32(10).string(e.Code),
                      null != e.OpenID && Object.hasOwnProperty.call(e, "OpenID") && t.uint32(18).string(e.OpenID),
                      null != e.OS && Object.hasOwnProperty.call(e, "OS") && t.uint32(26).string(e.OS),
                      null != e.Avatar && Object.hasOwnProperty.call(e, "Avatar") && t.uint32(34).string(e.Avatar),
                      null != e.Nick && Object.hasOwnProperty.call(e, "Nick") && t.uint32(42).string(e.Nick),
                      null != e.Plr && Object.hasOwnProperty.call(e, "Plr") && y.msg.PlayerData.encode(e.Plr, t.uint32(50).fork()).ldelim(),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.LoginLogin; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Code = e.string();
                              break;
                          case 2:
                              n.OpenID = e.string();
                              break;
                          case 3:
                              n.OS = e.string();
                              break;
                          case 4:
                              n.Avatar = e.string();
                              break;
                          case 5:
                              n.Nick = e.string();
                              break;
                          case 6:
                              n.Plr = y.msg.PlayerData.decode(e, e.uint32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.Code && e.hasOwnProperty("Code") && !f.isString(e.Code))
                          return "Code: string expected";
                      if (null != e.OpenID && e.hasOwnProperty("OpenID") && !f.isString(e.OpenID))
                          return "OpenID: string expected";
                      if (null != e.OS && e.hasOwnProperty("OS") && !f.isString(e.OS))
                          return "OS: string expected";
                      if (null != e.Avatar && e.hasOwnProperty("Avatar") && !f.isString(e.Avatar))
                          return "Avatar: string expected";
                      if (null != e.Nick && e.hasOwnProperty("Nick") && !f.isString(e.Nick))
                          return "Nick: string expected";
                      if (null != e.Plr && e.hasOwnProperty("Plr")) {
                          var t = y.msg.PlayerData.verify(e.Plr);
                          if (t)
                              return "Plr." + t
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.LoginLogin)
                          return e;
                      var t = new y.msg.LoginLogin;
                      if (null != e.Code && (t.Code = String(e.Code)),
                      null != e.OpenID && (t.OpenID = String(e.OpenID)),
                      null != e.OS && (t.OS = String(e.OS)),
                      null != e.Avatar && (t.Avatar = String(e.Avatar)),
                      null != e.Nick && (t.Nick = String(e.Nick)),
                      null != e.Plr) {
                          if ("object" != typeof e.Plr)
                              throw TypeError(".msg.LoginLogin.Plr: object expected");
                          t.Plr = y.msg.PlayerData.fromObject(e.Plr)
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Code = "",
                      r.OpenID = "",
                      r.OS = "",
                      r.Avatar = "",
                      r.Nick = "",
                      r.Plr = null),
                      null != e.Code && e.hasOwnProperty("Code") && (r.Code = e.Code),
                      null != e.OpenID && e.hasOwnProperty("OpenID") && (r.OpenID = e.OpenID),
                      null != e.OS && e.hasOwnProperty("OS") && (r.OS = e.OS),
                      null != e.Avatar && e.hasOwnProperty("Avatar") && (r.Avatar = e.Avatar),
                      null != e.Nick && e.hasOwnProperty("Nick") && (r.Nick = e.Nick),
                      null != e.Plr && e.hasOwnProperty("Plr") && (r.Plr = y.msg.PlayerData.toObject(e.Plr, t)),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.LoginFail = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Type = 0,
                  e.prototype.Tips = "",
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Type && Object.hasOwnProperty.call(e, "Type") && t.uint32(8).int32(e.Type),
                      null != e.Tips && Object.hasOwnProperty.call(e, "Tips") && t.uint32(18).string(e.Tips),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.LoginFail; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Type = e.int32();
                              break;
                          case 2:
                              n.Tips = e.string();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.Type && e.hasOwnProperty("Type") && !f.isInteger(e.Type) ? "Type: integer expected" : null != e.Tips && e.hasOwnProperty("Tips") && !f.isString(e.Tips) ? "Tips: string expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.LoginFail)
                          return e;
                      var t = new y.msg.LoginFail;
                      return null != e.Type && (t.Type = 0 | e.Type),
                      null != e.Tips && (t.Tips = String(e.Tips)),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Type = 0,
                      r.Tips = ""),
                      null != e.Type && e.hasOwnProperty("Type") && (r.Type = e.Type),
                      null != e.Tips && e.hasOwnProperty("Tips") && (r.Tips = e.Tips),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.LogicGMCmd = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Cmd = "",
                  e.prototype.Hero = null,
                  e.prototype.Equipment = null,
                  e.prototype.BUpdate = null,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Cmd && Object.hasOwnProperty.call(e, "Cmd") && t.uint32(10).string(e.Cmd),
                      null != e.Hero && Object.hasOwnProperty.call(e, "Hero") && y.msg.HeroToken.encode(e.Hero, t.uint32(18).fork()).ldelim(),
                      null != e.Equipment && Object.hasOwnProperty.call(e, "Equipment") && y.msg.EquipmentToken.encode(e.Equipment, t.uint32(26).fork()).ldelim(),
                      null != e.BUpdate && Object.hasOwnProperty.call(e, "BUpdate") && y.msg.BattleUpdate.encode(e.BUpdate, t.uint32(34).fork()).ldelim(),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.LogicGMCmd; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Cmd = e.string();
                              break;
                          case 2:
                              n.Hero = y.msg.HeroToken.decode(e, e.uint32());
                              break;
                          case 3:
                              n.Equipment = y.msg.EquipmentToken.decode(e, e.uint32());
                              break;
                          case 4:
                              n.BUpdate = y.msg.BattleUpdate.decode(e, e.uint32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.Cmd && e.hasOwnProperty("Cmd") && !f.isString(e.Cmd) ? "Cmd: string expected" : null != e.Hero && e.hasOwnProperty("Hero") && (t = y.msg.HeroToken.verify(e.Hero)) ? "Hero." + t : null != e.Equipment && e.hasOwnProperty("Equipment") && (t = y.msg.EquipmentToken.verify(e.Equipment)) ? "Equipment." + t : null != e.BUpdate && e.hasOwnProperty("BUpdate") && (t = y.msg.BattleUpdate.verify(e.BUpdate)) ? "BUpdate." + t : null;
                      var t
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.LogicGMCmd)
                          return e;
                      var t = new y.msg.LogicGMCmd;
                      if (null != e.Cmd && (t.Cmd = String(e.Cmd)),
                      null != e.Hero) {
                          if ("object" != typeof e.Hero)
                              throw TypeError(".msg.LogicGMCmd.Hero: object expected");
                          t.Hero = y.msg.HeroToken.fromObject(e.Hero)
                      }
                      if (null != e.Equipment) {
                          if ("object" != typeof e.Equipment)
                              throw TypeError(".msg.LogicGMCmd.Equipment: object expected");
                          t.Equipment = y.msg.EquipmentToken.fromObject(e.Equipment)
                      }
                      if (null != e.BUpdate) {
                          if ("object" != typeof e.BUpdate)
                              throw TypeError(".msg.LogicGMCmd.BUpdate: object expected");
                          t.BUpdate = y.msg.BattleUpdate.fromObject(e.BUpdate)
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Cmd = "",
                      r.Hero = null,
                      r.Equipment = null,
                      r.BUpdate = null),
                      null != e.Cmd && e.hasOwnProperty("Cmd") && (r.Cmd = e.Cmd),
                      null != e.Hero && e.hasOwnProperty("Hero") && (r.Hero = y.msg.HeroToken.toObject(e.Hero, t)),
                      null != e.Equipment && e.hasOwnProperty("Equipment") && (r.Equipment = y.msg.EquipmentToken.toObject(e.Equipment, t)),
                      null != e.BUpdate && e.hasOwnProperty("BUpdate") && (r.BUpdate = y.msg.BattleUpdate.toObject(e.BUpdate, t)),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.LogicSetMain = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.HeroSN = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.HeroSN && Object.hasOwnProperty.call(e, "HeroSN") && t.uint32(8).uint32(e.HeroSN),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.LogicSetMain; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.HeroSN = e.uint32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.HeroSN && e.hasOwnProperty("HeroSN") && !f.isInteger(e.HeroSN) ? "HeroSN: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.LogicSetMain)
                          return e;
                      var t = new y.msg.LogicSetMain;
                      return null != e.HeroSN && (t.HeroSN = e.HeroSN >>> 0),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.HeroSN = 0),
                      null != e.HeroSN && e.hasOwnProperty("HeroSN") && (r.HeroSN = e.HeroSN),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.LogicVitUpdate = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Vit = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Vit && Object.hasOwnProperty.call(e, "Vit") && t.uint32(8).int32(e.Vit),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.LogicVitUpdate; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Vit = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.Vit && e.hasOwnProperty("Vit") && !f.isInteger(e.Vit) ? "Vit: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.LogicVitUpdate)
                          return e;
                      var t = new y.msg.LogicVitUpdate;
                      return null != e.Vit && (t.Vit = 0 | e.Vit),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Vit = 0),
                      null != e.Vit && e.hasOwnProperty("Vit") && (r.Vit = e.Vit),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.LogicSetSetting = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Setting = "",
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Setting && Object.hasOwnProperty.call(e, "Setting") && t.uint32(10).string(e.Setting),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.LogicSetSetting; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Setting = e.string();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.Setting && e.hasOwnProperty("Setting") && !f.isString(e.Setting) ? "Setting: string expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.LogicSetSetting)
                          return e;
                      var t = new y.msg.LogicSetSetting;
                      return null != e.Setting && (t.Setting = String(e.Setting)),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Setting = ""),
                      null != e.Setting && e.hasOwnProperty("Setting") && (r.Setting = e.Setting),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.LogicActivityUpdate = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Activity = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Activity && Object.hasOwnProperty.call(e, "Activity") && t.uint32(8).int32(e.Activity),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.LogicActivityUpdate; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Activity = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.Activity && e.hasOwnProperty("Activity") && !f.isInteger(e.Activity) ? "Activity: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.LogicActivityUpdate)
                          return e;
                      var t = new y.msg.LogicActivityUpdate;
                      return null != e.Activity && (t.Activity = 0 | e.Activity),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Activity = 0),
                      null != e.Activity && e.hasOwnProperty("Activity") && (r.Activity = e.Activity),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.LogicPass = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.PID = 0,
                  e.prototype.Reward = null,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.PID && Object.hasOwnProperty.call(e, "PID") && t.uint32(8).int32(e.PID),
                      null != e.Reward && Object.hasOwnProperty.call(e, "Reward") && y.msg.RewardInfo.encode(e.Reward, t.uint32(18).fork()).ldelim(),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.LogicPass; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.PID = e.int32();
                              break;
                          case 2:
                              n.Reward = y.msg.RewardInfo.decode(e, e.uint32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.PID && e.hasOwnProperty("PID") && !f.isInteger(e.PID))
                          return "PID: integer expected";
                      if (null != e.Reward && e.hasOwnProperty("Reward")) {
                          var t = y.msg.RewardInfo.verify(e.Reward);
                          if (t)
                              return "Reward." + t
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.LogicPass)
                          return e;
                      var t = new y.msg.LogicPass;
                      if (null != e.PID && (t.PID = 0 | e.PID),
                      null != e.Reward) {
                          if ("object" != typeof e.Reward)
                              throw TypeError(".msg.LogicPass.Reward: object expected");
                          t.Reward = y.msg.RewardInfo.fromObject(e.Reward)
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.PID = 0,
                      r.Reward = null),
                      null != e.PID && e.hasOwnProperty("PID") && (r.PID = e.PID),
                      null != e.Reward && e.hasOwnProperty("Reward") && (r.Reward = y.msg.RewardInfo.toObject(e.Reward, t)),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.LogicCoin = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.SenderType = 0,
                  e.prototype.CoinType = 0,
                  e.prototype.CoinVal = "",
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.SenderType && Object.hasOwnProperty.call(e, "SenderType") && t.uint32(8).int32(e.SenderType),
                      null != e.CoinType && Object.hasOwnProperty.call(e, "CoinType") && t.uint32(16).int32(e.CoinType),
                      null != e.CoinVal && Object.hasOwnProperty.call(e, "CoinVal") && t.uint32(26).string(e.CoinVal),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.LogicCoin; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.SenderType = e.int32();
                              break;
                          case 2:
                              n.CoinType = e.int32();
                              break;
                          case 3:
                              n.CoinVal = e.string();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.SenderType && e.hasOwnProperty("SenderType") && !f.isInteger(e.SenderType) ? "SenderType: integer expected" : null != e.CoinType && e.hasOwnProperty("CoinType") && !f.isInteger(e.CoinType) ? "CoinType: integer expected" : null != e.CoinVal && e.hasOwnProperty("CoinVal") && !f.isString(e.CoinVal) ? "CoinVal: string expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.LogicCoin)
                          return e;
                      var t = new y.msg.LogicCoin;
                      return null != e.SenderType && (t.SenderType = 0 | e.SenderType),
                      null != e.CoinType && (t.CoinType = 0 | e.CoinType),
                      null != e.CoinVal && (t.CoinVal = String(e.CoinVal)),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.SenderType = 0,
                      r.CoinType = 0,
                      r.CoinVal = ""),
                      null != e.SenderType && e.hasOwnProperty("SenderType") && (r.SenderType = e.SenderType),
                      null != e.CoinType && e.hasOwnProperty("CoinType") && (r.CoinType = e.CoinType),
                      null != e.CoinVal && e.hasOwnProperty("CoinVal") && (r.CoinVal = e.CoinVal),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.HeroVitUpdate = function() {
                  function e(e) {
                      if (this.HVits = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.HVits = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.HVits && e.HVits.length)
                          for (var r = 0; r < e.HVits.length; ++r)
                              y.msg.HeroVit.encode(e.HVits[r], t.uint32(10).fork()).ldelim();
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.HeroVitUpdate; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.HVits && n.HVits.length || (n.HVits = []),
                              n.HVits.push(y.msg.HeroVit.decode(e, e.uint32()));
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.HVits && e.hasOwnProperty("HVits")) {
                          if (!Array.isArray(e.HVits))
                              return "HVits: array expected";
                          for (var t = 0; t < e.HVits.length; ++t) {
                              var r = y.msg.HeroVit.verify(e.HVits[t]);
                              if (r)
                                  return "HVits." + r
                          }
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.HeroVitUpdate)
                          return e;
                      var t = new y.msg.HeroVitUpdate;
                      if (e.HVits) {
                          if (!Array.isArray(e.HVits))
                              throw TypeError(".msg.HeroVitUpdate.HVits: array expected");
                          t.HVits = [];
                          for (var r = 0; r < e.HVits.length; ++r) {
                              if ("object" != typeof e.HVits[r])
                                  throw TypeError(".msg.HeroVitUpdate.HVits: object expected");
                              t.HVits[r] = y.msg.HeroVit.fromObject(e.HVits[r])
                          }
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.HVits = []),
                      e.HVits && e.HVits.length) {
                          r.HVits = [];
                          for (var n = 0; n < e.HVits.length; ++n)
                              r.HVits[n] = y.msg.HeroVit.toObject(e.HVits[n], t)
                      }
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.EquipmentMerge = function() {
                  function e(e) {
                      if (this.SNAry = [],
                      this.MAry = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.TID = 0,
                  e.prototype.SNAry = f.emptyArray,
                  e.prototype.EToken = null,
                  e.prototype.C2 = "",
                  e.prototype.MAry = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.TID && Object.hasOwnProperty.call(e, "TID") && t.uint32(8).int32(e.TID),
                      null != e.SNAry && e.SNAry.length) {
                          t.uint32(18).fork();
                          for (var r = 0; r < e.SNAry.length; ++r)
                              t.uint32(e.SNAry[r]);
                          t.ldelim()
                      }
                      if (null != e.EToken && Object.hasOwnProperty.call(e, "EToken") && y.msg.EquipmentToken.encode(e.EToken, t.uint32(26).fork()).ldelim(),
                      null != e.C2 && Object.hasOwnProperty.call(e, "C2") && t.uint32(34).string(e.C2),
                      null != e.MAry && e.MAry.length)
                          for (r = 0; r < e.MAry.length; ++r)
                              y.msg.MaterialToken.encode(e.MAry[r], t.uint32(50).fork()).ldelim();
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.EquipmentMerge; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.TID = e.int32();
                              break;
                          case 2:
                              if (n.SNAry && n.SNAry.length || (n.SNAry = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.SNAry.push(e.uint32());
                              else
                                  n.SNAry.push(e.uint32());
                              break;
                          case 3:
                              n.EToken = y.msg.EquipmentToken.decode(e, e.uint32());
                              break;
                          case 4:
                              n.C2 = e.string();
                              break;
                          case 6:
                              n.MAry && n.MAry.length || (n.MAry = []),
                              n.MAry.push(y.msg.MaterialToken.decode(e, e.uint32()));
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.TID && e.hasOwnProperty("TID") && !f.isInteger(e.TID))
                          return "TID: integer expected";
                      if (null != e.SNAry && e.hasOwnProperty("SNAry")) {
                          if (!Array.isArray(e.SNAry))
                              return "SNAry: array expected";
                          for (var t = 0; t < e.SNAry.length; ++t)
                              if (!f.isInteger(e.SNAry[t]))
                                  return "SNAry: integer[] expected"
                      }
                      if (null != e.EToken && e.hasOwnProperty("EToken") && (r = y.msg.EquipmentToken.verify(e.EToken)))
                          return "EToken." + r;
                      if (null != e.C2 && e.hasOwnProperty("C2") && !f.isString(e.C2))
                          return "C2: string expected";
                      if (null != e.MAry && e.hasOwnProperty("MAry")) {
                          if (!Array.isArray(e.MAry))
                              return "MAry: array expected";
                          for (t = 0; t < e.MAry.length; ++t) {
                              var r;
                              if (r = y.msg.MaterialToken.verify(e.MAry[t]))
                                  return "MAry." + r
                          }
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.EquipmentMerge)
                          return e;
                      var t = new y.msg.EquipmentMerge;
                      if (null != e.TID && (t.TID = 0 | e.TID),
                      e.SNAry) {
                          if (!Array.isArray(e.SNAry))
                              throw TypeError(".msg.EquipmentMerge.SNAry: array expected");
                          t.SNAry = [];
                          for (var r = 0; r < e.SNAry.length; ++r)
                              t.SNAry[r] = e.SNAry[r] >>> 0
                      }
                      if (null != e.EToken) {
                          if ("object" != typeof e.EToken)
                              throw TypeError(".msg.EquipmentMerge.EToken: object expected");
                          t.EToken = y.msg.EquipmentToken.fromObject(e.EToken)
                      }
                      if (null != e.C2 && (t.C2 = String(e.C2)),
                      e.MAry) {
                          if (!Array.isArray(e.MAry))
                              throw TypeError(".msg.EquipmentMerge.MAry: array expected");
                          for (t.MAry = [],
                          r = 0; r < e.MAry.length; ++r) {
                              if ("object" != typeof e.MAry[r])
                                  throw TypeError(".msg.EquipmentMerge.MAry: object expected");
                              t.MAry[r] = y.msg.MaterialToken.fromObject(e.MAry[r])
                          }
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.SNAry = [],
                      r.MAry = []),
                      t.defaults && (r.TID = 0,
                      r.EToken = null,
                      r.C2 = ""),
                      null != e.TID && e.hasOwnProperty("TID") && (r.TID = e.TID),
                      e.SNAry && e.SNAry.length) {
                          r.SNAry = [];
                          for (var n = 0; n < e.SNAry.length; ++n)
                              r.SNAry[n] = e.SNAry[n]
                      }
                      if (null != e.EToken && e.hasOwnProperty("EToken") && (r.EToken = y.msg.EquipmentToken.toObject(e.EToken, t)),
                      null != e.C2 && e.hasOwnProperty("C2") && (r.C2 = e.C2),
                      e.MAry && e.MAry.length)
                          for (r.MAry = [],
                          n = 0; n < e.MAry.length; ++n)
                              r.MAry[n] = y.msg.MaterialToken.toObject(e.MAry[n], t);
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.EquipmentLink = function() {
                  function e(e) {
                      if (this.H2EAry = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.H2EAry = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.H2EAry && e.H2EAry.length)
                          for (var r = 0; r < e.H2EAry.length; ++r)
                              y.msg.Hero2Equipment.encode(e.H2EAry[r], t.uint32(10).fork()).ldelim();
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.EquipmentLink; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.H2EAry && n.H2EAry.length || (n.H2EAry = []),
                              n.H2EAry.push(y.msg.Hero2Equipment.decode(e, e.uint32()));
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.H2EAry && e.hasOwnProperty("H2EAry")) {
                          if (!Array.isArray(e.H2EAry))
                              return "H2EAry: array expected";
                          for (var t = 0; t < e.H2EAry.length; ++t) {
                              var r = y.msg.Hero2Equipment.verify(e.H2EAry[t]);
                              if (r)
                                  return "H2EAry." + r
                          }
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.EquipmentLink)
                          return e;
                      var t = new y.msg.EquipmentLink;
                      if (e.H2EAry) {
                          if (!Array.isArray(e.H2EAry))
                              throw TypeError(".msg.EquipmentLink.H2EAry: array expected");
                          t.H2EAry = [];
                          for (var r = 0; r < e.H2EAry.length; ++r) {
                              if ("object" != typeof e.H2EAry[r])
                                  throw TypeError(".msg.EquipmentLink.H2EAry: object expected");
                              t.H2EAry[r] = y.msg.Hero2Equipment.fromObject(e.H2EAry[r])
                          }
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.H2EAry = []),
                      e.H2EAry && e.H2EAry.length) {
                          r.H2EAry = [];
                          for (var n = 0; n < e.H2EAry.length; ++n)
                              r.H2EAry[n] = y.msg.Hero2Equipment.toObject(e.H2EAry[n], t)
                      }
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.EquipmentRepair = function() {
                  function e(e) {
                      if (this.ESN = [],
                      this.MAry = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.ESN = f.emptyArray,
                  e.prototype.C2 = "",
                  e.prototype.MAry = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.ESN && e.ESN.length) {
                          t.uint32(10).fork();
                          for (var r = 0; r < e.ESN.length; ++r)
                              t.uint32(e.ESN[r]);
                          t.ldelim()
                      }
                      if (null != e.C2 && Object.hasOwnProperty.call(e, "C2") && t.uint32(18).string(e.C2),
                      null != e.MAry && e.MAry.length)
                          for (r = 0; r < e.MAry.length; ++r)
                              y.msg.MaterialToken.encode(e.MAry[r], t.uint32(26).fork()).ldelim();
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.EquipmentRepair; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              if (n.ESN && n.ESN.length || (n.ESN = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.ESN.push(e.uint32());
                              else
                                  n.ESN.push(e.uint32());
                              break;
                          case 2:
                              n.C2 = e.string();
                              break;
                          case 3:
                              n.MAry && n.MAry.length || (n.MAry = []),
                              n.MAry.push(y.msg.MaterialToken.decode(e, e.uint32()));
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.ESN && e.hasOwnProperty("ESN")) {
                          if (!Array.isArray(e.ESN))
                              return "ESN: array expected";
                          for (var t = 0; t < e.ESN.length; ++t)
                              if (!f.isInteger(e.ESN[t]))
                                  return "ESN: integer[] expected"
                      }
                      if (null != e.C2 && e.hasOwnProperty("C2") && !f.isString(e.C2))
                          return "C2: string expected";
                      if (null != e.MAry && e.hasOwnProperty("MAry")) {
                          if (!Array.isArray(e.MAry))
                              return "MAry: array expected";
                          for (t = 0; t < e.MAry.length; ++t) {
                              var r = y.msg.MaterialToken.verify(e.MAry[t]);
                              if (r)
                                  return "MAry." + r
                          }
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.EquipmentRepair)
                          return e;
                      var t = new y.msg.EquipmentRepair;
                      if (e.ESN) {
                          if (!Array.isArray(e.ESN))
                              throw TypeError(".msg.EquipmentRepair.ESN: array expected");
                          t.ESN = [];
                          for (var r = 0; r < e.ESN.length; ++r)
                              t.ESN[r] = e.ESN[r] >>> 0
                      }
                      if (null != e.C2 && (t.C2 = String(e.C2)),
                      e.MAry) {
                          if (!Array.isArray(e.MAry))
                              throw TypeError(".msg.EquipmentRepair.MAry: array expected");
                          for (t.MAry = [],
                          r = 0; r < e.MAry.length; ++r) {
                              if ("object" != typeof e.MAry[r])
                                  throw TypeError(".msg.EquipmentRepair.MAry: object expected");
                              t.MAry[r] = y.msg.MaterialToken.fromObject(e.MAry[r])
                          }
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.ESN = [],
                      r.MAry = []),
                      t.defaults && (r.C2 = ""),
                      e.ESN && e.ESN.length) {
                          r.ESN = [];
                          for (var n = 0; n < e.ESN.length; ++n)
                              r.ESN[n] = e.ESN[n]
                      }
                      if (null != e.C2 && e.hasOwnProperty("C2") && (r.C2 = e.C2),
                      e.MAry && e.MAry.length)
                          for (r.MAry = [],
                          n = 0; n < e.MAry.length; ++n)
                              r.MAry[n] = y.msg.MaterialToken.toObject(e.MAry[n], t);
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.StoreBuy = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.MID = 0,
                  e.prototype.Num = 0,
                  e.prototype.MToken = null,
                  e.prototype.C2 = "",
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.MID && Object.hasOwnProperty.call(e, "MID") && t.uint32(8).int32(e.MID),
                      null != e.Num && Object.hasOwnProperty.call(e, "Num") && t.uint32(16).int32(e.Num),
                      null != e.MToken && Object.hasOwnProperty.call(e, "MToken") && y.msg.MaterialToken.encode(e.MToken, t.uint32(26).fork()).ldelim(),
                      null != e.C2 && Object.hasOwnProperty.call(e, "C2") && t.uint32(34).string(e.C2),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.StoreBuy; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.MID = e.int32();
                              break;
                          case 2:
                              n.Num = e.int32();
                              break;
                          case 3:
                              n.MToken = y.msg.MaterialToken.decode(e, e.uint32());
                              break;
                          case 4:
                              n.C2 = e.string();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.MID && e.hasOwnProperty("MID") && !f.isInteger(e.MID))
                          return "MID: integer expected";
                      if (null != e.Num && e.hasOwnProperty("Num") && !f.isInteger(e.Num))
                          return "Num: integer expected";
                      if (null != e.MToken && e.hasOwnProperty("MToken")) {
                          var t = y.msg.MaterialToken.verify(e.MToken);
                          if (t)
                              return "MToken." + t
                      }
                      return null != e.C2 && e.hasOwnProperty("C2") && !f.isString(e.C2) ? "C2: string expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.StoreBuy)
                          return e;
                      var t = new y.msg.StoreBuy;
                      if (null != e.MID && (t.MID = 0 | e.MID),
                      null != e.Num && (t.Num = 0 | e.Num),
                      null != e.MToken) {
                          if ("object" != typeof e.MToken)
                              throw TypeError(".msg.StoreBuy.MToken: object expected");
                          t.MToken = y.msg.MaterialToken.fromObject(e.MToken)
                      }
                      return null != e.C2 && (t.C2 = String(e.C2)),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.MID = 0,
                      r.Num = 0,
                      r.MToken = null,
                      r.C2 = ""),
                      null != e.MID && e.hasOwnProperty("MID") && (r.MID = e.MID),
                      null != e.Num && e.hasOwnProperty("Num") && (r.Num = e.Num),
                      null != e.MToken && e.hasOwnProperty("MToken") && (r.MToken = y.msg.MaterialToken.toObject(e.MToken, t)),
                      null != e.C2 && e.hasOwnProperty("C2") && (r.C2 = e.C2),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.StoreSell = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.MID = 0,
                  e.prototype.Num = 0,
                  e.prototype.C2 = "",
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.MID && Object.hasOwnProperty.call(e, "MID") && t.uint32(8).int32(e.MID),
                      null != e.Num && Object.hasOwnProperty.call(e, "Num") && t.uint32(16).int32(e.Num),
                      null != e.C2 && Object.hasOwnProperty.call(e, "C2") && t.uint32(26).string(e.C2),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.StoreSell; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.MID = e.int32();
                              break;
                          case 2:
                              n.Num = e.int32();
                              break;
                          case 3:
                              n.C2 = e.string();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.MID && e.hasOwnProperty("MID") && !f.isInteger(e.MID) ? "MID: integer expected" : null != e.Num && e.hasOwnProperty("Num") && !f.isInteger(e.Num) ? "Num: integer expected" : null != e.C2 && e.hasOwnProperty("C2") && !f.isString(e.C2) ? "C2: string expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.StoreSell)
                          return e;
                      var t = new y.msg.StoreSell;
                      return null != e.MID && (t.MID = 0 | e.MID),
                      null != e.Num && (t.Num = 0 | e.Num),
                      null != e.C2 && (t.C2 = String(e.C2)),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.MID = 0,
                      r.Num = 0,
                      r.C2 = ""),
                      null != e.MID && e.hasOwnProperty("MID") && (r.MID = e.MID),
                      null != e.Num && e.hasOwnProperty("Num") && (r.Num = e.Num),
                      null != e.C2 && e.hasOwnProperty("C2") && (r.C2 = e.C2),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.StoreChest = function() {
                  function e(e) {
                      if (this.ETokens = [],
                      this.MTokens = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.DID = 0,
                  e.prototype.ChestTime = 0,
                  e.prototype.C1 = "",
                  e.prototype.C2 = "",
                  e.prototype.GainC2 = "",
                  e.prototype.ETokens = f.emptyArray,
                  e.prototype.MTokens = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.DID && Object.hasOwnProperty.call(e, "DID") && t.uint32(8).int32(e.DID),
                      null != e.ChestTime && Object.hasOwnProperty.call(e, "ChestTime") && t.uint32(16).uint32(e.ChestTime),
                      null != e.C1 && Object.hasOwnProperty.call(e, "C1") && t.uint32(26).string(e.C1),
                      null != e.C2 && Object.hasOwnProperty.call(e, "C2") && t.uint32(34).string(e.C2),
                      null != e.GainC2 && Object.hasOwnProperty.call(e, "GainC2") && t.uint32(50).string(e.GainC2),
                      null != e.ETokens && e.ETokens.length)
                          for (var r = 0; r < e.ETokens.length; ++r)
                              y.msg.EquipmentToken.encode(e.ETokens[r], t.uint32(58).fork()).ldelim();
                      if (null != e.MTokens && e.MTokens.length)
                          for (r = 0; r < e.MTokens.length; ++r)
                              y.msg.MaterialToken.encode(e.MTokens[r], t.uint32(66).fork()).ldelim();
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.StoreChest; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.DID = e.int32();
                              break;
                          case 2:
                              n.ChestTime = e.uint32();
                              break;
                          case 3:
                              n.C1 = e.string();
                              break;
                          case 4:
                              n.C2 = e.string();
                              break;
                          case 6:
                              n.GainC2 = e.string();
                              break;
                          case 7:
                              n.ETokens && n.ETokens.length || (n.ETokens = []),
                              n.ETokens.push(y.msg.EquipmentToken.decode(e, e.uint32()));
                              break;
                          case 8:
                              n.MTokens && n.MTokens.length || (n.MTokens = []),
                              n.MTokens.push(y.msg.MaterialToken.decode(e, e.uint32()));
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.DID && e.hasOwnProperty("DID") && !f.isInteger(e.DID))
                          return "DID: integer expected";
                      if (null != e.ChestTime && e.hasOwnProperty("ChestTime") && !f.isInteger(e.ChestTime))
                          return "ChestTime: integer expected";
                      if (null != e.C1 && e.hasOwnProperty("C1") && !f.isString(e.C1))
                          return "C1: string expected";
                      if (null != e.C2 && e.hasOwnProperty("C2") && !f.isString(e.C2))
                          return "C2: string expected";
                      if (null != e.GainC2 && e.hasOwnProperty("GainC2") && !f.isString(e.GainC2))
                          return "GainC2: string expected";
                      if (null != e.ETokens && e.hasOwnProperty("ETokens")) {
                          if (!Array.isArray(e.ETokens))
                              return "ETokens: array expected";
                          for (var t = 0; t < e.ETokens.length; ++t)
                              if (r = y.msg.EquipmentToken.verify(e.ETokens[t]))
                                  return "ETokens." + r
                      }
                      if (null != e.MTokens && e.hasOwnProperty("MTokens")) {
                          if (!Array.isArray(e.MTokens))
                              return "MTokens: array expected";
                          for (t = 0; t < e.MTokens.length; ++t) {
                              var r;
                              if (r = y.msg.MaterialToken.verify(e.MTokens[t]))
                                  return "MTokens." + r
                          }
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.StoreChest)
                          return e;
                      var t = new y.msg.StoreChest;
                      if (null != e.DID && (t.DID = 0 | e.DID),
                      null != e.ChestTime && (t.ChestTime = e.ChestTime >>> 0),
                      null != e.C1 && (t.C1 = String(e.C1)),
                      null != e.C2 && (t.C2 = String(e.C2)),
                      null != e.GainC2 && (t.GainC2 = String(e.GainC2)),
                      e.ETokens) {
                          if (!Array.isArray(e.ETokens))
                              throw TypeError(".msg.StoreChest.ETokens: array expected");
                          t.ETokens = [];
                          for (var r = 0; r < e.ETokens.length; ++r) {
                              if ("object" != typeof e.ETokens[r])
                                  throw TypeError(".msg.StoreChest.ETokens: object expected");
                              t.ETokens[r] = y.msg.EquipmentToken.fromObject(e.ETokens[r])
                          }
                      }
                      if (e.MTokens) {
                          if (!Array.isArray(e.MTokens))
                              throw TypeError(".msg.StoreChest.MTokens: array expected");
                          for (t.MTokens = [],
                          r = 0; r < e.MTokens.length; ++r) {
                              if ("object" != typeof e.MTokens[r])
                                  throw TypeError(".msg.StoreChest.MTokens: object expected");
                              t.MTokens[r] = y.msg.MaterialToken.fromObject(e.MTokens[r])
                          }
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.ETokens = [],
                      r.MTokens = []),
                      t.defaults && (r.DID = 0,
                      r.ChestTime = 0,
                      r.C1 = "",
                      r.C2 = "",
                      r.GainC2 = ""),
                      null != e.DID && e.hasOwnProperty("DID") && (r.DID = e.DID),
                      null != e.ChestTime && e.hasOwnProperty("ChestTime") && (r.ChestTime = e.ChestTime),
                      null != e.C1 && e.hasOwnProperty("C1") && (r.C1 = e.C1),
                      null != e.C2 && e.hasOwnProperty("C2") && (r.C2 = e.C2),
                      null != e.GainC2 && e.hasOwnProperty("GainC2") && (r.GainC2 = e.GainC2),
                      e.ETokens && e.ETokens.length) {
                          r.ETokens = [];
                          for (var n = 0; n < e.ETokens.length; ++n)
                              r.ETokens[n] = y.msg.EquipmentToken.toObject(e.ETokens[n], t)
                      }
                      if (e.MTokens && e.MTokens.length)
                          for (r.MTokens = [],
                          n = 0; n < e.MTokens.length; ++n)
                              r.MTokens[n] = y.msg.MaterialToken.toObject(e.MTokens[n], t);
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.GameStart = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.HeroSN = 0,
                  e.prototype.Chapter = 0,
                  e.prototype.Skin = 0,
                  e.prototype.Mode = 0,
                  e.prototype.Field = null,
                  e.prototype.DurCost = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.HeroSN && Object.hasOwnProperty.call(e, "HeroSN") && t.uint32(8).uint32(e.HeroSN),
                      null != e.Chapter && Object.hasOwnProperty.call(e, "Chapter") && t.uint32(16).int32(e.Chapter),
                      null != e.Skin && Object.hasOwnProperty.call(e, "Skin") && t.uint32(24).int32(e.Skin),
                      null != e.Mode && Object.hasOwnProperty.call(e, "Mode") && t.uint32(32).int32(e.Mode),
                      null != e.Field && Object.hasOwnProperty.call(e, "Field") && y.msg.BattleField.encode(e.Field, t.uint32(42).fork()).ldelim(),
                      null != e.DurCost && Object.hasOwnProperty.call(e, "DurCost") && t.uint32(48).int32(e.DurCost),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.GameStart; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.HeroSN = e.uint32();
                              break;
                          case 2:
                              n.Chapter = e.int32();
                              break;
                          case 3:
                              n.Skin = e.int32();
                              break;
                          case 4:
                              n.Mode = e.int32();
                              break;
                          case 5:
                              n.Field = y.msg.BattleField.decode(e, e.uint32());
                              break;
                          case 6:
                              n.DurCost = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.HeroSN && e.hasOwnProperty("HeroSN") && !f.isInteger(e.HeroSN))
                          return "HeroSN: integer expected";
                      if (null != e.Chapter && e.hasOwnProperty("Chapter") && !f.isInteger(e.Chapter))
                          return "Chapter: integer expected";
                      if (null != e.Skin && e.hasOwnProperty("Skin") && !f.isInteger(e.Skin))
                          return "Skin: integer expected";
                      if (null != e.Mode && e.hasOwnProperty("Mode") && !f.isInteger(e.Mode))
                          return "Mode: integer expected";
                      if (null != e.Field && e.hasOwnProperty("Field")) {
                          var t = y.msg.BattleField.verify(e.Field);
                          if (t)
                              return "Field." + t
                      }
                      return null != e.DurCost && e.hasOwnProperty("DurCost") && !f.isInteger(e.DurCost) ? "DurCost: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.GameStart)
                          return e;
                      var t = new y.msg.GameStart;
                      if (null != e.HeroSN && (t.HeroSN = e.HeroSN >>> 0),
                      null != e.Chapter && (t.Chapter = 0 | e.Chapter),
                      null != e.Skin && (t.Skin = 0 | e.Skin),
                      null != e.Mode && (t.Mode = 0 | e.Mode),
                      null != e.Field) {
                          if ("object" != typeof e.Field)
                              throw TypeError(".msg.GameStart.Field: object expected");
                          t.Field = y.msg.BattleField.fromObject(e.Field)
                      }
                      return null != e.DurCost && (t.DurCost = 0 | e.DurCost),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.HeroSN = 0,
                      r.Chapter = 0,
                      r.Skin = 0,
                      r.Mode = 0,
                      r.Field = null,
                      r.DurCost = 0),
                      null != e.HeroSN && e.hasOwnProperty("HeroSN") && (r.HeroSN = e.HeroSN),
                      null != e.Chapter && e.hasOwnProperty("Chapter") && (r.Chapter = e.Chapter),
                      null != e.Skin && e.hasOwnProperty("Skin") && (r.Skin = e.Skin),
                      null != e.Mode && e.hasOwnProperty("Mode") && (r.Mode = e.Mode),
                      null != e.Field && e.hasOwnProperty("Field") && (r.Field = y.msg.BattleField.toObject(e.Field, t)),
                      null != e.DurCost && e.hasOwnProperty("DurCost") && (r.DurCost = e.DurCost),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.GameLoaded = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.GameLoaded; e.pos < r; ) {
                          var o = e.uint32();
                          e.skipType(7 & o)
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      return e instanceof y.msg.GameLoaded ? e : new y.msg.GameLoaded
                  }
                  ,
                  e.toObject = function() {
                      return {}
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.GameDone = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.State = 0,
                  e.prototype.StageRecord = 0,
                  e.prototype.Shop = null,
                  e.prototype.RealDrop = null,
                  e.prototype.Update = null,
                  e.prototype.FinalScore = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.State && Object.hasOwnProperty.call(e, "State") && t.uint32(8).int32(e.State),
                      null != e.StageRecord && Object.hasOwnProperty.call(e, "StageRecord") && t.uint32(16).int32(e.StageRecord),
                      null != e.Shop && Object.hasOwnProperty.call(e, "Shop") && y.msg.BattleShop.encode(e.Shop, t.uint32(26).fork()).ldelim(),
                      null != e.RealDrop && Object.hasOwnProperty.call(e, "RealDrop") && y.msg.DropInfo.encode(e.RealDrop, t.uint32(34).fork()).ldelim(),
                      null != e.Update && Object.hasOwnProperty.call(e, "Update") && y.msg.BattleUpdate.encode(e.Update, t.uint32(42).fork()).ldelim(),
                      null != e.FinalScore && Object.hasOwnProperty.call(e, "FinalScore") && t.uint32(48).int32(e.FinalScore),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.GameDone; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.State = e.int32();
                              break;
                          case 2:
                              n.StageRecord = e.int32();
                              break;
                          case 3:
                              n.Shop = y.msg.BattleShop.decode(e, e.uint32());
                              break;
                          case 4:
                              n.RealDrop = y.msg.DropInfo.decode(e, e.uint32());
                              break;
                          case 5:
                              n.Update = y.msg.BattleUpdate.decode(e, e.uint32());
                              break;
                          case 6:
                              n.FinalScore = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.State && e.hasOwnProperty("State"))
                          switch (e.State) {
                          default:
                              return "State: enum value expected";
                          case 0:
                          case 1:
                          case 2:
                          case 3:
                          case 4:
                          case 5:
                          case 6:
                          }
                      return null != e.StageRecord && e.hasOwnProperty("StageRecord") && !f.isInteger(e.StageRecord) ? "StageRecord: integer expected" : null != e.Shop && e.hasOwnProperty("Shop") && (t = y.msg.BattleShop.verify(e.Shop)) ? "Shop." + t : null != e.RealDrop && e.hasOwnProperty("RealDrop") && (t = y.msg.DropInfo.verify(e.RealDrop)) ? "RealDrop." + t : null != e.Update && e.hasOwnProperty("Update") && (t = y.msg.BattleUpdate.verify(e.Update)) ? "Update." + t : null != e.FinalScore && e.hasOwnProperty("FinalScore") && !f.isInteger(e.FinalScore) ? "FinalScore: integer expected" : null;
                      var t
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.GameDone)
                          return e;
                      var t = new y.msg.GameDone;
                      switch (e.State) {
                      case "GS_Loading":
                      case 0:
                          t.State = 0;
                          break;
                      case "GS_Spawn":
                      case 1:
                          t.State = 1;
                          break;
                      case "GS_Shopping":
                      case 2:
                          t.State = 2;
                          break;
                      case "GS_Win":
                      case 3:
                          t.State = 3;
                          break;
                      case "GS_Lose":
                      case 4:
                          t.State = 4;
                          break;
                      case "GS_Quit":
                      case 5:
                          t.State = 5;
                          break;
                      case "GS_Exception":
                      case 6:
                          t.State = 6
                      }
                      if (null != e.StageRecord && (t.StageRecord = 0 | e.StageRecord),
                      null != e.Shop) {
                          if ("object" != typeof e.Shop)
                              throw TypeError(".msg.GameDone.Shop: object expected");
                          t.Shop = y.msg.BattleShop.fromObject(e.Shop)
                      }
                      if (null != e.RealDrop) {
                          if ("object" != typeof e.RealDrop)
                              throw TypeError(".msg.GameDone.RealDrop: object expected");
                          t.RealDrop = y.msg.DropInfo.fromObject(e.RealDrop)
                      }
                      if (null != e.Update) {
                          if ("object" != typeof e.Update)
                              throw TypeError(".msg.GameDone.Update: object expected");
                          t.Update = y.msg.BattleUpdate.fromObject(e.Update)
                      }
                      return null != e.FinalScore && (t.FinalScore = 0 | e.FinalScore),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.State = t.enums === String ? "GS_Loading" : 0,
                      r.StageRecord = 0,
                      r.Shop = null,
                      r.RealDrop = null,
                      r.Update = null,
                      r.FinalScore = 0),
                      null != e.State && e.hasOwnProperty("State") && (r.State = t.enums === String ? y.msg.GameState[e.State] : e.State),
                      null != e.StageRecord && e.hasOwnProperty("StageRecord") && (r.StageRecord = e.StageRecord),
                      null != e.Shop && e.hasOwnProperty("Shop") && (r.Shop = y.msg.BattleShop.toObject(e.Shop, t)),
                      null != e.RealDrop && e.hasOwnProperty("RealDrop") && (r.RealDrop = y.msg.DropInfo.toObject(e.RealDrop, t)),
                      null != e.Update && e.hasOwnProperty("Update") && (r.Update = y.msg.BattleUpdate.toObject(e.Update, t)),
                      null != e.FinalScore && e.hasOwnProperty("FinalScore") && (r.FinalScore = e.FinalScore),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.GamePause = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Pause = !1,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Pause && Object.hasOwnProperty.call(e, "Pause") && t.uint32(8).bool(e.Pause),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.GamePause; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Pause = e.bool();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.Pause && e.hasOwnProperty("Pause") && "boolean" != typeof e.Pause ? "Pause: boolean expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.GamePause)
                          return e;
                      var t = new y.msg.GamePause;
                      return null != e.Pause && (t.Pause = Boolean(e.Pause)),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Pause = !1),
                      null != e.Pause && e.hasOwnProperty("Pause") && (r.Pause = e.Pause),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.GameShopOperate = function() {
                  function e(e) {
                      if (this.OpVal = [],
                      this.RefreshGold = [],
                      this.Goods = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Op = 0,
                  e.prototype.OpVal = f.emptyArray,
                  e.prototype.AddGold = 0,
                  e.prototype.ChestItem = 0,
                  e.prototype.RefreshGold = f.emptyArray,
                  e.prototype.Goods = f.emptyArray,
                  e.prototype.Update = null,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.Op && Object.hasOwnProperty.call(e, "Op") && t.uint32(8).int32(e.Op),
                      null != e.OpVal && e.OpVal.length) {
                          t.uint32(18).fork();
                          for (var r = 0; r < e.OpVal.length; ++r)
                              t.int32(e.OpVal[r]);
                          t.ldelim()
                      }
                      if (null != e.AddGold && Object.hasOwnProperty.call(e, "AddGold") && t.uint32(24).int32(e.AddGold),
                      null != e.ChestItem && Object.hasOwnProperty.call(e, "ChestItem") && t.uint32(32).int32(e.ChestItem),
                      null != e.RefreshGold && e.RefreshGold.length) {
                          for (t.uint32(42).fork(),
                          r = 0; r < e.RefreshGold.length; ++r)
                              t.int32(e.RefreshGold[r]);
                          t.ldelim()
                      }
                      if (null != e.Goods && e.Goods.length)
                          for (r = 0; r < e.Goods.length; ++r)
                              y.msg.BattleShopGoods.encode(e.Goods[r], t.uint32(50).fork()).ldelim();
                      return null != e.Update && Object.hasOwnProperty.call(e, "Update") && y.msg.BattleUpdate.encode(e.Update, t.uint32(58).fork()).ldelim(),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.GameShopOperate; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Op = e.int32();
                              break;
                          case 2:
                              if (n.OpVal && n.OpVal.length || (n.OpVal = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.OpVal.push(e.int32());
                              else
                                  n.OpVal.push(e.int32());
                              break;
                          case 3:
                              n.AddGold = e.int32();
                              break;
                          case 4:
                              n.ChestItem = e.int32();
                              break;
                          case 5:
                              if (n.RefreshGold && n.RefreshGold.length || (n.RefreshGold = []),
                              2 == (7 & o))
                                  for (i = e.uint32() + e.pos; e.pos < i; )
                                      n.RefreshGold.push(e.int32());
                              else
                                  n.RefreshGold.push(e.int32());
                              break;
                          case 6:
                              n.Goods && n.Goods.length || (n.Goods = []),
                              n.Goods.push(y.msg.BattleShopGoods.decode(e, e.uint32()));
                              break;
                          case 7:
                              n.Update = y.msg.BattleUpdate.decode(e, e.uint32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.Op && e.hasOwnProperty("Op"))
                          switch (e.Op) {
                          default:
                              return "Op: enum value expected";
                          case 0:
                          case 1:
                          case 2:
                          case 3:
                          case 4:
                          case 5:
                          case 6:
                          case 7:
                          case 8:
                          }
                      if (null != e.OpVal && e.hasOwnProperty("OpVal")) {
                          if (!Array.isArray(e.OpVal))
                              return "OpVal: array expected";
                          for (var t = 0; t < e.OpVal.length; ++t)
                              if (!f.isInteger(e.OpVal[t]))
                                  return "OpVal: integer[] expected"
                      }
                      if (null != e.AddGold && e.hasOwnProperty("AddGold") && !f.isInteger(e.AddGold))
                          return "AddGold: integer expected";
                      if (null != e.ChestItem && e.hasOwnProperty("ChestItem") && !f.isInteger(e.ChestItem))
                          return "ChestItem: integer expected";
                      if (null != e.RefreshGold && e.hasOwnProperty("RefreshGold")) {
                          if (!Array.isArray(e.RefreshGold))
                              return "RefreshGold: array expected";
                          for (t = 0; t < e.RefreshGold.length; ++t)
                              if (!f.isInteger(e.RefreshGold[t]))
                                  return "RefreshGold: integer[] expected"
                      }
                      if (null != e.Goods && e.hasOwnProperty("Goods")) {
                          if (!Array.isArray(e.Goods))
                              return "Goods: array expected";
                          for (t = 0; t < e.Goods.length; ++t)
                              if (r = y.msg.BattleShopGoods.verify(e.Goods[t]))
                                  return "Goods." + r
                      }
                      var r;
                      return null != e.Update && e.hasOwnProperty("Update") && (r = y.msg.BattleUpdate.verify(e.Update)) ? "Update." + r : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.GameShopOperate)
                          return e;
                      var t = new y.msg.GameShopOperate;
                      switch (e.Op) {
                      case "GSO_ChestSell":
                      case 0:
                          t.Op = 0;
                          break;
                      case "GSO_ChestCollect":
                      case 1:
                          t.Op = 1;
                          break;
                      case "GSO_ItemSell":
                      case 2:
                          t.Op = 2;
                          break;
                      case "GSO_WeaponSell":
                      case 3:
                          t.Op = 3;
                          break;
                      case "GSO_WeaponMerge":
                      case 4:
                          t.Op = 4;
                          break;
                      case "GSO_GoodsRefresh":
                      case 5:
                          t.Op = 5;
                          break;
                      case "GSO_GoodsBuy":
                      case 6:
                          t.Op = 6;
                          break;
                      case "GSO_GoodsLock":
                      case 7:
                          t.Op = 7;
                          break;
                      case "GSO_GoodsClose":
                      case 8:
                          t.Op = 8
                      }
                      if (e.OpVal) {
                          if (!Array.isArray(e.OpVal))
                              throw TypeError(".msg.GameShopOperate.OpVal: array expected");
                          t.OpVal = [];
                          for (var r = 0; r < e.OpVal.length; ++r)
                              t.OpVal[r] = 0 | e.OpVal[r]
                      }
                      if (null != e.AddGold && (t.AddGold = 0 | e.AddGold),
                      null != e.ChestItem && (t.ChestItem = 0 | e.ChestItem),
                      e.RefreshGold) {
                          if (!Array.isArray(e.RefreshGold))
                              throw TypeError(".msg.GameShopOperate.RefreshGold: array expected");
                          for (t.RefreshGold = [],
                          r = 0; r < e.RefreshGold.length; ++r)
                              t.RefreshGold[r] = 0 | e.RefreshGold[r]
                      }
                      if (e.Goods) {
                          if (!Array.isArray(e.Goods))
                              throw TypeError(".msg.GameShopOperate.Goods: array expected");
                          for (t.Goods = [],
                          r = 0; r < e.Goods.length; ++r) {
                              if ("object" != typeof e.Goods[r])
                                  throw TypeError(".msg.GameShopOperate.Goods: object expected");
                              t.Goods[r] = y.msg.BattleShopGoods.fromObject(e.Goods[r])
                          }
                      }
                      if (null != e.Update) {
                          if ("object" != typeof e.Update)
                              throw TypeError(".msg.GameShopOperate.Update: object expected");
                          t.Update = y.msg.BattleUpdate.fromObject(e.Update)
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.OpVal = [],
                      r.RefreshGold = [],
                      r.Goods = []),
                      t.defaults && (r.Op = t.enums === String ? "GSO_ChestSell" : 0,
                      r.AddGold = 0,
                      r.ChestItem = 0,
                      r.Update = null),
                      null != e.Op && e.hasOwnProperty("Op") && (r.Op = t.enums === String ? y.msg.GameShopOpType[e.Op] : e.Op),
                      e.OpVal && e.OpVal.length) {
                          r.OpVal = [];
                          for (var n = 0; n < e.OpVal.length; ++n)
                              r.OpVal[n] = e.OpVal[n]
                      }
                      if (null != e.AddGold && e.hasOwnProperty("AddGold") && (r.AddGold = e.AddGold),
                      null != e.ChestItem && e.hasOwnProperty("ChestItem") && (r.ChestItem = e.ChestItem),
                      e.RefreshGold && e.RefreshGold.length)
                          for (r.RefreshGold = [],
                          n = 0; n < e.RefreshGold.length; ++n)
                              r.RefreshGold[n] = e.RefreshGold[n];
                      if (e.Goods && e.Goods.length)
                          for (r.Goods = [],
                          n = 0; n < e.Goods.length; ++n)
                              r.Goods[n] = y.msg.BattleShopGoods.toObject(e.Goods[n], t);
                      return null != e.Update && e.hasOwnProperty("Update") && (r.Update = y.msg.BattleUpdate.toObject(e.Update, t)),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.GameQuit = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.GameQuit; e.pos < r; ) {
                          var o = e.uint32();
                          e.skipType(7 & o)
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      return e instanceof y.msg.GameQuit ? e : new y.msg.GameQuit
                  }
                  ,
                  e.toObject = function() {
                      return {}
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.GameSpawn = function() {
                  function e(e) {
                      if (this.Spawn = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Spawn = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.Spawn && e.Spawn.length)
                          for (var r = 0; r < e.Spawn.length; ++r)
                              y.msg.BattleSpawn.encode(e.Spawn[r], t.uint32(10).fork()).ldelim();
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.GameSpawn; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Spawn && n.Spawn.length || (n.Spawn = []),
                              n.Spawn.push(y.msg.BattleSpawn.decode(e, e.uint32()));
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.Spawn && e.hasOwnProperty("Spawn")) {
                          if (!Array.isArray(e.Spawn))
                              return "Spawn: array expected";
                          for (var t = 0; t < e.Spawn.length; ++t) {
                              var r = y.msg.BattleSpawn.verify(e.Spawn[t]);
                              if (r)
                                  return "Spawn." + r
                          }
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.GameSpawn)
                          return e;
                      var t = new y.msg.GameSpawn;
                      if (e.Spawn) {
                          if (!Array.isArray(e.Spawn))
                              throw TypeError(".msg.GameSpawn.Spawn: array expected");
                          t.Spawn = [];
                          for (var r = 0; r < e.Spawn.length; ++r) {
                              if ("object" != typeof e.Spawn[r])
                                  throw TypeError(".msg.GameSpawn.Spawn: object expected");
                              t.Spawn[r] = y.msg.BattleSpawn.fromObject(e.Spawn[r])
                          }
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.Spawn = []),
                      e.Spawn && e.Spawn.length) {
                          r.Spawn = [];
                          for (var n = 0; n < e.Spawn.length; ++n)
                              r.Spawn[n] = y.msg.BattleSpawn.toObject(e.Spawn[n], t)
                      }
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.GameHeartbeat = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Cnt = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Cnt && Object.hasOwnProperty.call(e, "Cnt") && t.uint32(8).int32(e.Cnt),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.GameHeartbeat; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Cnt = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.Cnt && e.hasOwnProperty("Cnt") && !f.isInteger(e.Cnt) ? "Cnt: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.GameHeartbeat)
                          return e;
                      var t = new y.msg.GameHeartbeat;
                      return null != e.Cnt && (t.Cnt = 0 | e.Cnt),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Cnt = 0),
                      null != e.Cnt && e.hasOwnProperty("Cnt") && (r.Cnt = e.Cnt),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.GameMonsterAtk = function() {
                  function e(e) {
                      if (this.Atks = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Atks = f.emptyArray,
                  e.prototype.DmgInfo = null,
                  e.prototype.Heal = null,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.Atks && e.Atks.length)
                          for (var r = 0; r < e.Atks.length; ++r)
                              y.msg.BattleMonsterAtk.encode(e.Atks[r], t.uint32(10).fork()).ldelim();
                      return null != e.DmgInfo && Object.hasOwnProperty.call(e, "DmgInfo") && y.msg.BattleDmg.encode(e.DmgInfo, t.uint32(26).fork()).ldelim(),
                      null != e.Heal && Object.hasOwnProperty.call(e, "Heal") && y.msg.BattleHeal.encode(e.Heal, t.uint32(34).fork()).ldelim(),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.GameMonsterAtk; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Atks && n.Atks.length || (n.Atks = []),
                              n.Atks.push(y.msg.BattleMonsterAtk.decode(e, e.uint32()));
                              break;
                          case 3:
                              n.DmgInfo = y.msg.BattleDmg.decode(e, e.uint32());
                              break;
                          case 4:
                              n.Heal = y.msg.BattleHeal.decode(e, e.uint32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.Atks && e.hasOwnProperty("Atks")) {
                          if (!Array.isArray(e.Atks))
                              return "Atks: array expected";
                          for (var t = 0; t < e.Atks.length; ++t)
                              if (r = y.msg.BattleMonsterAtk.verify(e.Atks[t]))
                                  return "Atks." + r
                      }
                      var r;
                      return null != e.DmgInfo && e.hasOwnProperty("DmgInfo") && (r = y.msg.BattleDmg.verify(e.DmgInfo)) ? "DmgInfo." + r : null != e.Heal && e.hasOwnProperty("Heal") && (r = y.msg.BattleHeal.verify(e.Heal)) ? "Heal." + r : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.GameMonsterAtk)
                          return e;
                      var t = new y.msg.GameMonsterAtk;
                      if (e.Atks) {
                          if (!Array.isArray(e.Atks))
                              throw TypeError(".msg.GameMonsterAtk.Atks: array expected");
                          t.Atks = [];
                          for (var r = 0; r < e.Atks.length; ++r) {
                              if ("object" != typeof e.Atks[r])
                                  throw TypeError(".msg.GameMonsterAtk.Atks: object expected");
                              t.Atks[r] = y.msg.BattleMonsterAtk.fromObject(e.Atks[r])
                          }
                      }
                      if (null != e.DmgInfo) {
                          if ("object" != typeof e.DmgInfo)
                              throw TypeError(".msg.GameMonsterAtk.DmgInfo: object expected");
                          t.DmgInfo = y.msg.BattleDmg.fromObject(e.DmgInfo)
                      }
                      if (null != e.Heal) {
                          if ("object" != typeof e.Heal)
                              throw TypeError(".msg.GameMonsterAtk.Heal: object expected");
                          t.Heal = y.msg.BattleHeal.fromObject(e.Heal)
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.Atks = []),
                      t.defaults && (r.DmgInfo = null,
                      r.Heal = null),
                      e.Atks && e.Atks.length) {
                          r.Atks = [];
                          for (var n = 0; n < e.Atks.length; ++n)
                              r.Atks[n] = y.msg.BattleMonsterAtk.toObject(e.Atks[n], t)
                      }
                      return null != e.DmgInfo && e.hasOwnProperty("DmgInfo") && (r.DmgInfo = y.msg.BattleDmg.toObject(e.DmgInfo, t)),
                      null != e.Heal && e.hasOwnProperty("Heal") && (r.Heal = y.msg.BattleHeal.toObject(e.Heal, t)),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.GameCharAtk = function() {
                  function e(e) {
                      if (this.AOInfo = [],
                      this.CltDmg = [],
                      this.Heal = [],
                      this.DropItems = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.AOT = 0,
                  e.prototype.AOInfo = f.emptyArray,
                  e.prototype.CltDmg = f.emptyArray,
                  e.prototype.Heal = f.emptyArray,
                  e.prototype.DropItems = f.emptyArray,
                  e.prototype.AddScore = 0,
                  e.prototype.DChest = null,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.AOT && Object.hasOwnProperty.call(e, "AOT") && t.uint32(8).int32(e.AOT),
                      null != e.AOInfo && e.AOInfo.length) {
                          t.uint32(18).fork();
                          for (var r = 0; r < e.AOInfo.length; ++r)
                              t.int32(e.AOInfo[r]);
                          t.ldelim()
                      }
                      if (null != e.CltDmg && e.CltDmg.length)
                          for (r = 0; r < e.CltDmg.length; ++r)
                              y.msg.BattleDmg.encode(e.CltDmg[r], t.uint32(34).fork()).ldelim();
                      if (null != e.Heal && e.Heal.length)
                          for (r = 0; r < e.Heal.length; ++r)
                              y.msg.BattleHeal.encode(e.Heal[r], t.uint32(42).fork()).ldelim();
                      if (null != e.DropItems && e.DropItems.length)
                          for (r = 0; r < e.DropItems.length; ++r)
                              y.msg.BattleTileItem.encode(e.DropItems[r], t.uint32(50).fork()).ldelim();
                      return null != e.AddScore && Object.hasOwnProperty.call(e, "AddScore") && t.uint32(56).int32(e.AddScore),
                      null != e.DChest && Object.hasOwnProperty.call(e, "DChest") && y.msg.DropChest.encode(e.DChest, t.uint32(66).fork()).ldelim(),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.GameCharAtk; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.AOT = e.int32();
                              break;
                          case 2:
                              if (n.AOInfo && n.AOInfo.length || (n.AOInfo = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.AOInfo.push(e.int32());
                              else
                                  n.AOInfo.push(e.int32());
                              break;
                          case 4:
                              n.CltDmg && n.CltDmg.length || (n.CltDmg = []),
                              n.CltDmg.push(y.msg.BattleDmg.decode(e, e.uint32()));
                              break;
                          case 5:
                              n.Heal && n.Heal.length || (n.Heal = []),
                              n.Heal.push(y.msg.BattleHeal.decode(e, e.uint32()));
                              break;
                          case 6:
                              n.DropItems && n.DropItems.length || (n.DropItems = []),
                              n.DropItems.push(y.msg.BattleTileItem.decode(e, e.uint32()));
                              break;
                          case 7:
                              n.AddScore = e.int32();
                              break;
                          case 8:
                              n.DChest = y.msg.DropChest.decode(e, e.uint32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.AOT && e.hasOwnProperty("AOT"))
                          switch (e.AOT) {
                          default:
                              return "AOT: enum value expected";
                          case 0:
                          case 1:
                          case 2:
                          case 3:
                          case 4:
                          }
                      if (null != e.AOInfo && e.hasOwnProperty("AOInfo")) {
                          if (!Array.isArray(e.AOInfo))
                              return "AOInfo: array expected";
                          for (var t = 0; t < e.AOInfo.length; ++t)
                              if (!f.isInteger(e.AOInfo[t]))
                                  return "AOInfo: integer[] expected"
                      }
                      if (null != e.CltDmg && e.hasOwnProperty("CltDmg")) {
                          if (!Array.isArray(e.CltDmg))
                              return "CltDmg: array expected";
                          for (t = 0; t < e.CltDmg.length; ++t)
                              if (r = y.msg.BattleDmg.verify(e.CltDmg[t]))
                                  return "CltDmg." + r
                      }
                      if (null != e.Heal && e.hasOwnProperty("Heal")) {
                          if (!Array.isArray(e.Heal))
                              return "Heal: array expected";
                          for (t = 0; t < e.Heal.length; ++t)
                              if (r = y.msg.BattleHeal.verify(e.Heal[t]))
                                  return "Heal." + r
                      }
                      if (null != e.DropItems && e.hasOwnProperty("DropItems")) {
                          if (!Array.isArray(e.DropItems))
                              return "DropItems: array expected";
                          for (t = 0; t < e.DropItems.length; ++t)
                              if (r = y.msg.BattleTileItem.verify(e.DropItems[t]))
                                  return "DropItems." + r
                      }
                      return null != e.AddScore && e.hasOwnProperty("AddScore") && !f.isInteger(e.AddScore) ? "AddScore: integer expected" : null != e.DChest && e.hasOwnProperty("DChest") && (r = y.msg.DropChest.verify(e.DChest)) ? "DChest." + r : null;
                      var r
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.GameCharAtk)
                          return e;
                      var t = new y.msg.GameCharAtk;
                      switch (e.AOT) {
                      case "AOT_Weapon":
                      case 0:
                          t.AOT = 0;
                          break;
                      case "AOT_Tower":
                      case 1:
                          t.AOT = 1;
                          break;
                      case "AOT_Talent":
                      case 2:
                          t.AOT = 2;
                          break;
                      case "AOT_Monster":
                      case 3:
                          t.AOT = 3;
                          break;
                      case "AOT_Item":
                      case 4:
                          t.AOT = 4
                      }
                      if (e.AOInfo) {
                          if (!Array.isArray(e.AOInfo))
                              throw TypeError(".msg.GameCharAtk.AOInfo: array expected");
                          t.AOInfo = [];
                          for (var r = 0; r < e.AOInfo.length; ++r)
                              t.AOInfo[r] = 0 | e.AOInfo[r]
                      }
                      if (e.CltDmg) {
                          if (!Array.isArray(e.CltDmg))
                              throw TypeError(".msg.GameCharAtk.CltDmg: array expected");
                          for (t.CltDmg = [],
                          r = 0; r < e.CltDmg.length; ++r) {
                              if ("object" != typeof e.CltDmg[r])
                                  throw TypeError(".msg.GameCharAtk.CltDmg: object expected");
                              t.CltDmg[r] = y.msg.BattleDmg.fromObject(e.CltDmg[r])
                          }
                      }
                      if (e.Heal) {
                          if (!Array.isArray(e.Heal))
                              throw TypeError(".msg.GameCharAtk.Heal: array expected");
                          for (t.Heal = [],
                          r = 0; r < e.Heal.length; ++r) {
                              if ("object" != typeof e.Heal[r])
                                  throw TypeError(".msg.GameCharAtk.Heal: object expected");
                              t.Heal[r] = y.msg.BattleHeal.fromObject(e.Heal[r])
                          }
                      }
                      if (e.DropItems) {
                          if (!Array.isArray(e.DropItems))
                              throw TypeError(".msg.GameCharAtk.DropItems: array expected");
                          for (t.DropItems = [],
                          r = 0; r < e.DropItems.length; ++r) {
                              if ("object" != typeof e.DropItems[r])
                                  throw TypeError(".msg.GameCharAtk.DropItems: object expected");
                              t.DropItems[r] = y.msg.BattleTileItem.fromObject(e.DropItems[r])
                          }
                      }
                      if (null != e.AddScore && (t.AddScore = 0 | e.AddScore),
                      null != e.DChest) {
                          if ("object" != typeof e.DChest)
                              throw TypeError(".msg.GameCharAtk.DChest: object expected");
                          t.DChest = y.msg.DropChest.fromObject(e.DChest)
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.AOInfo = [],
                      r.CltDmg = [],
                      r.Heal = [],
                      r.DropItems = []),
                      t.defaults && (r.AOT = t.enums === String ? "AOT_Weapon" : 0,
                      r.AddScore = 0,
                      r.DChest = null),
                      null != e.AOT && e.hasOwnProperty("AOT") && (r.AOT = t.enums === String ? y.msg.AtkObjType[e.AOT] : e.AOT),
                      e.AOInfo && e.AOInfo.length) {
                          r.AOInfo = [];
                          for (var n = 0; n < e.AOInfo.length; ++n)
                              r.AOInfo[n] = e.AOInfo[n]
                      }
                      if (e.CltDmg && e.CltDmg.length)
                          for (r.CltDmg = [],
                          n = 0; n < e.CltDmg.length; ++n)
                              r.CltDmg[n] = y.msg.BattleDmg.toObject(e.CltDmg[n], t);
                      if (e.Heal && e.Heal.length)
                          for (r.Heal = [],
                          n = 0; n < e.Heal.length; ++n)
                              r.Heal[n] = y.msg.BattleHeal.toObject(e.Heal[n], t);
                      if (e.DropItems && e.DropItems.length)
                          for (r.DropItems = [],
                          n = 0; n < e.DropItems.length; ++n)
                              r.DropItems[n] = y.msg.BattleTileItem.toObject(e.DropItems[n], t);
                      return null != e.AddScore && e.hasOwnProperty("AddScore") && (r.AddScore = e.AddScore),
                      null != e.DChest && e.hasOwnProperty("DChest") && (r.DChest = y.msg.DropChest.toObject(e.DChest, t)),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.GameDmgEx = function() {
                  function e(e) {
                      if (this.CltDmg = [],
                      this.DropItems = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.CltDmg = f.emptyArray,
                  e.prototype.DropItems = f.emptyArray,
                  e.prototype.AddScore = 0,
                  e.prototype.DChest = null,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.CltDmg && e.CltDmg.length)
                          for (var r = 0; r < e.CltDmg.length; ++r)
                              y.msg.BattleDmgEx.encode(e.CltDmg[r], t.uint32(10).fork()).ldelim();
                      if (null != e.DropItems && e.DropItems.length)
                          for (r = 0; r < e.DropItems.length; ++r)
                              y.msg.BattleTileItem.encode(e.DropItems[r], t.uint32(18).fork()).ldelim();
                      return null != e.AddScore && Object.hasOwnProperty.call(e, "AddScore") && t.uint32(24).int32(e.AddScore),
                      null != e.DChest && Object.hasOwnProperty.call(e, "DChest") && y.msg.DropChest.encode(e.DChest, t.uint32(34).fork()).ldelim(),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.GameDmgEx; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.CltDmg && n.CltDmg.length || (n.CltDmg = []),
                              n.CltDmg.push(y.msg.BattleDmgEx.decode(e, e.uint32()));
                              break;
                          case 2:
                              n.DropItems && n.DropItems.length || (n.DropItems = []),
                              n.DropItems.push(y.msg.BattleTileItem.decode(e, e.uint32()));
                              break;
                          case 3:
                              n.AddScore = e.int32();
                              break;
                          case 4:
                              n.DChest = y.msg.DropChest.decode(e, e.uint32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.CltDmg && e.hasOwnProperty("CltDmg")) {
                          if (!Array.isArray(e.CltDmg))
                              return "CltDmg: array expected";
                          for (var t = 0; t < e.CltDmg.length; ++t)
                              if (r = y.msg.BattleDmgEx.verify(e.CltDmg[t]))
                                  return "CltDmg." + r
                      }
                      if (null != e.DropItems && e.hasOwnProperty("DropItems")) {
                          if (!Array.isArray(e.DropItems))
                              return "DropItems: array expected";
                          for (t = 0; t < e.DropItems.length; ++t)
                              if (r = y.msg.BattleTileItem.verify(e.DropItems[t]))
                                  return "DropItems." + r
                      }
                      return null != e.AddScore && e.hasOwnProperty("AddScore") && !f.isInteger(e.AddScore) ? "AddScore: integer expected" : null != e.DChest && e.hasOwnProperty("DChest") && (r = y.msg.DropChest.verify(e.DChest)) ? "DChest." + r : null;
                      var r
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.GameDmgEx)
                          return e;
                      var t = new y.msg.GameDmgEx;
                      if (e.CltDmg) {
                          if (!Array.isArray(e.CltDmg))
                              throw TypeError(".msg.GameDmgEx.CltDmg: array expected");
                          t.CltDmg = [];
                          for (var r = 0; r < e.CltDmg.length; ++r) {
                              if ("object" != typeof e.CltDmg[r])
                                  throw TypeError(".msg.GameDmgEx.CltDmg: object expected");
                              t.CltDmg[r] = y.msg.BattleDmgEx.fromObject(e.CltDmg[r])
                          }
                      }
                      if (e.DropItems) {
                          if (!Array.isArray(e.DropItems))
                              throw TypeError(".msg.GameDmgEx.DropItems: array expected");
                          for (t.DropItems = [],
                          r = 0; r < e.DropItems.length; ++r) {
                              if ("object" != typeof e.DropItems[r])
                                  throw TypeError(".msg.GameDmgEx.DropItems: object expected");
                              t.DropItems[r] = y.msg.BattleTileItem.fromObject(e.DropItems[r])
                          }
                      }
                      if (null != e.AddScore && (t.AddScore = 0 | e.AddScore),
                      null != e.DChest) {
                          if ("object" != typeof e.DChest)
                              throw TypeError(".msg.GameDmgEx.DChest: object expected");
                          t.DChest = y.msg.DropChest.fromObject(e.DChest)
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.CltDmg = [],
                      r.DropItems = []),
                      t.defaults && (r.AddScore = 0,
                      r.DChest = null),
                      e.CltDmg && e.CltDmg.length) {
                          r.CltDmg = [];
                          for (var n = 0; n < e.CltDmg.length; ++n)
                              r.CltDmg[n] = y.msg.BattleDmgEx.toObject(e.CltDmg[n], t)
                      }
                      if (e.DropItems && e.DropItems.length)
                          for (r.DropItems = [],
                          n = 0; n < e.DropItems.length; ++n)
                              r.DropItems[n] = y.msg.BattleTileItem.toObject(e.DropItems[n], t);
                      return null != e.AddScore && e.hasOwnProperty("AddScore") && (r.AddScore = e.AddScore),
                      null != e.DChest && e.hasOwnProperty("DChest") && (r.DChest = y.msg.DropChest.toObject(e.DChest, t)),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.GamePick = function() {
                  function e(e) {
                      if (this.Pos = [],
                      this.HPAttr = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Type = 0,
                  e.prototype.Pos = f.emptyArray,
                  e.prototype.Heal = null,
                  e.prototype.HPAttr = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.Type && Object.hasOwnProperty.call(e, "Type") && t.uint32(8).int32(e.Type),
                      null != e.Pos && e.Pos.length) {
                          t.uint32(18).fork();
                          for (var r = 0; r < e.Pos.length; ++r)
                              t.int32(e.Pos[r]);
                          t.ldelim()
                      }
                      if (null != e.Heal && Object.hasOwnProperty.call(e, "Heal") && y.msg.BattleHeal.encode(e.Heal, t.uint32(26).fork()).ldelim(),
                      null != e.HPAttr && e.HPAttr.length) {
                          for (t.uint32(34).fork(),
                          r = 0; r < e.HPAttr.length; ++r)
                              t.int32(e.HPAttr[r]);
                          t.ldelim()
                      }
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.GamePick; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Type = e.int32();
                              break;
                          case 2:
                              if (n.Pos && n.Pos.length || (n.Pos = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.Pos.push(e.int32());
                              else
                                  n.Pos.push(e.int32());
                              break;
                          case 3:
                              n.Heal = y.msg.BattleHeal.decode(e, e.uint32());
                              break;
                          case 4:
                              if (n.HPAttr && n.HPAttr.length || (n.HPAttr = []),
                              2 == (7 & o))
                                  for (i = e.uint32() + e.pos; e.pos < i; )
                                      n.HPAttr.push(e.int32());
                              else
                                  n.HPAttr.push(e.int32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.Type && e.hasOwnProperty("Type") && !f.isInteger(e.Type))
                          return "Type: integer expected";
                      if (null != e.Pos && e.hasOwnProperty("Pos")) {
                          if (!Array.isArray(e.Pos))
                              return "Pos: array expected";
                          for (var t = 0; t < e.Pos.length; ++t)
                              if (!f.isInteger(e.Pos[t]))
                                  return "Pos: integer[] expected"
                      }
                      if (null != e.Heal && e.hasOwnProperty("Heal")) {
                          var r = y.msg.BattleHeal.verify(e.Heal);
                          if (r)
                              return "Heal." + r
                      }
                      if (null != e.HPAttr && e.hasOwnProperty("HPAttr")) {
                          if (!Array.isArray(e.HPAttr))
                              return "HPAttr: array expected";
                          for (t = 0; t < e.HPAttr.length; ++t)
                              if (!f.isInteger(e.HPAttr[t]))
                                  return "HPAttr: integer[] expected"
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.GamePick)
                          return e;
                      var t = new y.msg.GamePick;
                      if (null != e.Type && (t.Type = 0 | e.Type),
                      e.Pos) {
                          if (!Array.isArray(e.Pos))
                              throw TypeError(".msg.GamePick.Pos: array expected");
                          t.Pos = [];
                          for (var r = 0; r < e.Pos.length; ++r)
                              t.Pos[r] = 0 | e.Pos[r]
                      }
                      if (null != e.Heal) {
                          if ("object" != typeof e.Heal)
                              throw TypeError(".msg.GamePick.Heal: object expected");
                          t.Heal = y.msg.BattleHeal.fromObject(e.Heal)
                      }
                      if (e.HPAttr) {
                          if (!Array.isArray(e.HPAttr))
                              throw TypeError(".msg.GamePick.HPAttr: array expected");
                          for (t.HPAttr = [],
                          r = 0; r < e.HPAttr.length; ++r)
                              t.HPAttr[r] = 0 | e.HPAttr[r]
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.Pos = [],
                      r.HPAttr = []),
                      t.defaults && (r.Type = 0,
                      r.Heal = null),
                      null != e.Type && e.hasOwnProperty("Type") && (r.Type = e.Type),
                      e.Pos && e.Pos.length) {
                          r.Pos = [];
                          for (var n = 0; n < e.Pos.length; ++n)
                              r.Pos[n] = e.Pos[n]
                      }
                      if (null != e.Heal && e.hasOwnProperty("Heal") && (r.Heal = y.msg.BattleHeal.toObject(e.Heal, t)),
                      e.HPAttr && e.HPAttr.length)
                          for (r.HPAttr = [],
                          n = 0; n < e.HPAttr.length; ++n)
                              r.HPAttr[n] = e.HPAttr[n];
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.GameWeaponUpdate = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.WSN = 0,
                  e.prototype.WUpdate = null,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.WSN && Object.hasOwnProperty.call(e, "WSN") && t.uint32(8).int32(e.WSN),
                      null != e.WUpdate && Object.hasOwnProperty.call(e, "WUpdate") && y.msg.BattleWeaponUpdate.encode(e.WUpdate, t.uint32(18).fork()).ldelim(),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.GameWeaponUpdate; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.WSN = e.int32();
                              break;
                          case 2:
                              n.WUpdate = y.msg.BattleWeaponUpdate.decode(e, e.uint32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.WSN && e.hasOwnProperty("WSN") && !f.isInteger(e.WSN))
                          return "WSN: integer expected";
                      if (null != e.WUpdate && e.hasOwnProperty("WUpdate")) {
                          var t = y.msg.BattleWeaponUpdate.verify(e.WUpdate);
                          if (t)
                              return "WUpdate." + t
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.GameWeaponUpdate)
                          return e;
                      var t = new y.msg.GameWeaponUpdate;
                      if (null != e.WSN && (t.WSN = 0 | e.WSN),
                      null != e.WUpdate) {
                          if ("object" != typeof e.WUpdate)
                              throw TypeError(".msg.GameWeaponUpdate.WUpdate: object expected");
                          t.WUpdate = y.msg.BattleWeaponUpdate.fromObject(e.WUpdate)
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.WSN = 0,
                      r.WUpdate = null),
                      null != e.WSN && e.hasOwnProperty("WSN") && (r.WSN = e.WSN),
                      null != e.WUpdate && e.hasOwnProperty("WUpdate") && (r.WUpdate = y.msg.BattleWeaponUpdate.toObject(e.WUpdate, t)),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.GameLifeRecover = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Heal = null,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Heal && Object.hasOwnProperty.call(e, "Heal") && y.msg.BattleHeal.encode(e.Heal, t.uint32(10).fork()).ldelim(),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.GameLifeRecover; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Heal = y.msg.BattleHeal.decode(e, e.uint32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.Heal && e.hasOwnProperty("Heal")) {
                          var t = y.msg.BattleHeal.verify(e.Heal);
                          if (t)
                              return "Heal." + t
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.GameLifeRecover)
                          return e;
                      var t = new y.msg.GameLifeRecover;
                      if (null != e.Heal) {
                          if ("object" != typeof e.Heal)
                              throw TypeError(".msg.GameLifeRecover.Heal: object expected");
                          t.Heal = y.msg.BattleHeal.fromObject(e.Heal)
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Heal = null),
                      null != e.Heal && e.hasOwnProperty("Heal") && (r.Heal = y.msg.BattleHeal.toObject(e.Heal, t)),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.GameBossSkill = function() {
                  function e(e) {
                      if (this.Spawn = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.BossSN = 0,
                  e.prototype.Spawn = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.BossSN && Object.hasOwnProperty.call(e, "BossSN") && t.uint32(8).int32(e.BossSN),
                      null != e.Spawn && e.Spawn.length)
                          for (var r = 0; r < e.Spawn.length; ++r)
                              y.msg.BattleSpawn.encode(e.Spawn[r], t.uint32(18).fork()).ldelim();
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.GameBossSkill; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.BossSN = e.int32();
                              break;
                          case 2:
                              n.Spawn && n.Spawn.length || (n.Spawn = []),
                              n.Spawn.push(y.msg.BattleSpawn.decode(e, e.uint32()));
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.BossSN && e.hasOwnProperty("BossSN") && !f.isInteger(e.BossSN))
                          return "BossSN: integer expected";
                      if (null != e.Spawn && e.hasOwnProperty("Spawn")) {
                          if (!Array.isArray(e.Spawn))
                              return "Spawn: array expected";
                          for (var t = 0; t < e.Spawn.length; ++t) {
                              var r = y.msg.BattleSpawn.verify(e.Spawn[t]);
                              if (r)
                                  return "Spawn." + r
                          }
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.GameBossSkill)
                          return e;
                      var t = new y.msg.GameBossSkill;
                      if (null != e.BossSN && (t.BossSN = 0 | e.BossSN),
                      e.Spawn) {
                          if (!Array.isArray(e.Spawn))
                              throw TypeError(".msg.GameBossSkill.Spawn: array expected");
                          t.Spawn = [];
                          for (var r = 0; r < e.Spawn.length; ++r) {
                              if ("object" != typeof e.Spawn[r])
                                  throw TypeError(".msg.GameBossSkill.Spawn: object expected");
                              t.Spawn[r] = y.msg.BattleSpawn.fromObject(e.Spawn[r])
                          }
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.Spawn = []),
                      t.defaults && (r.BossSN = 0),
                      null != e.BossSN && e.hasOwnProperty("BossSN") && (r.BossSN = e.BossSN),
                      e.Spawn && e.Spawn.length) {
                          r.Spawn = [];
                          for (var n = 0; n < e.Spawn.length; ++n)
                              r.Spawn[n] = y.msg.BattleSpawn.toObject(e.Spawn[n], t)
                      }
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.LogType = (a = {},
              (l = Object.create(a))[a[0] = "LT_Nothing"] = 0,
              l[a[1] = "LT_EquipmentMerge"] = 1,
              l[a[2] = "LT_EquipmentRepair"] = 2,
              l[a[32] = "LT_BattleLaunch"] = 32,
              l[a[33] = "LT_BattleFinish"] = 33,
              l[a[64] = "LT_StoreBuy"] = 64,
              l[a[65] = "LT_StoreSell"] = 65,
              l[a[66] = "LT_StoreChest"] = 66,
              l[a[80] = "LT_PassReward"] = 80,
              l[a[81] = "LT_Purchase"] = 81,
              l[a[82] = "LT_Operator"] = 82,
              l[a[83] = "LT_Backpack"] = 83,
              l[a[256] = "LT_GM_Hero"] = 256,
              l[a[257] = "LT_GM_Equipment"] = 257,
              l[a[258] = "LT_GM_Material"] = 258,
              l),
              s.ResponseCode = function() {
                  var e = {}
                    , t = Object.create(e);
                  return t[e[0] = "RC_Success"] = 0,
                  t[e[1] = "RC_UnknowErr"] = 1,
                  t[e[2] = "RC_Sign"] = 2,
                  t[e[3] = "RC_ParamLack"] = 3,
                  t[e[4] = "RC_DBErr"] = 4,
                  t[e[5] = "RC_RedisErr"] = 5,
                  t[e[6] = "RC_SessionErr"] = 6,
                  t[e[7] = "RC_ParamErr"] = 7,
                  t[e[8] = "RC_NoRight"] = 8,
                  t[e[9] = "RC_LogicErr"] = 9,
                  t[e[10] = "RC_SveTips"] = 10,
                  t
              }(),
              s.BattleVer = function() {
                  var e = {}
                    , t = Object.create(e);
                  return t[e[0] = "BV_Ver0"] = 0,
                  t[e[1] = "BV_Cur"] = 1,
                  t
              }(),
              s.GameState = function() {
                  var e = {}
                    , t = Object.create(e);
                  return t[e[0] = "GS_Loading"] = 0,
                  t[e[1] = "GS_Spawn"] = 1,
                  t[e[2] = "GS_Shopping"] = 2,
                  t[e[3] = "GS_Win"] = 3,
                  t[e[4] = "GS_Lose"] = 4,
                  t[e[5] = "GS_Quit"] = 5,
                  t[e[6] = "GS_Exception"] = 6,
                  t
              }(),
              s.ClassType = function() {
                  var e = {}
                    , t = Object.create(e);
                  return t[e[0] = "CT_Nothing"] = 0,
                  t[e[1] = "CT_Human"] = 1,
                  t[e[2] = "CT_Orc"] = 2,
                  t[e[3] = "CT_Elf"] = 3,
                  t[e[4] = "CT_Undead"] = 4,
                  t[e[5] = "CT_Cyborg"] = 5,
                  t[e[6] = "CT_Firefolk"] = 6,
                  t[e[7] = "CT_Lightling"] = 7,
                  t[e[8] = "CT_Turing"] = 8,
                  t[e[9] = "CT_Spirit"] = 9,
                  t[e[10] = "CT_NoClass"] = 10,
                  t
              }(),
              s.AttrType = function() {
                  var e = {}
                    , t = Object.create(e);
                  return t[e[0] = "AT_CurLife"] = 0,
                  t[e[1] = "AT_MaxLife"] = 1,
                  t[e[2] = "AT_Dmg"] = 2,
                  t[e[3] = "AT_Defense"] = 3,
                  t[e[4] = "AT_BaseMoveSpeed"] = 4,
                  t[e[5] = "AT_AtkRange"] = 5,
                  t[e[6] = "AT_AtkLength"] = 6,
                  t[e[7] = "AT_KnockbackReduce"] = 7,
                  t[e[8] = "AT_IncreaseChargeSpeed"] = 8,
                  t[e[9] = "AT_CollisionCD"] = 9,
                  t[e[10] = "AT_AtkCD"] = 10,
                  t[e[11] = "AT_RealMoveSpeed"] = 11,
                  t[e[12] = "AT_CollisionRadius"] = 12,
                  t[e[13] = "AT_WeaponMax"] = 13,
                  t[e[14] = "AT_LifeRecover"] = 14,
                  t[e[15] = "AT_IncreaseDot"] = 15,
                  t[e[16] = "AT_AtkSpeed"] = 16,
                  t[e[17] = "AT_IncreaseMoveSpeed"] = 17,
                  t[e[18] = "AT_CriticalRate"] = 18,
                  t[e[19] = "AT_CriticalDmg"] = 19,
                  t[e[20] = "AT_Dodge"] = 20,
                  t[e[21] = "AT_Enr"] = 21,
                  t[e[22] = "AT_Luck"] = 22,
                  t[e[23] = "AT_Knockback"] = 23,
                  t[e[24] = "AT_EnhanceHeal"] = 24,
                  t[e[25] = "AT_IncreaseDmg"] = 25,
                  t[e[26] = "AT_PickRange"] = 26,
                  t[e[28] = "AT_Max"] = 28,
                  t
              }(),
              s.WeaponAttrType = function() {
                  var e = {}
                    , t = Object.create(e);
                  return t[e[0] = "WAT_Dmg"] = 0,
                  t[e[1] = "WAT_DmgCritical"] = 1,
                  t[e[2] = "WAT_AtkRange"] = 2,
                  t[e[3] = "WAT_AtkLength"] = 3,
                  t[e[4] = "WAT_Knockback"] = 4,
                  t[e[5] = "WAT_DotDmg"] = 5,
                  t
              }(),
              s.AtkObjType = function() {
                  var e = {}
                    , t = Object.create(e);
                  return t[e[0] = "AOT_Weapon"] = 0,
                  t[e[1] = "AOT_Tower"] = 1,
                  t[e[2] = "AOT_Talent"] = 2,
                  t[e[3] = "AOT_Monster"] = 3,
                  t[e[4] = "AOT_Item"] = 4,
                  t
              }(),
              s.GameShopOpType = function() {
                  var e = {}
                    , t = Object.create(e);
                  return t[e[0] = "GSO_ChestSell"] = 0,
                  t[e[1] = "GSO_ChestCollect"] = 1,
                  t[e[2] = "GSO_ItemSell"] = 2,
                  t[e[3] = "GSO_WeaponSell"] = 3,
                  t[e[4] = "GSO_WeaponMerge"] = 4,
                  t[e[5] = "GSO_GoodsRefresh"] = 5,
                  t[e[6] = "GSO_GoodsBuy"] = 6,
                  t[e[7] = "GSO_GoodsLock"] = 7,
                  t[e[8] = "GSO_GoodsClose"] = 8,
                  t
              }(),
              s.BattleTileItemType = function() {
                  var e = {}
                    , t = Object.create(e);
                  return t[e[0] = "BTI_Coin"] = 0,
                  t[e[1] = "BTI_Chest"] = 1,
                  t[e[2] = "BTI_Potion"] = 2,
                  t
              }(),
              s.PlayerData = function() {
                  function e(e) {
                      if (this.HTokens = [],
                      this.ETokens = [],
                      this.StageRecord = [],
                      this.MTokens = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.User = null,
                  e.prototype.HTokens = f.emptyArray,
                  e.prototype.ETokens = f.emptyArray,
                  e.prototype.Third = null,
                  e.prototype.StageRecord = f.emptyArray,
                  e.prototype.MTokens = f.emptyArray,
                  e.prototype.BField = null,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.User && Object.hasOwnProperty.call(e, "User") && y.msg.UserPart.encode(e.User, t.uint32(10).fork()).ldelim(),
                      null != e.HTokens && e.HTokens.length)
                          for (var r = 0; r < e.HTokens.length; ++r)
                              y.msg.HeroToken.encode(e.HTokens[r], t.uint32(18).fork()).ldelim();
                      if (null != e.ETokens && e.ETokens.length)
                          for (r = 0; r < e.ETokens.length; ++r)
                              y.msg.EquipmentToken.encode(e.ETokens[r], t.uint32(26).fork()).ldelim();
                      if (null != e.Third && Object.hasOwnProperty.call(e, "Third") && y.msg.ThirdPartyInfo.encode(e.Third, t.uint32(34).fork()).ldelim(),
                      null != e.StageRecord && e.StageRecord.length) {
                          for (t.uint32(42).fork(),
                          r = 0; r < e.StageRecord.length; ++r)
                              t.int32(e.StageRecord[r]);
                          t.ldelim()
                      }
                      if (null != e.MTokens && e.MTokens.length)
                          for (r = 0; r < e.MTokens.length; ++r)
                              y.msg.MaterialToken.encode(e.MTokens[r], t.uint32(50).fork()).ldelim();
                      return null != e.BField && Object.hasOwnProperty.call(e, "BField") && y.msg.BattleField.encode(e.BField, t.uint32(58).fork()).ldelim(),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.PlayerData; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.User = y.msg.UserPart.decode(e, e.uint32());
                              break;
                          case 2:
                              n.HTokens && n.HTokens.length || (n.HTokens = []),
                              n.HTokens.push(y.msg.HeroToken.decode(e, e.uint32()));
                              break;
                          case 3:
                              n.ETokens && n.ETokens.length || (n.ETokens = []),
                              n.ETokens.push(y.msg.EquipmentToken.decode(e, e.uint32()));
                              break;
                          case 4:
                              n.Third = y.msg.ThirdPartyInfo.decode(e, e.uint32());
                              break;
                          case 5:
                              if (n.StageRecord && n.StageRecord.length || (n.StageRecord = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.StageRecord.push(e.int32());
                              else
                                  n.StageRecord.push(e.int32());
                              break;
                          case 6:
                              n.MTokens && n.MTokens.length || (n.MTokens = []),
                              n.MTokens.push(y.msg.MaterialToken.decode(e, e.uint32()));
                              break;
                          case 7:
                              n.BField = y.msg.BattleField.decode(e, e.uint32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.User && e.hasOwnProperty("User") && (r = y.msg.UserPart.verify(e.User)))
                          return "User." + r;
                      if (null != e.HTokens && e.hasOwnProperty("HTokens")) {
                          if (!Array.isArray(e.HTokens))
                              return "HTokens: array expected";
                          for (var t = 0; t < e.HTokens.length; ++t)
                              if (r = y.msg.HeroToken.verify(e.HTokens[t]))
                                  return "HTokens." + r
                      }
                      if (null != e.ETokens && e.hasOwnProperty("ETokens")) {
                          if (!Array.isArray(e.ETokens))
                              return "ETokens: array expected";
                          for (t = 0; t < e.ETokens.length; ++t)
                              if (r = y.msg.EquipmentToken.verify(e.ETokens[t]))
                                  return "ETokens." + r
                      }
                      if (null != e.Third && e.hasOwnProperty("Third") && (r = y.msg.ThirdPartyInfo.verify(e.Third)))
                          return "Third." + r;
                      if (null != e.StageRecord && e.hasOwnProperty("StageRecord")) {
                          if (!Array.isArray(e.StageRecord))
                              return "StageRecord: array expected";
                          for (t = 0; t < e.StageRecord.length; ++t)
                              if (!f.isInteger(e.StageRecord[t]))
                                  return "StageRecord: integer[] expected"
                      }
                      if (null != e.MTokens && e.hasOwnProperty("MTokens")) {
                          if (!Array.isArray(e.MTokens))
                              return "MTokens: array expected";
                          for (t = 0; t < e.MTokens.length; ++t) {
                              var r;
                              if (r = y.msg.MaterialToken.verify(e.MTokens[t]))
                                  return "MTokens." + r
                          }
                      }
                      return null != e.BField && e.hasOwnProperty("BField") && (r = y.msg.BattleField.verify(e.BField)) ? "BField." + r : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.PlayerData)
                          return e;
                      var t = new y.msg.PlayerData;
                      if (null != e.User) {
                          if ("object" != typeof e.User)
                              throw TypeError(".msg.PlayerData.User: object expected");
                          t.User = y.msg.UserPart.fromObject(e.User)
                      }
                      if (e.HTokens) {
                          if (!Array.isArray(e.HTokens))
                              throw TypeError(".msg.PlayerData.HTokens: array expected");
                          t.HTokens = [];
                          for (var r = 0; r < e.HTokens.length; ++r) {
                              if ("object" != typeof e.HTokens[r])
                                  throw TypeError(".msg.PlayerData.HTokens: object expected");
                              t.HTokens[r] = y.msg.HeroToken.fromObject(e.HTokens[r])
                          }
                      }
                      if (e.ETokens) {
                          if (!Array.isArray(e.ETokens))
                              throw TypeError(".msg.PlayerData.ETokens: array expected");
                          for (t.ETokens = [],
                          r = 0; r < e.ETokens.length; ++r) {
                              if ("object" != typeof e.ETokens[r])
                                  throw TypeError(".msg.PlayerData.ETokens: object expected");
                              t.ETokens[r] = y.msg.EquipmentToken.fromObject(e.ETokens[r])
                          }
                      }
                      if (null != e.Third) {
                          if ("object" != typeof e.Third)
                              throw TypeError(".msg.PlayerData.Third: object expected");
                          t.Third = y.msg.ThirdPartyInfo.fromObject(e.Third)
                      }
                      if (e.StageRecord) {
                          if (!Array.isArray(e.StageRecord))
                              throw TypeError(".msg.PlayerData.StageRecord: array expected");
                          for (t.StageRecord = [],
                          r = 0; r < e.StageRecord.length; ++r)
                              t.StageRecord[r] = 0 | e.StageRecord[r]
                      }
                      if (e.MTokens) {
                          if (!Array.isArray(e.MTokens))
                              throw TypeError(".msg.PlayerData.MTokens: array expected");
                          for (t.MTokens = [],
                          r = 0; r < e.MTokens.length; ++r) {
                              if ("object" != typeof e.MTokens[r])
                                  throw TypeError(".msg.PlayerData.MTokens: object expected");
                              t.MTokens[r] = y.msg.MaterialToken.fromObject(e.MTokens[r])
                          }
                      }
                      if (null != e.BField) {
                          if ("object" != typeof e.BField)
                              throw TypeError(".msg.PlayerData.BField: object expected");
                          t.BField = y.msg.BattleField.fromObject(e.BField)
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.HTokens = [],
                      r.ETokens = [],
                      r.StageRecord = [],
                      r.MTokens = []),
                      t.defaults && (r.User = null,
                      r.Third = null,
                      r.BField = null),
                      null != e.User && e.hasOwnProperty("User") && (r.User = y.msg.UserPart.toObject(e.User, t)),
                      e.HTokens && e.HTokens.length) {
                          r.HTokens = [];
                          for (var n = 0; n < e.HTokens.length; ++n)
                              r.HTokens[n] = y.msg.HeroToken.toObject(e.HTokens[n], t)
                      }
                      if (e.ETokens && e.ETokens.length)
                          for (r.ETokens = [],
                          n = 0; n < e.ETokens.length; ++n)
                              r.ETokens[n] = y.msg.EquipmentToken.toObject(e.ETokens[n], t);
                      if (null != e.Third && e.hasOwnProperty("Third") && (r.Third = y.msg.ThirdPartyInfo.toObject(e.Third, t)),
                      e.StageRecord && e.StageRecord.length)
                          for (r.StageRecord = [],
                          n = 0; n < e.StageRecord.length; ++n)
                              r.StageRecord[n] = e.StageRecord[n];
                      if (e.MTokens && e.MTokens.length)
                          for (r.MTokens = [],
                          n = 0; n < e.MTokens.length; ++n)
                              r.MTokens[n] = y.msg.MaterialToken.toObject(e.MTokens[n], t);
                      return null != e.BField && e.hasOwnProperty("BField") && (r.BField = y.msg.BattleField.toObject(e.BField, t)),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.UserPart = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.UserID = f.Long ? f.Long.fromBits(0, 0, !1) : 0,
                  e.prototype.OpenID = "",
                  e.prototype.CreateTime = 0,
                  e.prototype.C1 = "",
                  e.prototype.C2 = "",
                  e.prototype.Vit = 0,
                  e.prototype.Setting = "",
                  e.prototype.Activity = 0,
                  e.prototype.MainHeroSN = 0,
                  e.prototype.ChestTime = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.UserID && Object.hasOwnProperty.call(e, "UserID") && t.uint32(8).int64(e.UserID),
                      null != e.OpenID && Object.hasOwnProperty.call(e, "OpenID") && t.uint32(18).string(e.OpenID),
                      null != e.CreateTime && Object.hasOwnProperty.call(e, "CreateTime") && t.uint32(24).uint32(e.CreateTime),
                      null != e.C1 && Object.hasOwnProperty.call(e, "C1") && t.uint32(34).string(e.C1),
                      null != e.C2 && Object.hasOwnProperty.call(e, "C2") && t.uint32(42).string(e.C2),
                      null != e.Vit && Object.hasOwnProperty.call(e, "Vit") && t.uint32(48).int32(e.Vit),
                      null != e.Setting && Object.hasOwnProperty.call(e, "Setting") && t.uint32(58).string(e.Setting),
                      null != e.Activity && Object.hasOwnProperty.call(e, "Activity") && t.uint32(64).int32(e.Activity),
                      null != e.MainHeroSN && Object.hasOwnProperty.call(e, "MainHeroSN") && t.uint32(72).uint32(e.MainHeroSN),
                      null != e.ChestTime && Object.hasOwnProperty.call(e, "ChestTime") && t.uint32(80).uint32(e.ChestTime),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.UserPart; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.UserID = e.int64();
                              break;
                          case 2:
                              n.OpenID = e.string();
                              break;
                          case 3:
                              n.CreateTime = e.uint32();
                              break;
                          case 4:
                              n.C1 = e.string();
                              break;
                          case 5:
                              n.C2 = e.string();
                              break;
                          case 6:
                              n.Vit = e.int32();
                              break;
                          case 7:
                              n.Setting = e.string();
                              break;
                          case 8:
                              n.Activity = e.int32();
                              break;
                          case 9:
                              n.MainHeroSN = e.uint32();
                              break;
                          case 10:
                              n.ChestTime = e.uint32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.UserID && e.hasOwnProperty("UserID") && !(f.isInteger(e.UserID) || e.UserID && f.isInteger(e.UserID.low) && f.isInteger(e.UserID.high)) ? "UserID: integer|Long expected" : null != e.OpenID && e.hasOwnProperty("OpenID") && !f.isString(e.OpenID) ? "OpenID: string expected" : null != e.CreateTime && e.hasOwnProperty("CreateTime") && !f.isInteger(e.CreateTime) ? "CreateTime: integer expected" : null != e.C1 && e.hasOwnProperty("C1") && !f.isString(e.C1) ? "C1: string expected" : null != e.C2 && e.hasOwnProperty("C2") && !f.isString(e.C2) ? "C2: string expected" : null != e.Vit && e.hasOwnProperty("Vit") && !f.isInteger(e.Vit) ? "Vit: integer expected" : null != e.Setting && e.hasOwnProperty("Setting") && !f.isString(e.Setting) ? "Setting: string expected" : null != e.Activity && e.hasOwnProperty("Activity") && !f.isInteger(e.Activity) ? "Activity: integer expected" : null != e.MainHeroSN && e.hasOwnProperty("MainHeroSN") && !f.isInteger(e.MainHeroSN) ? "MainHeroSN: integer expected" : null != e.ChestTime && e.hasOwnProperty("ChestTime") && !f.isInteger(e.ChestTime) ? "ChestTime: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.UserPart)
                          return e;
                      var t = new y.msg.UserPart;
                      return null != e.UserID && (f.Long ? (t.UserID = f.Long.fromValue(e.UserID)).unsigned = !1 : "string" == typeof e.UserID ? t.UserID = parseInt(e.UserID, 10) : "number" == typeof e.UserID ? t.UserID = e.UserID : "object" == typeof e.UserID && (t.UserID = new f.LongBits(e.UserID.low >>> 0,e.UserID.high >>> 0).toNumber())),
                      null != e.OpenID && (t.OpenID = String(e.OpenID)),
                      null != e.CreateTime && (t.CreateTime = e.CreateTime >>> 0),
                      null != e.C1 && (t.C1 = String(e.C1)),
                      null != e.C2 && (t.C2 = String(e.C2)),
                      null != e.Vit && (t.Vit = 0 | e.Vit),
                      null != e.Setting && (t.Setting = String(e.Setting)),
                      null != e.Activity && (t.Activity = 0 | e.Activity),
                      null != e.MainHeroSN && (t.MainHeroSN = e.MainHeroSN >>> 0),
                      null != e.ChestTime && (t.ChestTime = e.ChestTime >>> 0),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if (t.defaults) {
                          if (f.Long) {
                              var n = new f.Long(0,0,!1);
                              r.UserID = t.longs === String ? n.toString() : t.longs === Number ? n.toNumber() : n
                          } else
                              r.UserID = t.longs === String ? "0" : 0;
                          r.OpenID = "",
                          r.CreateTime = 0,
                          r.C1 = "",
                          r.C2 = "",
                          r.Vit = 0,
                          r.Setting = "",
                          r.Activity = 0,
                          r.MainHeroSN = 0,
                          r.ChestTime = 0
                      }
                      return null != e.UserID && e.hasOwnProperty("UserID") && ("number" == typeof e.UserID ? r.UserID = t.longs === String ? String(e.UserID) : e.UserID : r.UserID = t.longs === String ? f.Long.prototype.toString.call(e.UserID) : t.longs === Number ? new f.LongBits(e.UserID.low >>> 0,e.UserID.high >>> 0).toNumber() : e.UserID),
                      null != e.OpenID && e.hasOwnProperty("OpenID") && (r.OpenID = e.OpenID),
                      null != e.CreateTime && e.hasOwnProperty("CreateTime") && (r.CreateTime = e.CreateTime),
                      null != e.C1 && e.hasOwnProperty("C1") && (r.C1 = e.C1),
                      null != e.C2 && e.hasOwnProperty("C2") && (r.C2 = e.C2),
                      null != e.Vit && e.hasOwnProperty("Vit") && (r.Vit = e.Vit),
                      null != e.Setting && e.hasOwnProperty("Setting") && (r.Setting = e.Setting),
                      null != e.Activity && e.hasOwnProperty("Activity") && (r.Activity = e.Activity),
                      null != e.MainHeroSN && e.hasOwnProperty("MainHeroSN") && (r.MainHeroSN = e.MainHeroSN),
                      null != e.ChestTime && e.hasOwnProperty("ChestTime") && (r.ChestTime = e.ChestTime),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.HeroToken = function() {
                  function e(e) {
                      if (this.TIDAry = [],
                      this.ESNAry = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.SN = 0,
                  e.prototype.TIDAry = f.emptyArray,
                  e.prototype.ESNAry = f.emptyArray,
                  e.prototype.Vit = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.SN && Object.hasOwnProperty.call(e, "SN") && t.uint32(8).uint32(e.SN),
                      null != e.TIDAry && e.TIDAry.length) {
                          t.uint32(18).fork();
                          for (var r = 0; r < e.TIDAry.length; ++r)
                              t.int32(e.TIDAry[r]);
                          t.ldelim()
                      }
                      if (null != e.ESNAry && e.ESNAry.length) {
                          for (t.uint32(26).fork(),
                          r = 0; r < e.ESNAry.length; ++r)
                              t.uint32(e.ESNAry[r]);
                          t.ldelim()
                      }
                      return null != e.Vit && Object.hasOwnProperty.call(e, "Vit") && t.uint32(32).int32(e.Vit),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.HeroToken; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.SN = e.uint32();
                              break;
                          case 2:
                              if (n.TIDAry && n.TIDAry.length || (n.TIDAry = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.TIDAry.push(e.int32());
                              else
                                  n.TIDAry.push(e.int32());
                              break;
                          case 3:
                              if (n.ESNAry && n.ESNAry.length || (n.ESNAry = []),
                              2 == (7 & o))
                                  for (i = e.uint32() + e.pos; e.pos < i; )
                                      n.ESNAry.push(e.uint32());
                              else
                                  n.ESNAry.push(e.uint32());
                              break;
                          case 4:
                              n.Vit = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.SN && e.hasOwnProperty("SN") && !f.isInteger(e.SN))
                          return "SN: integer expected";
                      if (null != e.TIDAry && e.hasOwnProperty("TIDAry")) {
                          if (!Array.isArray(e.TIDAry))
                              return "TIDAry: array expected";
                          for (var t = 0; t < e.TIDAry.length; ++t)
                              if (!f.isInteger(e.TIDAry[t]))
                                  return "TIDAry: integer[] expected"
                      }
                      if (null != e.ESNAry && e.hasOwnProperty("ESNAry")) {
                          if (!Array.isArray(e.ESNAry))
                              return "ESNAry: array expected";
                          for (t = 0; t < e.ESNAry.length; ++t)
                              if (!f.isInteger(e.ESNAry[t]))
                                  return "ESNAry: integer[] expected"
                      }
                      return null != e.Vit && e.hasOwnProperty("Vit") && !f.isInteger(e.Vit) ? "Vit: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.HeroToken)
                          return e;
                      var t = new y.msg.HeroToken;
                      if (null != e.SN && (t.SN = e.SN >>> 0),
                      e.TIDAry) {
                          if (!Array.isArray(e.TIDAry))
                              throw TypeError(".msg.HeroToken.TIDAry: array expected");
                          t.TIDAry = [];
                          for (var r = 0; r < e.TIDAry.length; ++r)
                              t.TIDAry[r] = 0 | e.TIDAry[r]
                      }
                      if (e.ESNAry) {
                          if (!Array.isArray(e.ESNAry))
                              throw TypeError(".msg.HeroToken.ESNAry: array expected");
                          for (t.ESNAry = [],
                          r = 0; r < e.ESNAry.length; ++r)
                              t.ESNAry[r] = e.ESNAry[r] >>> 0
                      }
                      return null != e.Vit && (t.Vit = 0 | e.Vit),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.TIDAry = [],
                      r.ESNAry = []),
                      t.defaults && (r.SN = 0,
                      r.Vit = 0),
                      null != e.SN && e.hasOwnProperty("SN") && (r.SN = e.SN),
                      e.TIDAry && e.TIDAry.length) {
                          r.TIDAry = [];
                          for (var n = 0; n < e.TIDAry.length; ++n)
                              r.TIDAry[n] = e.TIDAry[n]
                      }
                      if (e.ESNAry && e.ESNAry.length)
                          for (r.ESNAry = [],
                          n = 0; n < e.ESNAry.length; ++n)
                              r.ESNAry[n] = e.ESNAry[n];
                      return null != e.Vit && e.hasOwnProperty("Vit") && (r.Vit = e.Vit),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.EquipmentToken = function() {
                  function e(e) {
                      if (this.TIDAry = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.SN = 0,
                  e.prototype.TIDAry = f.emptyArray,
                  e.prototype.Durability = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.SN && Object.hasOwnProperty.call(e, "SN") && t.uint32(8).uint32(e.SN),
                      null != e.TIDAry && e.TIDAry.length) {
                          t.uint32(18).fork();
                          for (var r = 0; r < e.TIDAry.length; ++r)
                              t.int32(e.TIDAry[r]);
                          t.ldelim()
                      }
                      return null != e.Durability && Object.hasOwnProperty.call(e, "Durability") && t.uint32(24).int32(e.Durability),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.EquipmentToken; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.SN = e.uint32();
                              break;
                          case 2:
                              if (n.TIDAry && n.TIDAry.length || (n.TIDAry = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.TIDAry.push(e.int32());
                              else
                                  n.TIDAry.push(e.int32());
                              break;
                          case 3:
                              n.Durability = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.SN && e.hasOwnProperty("SN") && !f.isInteger(e.SN))
                          return "SN: integer expected";
                      if (null != e.TIDAry && e.hasOwnProperty("TIDAry")) {
                          if (!Array.isArray(e.TIDAry))
                              return "TIDAry: array expected";
                          for (var t = 0; t < e.TIDAry.length; ++t)
                              if (!f.isInteger(e.TIDAry[t]))
                                  return "TIDAry: integer[] expected"
                      }
                      return null != e.Durability && e.hasOwnProperty("Durability") && !f.isInteger(e.Durability) ? "Durability: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.EquipmentToken)
                          return e;
                      var t = new y.msg.EquipmentToken;
                      if (null != e.SN && (t.SN = e.SN >>> 0),
                      e.TIDAry) {
                          if (!Array.isArray(e.TIDAry))
                              throw TypeError(".msg.EquipmentToken.TIDAry: array expected");
                          t.TIDAry = [];
                          for (var r = 0; r < e.TIDAry.length; ++r)
                              t.TIDAry[r] = 0 | e.TIDAry[r]
                      }
                      return null != e.Durability && (t.Durability = 0 | e.Durability),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.TIDAry = []),
                      t.defaults && (r.SN = 0,
                      r.Durability = 0),
                      null != e.SN && e.hasOwnProperty("SN") && (r.SN = e.SN),
                      e.TIDAry && e.TIDAry.length) {
                          r.TIDAry = [];
                          for (var n = 0; n < e.TIDAry.length; ++n)
                              r.TIDAry[n] = e.TIDAry[n]
                      }
                      return null != e.Durability && e.hasOwnProperty("Durability") && (r.Durability = e.Durability),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.Hero2Equipment = function() {
                  function e(e) {
                      if (this.ESNAry = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.HeroSN = 0,
                  e.prototype.ESNAry = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.HeroSN && Object.hasOwnProperty.call(e, "HeroSN") && t.uint32(8).uint32(e.HeroSN),
                      null != e.ESNAry && e.ESNAry.length) {
                          t.uint32(18).fork();
                          for (var r = 0; r < e.ESNAry.length; ++r)
                              t.uint32(e.ESNAry[r]);
                          t.ldelim()
                      }
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.Hero2Equipment; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.HeroSN = e.uint32();
                              break;
                          case 2:
                              if (n.ESNAry && n.ESNAry.length || (n.ESNAry = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.ESNAry.push(e.uint32());
                              else
                                  n.ESNAry.push(e.uint32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.HeroSN && e.hasOwnProperty("HeroSN") && !f.isInteger(e.HeroSN))
                          return "HeroSN: integer expected";
                      if (null != e.ESNAry && e.hasOwnProperty("ESNAry")) {
                          if (!Array.isArray(e.ESNAry))
                              return "ESNAry: array expected";
                          for (var t = 0; t < e.ESNAry.length; ++t)
                              if (!f.isInteger(e.ESNAry[t]))
                                  return "ESNAry: integer[] expected"
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.Hero2Equipment)
                          return e;
                      var t = new y.msg.Hero2Equipment;
                      if (null != e.HeroSN && (t.HeroSN = e.HeroSN >>> 0),
                      e.ESNAry) {
                          if (!Array.isArray(e.ESNAry))
                              throw TypeError(".msg.Hero2Equipment.ESNAry: array expected");
                          t.ESNAry = [];
                          for (var r = 0; r < e.ESNAry.length; ++r)
                              t.ESNAry[r] = e.ESNAry[r] >>> 0
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.ESNAry = []),
                      t.defaults && (r.HeroSN = 0),
                      null != e.HeroSN && e.hasOwnProperty("HeroSN") && (r.HeroSN = e.HeroSN),
                      e.ESNAry && e.ESNAry.length) {
                          r.ESNAry = [];
                          for (var n = 0; n < e.ESNAry.length; ++n)
                              r.ESNAry[n] = e.ESNAry[n]
                      }
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.ThirdPartyInfo = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Nick = "",
                  e.prototype.AvatarUrl = "",
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Nick && Object.hasOwnProperty.call(e, "Nick") && t.uint32(10).string(e.Nick),
                      null != e.AvatarUrl && Object.hasOwnProperty.call(e, "AvatarUrl") && t.uint32(18).string(e.AvatarUrl),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.ThirdPartyInfo; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Nick = e.string();
                              break;
                          case 2:
                              n.AvatarUrl = e.string();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.Nick && e.hasOwnProperty("Nick") && !f.isString(e.Nick) ? "Nick: string expected" : null != e.AvatarUrl && e.hasOwnProperty("AvatarUrl") && !f.isString(e.AvatarUrl) ? "AvatarUrl: string expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.ThirdPartyInfo)
                          return e;
                      var t = new y.msg.ThirdPartyInfo;
                      return null != e.Nick && (t.Nick = String(e.Nick)),
                      null != e.AvatarUrl && (t.AvatarUrl = String(e.AvatarUrl)),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Nick = "",
                      r.AvatarUrl = ""),
                      null != e.Nick && e.hasOwnProperty("Nick") && (r.Nick = e.Nick),
                      null != e.AvatarUrl && e.hasOwnProperty("AvatarUrl") && (r.AvatarUrl = e.AvatarUrl),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.MaterialToken = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.ID = 0,
                  e.prototype.Num = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.ID && Object.hasOwnProperty.call(e, "ID") && t.uint32(8).int32(e.ID),
                      null != e.Num && Object.hasOwnProperty.call(e, "Num") && t.uint32(16).int32(e.Num),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.MaterialToken; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.ID = e.int32();
                              break;
                          case 2:
                              n.Num = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.ID && e.hasOwnProperty("ID") && !f.isInteger(e.ID) ? "ID: integer expected" : null != e.Num && e.hasOwnProperty("Num") && !f.isInteger(e.Num) ? "Num: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.MaterialToken)
                          return e;
                      var t = new y.msg.MaterialToken;
                      return null != e.ID && (t.ID = 0 | e.ID),
                      null != e.Num && (t.Num = 0 | e.Num),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.ID = 0,
                      r.Num = 0),
                      null != e.ID && e.hasOwnProperty("ID") && (r.ID = e.ID),
                      null != e.Num && e.hasOwnProperty("Num") && (r.Num = e.Num),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.HeroVit = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.SN = 0,
                  e.prototype.Vit = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.SN && Object.hasOwnProperty.call(e, "SN") && t.uint32(8).uint32(e.SN),
                      null != e.Vit && Object.hasOwnProperty.call(e, "Vit") && t.uint32(16).int32(e.Vit),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.HeroVit; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.SN = e.uint32();
                              break;
                          case 2:
                              n.Vit = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.SN && e.hasOwnProperty("SN") && !f.isInteger(e.SN) ? "SN: integer expected" : null != e.Vit && e.hasOwnProperty("Vit") && !f.isInteger(e.Vit) ? "Vit: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.HeroVit)
                          return e;
                      var t = new y.msg.HeroVit;
                      return null != e.SN && (t.SN = e.SN >>> 0),
                      null != e.Vit && (t.Vit = 0 | e.Vit),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.SN = 0,
                      r.Vit = 0),
                      null != e.SN && e.hasOwnProperty("SN") && (r.SN = e.SN),
                      null != e.Vit && e.hasOwnProperty("Vit") && (r.Vit = e.Vit),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleField = function() {
                  function e(e) {
                      if (this.CharAttr = [],
                      this.Weapons = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Ctx = null,
                  e.prototype.CharAttr = f.emptyArray,
                  e.prototype.Weapons = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.Ctx && Object.hasOwnProperty.call(e, "Ctx") && y.msg.BattleContext.encode(e.Ctx, t.uint32(10).fork()).ldelim(),
                      null != e.CharAttr && e.CharAttr.length) {
                          t.uint32(18).fork();
                          for (var r = 0; r < e.CharAttr.length; ++r)
                              t.int32(e.CharAttr[r]);
                          t.ldelim()
                      }
                      if (null != e.Weapons && e.Weapons.length)
                          for (r = 0; r < e.Weapons.length; ++r)
                              y.msg.BattleWeapon.encode(e.Weapons[r], t.uint32(26).fork()).ldelim();
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleField; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Ctx = y.msg.BattleContext.decode(e, e.uint32());
                              break;
                          case 2:
                              if (n.CharAttr && n.CharAttr.length || (n.CharAttr = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.CharAttr.push(e.int32());
                              else
                                  n.CharAttr.push(e.int32());
                              break;
                          case 3:
                              n.Weapons && n.Weapons.length || (n.Weapons = []),
                              n.Weapons.push(y.msg.BattleWeapon.decode(e, e.uint32()));
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.Ctx && e.hasOwnProperty("Ctx") && (r = y.msg.BattleContext.verify(e.Ctx)))
                          return "Ctx." + r;
                      if (null != e.CharAttr && e.hasOwnProperty("CharAttr")) {
                          if (!Array.isArray(e.CharAttr))
                              return "CharAttr: array expected";
                          for (var t = 0; t < e.CharAttr.length; ++t)
                              if (!f.isInteger(e.CharAttr[t]))
                                  return "CharAttr: integer[] expected"
                      }
                      if (null != e.Weapons && e.hasOwnProperty("Weapons")) {
                          if (!Array.isArray(e.Weapons))
                              return "Weapons: array expected";
                          for (t = 0; t < e.Weapons.length; ++t) {
                              var r;
                              if (r = y.msg.BattleWeapon.verify(e.Weapons[t]))
                                  return "Weapons." + r
                          }
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleField)
                          return e;
                      var t = new y.msg.BattleField;
                      if (null != e.Ctx) {
                          if ("object" != typeof e.Ctx)
                              throw TypeError(".msg.BattleField.Ctx: object expected");
                          t.Ctx = y.msg.BattleContext.fromObject(e.Ctx)
                      }
                      if (e.CharAttr) {
                          if (!Array.isArray(e.CharAttr))
                              throw TypeError(".msg.BattleField.CharAttr: array expected");
                          t.CharAttr = [];
                          for (var r = 0; r < e.CharAttr.length; ++r)
                              t.CharAttr[r] = 0 | e.CharAttr[r]
                      }
                      if (e.Weapons) {
                          if (!Array.isArray(e.Weapons))
                              throw TypeError(".msg.BattleField.Weapons: array expected");
                          for (t.Weapons = [],
                          r = 0; r < e.Weapons.length; ++r) {
                              if ("object" != typeof e.Weapons[r])
                                  throw TypeError(".msg.BattleField.Weapons: object expected");
                              t.Weapons[r] = y.msg.BattleWeapon.fromObject(e.Weapons[r])
                          }
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.CharAttr = [],
                      r.Weapons = []),
                      t.defaults && (r.Ctx = null),
                      null != e.Ctx && e.hasOwnProperty("Ctx") && (r.Ctx = y.msg.BattleContext.toObject(e.Ctx, t)),
                      e.CharAttr && e.CharAttr.length) {
                          r.CharAttr = [];
                          for (var n = 0; n < e.CharAttr.length; ++n)
                              r.CharAttr[n] = e.CharAttr[n]
                      }
                      if (e.Weapons && e.Weapons.length)
                          for (r.Weapons = [],
                          n = 0; n < e.Weapons.length; ++n)
                              r.Weapons[n] = y.msg.BattleWeapon.toObject(e.Weapons[n], t);
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleContext = function() {
                  function e(e) {
                      if (this.HeroTID = [],
                      this.Equips = [],
                      this.Weapons = [],
                      this.Items = [],
                      this.TileItem = [],
                      this.AttrEx = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Chapter = 0,
                  e.prototype.Stage = 0,
                  e.prototype.HeroTID = f.emptyArray,
                  e.prototype.ClassID = 0,
                  e.prototype.HP = 0,
                  e.prototype.Gold = 0,
                  e.prototype.State = 0,
                  e.prototype.Equips = f.emptyArray,
                  e.prototype.Weapons = f.emptyArray,
                  e.prototype.Items = f.emptyArray,
                  e.prototype.TileItem = f.emptyArray,
                  e.prototype.Shop = null,
                  e.prototype.AttrEx = f.emptyArray,
                  e.prototype.Score = 0,
                  e.prototype.Extra = null,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.Chapter && Object.hasOwnProperty.call(e, "Chapter") && t.uint32(8).int32(e.Chapter),
                      null != e.Stage && Object.hasOwnProperty.call(e, "Stage") && t.uint32(16).int32(e.Stage),
                      null != e.HeroTID && e.HeroTID.length) {
                          t.uint32(26).fork();
                          for (var r = 0; r < e.HeroTID.length; ++r)
                              t.int32(e.HeroTID[r]);
                          t.ldelim()
                      }
                      if (null != e.ClassID && Object.hasOwnProperty.call(e, "ClassID") && t.uint32(32).int32(e.ClassID),
                      null != e.HP && Object.hasOwnProperty.call(e, "HP") && t.uint32(40).int32(e.HP),
                      null != e.Gold && Object.hasOwnProperty.call(e, "Gold") && t.uint32(48).int32(e.Gold),
                      null != e.State && Object.hasOwnProperty.call(e, "State") && t.uint32(56).int32(e.State),
                      null != e.Equips && e.Equips.length) {
                          for (t.uint32(66).fork(),
                          r = 0; r < e.Equips.length; ++r)
                              t.int32(e.Equips[r]);
                          t.ldelim()
                      }
                      if (null != e.Weapons && e.Weapons.length) {
                          for (t.uint32(74).fork(),
                          r = 0; r < e.Weapons.length; ++r)
                              t.int32(e.Weapons[r]);
                          t.ldelim()
                      }
                      if (null != e.Items && e.Items.length) {
                          for (t.uint32(82).fork(),
                          r = 0; r < e.Items.length; ++r)
                              t.int32(e.Items[r]);
                          t.ldelim()
                      }
                      if (null != e.TileItem && e.TileItem.length)
                          for (r = 0; r < e.TileItem.length; ++r)
                              y.msg.BattleTileItem.encode(e.TileItem[r], t.uint32(90).fork()).ldelim();
                      if (null != e.Shop && Object.hasOwnProperty.call(e, "Shop") && y.msg.BattleShop.encode(e.Shop, t.uint32(98).fork()).ldelim(),
                      null != e.AttrEx && e.AttrEx.length)
                          for (r = 0; r < e.AttrEx.length; ++r)
                              y.msg.BattleAttrEx.encode(e.AttrEx[r], t.uint32(106).fork()).ldelim();
                      return null != e.Score && Object.hasOwnProperty.call(e, "Score") && t.uint32(112).int32(e.Score),
                      null != e.Extra && Object.hasOwnProperty.call(e, "Extra") && y.msg.BattleExtra.encode(e.Extra, t.uint32(122).fork()).ldelim(),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleContext; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Chapter = e.int32();
                              break;
                          case 2:
                              n.Stage = e.int32();
                              break;
                          case 3:
                              if (n.HeroTID && n.HeroTID.length || (n.HeroTID = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.HeroTID.push(e.int32());
                              else
                                  n.HeroTID.push(e.int32());
                              break;
                          case 4:
                              n.ClassID = e.int32();
                              break;
                          case 5:
                              n.HP = e.int32();
                              break;
                          case 6:
                              n.Gold = e.int32();
                              break;
                          case 7:
                              n.State = e.int32();
                              break;
                          case 8:
                              if (n.Equips && n.Equips.length || (n.Equips = []),
                              2 == (7 & o))
                                  for (i = e.uint32() + e.pos; e.pos < i; )
                                      n.Equips.push(e.int32());
                              else
                                  n.Equips.push(e.int32());
                              break;
                          case 9:
                              if (n.Weapons && n.Weapons.length || (n.Weapons = []),
                              2 == (7 & o))
                                  for (i = e.uint32() + e.pos; e.pos < i; )
                                      n.Weapons.push(e.int32());
                              else
                                  n.Weapons.push(e.int32());
                              break;
                          case 10:
                              if (n.Items && n.Items.length || (n.Items = []),
                              2 == (7 & o))
                                  for (i = e.uint32() + e.pos; e.pos < i; )
                                      n.Items.push(e.int32());
                              else
                                  n.Items.push(e.int32());
                              break;
                          case 11:
                              n.TileItem && n.TileItem.length || (n.TileItem = []),
                              n.TileItem.push(y.msg.BattleTileItem.decode(e, e.uint32()));
                              break;
                          case 12:
                              n.Shop = y.msg.BattleShop.decode(e, e.uint32());
                              break;
                          case 13:
                              n.AttrEx && n.AttrEx.length || (n.AttrEx = []),
                              n.AttrEx.push(y.msg.BattleAttrEx.decode(e, e.uint32()));
                              break;
                          case 14:
                              n.Score = e.int32();
                              break;
                          case 15:
                              n.Extra = y.msg.BattleExtra.decode(e, e.uint32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.Chapter && e.hasOwnProperty("Chapter") && !f.isInteger(e.Chapter))
                          return "Chapter: integer expected";
                      if (null != e.Stage && e.hasOwnProperty("Stage") && !f.isInteger(e.Stage))
                          return "Stage: integer expected";
                      if (null != e.HeroTID && e.hasOwnProperty("HeroTID")) {
                          if (!Array.isArray(e.HeroTID))
                              return "HeroTID: array expected";
                          for (var t = 0; t < e.HeroTID.length; ++t)
                              if (!f.isInteger(e.HeroTID[t]))
                                  return "HeroTID: integer[] expected"
                      }
                      if (null != e.ClassID && e.hasOwnProperty("ClassID") && !f.isInteger(e.ClassID))
                          return "ClassID: integer expected";
                      if (null != e.HP && e.hasOwnProperty("HP") && !f.isInteger(e.HP))
                          return "HP: integer expected";
                      if (null != e.Gold && e.hasOwnProperty("Gold") && !f.isInteger(e.Gold))
                          return "Gold: integer expected";
                      if (null != e.State && e.hasOwnProperty("State"))
                          switch (e.State) {
                          default:
                              return "State: enum value expected";
                          case 0:
                          case 1:
                          case 2:
                          case 3:
                          case 4:
                          case 5:
                          case 6:
                          }
                      if (null != e.Equips && e.hasOwnProperty("Equips")) {
                          if (!Array.isArray(e.Equips))
                              return "Equips: array expected";
                          for (t = 0; t < e.Equips.length; ++t)
                              if (!f.isInteger(e.Equips[t]))
                                  return "Equips: integer[] expected"
                      }
                      if (null != e.Weapons && e.hasOwnProperty("Weapons")) {
                          if (!Array.isArray(e.Weapons))
                              return "Weapons: array expected";
                          for (t = 0; t < e.Weapons.length; ++t)
                              if (!f.isInteger(e.Weapons[t]))
                                  return "Weapons: integer[] expected"
                      }
                      if (null != e.Items && e.hasOwnProperty("Items")) {
                          if (!Array.isArray(e.Items))
                              return "Items: array expected";
                          for (t = 0; t < e.Items.length; ++t)
                              if (!f.isInteger(e.Items[t]))
                                  return "Items: integer[] expected"
                      }
                      if (null != e.TileItem && e.hasOwnProperty("TileItem")) {
                          if (!Array.isArray(e.TileItem))
                              return "TileItem: array expected";
                          for (t = 0; t < e.TileItem.length; ++t)
                              if (r = y.msg.BattleTileItem.verify(e.TileItem[t]))
                                  return "TileItem." + r
                      }
                      if (null != e.Shop && e.hasOwnProperty("Shop") && (r = y.msg.BattleShop.verify(e.Shop)))
                          return "Shop." + r;
                      if (null != e.AttrEx && e.hasOwnProperty("AttrEx")) {
                          if (!Array.isArray(e.AttrEx))
                              return "AttrEx: array expected";
                          for (t = 0; t < e.AttrEx.length; ++t) {
                              var r;
                              if (r = y.msg.BattleAttrEx.verify(e.AttrEx[t]))
                                  return "AttrEx." + r
                          }
                      }
                      return null != e.Score && e.hasOwnProperty("Score") && !f.isInteger(e.Score) ? "Score: integer expected" : null != e.Extra && e.hasOwnProperty("Extra") && (r = y.msg.BattleExtra.verify(e.Extra)) ? "Extra." + r : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleContext)
                          return e;
                      var t = new y.msg.BattleContext;
                      if (null != e.Chapter && (t.Chapter = 0 | e.Chapter),
                      null != e.Stage && (t.Stage = 0 | e.Stage),
                      e.HeroTID) {
                          if (!Array.isArray(e.HeroTID))
                              throw TypeError(".msg.BattleContext.HeroTID: array expected");
                          t.HeroTID = [];
                          for (var r = 0; r < e.HeroTID.length; ++r)
                              t.HeroTID[r] = 0 | e.HeroTID[r]
                      }
                      switch (null != e.ClassID && (t.ClassID = 0 | e.ClassID),
                      null != e.HP && (t.HP = 0 | e.HP),
                      null != e.Gold && (t.Gold = 0 | e.Gold),
                      e.State) {
                      case "GS_Loading":
                      case 0:
                          t.State = 0;
                          break;
                      case "GS_Spawn":
                      case 1:
                          t.State = 1;
                          break;
                      case "GS_Shopping":
                      case 2:
                          t.State = 2;
                          break;
                      case "GS_Win":
                      case 3:
                          t.State = 3;
                          break;
                      case "GS_Lose":
                      case 4:
                          t.State = 4;
                          break;
                      case "GS_Quit":
                      case 5:
                          t.State = 5;
                          break;
                      case "GS_Exception":
                      case 6:
                          t.State = 6
                      }
                      if (e.Equips) {
                          if (!Array.isArray(e.Equips))
                              throw TypeError(".msg.BattleContext.Equips: array expected");
                          for (t.Equips = [],
                          r = 0; r < e.Equips.length; ++r)
                              t.Equips[r] = 0 | e.Equips[r]
                      }
                      if (e.Weapons) {
                          if (!Array.isArray(e.Weapons))
                              throw TypeError(".msg.BattleContext.Weapons: array expected");
                          for (t.Weapons = [],
                          r = 0; r < e.Weapons.length; ++r)
                              t.Weapons[r] = 0 | e.Weapons[r]
                      }
                      if (e.Items) {
                          if (!Array.isArray(e.Items))
                              throw TypeError(".msg.BattleContext.Items: array expected");
                          for (t.Items = [],
                          r = 0; r < e.Items.length; ++r)
                              t.Items[r] = 0 | e.Items[r]
                      }
                      if (e.TileItem) {
                          if (!Array.isArray(e.TileItem))
                              throw TypeError(".msg.BattleContext.TileItem: array expected");
                          for (t.TileItem = [],
                          r = 0; r < e.TileItem.length; ++r) {
                              if ("object" != typeof e.TileItem[r])
                                  throw TypeError(".msg.BattleContext.TileItem: object expected");
                              t.TileItem[r] = y.msg.BattleTileItem.fromObject(e.TileItem[r])
                          }
                      }
                      if (null != e.Shop) {
                          if ("object" != typeof e.Shop)
                              throw TypeError(".msg.BattleContext.Shop: object expected");
                          t.Shop = y.msg.BattleShop.fromObject(e.Shop)
                      }
                      if (e.AttrEx) {
                          if (!Array.isArray(e.AttrEx))
                              throw TypeError(".msg.BattleContext.AttrEx: array expected");
                          for (t.AttrEx = [],
                          r = 0; r < e.AttrEx.length; ++r) {
                              if ("object" != typeof e.AttrEx[r])
                                  throw TypeError(".msg.BattleContext.AttrEx: object expected");
                              t.AttrEx[r] = y.msg.BattleAttrEx.fromObject(e.AttrEx[r])
                          }
                      }
                      if (null != e.Score && (t.Score = 0 | e.Score),
                      null != e.Extra) {
                          if ("object" != typeof e.Extra)
                              throw TypeError(".msg.BattleContext.Extra: object expected");
                          t.Extra = y.msg.BattleExtra.fromObject(e.Extra)
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.HeroTID = [],
                      r.Equips = [],
                      r.Weapons = [],
                      r.Items = [],
                      r.TileItem = [],
                      r.AttrEx = []),
                      t.defaults && (r.Chapter = 0,
                      r.Stage = 0,
                      r.ClassID = 0,
                      r.HP = 0,
                      r.Gold = 0,
                      r.State = t.enums === String ? "GS_Loading" : 0,
                      r.Shop = null,
                      r.Score = 0,
                      r.Extra = null),
                      null != e.Chapter && e.hasOwnProperty("Chapter") && (r.Chapter = e.Chapter),
                      null != e.Stage && e.hasOwnProperty("Stage") && (r.Stage = e.Stage),
                      e.HeroTID && e.HeroTID.length) {
                          r.HeroTID = [];
                          for (var n = 0; n < e.HeroTID.length; ++n)
                              r.HeroTID[n] = e.HeroTID[n]
                      }
                      if (null != e.ClassID && e.hasOwnProperty("ClassID") && (r.ClassID = e.ClassID),
                      null != e.HP && e.hasOwnProperty("HP") && (r.HP = e.HP),
                      null != e.Gold && e.hasOwnProperty("Gold") && (r.Gold = e.Gold),
                      null != e.State && e.hasOwnProperty("State") && (r.State = t.enums === String ? y.msg.GameState[e.State] : e.State),
                      e.Equips && e.Equips.length)
                          for (r.Equips = [],
                          n = 0; n < e.Equips.length; ++n)
                              r.Equips[n] = e.Equips[n];
                      if (e.Weapons && e.Weapons.length)
                          for (r.Weapons = [],
                          n = 0; n < e.Weapons.length; ++n)
                              r.Weapons[n] = e.Weapons[n];
                      if (e.Items && e.Items.length)
                          for (r.Items = [],
                          n = 0; n < e.Items.length; ++n)
                              r.Items[n] = e.Items[n];
                      if (e.TileItem && e.TileItem.length)
                          for (r.TileItem = [],
                          n = 0; n < e.TileItem.length; ++n)
                              r.TileItem[n] = y.msg.BattleTileItem.toObject(e.TileItem[n], t);
                      if (null != e.Shop && e.hasOwnProperty("Shop") && (r.Shop = y.msg.BattleShop.toObject(e.Shop, t)),
                      e.AttrEx && e.AttrEx.length)
                          for (r.AttrEx = [],
                          n = 0; n < e.AttrEx.length; ++n)
                              r.AttrEx[n] = y.msg.BattleAttrEx.toObject(e.AttrEx[n], t);
                      return null != e.Score && e.hasOwnProperty("Score") && (r.Score = e.Score),
                      null != e.Extra && e.hasOwnProperty("Extra") && (r.Extra = y.msg.BattleExtra.toObject(e.Extra, t)),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleExtra = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Key = 0,
                  e.prototype.KBoss = 0,
                  e.prototype.Drop = null,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Key && Object.hasOwnProperty.call(e, "Key") && t.uint32(8).int32(e.Key),
                      null != e.KBoss && Object.hasOwnProperty.call(e, "KBoss") && t.uint32(16).int32(e.KBoss),
                      null != e.Drop && Object.hasOwnProperty.call(e, "Drop") && y.msg.DropInfo.encode(e.Drop, t.uint32(26).fork()).ldelim(),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleExtra; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Key = e.int32();
                              break;
                          case 2:
                              n.KBoss = e.int32();
                              break;
                          case 3:
                              n.Drop = y.msg.DropInfo.decode(e, e.uint32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.Key && e.hasOwnProperty("Key") && !f.isInteger(e.Key))
                          return "Key: integer expected";
                      if (null != e.KBoss && e.hasOwnProperty("KBoss") && !f.isInteger(e.KBoss))
                          return "KBoss: integer expected";
                      if (null != e.Drop && e.hasOwnProperty("Drop")) {
                          var t = y.msg.DropInfo.verify(e.Drop);
                          if (t)
                              return "Drop." + t
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleExtra)
                          return e;
                      var t = new y.msg.BattleExtra;
                      if (null != e.Key && (t.Key = 0 | e.Key),
                      null != e.KBoss && (t.KBoss = 0 | e.KBoss),
                      null != e.Drop) {
                          if ("object" != typeof e.Drop)
                              throw TypeError(".msg.BattleExtra.Drop: object expected");
                          t.Drop = y.msg.DropInfo.fromObject(e.Drop)
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Key = 0,
                      r.KBoss = 0,
                      r.Drop = null),
                      null != e.Key && e.hasOwnProperty("Key") && (r.Key = e.Key),
                      null != e.KBoss && e.hasOwnProperty("KBoss") && (r.KBoss = e.KBoss),
                      null != e.Drop && e.hasOwnProperty("Drop") && (r.Drop = y.msg.DropInfo.toObject(e.Drop, t)),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleWeapon = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.SN = 0,
                  e.prototype.WID = 0,
                  e.prototype.Dmg = 0,
                  e.prototype.DmgCritical = 0,
                  e.prototype.AtkRange = 0,
                  e.prototype.AtkIntl = 0,
                  e.prototype.Knockback = 0,
                  e.prototype.AtkMax = 0,
                  e.prototype.AppendBuff = 0,
                  e.prototype.AtkCD = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.SN && Object.hasOwnProperty.call(e, "SN") && t.uint32(8).int32(e.SN),
                      null != e.WID && Object.hasOwnProperty.call(e, "WID") && t.uint32(16).int32(e.WID),
                      null != e.Dmg && Object.hasOwnProperty.call(e, "Dmg") && t.uint32(24).int32(e.Dmg),
                      null != e.DmgCritical && Object.hasOwnProperty.call(e, "DmgCritical") && t.uint32(32).int32(e.DmgCritical),
                      null != e.AtkRange && Object.hasOwnProperty.call(e, "AtkRange") && t.uint32(40).int32(e.AtkRange),
                      null != e.AtkIntl && Object.hasOwnProperty.call(e, "AtkIntl") && t.uint32(48).int32(e.AtkIntl),
                      null != e.Knockback && Object.hasOwnProperty.call(e, "Knockback") && t.uint32(56).int32(e.Knockback),
                      null != e.AtkMax && Object.hasOwnProperty.call(e, "AtkMax") && t.uint32(64).int32(e.AtkMax),
                      null != e.AppendBuff && Object.hasOwnProperty.call(e, "AppendBuff") && t.uint32(72).int32(e.AppendBuff),
                      null != e.AtkCD && Object.hasOwnProperty.call(e, "AtkCD") && t.uint32(80).int32(e.AtkCD),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleWeapon; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.SN = e.int32();
                              break;
                          case 2:
                              n.WID = e.int32();
                              break;
                          case 3:
                              n.Dmg = e.int32();
                              break;
                          case 4:
                              n.DmgCritical = e.int32();
                              break;
                          case 5:
                              n.AtkRange = e.int32();
                              break;
                          case 6:
                              n.AtkIntl = e.int32();
                              break;
                          case 7:
                              n.Knockback = e.int32();
                              break;
                          case 8:
                              n.AtkMax = e.int32();
                              break;
                          case 9:
                              n.AppendBuff = e.int32();
                              break;
                          case 10:
                              n.AtkCD = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.SN && e.hasOwnProperty("SN") && !f.isInteger(e.SN) ? "SN: integer expected" : null != e.WID && e.hasOwnProperty("WID") && !f.isInteger(e.WID) ? "WID: integer expected" : null != e.Dmg && e.hasOwnProperty("Dmg") && !f.isInteger(e.Dmg) ? "Dmg: integer expected" : null != e.DmgCritical && e.hasOwnProperty("DmgCritical") && !f.isInteger(e.DmgCritical) ? "DmgCritical: integer expected" : null != e.AtkRange && e.hasOwnProperty("AtkRange") && !f.isInteger(e.AtkRange) ? "AtkRange: integer expected" : null != e.AtkIntl && e.hasOwnProperty("AtkIntl") && !f.isInteger(e.AtkIntl) ? "AtkIntl: integer expected" : null != e.Knockback && e.hasOwnProperty("Knockback") && !f.isInteger(e.Knockback) ? "Knockback: integer expected" : null != e.AtkMax && e.hasOwnProperty("AtkMax") && !f.isInteger(e.AtkMax) ? "AtkMax: integer expected" : null != e.AppendBuff && e.hasOwnProperty("AppendBuff") && !f.isInteger(e.AppendBuff) ? "AppendBuff: integer expected" : null != e.AtkCD && e.hasOwnProperty("AtkCD") && !f.isInteger(e.AtkCD) ? "AtkCD: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleWeapon)
                          return e;
                      var t = new y.msg.BattleWeapon;
                      return null != e.SN && (t.SN = 0 | e.SN),
                      null != e.WID && (t.WID = 0 | e.WID),
                      null != e.Dmg && (t.Dmg = 0 | e.Dmg),
                      null != e.DmgCritical && (t.DmgCritical = 0 | e.DmgCritical),
                      null != e.AtkRange && (t.AtkRange = 0 | e.AtkRange),
                      null != e.AtkIntl && (t.AtkIntl = 0 | e.AtkIntl),
                      null != e.Knockback && (t.Knockback = 0 | e.Knockback),
                      null != e.AtkMax && (t.AtkMax = 0 | e.AtkMax),
                      null != e.AppendBuff && (t.AppendBuff = 0 | e.AppendBuff),
                      null != e.AtkCD && (t.AtkCD = 0 | e.AtkCD),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.SN = 0,
                      r.WID = 0,
                      r.Dmg = 0,
                      r.DmgCritical = 0,
                      r.AtkRange = 0,
                      r.AtkIntl = 0,
                      r.Knockback = 0,
                      r.AtkMax = 0,
                      r.AppendBuff = 0,
                      r.AtkCD = 0),
                      null != e.SN && e.hasOwnProperty("SN") && (r.SN = e.SN),
                      null != e.WID && e.hasOwnProperty("WID") && (r.WID = e.WID),
                      null != e.Dmg && e.hasOwnProperty("Dmg") && (r.Dmg = e.Dmg),
                      null != e.DmgCritical && e.hasOwnProperty("DmgCritical") && (r.DmgCritical = e.DmgCritical),
                      null != e.AtkRange && e.hasOwnProperty("AtkRange") && (r.AtkRange = e.AtkRange),
                      null != e.AtkIntl && e.hasOwnProperty("AtkIntl") && (r.AtkIntl = e.AtkIntl),
                      null != e.Knockback && e.hasOwnProperty("Knockback") && (r.Knockback = e.Knockback),
                      null != e.AtkMax && e.hasOwnProperty("AtkMax") && (r.AtkMax = e.AtkMax),
                      null != e.AppendBuff && e.hasOwnProperty("AppendBuff") && (r.AppendBuff = e.AppendBuff),
                      null != e.AtkCD && e.hasOwnProperty("AtkCD") && (r.AtkCD = e.AtkCD),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleWeaponUpdate = function() {
                  function e(e) {
                      if (this.WATypes = [],
                      this.WAVals = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.SN = 0,
                  e.prototype.WATypes = f.emptyArray,
                  e.prototype.WAVals = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.SN && Object.hasOwnProperty.call(e, "SN") && t.uint32(8).int32(e.SN),
                      null != e.WATypes && e.WATypes.length) {
                          t.uint32(18).fork();
                          for (var r = 0; r < e.WATypes.length; ++r)
                              t.int32(e.WATypes[r]);
                          t.ldelim()
                      }
                      if (null != e.WAVals && e.WAVals.length) {
                          for (t.uint32(26).fork(),
                          r = 0; r < e.WAVals.length; ++r)
                              t.int32(e.WAVals[r]);
                          t.ldelim()
                      }
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleWeaponUpdate; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.SN = e.int32();
                              break;
                          case 2:
                              if (n.WATypes && n.WATypes.length || (n.WATypes = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.WATypes.push(e.int32());
                              else
                                  n.WATypes.push(e.int32());
                              break;
                          case 3:
                              if (n.WAVals && n.WAVals.length || (n.WAVals = []),
                              2 == (7 & o))
                                  for (i = e.uint32() + e.pos; e.pos < i; )
                                      n.WAVals.push(e.int32());
                              else
                                  n.WAVals.push(e.int32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.SN && e.hasOwnProperty("SN") && !f.isInteger(e.SN))
                          return "SN: integer expected";
                      if (null != e.WATypes && e.hasOwnProperty("WATypes")) {
                          if (!Array.isArray(e.WATypes))
                              return "WATypes: array expected";
                          for (var t = 0; t < e.WATypes.length; ++t)
                              switch (e.WATypes[t]) {
                              default:
                                  return "WATypes: enum value[] expected";
                              case 0:
                              case 1:
                              case 2:
                              case 3:
                              case 4:
                              case 5:
                              }
                      }
                      if (null != e.WAVals && e.hasOwnProperty("WAVals")) {
                          if (!Array.isArray(e.WAVals))
                              return "WAVals: array expected";
                          for (t = 0; t < e.WAVals.length; ++t)
                              if (!f.isInteger(e.WAVals[t]))
                                  return "WAVals: integer[] expected"
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleWeaponUpdate)
                          return e;
                      var t = new y.msg.BattleWeaponUpdate;
                      if (null != e.SN && (t.SN = 0 | e.SN),
                      e.WATypes) {
                          if (!Array.isArray(e.WATypes))
                              throw TypeError(".msg.BattleWeaponUpdate.WATypes: array expected");
                          t.WATypes = [];
                          for (var r = 0; r < e.WATypes.length; ++r)
                              switch (e.WATypes[r]) {
                              default:
                              case "WAT_Dmg":
                              case 0:
                                  t.WATypes[r] = 0;
                                  break;
                              case "WAT_DmgCritical":
                              case 1:
                                  t.WATypes[r] = 1;
                                  break;
                              case "WAT_AtkRange":
                              case 2:
                                  t.WATypes[r] = 2;
                                  break;
                              case "WAT_AtkLength":
                              case 3:
                                  t.WATypes[r] = 3;
                                  break;
                              case "WAT_Knockback":
                              case 4:
                                  t.WATypes[r] = 4;
                                  break;
                              case "WAT_DotDmg":
                              case 5:
                                  t.WATypes[r] = 5
                              }
                      }
                      if (e.WAVals) {
                          if (!Array.isArray(e.WAVals))
                              throw TypeError(".msg.BattleWeaponUpdate.WAVals: array expected");
                          for (t.WAVals = [],
                          r = 0; r < e.WAVals.length; ++r)
                              t.WAVals[r] = 0 | e.WAVals[r]
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.WATypes = [],
                      r.WAVals = []),
                      t.defaults && (r.SN = 0),
                      null != e.SN && e.hasOwnProperty("SN") && (r.SN = e.SN),
                      e.WATypes && e.WATypes.length) {
                          r.WATypes = [];
                          for (var n = 0; n < e.WATypes.length; ++n)
                              r.WATypes[n] = t.enums === String ? y.msg.WeaponAttrType[e.WATypes[n]] : e.WATypes[n]
                      }
                      if (e.WAVals && e.WAVals.length)
                          for (r.WAVals = [],
                          n = 0; n < e.WAVals.length; ++n)
                              r.WAVals[n] = e.WAVals[n];
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleSpawn = function() {
                  function e(e) {
                      if (this.From = [],
                      this.CrtAttr = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.SN = 0,
                  e.prototype.Type = 0,
                  e.prototype.ID = 0,
                  e.prototype.From = f.emptyArray,
                  e.prototype.CrtAttr = f.emptyArray,
                  e.prototype.AppendBuff = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.SN && Object.hasOwnProperty.call(e, "SN") && t.uint32(8).int32(e.SN),
                      null != e.Type && Object.hasOwnProperty.call(e, "Type") && t.uint32(16).int32(e.Type),
                      null != e.ID && Object.hasOwnProperty.call(e, "ID") && t.uint32(24).int32(e.ID),
                      null != e.From && e.From.length) {
                          t.uint32(34).fork();
                          for (var r = 0; r < e.From.length; ++r)
                              t.int32(e.From[r]);
                          t.ldelim()
                      }
                      if (null != e.CrtAttr && e.CrtAttr.length) {
                          for (t.uint32(42).fork(),
                          r = 0; r < e.CrtAttr.length; ++r)
                              t.int32(e.CrtAttr[r]);
                          t.ldelim()
                      }
                      return null != e.AppendBuff && Object.hasOwnProperty.call(e, "AppendBuff") && t.uint32(48).int32(e.AppendBuff),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleSpawn; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.SN = e.int32();
                              break;
                          case 2:
                              n.Type = e.int32();
                              break;
                          case 3:
                              n.ID = e.int32();
                              break;
                          case 4:
                              if (n.From && n.From.length || (n.From = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.From.push(e.int32());
                              else
                                  n.From.push(e.int32());
                              break;
                          case 5:
                              if (n.CrtAttr && n.CrtAttr.length || (n.CrtAttr = []),
                              2 == (7 & o))
                                  for (i = e.uint32() + e.pos; e.pos < i; )
                                      n.CrtAttr.push(e.int32());
                              else
                                  n.CrtAttr.push(e.int32());
                              break;
                          case 6:
                              n.AppendBuff = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.SN && e.hasOwnProperty("SN") && !f.isInteger(e.SN))
                          return "SN: integer expected";
                      if (null != e.Type && e.hasOwnProperty("Type") && !f.isInteger(e.Type))
                          return "Type: integer expected";
                      if (null != e.ID && e.hasOwnProperty("ID") && !f.isInteger(e.ID))
                          return "ID: integer expected";
                      if (null != e.From && e.hasOwnProperty("From")) {
                          if (!Array.isArray(e.From))
                              return "From: array expected";
                          for (var t = 0; t < e.From.length; ++t)
                              if (!f.isInteger(e.From[t]))
                                  return "From: integer[] expected"
                      }
                      if (null != e.CrtAttr && e.hasOwnProperty("CrtAttr")) {
                          if (!Array.isArray(e.CrtAttr))
                              return "CrtAttr: array expected";
                          for (t = 0; t < e.CrtAttr.length; ++t)
                              if (!f.isInteger(e.CrtAttr[t]))
                                  return "CrtAttr: integer[] expected"
                      }
                      return null != e.AppendBuff && e.hasOwnProperty("AppendBuff") && !f.isInteger(e.AppendBuff) ? "AppendBuff: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleSpawn)
                          return e;
                      var t = new y.msg.BattleSpawn;
                      if (null != e.SN && (t.SN = 0 | e.SN),
                      null != e.Type && (t.Type = 0 | e.Type),
                      null != e.ID && (t.ID = 0 | e.ID),
                      e.From) {
                          if (!Array.isArray(e.From))
                              throw TypeError(".msg.BattleSpawn.From: array expected");
                          t.From = [];
                          for (var r = 0; r < e.From.length; ++r)
                              t.From[r] = 0 | e.From[r]
                      }
                      if (e.CrtAttr) {
                          if (!Array.isArray(e.CrtAttr))
                              throw TypeError(".msg.BattleSpawn.CrtAttr: array expected");
                          for (t.CrtAttr = [],
                          r = 0; r < e.CrtAttr.length; ++r)
                              t.CrtAttr[r] = 0 | e.CrtAttr[r]
                      }
                      return null != e.AppendBuff && (t.AppendBuff = 0 | e.AppendBuff),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.From = [],
                      r.CrtAttr = []),
                      t.defaults && (r.SN = 0,
                      r.Type = 0,
                      r.ID = 0,
                      r.AppendBuff = 0),
                      null != e.SN && e.hasOwnProperty("SN") && (r.SN = e.SN),
                      null != e.Type && e.hasOwnProperty("Type") && (r.Type = e.Type),
                      null != e.ID && e.hasOwnProperty("ID") && (r.ID = e.ID),
                      e.From && e.From.length) {
                          r.From = [];
                          for (var n = 0; n < e.From.length; ++n)
                              r.From[n] = e.From[n]
                      }
                      if (e.CrtAttr && e.CrtAttr.length)
                          for (r.CrtAttr = [],
                          n = 0; n < e.CrtAttr.length; ++n)
                              r.CrtAttr[n] = e.CrtAttr[n];
                      return null != e.AppendBuff && e.hasOwnProperty("AppendBuff") && (r.AppendBuff = e.AppendBuff),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleAttrUpdate = function() {
                  function e(e) {
                      if (this.TypeAry = [],
                      this.ValAry = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.TypeAry = f.emptyArray,
                  e.prototype.ValAry = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.TypeAry && e.TypeAry.length) {
                          t.uint32(10).fork();
                          for (var r = 0; r < e.TypeAry.length; ++r)
                              t.int32(e.TypeAry[r]);
                          t.ldelim()
                      }
                      if (null != e.ValAry && e.ValAry.length) {
                          for (t.uint32(18).fork(),
                          r = 0; r < e.ValAry.length; ++r)
                              t.int32(e.ValAry[r]);
                          t.ldelim()
                      }
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleAttrUpdate; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              if (n.TypeAry && n.TypeAry.length || (n.TypeAry = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.TypeAry.push(e.int32());
                              else
                                  n.TypeAry.push(e.int32());
                              break;
                          case 2:
                              if (n.ValAry && n.ValAry.length || (n.ValAry = []),
                              2 == (7 & o))
                                  for (i = e.uint32() + e.pos; e.pos < i; )
                                      n.ValAry.push(e.int32());
                              else
                                  n.ValAry.push(e.int32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.TypeAry && e.hasOwnProperty("TypeAry")) {
                          if (!Array.isArray(e.TypeAry))
                              return "TypeAry: array expected";
                          for (var t = 0; t < e.TypeAry.length; ++t)
                              if (!f.isInteger(e.TypeAry[t]))
                                  return "TypeAry: integer[] expected"
                      }
                      if (null != e.ValAry && e.hasOwnProperty("ValAry")) {
                          if (!Array.isArray(e.ValAry))
                              return "ValAry: array expected";
                          for (t = 0; t < e.ValAry.length; ++t)
                              if (!f.isInteger(e.ValAry[t]))
                                  return "ValAry: integer[] expected"
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleAttrUpdate)
                          return e;
                      var t = new y.msg.BattleAttrUpdate;
                      if (e.TypeAry) {
                          if (!Array.isArray(e.TypeAry))
                              throw TypeError(".msg.BattleAttrUpdate.TypeAry: array expected");
                          t.TypeAry = [];
                          for (var r = 0; r < e.TypeAry.length; ++r)
                              t.TypeAry[r] = 0 | e.TypeAry[r]
                      }
                      if (e.ValAry) {
                          if (!Array.isArray(e.ValAry))
                              throw TypeError(".msg.BattleAttrUpdate.ValAry: array expected");
                          for (t.ValAry = [],
                          r = 0; r < e.ValAry.length; ++r)
                              t.ValAry[r] = 0 | e.ValAry[r]
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.TypeAry = [],
                      r.ValAry = []),
                      e.TypeAry && e.TypeAry.length) {
                          r.TypeAry = [];
                          for (var n = 0; n < e.TypeAry.length; ++n)
                              r.TypeAry[n] = e.TypeAry[n]
                      }
                      if (e.ValAry && e.ValAry.length)
                          for (r.ValAry = [],
                          n = 0; n < e.ValAry.length; ++n)
                              r.ValAry[n] = e.ValAry[n];
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleAttrEx = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Type = 0,
                  e.prototype.IsPct = 0,
                  e.prototype.Val = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Type && Object.hasOwnProperty.call(e, "Type") && t.uint32(8).int32(e.Type),
                      null != e.IsPct && Object.hasOwnProperty.call(e, "IsPct") && t.uint32(16).int32(e.IsPct),
                      null != e.Val && Object.hasOwnProperty.call(e, "Val") && t.uint32(24).int32(e.Val),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleAttrEx; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Type = e.int32();
                              break;
                          case 2:
                              n.IsPct = e.int32();
                              break;
                          case 3:
                              n.Val = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.Type && e.hasOwnProperty("Type") && !f.isInteger(e.Type) ? "Type: integer expected" : null != e.IsPct && e.hasOwnProperty("IsPct") && !f.isInteger(e.IsPct) ? "IsPct: integer expected" : null != e.Val && e.hasOwnProperty("Val") && !f.isInteger(e.Val) ? "Val: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleAttrEx)
                          return e;
                      var t = new y.msg.BattleAttrEx;
                      return null != e.Type && (t.Type = 0 | e.Type),
                      null != e.IsPct && (t.IsPct = 0 | e.IsPct),
                      null != e.Val && (t.Val = 0 | e.Val),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Type = 0,
                      r.IsPct = 0,
                      r.Val = 0),
                      null != e.Type && e.hasOwnProperty("Type") && (r.Type = e.Type),
                      null != e.IsPct && e.hasOwnProperty("IsPct") && (r.IsPct = e.IsPct),
                      null != e.Val && e.hasOwnProperty("Val") && (r.Val = e.Val),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleDmg = function() {
                  function e(e) {
                      if (this.Pos = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.CrtSN = 0,
                  e.prototype.Dmg = 0,
                  e.prototype.Critical = !1,
                  e.prototype.CriticalRand = 0,
                  e.prototype.Dodge = !1,
                  e.prototype.Die = !1,
                  e.prototype.Pos = f.emptyArray,
                  e.prototype.Knockback = 0,
                  e.prototype.AppendBuff = null,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.CrtSN && Object.hasOwnProperty.call(e, "CrtSN") && t.uint32(8).int32(e.CrtSN),
                      null != e.Dmg && Object.hasOwnProperty.call(e, "Dmg") && t.uint32(16).int32(e.Dmg),
                      null != e.Critical && Object.hasOwnProperty.call(e, "Critical") && t.uint32(24).bool(e.Critical),
                      null != e.CriticalRand && Object.hasOwnProperty.call(e, "CriticalRand") && t.uint32(32).int32(e.CriticalRand),
                      null != e.Dodge && Object.hasOwnProperty.call(e, "Dodge") && t.uint32(40).bool(e.Dodge),
                      null != e.Die && Object.hasOwnProperty.call(e, "Die") && t.uint32(48).bool(e.Die),
                      null != e.Pos && e.Pos.length) {
                          t.uint32(58).fork();
                          for (var r = 0; r < e.Pos.length; ++r)
                              t.int32(e.Pos[r]);
                          t.ldelim()
                      }
                      return null != e.Knockback && Object.hasOwnProperty.call(e, "Knockback") && t.uint32(64).int32(e.Knockback),
                      null != e.AppendBuff && Object.hasOwnProperty.call(e, "AppendBuff") && y.msg.BattleBuff.encode(e.AppendBuff, t.uint32(74).fork()).ldelim(),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleDmg; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.CrtSN = e.int32();
                              break;
                          case 2:
                              n.Dmg = e.int32();
                              break;
                          case 3:
                              n.Critical = e.bool();
                              break;
                          case 4:
                              n.CriticalRand = e.int32();
                              break;
                          case 5:
                              n.Dodge = e.bool();
                              break;
                          case 6:
                              n.Die = e.bool();
                              break;
                          case 7:
                              if (n.Pos && n.Pos.length || (n.Pos = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.Pos.push(e.int32());
                              else
                                  n.Pos.push(e.int32());
                              break;
                          case 8:
                              n.Knockback = e.int32();
                              break;
                          case 9:
                              n.AppendBuff = y.msg.BattleBuff.decode(e, e.uint32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.CrtSN && e.hasOwnProperty("CrtSN") && !f.isInteger(e.CrtSN))
                          return "CrtSN: integer expected";
                      if (null != e.Dmg && e.hasOwnProperty("Dmg") && !f.isInteger(e.Dmg))
                          return "Dmg: integer expected";
                      if (null != e.Critical && e.hasOwnProperty("Critical") && "boolean" != typeof e.Critical)
                          return "Critical: boolean expected";
                      if (null != e.CriticalRand && e.hasOwnProperty("CriticalRand") && !f.isInteger(e.CriticalRand))
                          return "CriticalRand: integer expected";
                      if (null != e.Dodge && e.hasOwnProperty("Dodge") && "boolean" != typeof e.Dodge)
                          return "Dodge: boolean expected";
                      if (null != e.Die && e.hasOwnProperty("Die") && "boolean" != typeof e.Die)
                          return "Die: boolean expected";
                      if (null != e.Pos && e.hasOwnProperty("Pos")) {
                          if (!Array.isArray(e.Pos))
                              return "Pos: array expected";
                          for (var t = 0; t < e.Pos.length; ++t)
                              if (!f.isInteger(e.Pos[t]))
                                  return "Pos: integer[] expected"
                      }
                      if (null != e.Knockback && e.hasOwnProperty("Knockback") && !f.isInteger(e.Knockback))
                          return "Knockback: integer expected";
                      if (null != e.AppendBuff && e.hasOwnProperty("AppendBuff")) {
                          var r = y.msg.BattleBuff.verify(e.AppendBuff);
                          if (r)
                              return "AppendBuff." + r
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleDmg)
                          return e;
                      var t = new y.msg.BattleDmg;
                      if (null != e.CrtSN && (t.CrtSN = 0 | e.CrtSN),
                      null != e.Dmg && (t.Dmg = 0 | e.Dmg),
                      null != e.Critical && (t.Critical = Boolean(e.Critical)),
                      null != e.CriticalRand && (t.CriticalRand = 0 | e.CriticalRand),
                      null != e.Dodge && (t.Dodge = Boolean(e.Dodge)),
                      null != e.Die && (t.Die = Boolean(e.Die)),
                      e.Pos) {
                          if (!Array.isArray(e.Pos))
                              throw TypeError(".msg.BattleDmg.Pos: array expected");
                          t.Pos = [];
                          for (var r = 0; r < e.Pos.length; ++r)
                              t.Pos[r] = 0 | e.Pos[r]
                      }
                      if (null != e.Knockback && (t.Knockback = 0 | e.Knockback),
                      null != e.AppendBuff) {
                          if ("object" != typeof e.AppendBuff)
                              throw TypeError(".msg.BattleDmg.AppendBuff: object expected");
                          t.AppendBuff = y.msg.BattleBuff.fromObject(e.AppendBuff)
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.Pos = []),
                      t.defaults && (r.CrtSN = 0,
                      r.Dmg = 0,
                      r.Critical = !1,
                      r.CriticalRand = 0,
                      r.Dodge = !1,
                      r.Die = !1,
                      r.Knockback = 0,
                      r.AppendBuff = null),
                      null != e.CrtSN && e.hasOwnProperty("CrtSN") && (r.CrtSN = e.CrtSN),
                      null != e.Dmg && e.hasOwnProperty("Dmg") && (r.Dmg = e.Dmg),
                      null != e.Critical && e.hasOwnProperty("Critical") && (r.Critical = e.Critical),
                      null != e.CriticalRand && e.hasOwnProperty("CriticalRand") && (r.CriticalRand = e.CriticalRand),
                      null != e.Dodge && e.hasOwnProperty("Dodge") && (r.Dodge = e.Dodge),
                      null != e.Die && e.hasOwnProperty("Die") && (r.Die = e.Die),
                      e.Pos && e.Pos.length) {
                          r.Pos = [];
                          for (var n = 0; n < e.Pos.length; ++n)
                              r.Pos[n] = e.Pos[n]
                      }
                      return null != e.Knockback && e.hasOwnProperty("Knockback") && (r.Knockback = e.Knockback),
                      null != e.AppendBuff && e.hasOwnProperty("AppendBuff") && (r.AppendBuff = y.msg.BattleBuff.toObject(e.AppendBuff, t)),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleDmgEx = function() {
                  function e(e) {
                      if (this.TypeVals = [],
                      this.Pos = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Type = 0,
                  e.prototype.TypeVals = f.emptyArray,
                  e.prototype.MSN = 0,
                  e.prototype.Pos = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.Type && Object.hasOwnProperty.call(e, "Type") && t.uint32(8).int32(e.Type),
                      null != e.TypeVals && e.TypeVals.length) {
                          t.uint32(18).fork();
                          for (var r = 0; r < e.TypeVals.length; ++r)
                              t.int32(e.TypeVals[r]);
                          t.ldelim()
                      }
                      if (null != e.MSN && Object.hasOwnProperty.call(e, "MSN") && t.uint32(24).int32(e.MSN),
                      null != e.Pos && e.Pos.length) {
                          for (t.uint32(34).fork(),
                          r = 0; r < e.Pos.length; ++r)
                              t.int32(e.Pos[r]);
                          t.ldelim()
                      }
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleDmgEx; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Type = e.int32();
                              break;
                          case 2:
                              if (n.TypeVals && n.TypeVals.length || (n.TypeVals = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.TypeVals.push(e.int32());
                              else
                                  n.TypeVals.push(e.int32());
                              break;
                          case 3:
                              n.MSN = e.int32();
                              break;
                          case 4:
                              if (n.Pos && n.Pos.length || (n.Pos = []),
                              2 == (7 & o))
                                  for (i = e.uint32() + e.pos; e.pos < i; )
                                      n.Pos.push(e.int32());
                              else
                                  n.Pos.push(e.int32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.Type && e.hasOwnProperty("Type") && !f.isInteger(e.Type))
                          return "Type: integer expected";
                      if (null != e.TypeVals && e.hasOwnProperty("TypeVals")) {
                          if (!Array.isArray(e.TypeVals))
                              return "TypeVals: array expected";
                          for (var t = 0; t < e.TypeVals.length; ++t)
                              if (!f.isInteger(e.TypeVals[t]))
                                  return "TypeVals: integer[] expected"
                      }
                      if (null != e.MSN && e.hasOwnProperty("MSN") && !f.isInteger(e.MSN))
                          return "MSN: integer expected";
                      if (null != e.Pos && e.hasOwnProperty("Pos")) {
                          if (!Array.isArray(e.Pos))
                              return "Pos: array expected";
                          for (t = 0; t < e.Pos.length; ++t)
                              if (!f.isInteger(e.Pos[t]))
                                  return "Pos: integer[] expected"
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleDmgEx)
                          return e;
                      var t = new y.msg.BattleDmgEx;
                      if (null != e.Type && (t.Type = 0 | e.Type),
                      e.TypeVals) {
                          if (!Array.isArray(e.TypeVals))
                              throw TypeError(".msg.BattleDmgEx.TypeVals: array expected");
                          t.TypeVals = [];
                          for (var r = 0; r < e.TypeVals.length; ++r)
                              t.TypeVals[r] = 0 | e.TypeVals[r]
                      }
                      if (null != e.MSN && (t.MSN = 0 | e.MSN),
                      e.Pos) {
                          if (!Array.isArray(e.Pos))
                              throw TypeError(".msg.BattleDmgEx.Pos: array expected");
                          for (t.Pos = [],
                          r = 0; r < e.Pos.length; ++r)
                              t.Pos[r] = 0 | e.Pos[r]
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.TypeVals = [],
                      r.Pos = []),
                      t.defaults && (r.Type = 0,
                      r.MSN = 0),
                      null != e.Type && e.hasOwnProperty("Type") && (r.Type = e.Type),
                      e.TypeVals && e.TypeVals.length) {
                          r.TypeVals = [];
                          for (var n = 0; n < e.TypeVals.length; ++n)
                              r.TypeVals[n] = e.TypeVals[n]
                      }
                      if (null != e.MSN && e.hasOwnProperty("MSN") && (r.MSN = e.MSN),
                      e.Pos && e.Pos.length)
                          for (r.Pos = [],
                          n = 0; n < e.Pos.length; ++n)
                              r.Pos[n] = e.Pos[n];
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleHeal = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.SN = 0,
                  e.prototype.Heal = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.SN && Object.hasOwnProperty.call(e, "SN") && t.uint32(8).int32(e.SN),
                      null != e.Heal && Object.hasOwnProperty.call(e, "Heal") && t.uint32(16).int32(e.Heal),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleHeal; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.SN = e.int32();
                              break;
                          case 2:
                              n.Heal = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.SN && e.hasOwnProperty("SN") && !f.isInteger(e.SN) ? "SN: integer expected" : null != e.Heal && e.hasOwnProperty("Heal") && !f.isInteger(e.Heal) ? "Heal: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleHeal)
                          return e;
                      var t = new y.msg.BattleHeal;
                      return null != e.SN && (t.SN = 0 | e.SN),
                      null != e.Heal && (t.Heal = 0 | e.Heal),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.SN = 0,
                      r.Heal = 0),
                      null != e.SN && e.hasOwnProperty("SN") && (r.SN = e.SN),
                      null != e.Heal && e.hasOwnProperty("Heal") && (r.Heal = e.Heal),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleBuff = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.ID = 0,
                  e.prototype.AOType = 0,
                  e.prototype.AOSN = 0,
                  e.prototype.AOID = 0,
                  e.prototype.AOCrtSN = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.ID && Object.hasOwnProperty.call(e, "ID") && t.uint32(8).int32(e.ID),
                      null != e.AOType && Object.hasOwnProperty.call(e, "AOType") && t.uint32(16).int32(e.AOType),
                      null != e.AOSN && Object.hasOwnProperty.call(e, "AOSN") && t.uint32(24).int32(e.AOSN),
                      null != e.AOID && Object.hasOwnProperty.call(e, "AOID") && t.uint32(32).int32(e.AOID),
                      null != e.AOCrtSN && Object.hasOwnProperty.call(e, "AOCrtSN") && t.uint32(40).int32(e.AOCrtSN),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleBuff; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.ID = e.int32();
                              break;
                          case 2:
                              n.AOType = e.int32();
                              break;
                          case 3:
                              n.AOSN = e.int32();
                              break;
                          case 4:
                              n.AOID = e.int32();
                              break;
                          case 5:
                              n.AOCrtSN = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.ID && e.hasOwnProperty("ID") && !f.isInteger(e.ID) ? "ID: integer expected" : null != e.AOType && e.hasOwnProperty("AOType") && !f.isInteger(e.AOType) ? "AOType: integer expected" : null != e.AOSN && e.hasOwnProperty("AOSN") && !f.isInteger(e.AOSN) ? "AOSN: integer expected" : null != e.AOID && e.hasOwnProperty("AOID") && !f.isInteger(e.AOID) ? "AOID: integer expected" : null != e.AOCrtSN && e.hasOwnProperty("AOCrtSN") && !f.isInteger(e.AOCrtSN) ? "AOCrtSN: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleBuff)
                          return e;
                      var t = new y.msg.BattleBuff;
                      return null != e.ID && (t.ID = 0 | e.ID),
                      null != e.AOType && (t.AOType = 0 | e.AOType),
                      null != e.AOSN && (t.AOSN = 0 | e.AOSN),
                      null != e.AOID && (t.AOID = 0 | e.AOID),
                      null != e.AOCrtSN && (t.AOCrtSN = 0 | e.AOCrtSN),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.ID = 0,
                      r.AOType = 0,
                      r.AOSN = 0,
                      r.AOID = 0,
                      r.AOCrtSN = 0),
                      null != e.ID && e.hasOwnProperty("ID") && (r.ID = e.ID),
                      null != e.AOType && e.hasOwnProperty("AOType") && (r.AOType = e.AOType),
                      null != e.AOSN && e.hasOwnProperty("AOSN") && (r.AOSN = e.AOSN),
                      null != e.AOID && e.hasOwnProperty("AOID") && (r.AOID = e.AOID),
                      null != e.AOCrtSN && e.hasOwnProperty("AOCrtSN") && (r.AOCrtSN = e.AOCrtSN),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleMonsterAtk = function() {
                  function e(e) {
                      if (this.MInfo = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Type = 0,
                  e.prototype.MInfo = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.Type && Object.hasOwnProperty.call(e, "Type") && t.uint32(8).int32(e.Type),
                      null != e.MInfo && e.MInfo.length) {
                          t.uint32(18).fork();
                          for (var r = 0; r < e.MInfo.length; ++r)
                              t.int32(e.MInfo[r]);
                          t.ldelim()
                      }
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleMonsterAtk; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Type = e.int32();
                              break;
                          case 2:
                              if (n.MInfo && n.MInfo.length || (n.MInfo = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.MInfo.push(e.int32());
                              else
                                  n.MInfo.push(e.int32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.Type && e.hasOwnProperty("Type") && !f.isInteger(e.Type))
                          return "Type: integer expected";
                      if (null != e.MInfo && e.hasOwnProperty("MInfo")) {
                          if (!Array.isArray(e.MInfo))
                              return "MInfo: array expected";
                          for (var t = 0; t < e.MInfo.length; ++t)
                              if (!f.isInteger(e.MInfo[t]))
                                  return "MInfo: integer[] expected"
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleMonsterAtk)
                          return e;
                      var t = new y.msg.BattleMonsterAtk;
                      if (null != e.Type && (t.Type = 0 | e.Type),
                      e.MInfo) {
                          if (!Array.isArray(e.MInfo))
                              throw TypeError(".msg.BattleMonsterAtk.MInfo: array expected");
                          t.MInfo = [];
                          for (var r = 0; r < e.MInfo.length; ++r)
                              t.MInfo[r] = 0 | e.MInfo[r]
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.MInfo = []),
                      t.defaults && (r.Type = 0),
                      null != e.Type && e.hasOwnProperty("Type") && (r.Type = e.Type),
                      e.MInfo && e.MInfo.length) {
                          r.MInfo = [];
                          for (var n = 0; n < e.MInfo.length; ++n)
                              r.MInfo[n] = e.MInfo[n]
                      }
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleShop = function() {
                  function e(e) {
                      if (this.Goods = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.ChestItem = 0,
                  e.prototype.ChestNum = 0,
                  e.prototype.Refresh = 0,
                  e.prototype.RefreshFree = 0,
                  e.prototype.RefreshGold = 0,
                  e.prototype.Goods = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.ChestItem && Object.hasOwnProperty.call(e, "ChestItem") && t.uint32(8).int32(e.ChestItem),
                      null != e.ChestNum && Object.hasOwnProperty.call(e, "ChestNum") && t.uint32(16).int32(e.ChestNum),
                      null != e.Refresh && Object.hasOwnProperty.call(e, "Refresh") && t.uint32(24).int32(e.Refresh),
                      null != e.RefreshFree && Object.hasOwnProperty.call(e, "RefreshFree") && t.uint32(32).int32(e.RefreshFree),
                      null != e.RefreshGold && Object.hasOwnProperty.call(e, "RefreshGold") && t.uint32(40).int32(e.RefreshGold),
                      null != e.Goods && e.Goods.length)
                          for (var r = 0; r < e.Goods.length; ++r)
                              y.msg.BattleShopGoods.encode(e.Goods[r], t.uint32(50).fork()).ldelim();
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleShop; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.ChestItem = e.int32();
                              break;
                          case 2:
                              n.ChestNum = e.int32();
                              break;
                          case 3:
                              n.Refresh = e.int32();
                              break;
                          case 4:
                              n.RefreshFree = e.int32();
                              break;
                          case 5:
                              n.RefreshGold = e.int32();
                              break;
                          case 6:
                              n.Goods && n.Goods.length || (n.Goods = []),
                              n.Goods.push(y.msg.BattleShopGoods.decode(e, e.uint32()));
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.ChestItem && e.hasOwnProperty("ChestItem") && !f.isInteger(e.ChestItem))
                          return "ChestItem: integer expected";
                      if (null != e.ChestNum && e.hasOwnProperty("ChestNum") && !f.isInteger(e.ChestNum))
                          return "ChestNum: integer expected";
                      if (null != e.Refresh && e.hasOwnProperty("Refresh") && !f.isInteger(e.Refresh))
                          return "Refresh: integer expected";
                      if (null != e.RefreshFree && e.hasOwnProperty("RefreshFree") && !f.isInteger(e.RefreshFree))
                          return "RefreshFree: integer expected";
                      if (null != e.RefreshGold && e.hasOwnProperty("RefreshGold") && !f.isInteger(e.RefreshGold))
                          return "RefreshGold: integer expected";
                      if (null != e.Goods && e.hasOwnProperty("Goods")) {
                          if (!Array.isArray(e.Goods))
                              return "Goods: array expected";
                          for (var t = 0; t < e.Goods.length; ++t) {
                              var r = y.msg.BattleShopGoods.verify(e.Goods[t]);
                              if (r)
                                  return "Goods." + r
                          }
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleShop)
                          return e;
                      var t = new y.msg.BattleShop;
                      if (null != e.ChestItem && (t.ChestItem = 0 | e.ChestItem),
                      null != e.ChestNum && (t.ChestNum = 0 | e.ChestNum),
                      null != e.Refresh && (t.Refresh = 0 | e.Refresh),
                      null != e.RefreshFree && (t.RefreshFree = 0 | e.RefreshFree),
                      null != e.RefreshGold && (t.RefreshGold = 0 | e.RefreshGold),
                      e.Goods) {
                          if (!Array.isArray(e.Goods))
                              throw TypeError(".msg.BattleShop.Goods: array expected");
                          t.Goods = [];
                          for (var r = 0; r < e.Goods.length; ++r) {
                              if ("object" != typeof e.Goods[r])
                                  throw TypeError(".msg.BattleShop.Goods: object expected");
                              t.Goods[r] = y.msg.BattleShopGoods.fromObject(e.Goods[r])
                          }
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.Goods = []),
                      t.defaults && (r.ChestItem = 0,
                      r.ChestNum = 0,
                      r.Refresh = 0,
                      r.RefreshFree = 0,
                      r.RefreshGold = 0),
                      null != e.ChestItem && e.hasOwnProperty("ChestItem") && (r.ChestItem = e.ChestItem),
                      null != e.ChestNum && e.hasOwnProperty("ChestNum") && (r.ChestNum = e.ChestNum),
                      null != e.Refresh && e.hasOwnProperty("Refresh") && (r.Refresh = e.Refresh),
                      null != e.RefreshFree && e.hasOwnProperty("RefreshFree") && (r.RefreshFree = e.RefreshFree),
                      null != e.RefreshGold && e.hasOwnProperty("RefreshGold") && (r.RefreshGold = e.RefreshGold),
                      e.Goods && e.Goods.length) {
                          r.Goods = [];
                          for (var n = 0; n < e.Goods.length; ++n)
                              r.Goods[n] = y.msg.BattleShopGoods.toObject(e.Goods[n], t)
                      }
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleShopGoods = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Type = 0,
                  e.prototype.TblID = 0,
                  e.prototype.Price = 0,
                  e.prototype.RawPrice = 0,
                  e.prototype.Lock = !1,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Type && Object.hasOwnProperty.call(e, "Type") && t.uint32(8).int32(e.Type),
                      null != e.TblID && Object.hasOwnProperty.call(e, "TblID") && t.uint32(16).int32(e.TblID),
                      null != e.Price && Object.hasOwnProperty.call(e, "Price") && t.uint32(24).int32(e.Price),
                      null != e.RawPrice && Object.hasOwnProperty.call(e, "RawPrice") && t.uint32(32).int32(e.RawPrice),
                      null != e.Lock && Object.hasOwnProperty.call(e, "Lock") && t.uint32(40).bool(e.Lock),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleShopGoods; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Type = e.int32();
                              break;
                          case 2:
                              n.TblID = e.int32();
                              break;
                          case 3:
                              n.Price = e.int32();
                              break;
                          case 4:
                              n.RawPrice = e.int32();
                              break;
                          case 5:
                              n.Lock = e.bool();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      return "object" != typeof e || null === e ? "object expected" : null != e.Type && e.hasOwnProperty("Type") && !f.isInteger(e.Type) ? "Type: integer expected" : null != e.TblID && e.hasOwnProperty("TblID") && !f.isInteger(e.TblID) ? "TblID: integer expected" : null != e.Price && e.hasOwnProperty("Price") && !f.isInteger(e.Price) ? "Price: integer expected" : null != e.RawPrice && e.hasOwnProperty("RawPrice") && !f.isInteger(e.RawPrice) ? "RawPrice: integer expected" : null != e.Lock && e.hasOwnProperty("Lock") && "boolean" != typeof e.Lock ? "Lock: boolean expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleShopGoods)
                          return e;
                      var t = new y.msg.BattleShopGoods;
                      return null != e.Type && (t.Type = 0 | e.Type),
                      null != e.TblID && (t.TblID = 0 | e.TblID),
                      null != e.Price && (t.Price = 0 | e.Price),
                      null != e.RawPrice && (t.RawPrice = 0 | e.RawPrice),
                      null != e.Lock && (t.Lock = Boolean(e.Lock)),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Type = 0,
                      r.TblID = 0,
                      r.Price = 0,
                      r.RawPrice = 0,
                      r.Lock = !1),
                      null != e.Type && e.hasOwnProperty("Type") && (r.Type = e.Type),
                      null != e.TblID && e.hasOwnProperty("TblID") && (r.TblID = e.TblID),
                      null != e.Price && e.hasOwnProperty("Price") && (r.Price = e.Price),
                      null != e.RawPrice && e.hasOwnProperty("RawPrice") && (r.RawPrice = e.RawPrice),
                      null != e.Lock && e.hasOwnProperty("Lock") && (r.Lock = e.Lock),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleTileItem = function() {
                  function e(e) {
                      if (e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Type = 0,
                  e.prototype.X = 0,
                  e.prototype.Y = 0,
                  e.prototype.Val = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      return t || (t = p.create()),
                      null != e.Type && Object.hasOwnProperty.call(e, "Type") && t.uint32(8).int32(e.Type),
                      null != e.X && Object.hasOwnProperty.call(e, "X") && t.uint32(16).int32(e.X),
                      null != e.Y && Object.hasOwnProperty.call(e, "Y") && t.uint32(24).int32(e.Y),
                      null != e.Val && Object.hasOwnProperty.call(e, "Val") && t.uint32(32).int32(e.Val),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleTileItem; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.Type = e.int32();
                              break;
                          case 2:
                              n.X = e.int32();
                              break;
                          case 3:
                              n.Y = e.int32();
                              break;
                          case 4:
                              n.Val = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.Type && e.hasOwnProperty("Type"))
                          switch (e.Type) {
                          default:
                              return "Type: enum value expected";
                          case 0:
                          case 1:
                          case 2:
                          }
                      return null != e.X && e.hasOwnProperty("X") && !f.isInteger(e.X) ? "X: integer expected" : null != e.Y && e.hasOwnProperty("Y") && !f.isInteger(e.Y) ? "Y: integer expected" : null != e.Val && e.hasOwnProperty("Val") && !f.isInteger(e.Val) ? "Val: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleTileItem)
                          return e;
                      var t = new y.msg.BattleTileItem;
                      switch (e.Type) {
                      case "BTI_Coin":
                      case 0:
                          t.Type = 0;
                          break;
                      case "BTI_Chest":
                      case 1:
                          t.Type = 1;
                          break;
                      case "BTI_Potion":
                      case 2:
                          t.Type = 2
                      }
                      return null != e.X && (t.X = 0 | e.X),
                      null != e.Y && (t.Y = 0 | e.Y),
                      null != e.Val && (t.Val = 0 | e.Val),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      return t.defaults && (r.Type = t.enums === String ? "BTI_Coin" : 0,
                      r.X = 0,
                      r.Y = 0,
                      r.Val = 0),
                      null != e.Type && e.hasOwnProperty("Type") && (r.Type = t.enums === String ? y.msg.BattleTileItemType[e.Type] : e.Type),
                      null != e.X && e.hasOwnProperty("X") && (r.X = e.X),
                      null != e.Y && e.hasOwnProperty("Y") && (r.Y = e.Y),
                      null != e.Val && e.hasOwnProperty("Val") && (r.Val = e.Val),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.DropChest = function() {
                  function e(e) {
                      if (this.ETokens = [],
                      this.MTokens = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.DropID = 0,
                  e.prototype.C1 = "",
                  e.prototype.C2 = "",
                  e.prototype.ETokens = f.emptyArray,
                  e.prototype.MTokens = f.emptyArray,
                  e.prototype.X = 0,
                  e.prototype.Y = 0,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.DropID && Object.hasOwnProperty.call(e, "DropID") && t.uint32(8).int32(e.DropID),
                      null != e.C1 && Object.hasOwnProperty.call(e, "C1") && t.uint32(26).string(e.C1),
                      null != e.C2 && Object.hasOwnProperty.call(e, "C2") && t.uint32(34).string(e.C2),
                      null != e.ETokens && e.ETokens.length)
                          for (var r = 0; r < e.ETokens.length; ++r)
                              y.msg.EquipmentToken.encode(e.ETokens[r], t.uint32(42).fork()).ldelim();
                      if (null != e.MTokens && e.MTokens.length)
                          for (r = 0; r < e.MTokens.length; ++r)
                              y.msg.MaterialToken.encode(e.MTokens[r], t.uint32(50).fork()).ldelim();
                      return null != e.X && Object.hasOwnProperty.call(e, "X") && t.uint32(56).int32(e.X),
                      null != e.Y && Object.hasOwnProperty.call(e, "Y") && t.uint32(64).int32(e.Y),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.DropChest; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.DropID = e.int32();
                              break;
                          case 3:
                              n.C1 = e.string();
                              break;
                          case 4:
                              n.C2 = e.string();
                              break;
                          case 5:
                              n.ETokens && n.ETokens.length || (n.ETokens = []),
                              n.ETokens.push(y.msg.EquipmentToken.decode(e, e.uint32()));
                              break;
                          case 6:
                              n.MTokens && n.MTokens.length || (n.MTokens = []),
                              n.MTokens.push(y.msg.MaterialToken.decode(e, e.uint32()));
                              break;
                          case 7:
                              n.X = e.int32();
                              break;
                          case 8:
                              n.Y = e.int32();
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.DropID && e.hasOwnProperty("DropID") && !f.isInteger(e.DropID))
                          return "DropID: integer expected";
                      if (null != e.C1 && e.hasOwnProperty("C1") && !f.isString(e.C1))
                          return "C1: string expected";
                      if (null != e.C2 && e.hasOwnProperty("C2") && !f.isString(e.C2))
                          return "C2: string expected";
                      if (null != e.ETokens && e.hasOwnProperty("ETokens")) {
                          if (!Array.isArray(e.ETokens))
                              return "ETokens: array expected";
                          for (var t = 0; t < e.ETokens.length; ++t)
                              if (r = y.msg.EquipmentToken.verify(e.ETokens[t]))
                                  return "ETokens." + r
                      }
                      if (null != e.MTokens && e.hasOwnProperty("MTokens")) {
                          if (!Array.isArray(e.MTokens))
                              return "MTokens: array expected";
                          for (t = 0; t < e.MTokens.length; ++t) {
                              var r;
                              if (r = y.msg.MaterialToken.verify(e.MTokens[t]))
                                  return "MTokens." + r
                          }
                      }
                      return null != e.X && e.hasOwnProperty("X") && !f.isInteger(e.X) ? "X: integer expected" : null != e.Y && e.hasOwnProperty("Y") && !f.isInteger(e.Y) ? "Y: integer expected" : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.DropChest)
                          return e;
                      var t = new y.msg.DropChest;
                      if (null != e.DropID && (t.DropID = 0 | e.DropID),
                      null != e.C1 && (t.C1 = String(e.C1)),
                      null != e.C2 && (t.C2 = String(e.C2)),
                      e.ETokens) {
                          if (!Array.isArray(e.ETokens))
                              throw TypeError(".msg.DropChest.ETokens: array expected");
                          t.ETokens = [];
                          for (var r = 0; r < e.ETokens.length; ++r) {
                              if ("object" != typeof e.ETokens[r])
                                  throw TypeError(".msg.DropChest.ETokens: object expected");
                              t.ETokens[r] = y.msg.EquipmentToken.fromObject(e.ETokens[r])
                          }
                      }
                      if (e.MTokens) {
                          if (!Array.isArray(e.MTokens))
                              throw TypeError(".msg.DropChest.MTokens: array expected");
                          for (t.MTokens = [],
                          r = 0; r < e.MTokens.length; ++r) {
                              if ("object" != typeof e.MTokens[r])
                                  throw TypeError(".msg.DropChest.MTokens: object expected");
                              t.MTokens[r] = y.msg.MaterialToken.fromObject(e.MTokens[r])
                          }
                      }
                      return null != e.X && (t.X = 0 | e.X),
                      null != e.Y && (t.Y = 0 | e.Y),
                      t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.ETokens = [],
                      r.MTokens = []),
                      t.defaults && (r.DropID = 0,
                      r.C1 = "",
                      r.C2 = "",
                      r.X = 0,
                      r.Y = 0),
                      null != e.DropID && e.hasOwnProperty("DropID") && (r.DropID = e.DropID),
                      null != e.C1 && e.hasOwnProperty("C1") && (r.C1 = e.C1),
                      null != e.C2 && e.hasOwnProperty("C2") && (r.C2 = e.C2),
                      e.ETokens && e.ETokens.length) {
                          r.ETokens = [];
                          for (var n = 0; n < e.ETokens.length; ++n)
                              r.ETokens[n] = y.msg.EquipmentToken.toObject(e.ETokens[n], t)
                      }
                      if (e.MTokens && e.MTokens.length)
                          for (r.MTokens = [],
                          n = 0; n < e.MTokens.length; ++n)
                              r.MTokens[n] = y.msg.MaterialToken.toObject(e.MTokens[n], t);
                      return null != e.X && e.hasOwnProperty("X") && (r.X = e.X),
                      null != e.Y && e.hasOwnProperty("Y") && (r.Y = e.Y),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.DropInfo = function() {
                  function e(e) {
                      if (this.DropStage = [],
                      this.DropID = [],
                      this.ETokens = [],
                      this.MTokens = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.DropStage = f.emptyArray,
                  e.prototype.DropID = f.emptyArray,
                  e.prototype.C1 = "",
                  e.prototype.C2 = "",
                  e.prototype.ETokens = f.emptyArray,
                  e.prototype.MTokens = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.DropStage && e.DropStage.length) {
                          t.uint32(10).fork();
                          for (var r = 0; r < e.DropStage.length; ++r)
                              t.int32(e.DropStage[r]);
                          t.ldelim()
                      }
                      if (null != e.DropID && e.DropID.length) {
                          for (t.uint32(18).fork(),
                          r = 0; r < e.DropID.length; ++r)
                              t.int32(e.DropID[r]);
                          t.ldelim()
                      }
                      if (null != e.C1 && Object.hasOwnProperty.call(e, "C1") && t.uint32(26).string(e.C1),
                      null != e.C2 && Object.hasOwnProperty.call(e, "C2") && t.uint32(34).string(e.C2),
                      null != e.ETokens && e.ETokens.length)
                          for (r = 0; r < e.ETokens.length; ++r)
                              y.msg.EquipmentToken.encode(e.ETokens[r], t.uint32(42).fork()).ldelim();
                      if (null != e.MTokens && e.MTokens.length)
                          for (r = 0; r < e.MTokens.length; ++r)
                              y.msg.MaterialToken.encode(e.MTokens[r], t.uint32(50).fork()).ldelim();
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.DropInfo; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              if (n.DropStage && n.DropStage.length || (n.DropStage = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.DropStage.push(e.int32());
                              else
                                  n.DropStage.push(e.int32());
                              break;
                          case 2:
                              if (n.DropID && n.DropID.length || (n.DropID = []),
                              2 == (7 & o))
                                  for (i = e.uint32() + e.pos; e.pos < i; )
                                      n.DropID.push(e.int32());
                              else
                                  n.DropID.push(e.int32());
                              break;
                          case 3:
                              n.C1 = e.string();
                              break;
                          case 4:
                              n.C2 = e.string();
                              break;
                          case 5:
                              n.ETokens && n.ETokens.length || (n.ETokens = []),
                              n.ETokens.push(y.msg.EquipmentToken.decode(e, e.uint32()));
                              break;
                          case 6:
                              n.MTokens && n.MTokens.length || (n.MTokens = []),
                              n.MTokens.push(y.msg.MaterialToken.decode(e, e.uint32()));
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.DropStage && e.hasOwnProperty("DropStage")) {
                          if (!Array.isArray(e.DropStage))
                              return "DropStage: array expected";
                          for (var t = 0; t < e.DropStage.length; ++t)
                              if (!f.isInteger(e.DropStage[t]))
                                  return "DropStage: integer[] expected"
                      }
                      if (null != e.DropID && e.hasOwnProperty("DropID")) {
                          if (!Array.isArray(e.DropID))
                              return "DropID: array expected";
                          for (t = 0; t < e.DropID.length; ++t)
                              if (!f.isInteger(e.DropID[t]))
                                  return "DropID: integer[] expected"
                      }
                      if (null != e.C1 && e.hasOwnProperty("C1") && !f.isString(e.C1))
                          return "C1: string expected";
                      if (null != e.C2 && e.hasOwnProperty("C2") && !f.isString(e.C2))
                          return "C2: string expected";
                      if (null != e.ETokens && e.hasOwnProperty("ETokens")) {
                          if (!Array.isArray(e.ETokens))
                              return "ETokens: array expected";
                          for (t = 0; t < e.ETokens.length; ++t)
                              if (r = y.msg.EquipmentToken.verify(e.ETokens[t]))
                                  return "ETokens." + r
                      }
                      if (null != e.MTokens && e.hasOwnProperty("MTokens")) {
                          if (!Array.isArray(e.MTokens))
                              return "MTokens: array expected";
                          for (t = 0; t < e.MTokens.length; ++t) {
                              var r;
                              if (r = y.msg.MaterialToken.verify(e.MTokens[t]))
                                  return "MTokens." + r
                          }
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.DropInfo)
                          return e;
                      var t = new y.msg.DropInfo;
                      if (e.DropStage) {
                          if (!Array.isArray(e.DropStage))
                              throw TypeError(".msg.DropInfo.DropStage: array expected");
                          t.DropStage = [];
                          for (var r = 0; r < e.DropStage.length; ++r)
                              t.DropStage[r] = 0 | e.DropStage[r]
                      }
                      if (e.DropID) {
                          if (!Array.isArray(e.DropID))
                              throw TypeError(".msg.DropInfo.DropID: array expected");
                          for (t.DropID = [],
                          r = 0; r < e.DropID.length; ++r)
                              t.DropID[r] = 0 | e.DropID[r]
                      }
                      if (null != e.C1 && (t.C1 = String(e.C1)),
                      null != e.C2 && (t.C2 = String(e.C2)),
                      e.ETokens) {
                          if (!Array.isArray(e.ETokens))
                              throw TypeError(".msg.DropInfo.ETokens: array expected");
                          for (t.ETokens = [],
                          r = 0; r < e.ETokens.length; ++r) {
                              if ("object" != typeof e.ETokens[r])
                                  throw TypeError(".msg.DropInfo.ETokens: object expected");
                              t.ETokens[r] = y.msg.EquipmentToken.fromObject(e.ETokens[r])
                          }
                      }
                      if (e.MTokens) {
                          if (!Array.isArray(e.MTokens))
                              throw TypeError(".msg.DropInfo.MTokens: array expected");
                          for (t.MTokens = [],
                          r = 0; r < e.MTokens.length; ++r) {
                              if ("object" != typeof e.MTokens[r])
                                  throw TypeError(".msg.DropInfo.MTokens: object expected");
                              t.MTokens[r] = y.msg.MaterialToken.fromObject(e.MTokens[r])
                          }
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.DropStage = [],
                      r.DropID = [],
                      r.ETokens = [],
                      r.MTokens = []),
                      t.defaults && (r.C1 = "",
                      r.C2 = ""),
                      e.DropStage && e.DropStage.length) {
                          r.DropStage = [];
                          for (var n = 0; n < e.DropStage.length; ++n)
                              r.DropStage[n] = e.DropStage[n]
                      }
                      if (e.DropID && e.DropID.length)
                          for (r.DropID = [],
                          n = 0; n < e.DropID.length; ++n)
                              r.DropID[n] = e.DropID[n];
                      if (null != e.C1 && e.hasOwnProperty("C1") && (r.C1 = e.C1),
                      null != e.C2 && e.hasOwnProperty("C2") && (r.C2 = e.C2),
                      e.ETokens && e.ETokens.length)
                          for (r.ETokens = [],
                          n = 0; n < e.ETokens.length; ++n)
                              r.ETokens[n] = y.msg.EquipmentToken.toObject(e.ETokens[n], t);
                      if (e.MTokens && e.MTokens.length)
                          for (r.MTokens = [],
                          n = 0; n < e.MTokens.length; ++n)
                              r.MTokens[n] = y.msg.MaterialToken.toObject(e.MTokens[n], t);
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.RewardInfo = function() {
                  function e(e) {
                      if (this.ETokens = [],
                      this.MTokens = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.C1 = "",
                  e.prototype.C2 = "",
                  e.prototype.ETokens = f.emptyArray,
                  e.prototype.MTokens = f.emptyArray,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.C1 && Object.hasOwnProperty.call(e, "C1") && t.uint32(10).string(e.C1),
                      null != e.C2 && Object.hasOwnProperty.call(e, "C2") && t.uint32(18).string(e.C2),
                      null != e.ETokens && e.ETokens.length)
                          for (var r = 0; r < e.ETokens.length; ++r)
                              y.msg.EquipmentToken.encode(e.ETokens[r], t.uint32(26).fork()).ldelim();
                      if (null != e.MTokens && e.MTokens.length)
                          for (r = 0; r < e.MTokens.length; ++r)
                              y.msg.MaterialToken.encode(e.MTokens[r], t.uint32(34).fork()).ldelim();
                      return t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.RewardInfo; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              n.C1 = e.string();
                              break;
                          case 2:
                              n.C2 = e.string();
                              break;
                          case 3:
                              n.ETokens && n.ETokens.length || (n.ETokens = []),
                              n.ETokens.push(y.msg.EquipmentToken.decode(e, e.uint32()));
                              break;
                          case 4:
                              n.MTokens && n.MTokens.length || (n.MTokens = []),
                              n.MTokens.push(y.msg.MaterialToken.decode(e, e.uint32()));
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.C1 && e.hasOwnProperty("C1") && !f.isString(e.C1))
                          return "C1: string expected";
                      if (null != e.C2 && e.hasOwnProperty("C2") && !f.isString(e.C2))
                          return "C2: string expected";
                      if (null != e.ETokens && e.hasOwnProperty("ETokens")) {
                          if (!Array.isArray(e.ETokens))
                              return "ETokens: array expected";
                          for (var t = 0; t < e.ETokens.length; ++t)
                              if (r = y.msg.EquipmentToken.verify(e.ETokens[t]))
                                  return "ETokens." + r
                      }
                      if (null != e.MTokens && e.hasOwnProperty("MTokens")) {
                          if (!Array.isArray(e.MTokens))
                              return "MTokens: array expected";
                          for (t = 0; t < e.MTokens.length; ++t) {
                              var r;
                              if (r = y.msg.MaterialToken.verify(e.MTokens[t]))
                                  return "MTokens." + r
                          }
                      }
                      return null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.RewardInfo)
                          return e;
                      var t = new y.msg.RewardInfo;
                      if (null != e.C1 && (t.C1 = String(e.C1)),
                      null != e.C2 && (t.C2 = String(e.C2)),
                      e.ETokens) {
                          if (!Array.isArray(e.ETokens))
                              throw TypeError(".msg.RewardInfo.ETokens: array expected");
                          t.ETokens = [];
                          for (var r = 0; r < e.ETokens.length; ++r) {
                              if ("object" != typeof e.ETokens[r])
                                  throw TypeError(".msg.RewardInfo.ETokens: object expected");
                              t.ETokens[r] = y.msg.EquipmentToken.fromObject(e.ETokens[r])
                          }
                      }
                      if (e.MTokens) {
                          if (!Array.isArray(e.MTokens))
                              throw TypeError(".msg.RewardInfo.MTokens: array expected");
                          for (t.MTokens = [],
                          r = 0; r < e.MTokens.length; ++r) {
                              if ("object" != typeof e.MTokens[r])
                                  throw TypeError(".msg.RewardInfo.MTokens: object expected");
                              t.MTokens[r] = y.msg.MaterialToken.fromObject(e.MTokens[r])
                          }
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.ETokens = [],
                      r.MTokens = []),
                      t.defaults && (r.C1 = "",
                      r.C2 = ""),
                      null != e.C1 && e.hasOwnProperty("C1") && (r.C1 = e.C1),
                      null != e.C2 && e.hasOwnProperty("C2") && (r.C2 = e.C2),
                      e.ETokens && e.ETokens.length) {
                          r.ETokens = [];
                          for (var n = 0; n < e.ETokens.length; ++n)
                              r.ETokens[n] = y.msg.EquipmentToken.toObject(e.ETokens[n], t)
                      }
                      if (e.MTokens && e.MTokens.length)
                          for (r.MTokens = [],
                          n = 0; n < e.MTokens.length; ++n)
                              r.MTokens[n] = y.msg.MaterialToken.toObject(e.MTokens[n], t);
                      return r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s.BattleUpdate = function() {
                  function e(e) {
                      if (this.Items = [],
                      this.WDel = [],
                      this.WAdd = [],
                      this.WUpdate = [],
                      e)
                          for (var t = Object.keys(e), r = 0; r < t.length; ++r)
                              null != e[t[r]] && (this[t[r]] = e[t[r]])
                  }
                  return e.prototype.Items = f.emptyArray,
                  e.prototype.WDel = f.emptyArray,
                  e.prototype.WAdd = f.emptyArray,
                  e.prototype.WUpdate = f.emptyArray,
                  e.prototype.CharAttrUpdate = null,
                  e.create = function(t) {
                      return new e(t)
                  }
                  ,
                  e.encode = function(e, t) {
                      if (t || (t = p.create()),
                      null != e.Items && e.Items.length) {
                          t.uint32(10).fork();
                          for (var r = 0; r < e.Items.length; ++r)
                              t.int32(e.Items[r]);
                          t.ldelim()
                      }
                      if (null != e.WDel && e.WDel.length) {
                          for (t.uint32(18).fork(),
                          r = 0; r < e.WDel.length; ++r)
                              t.int32(e.WDel[r]);
                          t.ldelim()
                      }
                      if (null != e.WAdd && e.WAdd.length)
                          for (r = 0; r < e.WAdd.length; ++r)
                              y.msg.BattleWeapon.encode(e.WAdd[r], t.uint32(26).fork()).ldelim();
                      if (null != e.WUpdate && e.WUpdate.length)
                          for (r = 0; r < e.WUpdate.length; ++r)
                              y.msg.BattleWeaponUpdate.encode(e.WUpdate[r], t.uint32(34).fork()).ldelim();
                      return null != e.CharAttrUpdate && Object.hasOwnProperty.call(e, "CharAttrUpdate") && y.msg.BattleAttrUpdate.encode(e.CharAttrUpdate, t.uint32(42).fork()).ldelim(),
                      t
                  }
                  ,
                  e.encodeDelimited = function(e, t) {
                      return this.encode(e, t).ldelim()
                  }
                  ,
                  e.decode = function(e, t) {
                      e instanceof u || (e = u.create(e));
                      for (var r = void 0 === t ? e.len : e.pos + t, n = new y.msg.BattleUpdate; e.pos < r; ) {
                          var o = e.uint32();
                          switch (o >>> 3) {
                          case 1:
                              if (n.Items && n.Items.length || (n.Items = []),
                              2 == (7 & o))
                                  for (var i = e.uint32() + e.pos; e.pos < i; )
                                      n.Items.push(e.int32());
                              else
                                  n.Items.push(e.int32());
                              break;
                          case 2:
                              if (n.WDel && n.WDel.length || (n.WDel = []),
                              2 == (7 & o))
                                  for (i = e.uint32() + e.pos; e.pos < i; )
                                      n.WDel.push(e.int32());
                              else
                                  n.WDel.push(e.int32());
                              break;
                          case 3:
                              n.WAdd && n.WAdd.length || (n.WAdd = []),
                              n.WAdd.push(y.msg.BattleWeapon.decode(e, e.uint32()));
                              break;
                          case 4:
                              n.WUpdate && n.WUpdate.length || (n.WUpdate = []),
                              n.WUpdate.push(y.msg.BattleWeaponUpdate.decode(e, e.uint32()));
                              break;
                          case 5:
                              n.CharAttrUpdate = y.msg.BattleAttrUpdate.decode(e, e.uint32());
                              break;
                          default:
                              e.skipType(7 & o)
                          }
                      }
                      return n
                  }
                  ,
                  e.decodeDelimited = function(e) {
                      return e instanceof u || (e = new u(e)),
                      this.decode(e, e.uint32())
                  }
                  ,
                  e.verify = function(e) {
                      if ("object" != typeof e || null === e)
                          return "object expected";
                      if (null != e.Items && e.hasOwnProperty("Items")) {
                          if (!Array.isArray(e.Items))
                              return "Items: array expected";
                          for (var t = 0; t < e.Items.length; ++t)
                              if (!f.isInteger(e.Items[t]))
                                  return "Items: integer[] expected"
                      }
                      if (null != e.WDel && e.hasOwnProperty("WDel")) {
                          if (!Array.isArray(e.WDel))
                              return "WDel: array expected";
                          for (t = 0; t < e.WDel.length; ++t)
                              if (!f.isInteger(e.WDel[t]))
                                  return "WDel: integer[] expected"
                      }
                      if (null != e.WAdd && e.hasOwnProperty("WAdd")) {
                          if (!Array.isArray(e.WAdd))
                              return "WAdd: array expected";
                          for (t = 0; t < e.WAdd.length; ++t)
                              if (r = y.msg.BattleWeapon.verify(e.WAdd[t]))
                                  return "WAdd." + r
                      }
                      if (null != e.WUpdate && e.hasOwnProperty("WUpdate")) {
                          if (!Array.isArray(e.WUpdate))
                              return "WUpdate: array expected";
                          for (t = 0; t < e.WUpdate.length; ++t)
                              if (r = y.msg.BattleWeaponUpdate.verify(e.WUpdate[t]))
                                  return "WUpdate." + r
                      }
                      var r;
                      return null != e.CharAttrUpdate && e.hasOwnProperty("CharAttrUpdate") && (r = y.msg.BattleAttrUpdate.verify(e.CharAttrUpdate)) ? "CharAttrUpdate." + r : null
                  }
                  ,
                  e.fromObject = function(e) {
                      if (e instanceof y.msg.BattleUpdate)
                          return e;
                      var t = new y.msg.BattleUpdate;
                      if (e.Items) {
                          if (!Array.isArray(e.Items))
                              throw TypeError(".msg.BattleUpdate.Items: array expected");
                          t.Items = [];
                          for (var r = 0; r < e.Items.length; ++r)
                              t.Items[r] = 0 | e.Items[r]
                      }
                      if (e.WDel) {
                          if (!Array.isArray(e.WDel))
                              throw TypeError(".msg.BattleUpdate.WDel: array expected");
                          for (t.WDel = [],
                          r = 0; r < e.WDel.length; ++r)
                              t.WDel[r] = 0 | e.WDel[r]
                      }
                      if (e.WAdd) {
                          if (!Array.isArray(e.WAdd))
                              throw TypeError(".msg.BattleUpdate.WAdd: array expected");
                          for (t.WAdd = [],
                          r = 0; r < e.WAdd.length; ++r) {
                              if ("object" != typeof e.WAdd[r])
                                  throw TypeError(".msg.BattleUpdate.WAdd: object expected");
                              t.WAdd[r] = y.msg.BattleWeapon.fromObject(e.WAdd[r])
                          }
                      }
                      if (e.WUpdate) {
                          if (!Array.isArray(e.WUpdate))
                              throw TypeError(".msg.BattleUpdate.WUpdate: array expected");
                          for (t.WUpdate = [],
                          r = 0; r < e.WUpdate.length; ++r) {
                              if ("object" != typeof e.WUpdate[r])
                                  throw TypeError(".msg.BattleUpdate.WUpdate: object expected");
                              t.WUpdate[r] = y.msg.BattleWeaponUpdate.fromObject(e.WUpdate[r])
                          }
                      }
                      if (null != e.CharAttrUpdate) {
                          if ("object" != typeof e.CharAttrUpdate)
                              throw TypeError(".msg.BattleUpdate.CharAttrUpdate: object expected");
                          t.CharAttrUpdate = y.msg.BattleAttrUpdate.fromObject(e.CharAttrUpdate)
                      }
                      return t
                  }
                  ,
                  e.toObject = function(e, t) {
                      t || (t = {});
                      var r = {};
                      if ((t.arrays || t.defaults) && (r.Items = [],
                      r.WDel = [],
                      r.WAdd = [],
                      r.WUpdate = []),
                      t.defaults && (r.CharAttrUpdate = null),
                      e.Items && e.Items.length) {
                          r.Items = [];
                          for (var n = 0; n < e.Items.length; ++n)
                              r.Items[n] = e.Items[n]
                      }
                      if (e.WDel && e.WDel.length)
                          for (r.WDel = [],
                          n = 0; n < e.WDel.length; ++n)
                              r.WDel[n] = e.WDel[n];
                      if (e.WAdd && e.WAdd.length)
                          for (r.WAdd = [],
                          n = 0; n < e.WAdd.length; ++n)
                              r.WAdd[n] = y.msg.BattleWeapon.toObject(e.WAdd[n], t);
                      if (e.WUpdate && e.WUpdate.length)
                          for (r.WUpdate = [],
                          n = 0; n < e.WUpdate.length; ++n)
                              r.WUpdate[n] = y.msg.BattleWeaponUpdate.toObject(e.WUpdate[n], t);
                      return null != e.CharAttrUpdate && e.hasOwnProperty("CharAttrUpdate") && (r.CharAttrUpdate = y.msg.BattleAttrUpdate.toObject(e.CharAttrUpdate, t)),
                      r
                  }
                  ,
                  e.prototype.toJSON = function() {
                      return this.constructor.toObject(this, c.util.toJSONOptions)
                  }
                  ,
                  e
              }(),
              s),
              n.exports = y,
              e("default", n.exports)
          }
          ), (function() {
              return {
                  "protobufjs/minimal.js": n
              }
          }
          ))
      }
  }
}
));

System.register("chunks:///_virtual/QuardTree.ts", ["cc", "./BattleDef.ts"], (function() {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      , null],
      execute: function() {
          e._RF.push({}, "01f5boaMHlBOpmNknJkW4mn", "QuardTree", void 0),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/QueryVariable.ts", ["cc"], (function(t) {
  var i;
  return {
      setters: [function(t) {
          i = t.cclegacy
      }
      ],
      execute: function() {
          i._RF.push({}, "867dcvYzSJNSp+QhcLwsCJs", "QueryVariable", void 0),
          t("default", function() {
              function t() {}
              return t.getValue = function(t) {
                  if (!this.dict) {
                      this.dict = {};
                      for (var i = window.location.search.substring(1), c = i.split("&"), e = 0; e < c.length; e++) {
                          var n = c[e].split("=");
                          this.dict[n[0]] = n[1]
                      }
                      console.log("[query] " + i)
                  }
                  return this.dict[t]
              }
              ,
              t
          }()).dict = void 0,
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Random.ts", ["cc"], (function(t) {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "7474dTeuyNGX5QsUvmDrXpz", "Random", void 0);
          t("default", function() {
              function t(t) {
                  this.seed = void 0,
                  this.seed = t
              }
              var e = t.prototype;
              return e.next = function() {
                  return this.seed = (9301 * this.seed + 49297) % 233280,
                  this.seed / 233280
              }
              ,
              e.nextInt = function(t, e) {
                  var n = t + Math.floor(this.next() * (e - t + 1));
                  return n > e && (n = e),
                  n
              }
              ,
              e.nextFloat = function(t, e) {
                  var n = t + this.next() * (e - t + 1);
                  return n > e && (n = e),
                  n
              }
              ,
              t
          }());
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/RangedWeapon.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Weapon.ts"], (function(e) {
  var n, t, o, r;
  return {
      setters: [function(e) {
          n = e.inheritsLoose
      }
      , function(e) {
          t = e.cclegacy,
          o = e._decorator
      }
      , function(e) {
          r = e.default
      }
      ],
      execute: function() {
          var c;
          t._RF.push({}, "5099cRETldHSo7GTM9tVQzP", "RangedWeapon", void 0);
          var u = o.ccclass;
          o.property,
          e("default", u("RangedWeapon")(c = function(e) {
              function t() {
                  return e.apply(this, arguments) || this
              }
              return n(t, e),
              t.prototype.fire = function(e) {}
              ,
              t
          }(r)) || c);
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ResAgent.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./ResSystem.ts"], (function(t) {
  var i, e, n, s, o, a;
  return {
      setters: [function(t) {
          i = t.createClass
      }
      , function(t) {
          e = t.cclegacy,
          n = t.Animation,
          s = t.Vec3
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          a = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "5554a8iXShMIqp/1xZYbitE", "ResAgent", void 0);
          var h = t("default", function() {
              function t() {
                  this.node = void 0,
                  this._state = void 0,
                  this._position = new s,
                  this._scale = new s(1,1,1),
                  this._angle = 0,
                  this._active = void 0,
                  this._animName = void 0,
                  this.layer = void 0
              }
              var e = t.prototype;
              return e.reset = function() {
                  this._state = 0,
                  this._position.x = 0,
                  this._position.y = 0,
                  this._position.y = 0,
                  this._scale.x = 1,
                  this._scale.y = 1,
                  this._scale.y = 1,
                  this._angle = 0,
                  this._active = !0,
                  this._animName = null
              }
              ,
              e.destroy = function() {
                  this.node && (a.ins.recycle(this.node),
                  this.node = null),
                  this._state = 3,
                  t.POOL.recycle(this)
              }
              ,
              e.setAsset = function(t, i) {
                  0 == this._state && (this._state = 1,
                  a.ins.spawnAsyn(t, i, this._position, this._angle, this.layer, this, this.onLoadFinish))
              }
              ,
              e.onLoadFinish = function(t) {
                  3 != this._state ? (this._state = 2,
                  this.node = t,
                  this.node.active = this._active,
                  this._animName && (this.playAnim(this._animName),
                  this._animName = null)) : a.ins.recycle(t)
              }
              ,
              e.playAnim = function(t) {
                  if (this.node) {
                      var i = this.node.getComponent(n);
                      i && i.play(t)
                  } else
                      this._animName = t
              }
              ,
              i(t, [{
                  key: "position",
                  get: function() {
                      return this._position
                  },
                  set: function(t) {
                      this.node && (this.node.position = t),
                      s.copy(this._position, t)
                  }
              }, {
                  key: "angle",
                  get: function() {
                      return this._angle
                  },
                  set: function(t) {
                      this.node && (this.node.angle = t),
                      this._angle = t
                  }
              }, {
                  key: "active",
                  get: function() {
                      return this._active
                  },
                  set: function(t) {
                      this.node && (this.node.active = t),
                      this._active = t
                  }
              }]),
              t
          }());
          h.POOL = new o((function() {
              return new h
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ResFrameAnimPool.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ResPool.ts", "./LayerSystem.ts"], (function(e) {
  var t, i, n, a, c, s, r, o, l, h;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          i = e.cclegacy,
          n = e.resources,
          a = e.SpriteFrame,
          c = e.AnimationClip,
          s = e.Node,
          r = e.Sprite,
          o = e.Animation
      }
      , function(e) {
          l = e.default
      }
      , function(e) {
          h = e.default
      }
      ],
      execute: function() {
          i._RF.push({}, "4fb3cB/KIpK245qEmnJ1P+3", "ResFrameAnimPool", void 0);
          e("default", function(e) {
              function i() {
                  for (var t, i = arguments.length, n = new Array(i), a = 0; a < i; a++)
                      n[a] = arguments[a];
                  return (t = e.call.apply(e, [this].concat(n)) || this).clip = void 0,
                  t.active = new Array,
                  t.caches = new Array,
                  t
              }
              t(i, e);
              var l = i.prototype;
              return l.load = function() {
                  var e = this;
                  n.loadDir(this.src, a, (function(t, i) {
                      if (t && console.error(t),
                      i) {
                          e.asset = i,
                          e.asset.sort((function(e, t) {
                              return e.name < t.name ? -1 : e.name > t.name ? 1 : 0
                          }
                          ));
                          var n = i;
                          e.clip = c.createWithSpriteFrames(n, n.length),
                          e.clip.name = "default",
                          e.clip.wrapMode = c.WrapMode.Loop,
                          e.state = 1,
                          e.handleCommandAll()
                      } else
                          console.error("load Sprite3D fail: " + e.src)
                  }
                  ))
              }
              ,
              l.onSpawn = function(e, t, i) {
                  if (null == this.clip)
                      return null;
                  var n;
                  if (this.caches.length > 0) {
                      var a = this.caches.length - 1;
                      n = this.caches[a],
                      this.caches.splice(a, 1)
                  } else {
                      (n = new s).name = this.name,
                      n.addComponent(r),
                      n.addComponent(o).addClip(this.clip, "default")
                  }
                  return i && h.ins.addNode(n, i),
                  e && (n.position = e),
                  t && (n.rotation = t),
                  n.active = !0,
                  this.active.push(n),
                  n
              }
              ,
              l.recycle = function(e) {
                  var t = this.active.indexOf(e);
                  -1 != t && (e.active = !1,
                  this.active.splice(t, 1),
                  this.caches.push(e))
              }
              ,
              l.recycleAll = function() {
                  if (this.active.length > 0) {
                      for (var e = 0; e < this.active.length; ++e) {
                          var t = this.active[e];
                          t.active = !1,
                          this.caches.push(t)
                      }
                      this.active.splice(0, this.active.length)
                  }
              }
              ,
              i
          }(l));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ResList.ts", ["cc"], (function(e) {
  var a, p, t, o, r, s, l;
  return {
      setters: [function(e) {
          a = e.cclegacy,
          p = e.SpriteFrame,
          t = e.SpriteAtlas,
          o = e.Prefab,
          r = e.JsonAsset,
          s = e.sp,
          l = e.AudioClip
      }
      ],
      execute: function() {
          a._RF.push({}, "1e582wj0jpKG50VE21aU0h1", "ResList", void 0);
          var d = function(e) {
              return "ui/" + e
          };
          e("default", {
              iconCom: {
                  path: d("icon/com"),
                  type: p,
                  preload: !0,
                  isDir: !0
              },
              iconBg: {
                  path: d("icon/bg"),
                  type: p,
                  preload: !0,
                  isDir: !0
              },
              iconFrame: {
                  path: d("icon/frame"),
                  type: p,
                  preload: !0,
                  isDir: !0
              },
              iconItems: {
                  path: d("icon/items"),
                  type: p,
                  preload: !0,
                  isDir: !0
              },
              iconWeaponSmall: {
                  path: d("icon/weapon/small"),
                  type: p,
                  preload: !0,
                  isDir: !0
              },
              iconWeaponLarge: {
                  path: d("icon/weapon/large"),
                  type: p,
                  preload: !0,
                  isDir: !0
              },
              iconHead: {
                  path: d("icon/head"),
                  type: p,
                  preload: !1,
                  isDir: !0
              },
              iconEquip: {
                  path: d("icon/equip"),
                  type: p,
                  preload: !0,
                  isDir: !0
              },
              iconMaterial: {
                  path: d("icon/material"),
                  type: p,
                  preload: !0,
                  isDir: !0
              },
              smallFrame: {
                  path: d("icon/frame_new/small"),
                  type: p,
                  preload: !0,
                  isDir: !0
              },
              largeFrame: {
                  path: d("icon/frame_new/large"),
                  type: p,
                  preload: !0,
                  isDir: !0
              },
              clothAtlas: {
                  path: d("icon/atlas/cloth"),
                  type: t,
                  preload: !1
              },
              hatAtlas: {
                  path: d("icon/atlas/hat"),
                  type: t,
                  preload: !1
              },
              pantAtlas: {
                  path: d("icon/atlas/pant"),
                  type: t,
                  preload: !1
              },
              shoeAtlas: {
                  path: d("icon/atlas/shoe"),
                  type: t,
                  preload: !1
              },
              weaponLAtlas: {
                  path: d("icon/atlas/weapon_l"),
                  type: t,
                  preload: !1
              },
              weaponRAtlas: {
                  path: d("icon/atlas/weapon_r"),
                  type: t,
                  preload: !1
              },
              LoadingWindow: {
                  path: d("loading/LoadingWindow"),
                  type: o,
                  preload: !1
              },
              LoginWindow: {
                  path: d("login/LoginWindow"),
                  type: o,
                  preload: !0
              },
              TextTips: {
                  path: d("tips/TextTips"),
                  type: o,
                  preload: !1
              },
              FuncBtn: {
                  path: d("home/FuncBtn"),
                  type: o,
                  preload: !0
              },
              FunxBtn: {
                  path: d("home/FunxBtn"),
                  type: o,
                  preload: !0
              },
              gameconfig: {
                  path: "config",
                  type: r,
                  preload: !0
              },
              serverlist: {
                  path: "serverlist",
                  type: r,
                  preload: !0
              },
              config: {
                  path: "config/config",
                  type: r,
                  preload: !0
              },
              dress_data: {
                  path: "creature/dress/collect",
                  type: r,
                  preload: !0
              },
              mapHome: {
                  path: "map/home/map",
                  type: o,
                  preload: !0
              },
              map001: {
                  path: "map/fight/map_01",
                  type: o,
                  preload: !1
              },
              map002: {
                  path: "map/fight/map_02",
                  type: o,
                  preload: !1
              },
              map003: {
                  path: "map/fight/map_03",
                  type: o,
                  preload: !1
              },
              map004: {
                  path: "map/fight/map_04",
                  type: o,
                  preload: !1
              },
              playerweapon: {
                  path: "creature/prefabs/playerweapon",
                  type: o,
                  preload: !0
              },
              birth: {
                  path: "creature/prefabs/birth",
                  type: o,
                  preload: !0
              },
              birth_boss: {
                  path: "creature/prefabs/birth_boss",
                  type: o,
                  preload: !0
              },
              birth_tower: {
                  path: "creature/prefabs/birth_tower",
                  type: o,
                  preload: !0
              },
              birth_door: {
                  path: "creature/prefabs/birth_door",
                  type: o,
                  preload: !0
              },
              dust: {
                  path: "effect/prefabs/dust",
                  type: o,
                  preload: !0
              },
              die: {
                  path: "effect/prefabs/die",
                  type: o,
                  preload: !0
              },
              die_blood: {
                  path: "effect/prefabs/die_blood",
                  type: o,
                  preload: !0
              },
              DamageCritText: {
                  path: "effect/prefabs/DamageCritText",
                  type: o,
                  preload: !1
              },
              DamageText: {
                  path: "effect/prefabs/DamageText",
                  type: o,
                  preload: !1
              },
              DamageSelfText: {
                  path: "effect/prefabs/DamageSelfText",
                  type: o,
                  preload: !1
              },
              BurningText: {
                  path: "effect/prefabs/BurningText",
                  type: o,
                  preload: !1
              },
              HealingText: {
                  path: "effect/prefabs/HealingText",
                  type: o,
                  preload: !1
              },
              fireBallAtlas: {
                  path: "effect/atlas/fireball",
                  type: t,
                  preload: !1
              },
              Miss: {
                  path: "effect/prefabs/Miss",
                  type: o,
                  preload: !1
              },
              fireWarm: {
                  path: "effect/prefabs/fireWarm",
                  type: o,
                  preload: !1
              },
              fireBall: {
                  path: "effect/prefabs/fireBall",
                  type: o,
                  preload: !1
              },
              fireBall2: {
                  path: "effect/prefabs/fireBall2",
                  type: o,
                  preload: !1
              },
              fireBomb: {
                  path: "effect/prefabs/fireBomb",
                  type: o,
                  preload: !1
              },
              fireExplode: {
                  path: "effect/prefabs/fireExplode",
                  type: o,
                  preload: !1
              },
              weapon_FireRing: {
                  path: "weapon/prefabs/weapon_FireRing",
                  type: o,
                  preload: !0
              },
              weapon_FireBall2: {
                  path: "weapon/prefabs/weapon_FireBall2",
                  type: o,
                  preload: !0
              },
              Stun: {
                  path: "effect/prefabs/Stun",
                  type: o,
                  preload: !1
              },
              burning: {
                  path: "effect/prefabs/burning",
                  type: o,
                  preload: !1
              },
              lightning: {
                  path: "effect/prefabs/lightning",
                  type: o,
                  preload: !1
              },
              drop_coin: {
                  path: "creature/prefabs/drop_coin",
                  type: o,
                  preload: !1
              },
              drop_item: {
                  path: "creature/prefabs/drop_item",
                  type: o,
                  preload: !1
              },
              drop_cure: {
                  path: "creature/prefabs/drop_cure",
                  type: o,
                  preload: !1
              },
              drop_material: {
                  path: "creature/prefabs/drop_material",
                  type: o,
                  preload: !1
              },
              drop_chest1: {
                  path: "creature/prefabs/drop_chest1",
                  type: o,
                  preload: !1
              },
              drop_chest2: {
                  path: "creature/prefabs/drop_chest2",
                  type: o,
                  preload: !1
              },
              drop_chest3: {
                  path: "creature/prefabs/drop_chest3",
                  type: o,
                  preload: !1
              },
              YetiBoos_warm: {
                  path: "creature/prefabs/YetiBoos_warm",
                  type: o,
                  preload: !0
              },
              grid: {
                  path: "weapon/prefabs/grid",
                  type: o,
                  preload: !1
              },
              ring: {
                  path: "weapon/prefabs/ring",
                  type: o,
                  preload: !1
              },
              chest_silver: {
                  path: "ui/fight-reward/chest_silver",
                  type: o,
                  preload: !1
              },
              chest_gold: {
                  path: "ui/fight-reward/chest_gold",
                  type: o,
                  preload: !1
              },
              chest_colorful: {
                  path: "ui/fight-reward/chest_colorful",
                  type: o,
                  preload: !1
              },
              skin_Viktas: {
                  path: "creature/skins/Viktas",
                  type: s.SkeletonData,
                  preload: !1
              },
              skin_Dks: {
                  path: "creature/skins/Dks",
                  type: s.SkeletonData,
                  preload: !1
              },
              skin_Gecko: {
                  path: "creature/skins/Gecko",
                  type: s.SkeletonData,
                  preload: !1
              },
              skin_Madlabs: {
                  path: "creature/skins/Madlabs",
                  type: s.SkeletonData,
                  preload: !1
              },
              skin_Smb: {
                  path: "creature/skins/Smb",
                  type: s.SkeletonData,
                  preload: !1
              },
              skin_Taiyo: {
                  path: "creature/skins/Taiyo",
                  type: s.SkeletonData,
                  preload: !1
              },
              sound_bgmin: {
                  path: "sound/bgmin",
                  type: l,
                  preload: !0
              },
              sound_bgmout1: {
                  path: "sound/bgmout1",
                  type: l,
                  preload: !0
              },
              sound_bgmout2: {
                  path: "sound/bgmout2",
                  type: l,
                  preload: !0
              },
              sound_blood: {
                  path: "sound/blood",
                  type: l,
                  preload: !1
              },
              sound_bossbattle: {
                  path: "sound/bossbattle",
                  type: l,
                  preload: !1
              },
              sound_bossskill: {
                  path: "sound/bossskill",
                  type: l,
                  preload: !1
              },
              sound_box: {
                  path: "sound/box",
                  type: l,
                  preload: !1
              },
              sound_click: {
                  path: "sound/click",
                  type: l,
                  preload: !1
              },
              sound_coin: {
                  path: "sound/coin",
                  type: l,
                  preload: !1
              },
              sound_crossbow: {
                  path: "sound/crossbow",
                  type: l,
                  preload: !1
              },
              sound_firetower: {
                  path: "sound/firetower",
                  type: l,
                  preload: !1
              },
              sound_foot: {
                  path: "sound/foot",
                  type: l,
                  preload: !1
              },
              sound_gameover: {
                  path: "sound/gameover",
                  type: l,
                  preload: !1
              },
              sound_hit: {
                  path: "sound/hit",
                  type: l,
                  preload: !1
              },
              sound_lasertower: {
                  path: "sound/lasertower",
                  type: l,
                  preload: !1
              },
              sound_shoot: {
                  path: "sound/shoot",
                  type: l,
                  preload: !1
              },
              sound_snipergun: {
                  path: "sound/snipergun",
                  type: l,
                  preload: !1
              },
              sound_switch: {
                  path: "sound/switch",
                  type: l,
                  preload: !1
              },
              sound_bazooka: {
                  path: "sound/bazooka",
                  type: l,
                  preload: !1
              },
              sound_poker: {
                  path: "sound/poker",
                  type: l,
                  preload: !1
              },
              sound_victory: {
                  path: "sound/victory",
                  type: l,
                  preload: !1
              },
              sound_magicball: {
                  path: "sound/magicball",
                  type: l,
                  preload: !1
              }
          });
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ResLoader.ts", ["cc", "./SimplePool.ts"], (function(t) {
  var s, e, i;
  return {
      setters: [function(t) {
          s = t.cclegacy,
          e = t.resources
      }
      , function(t) {
          i = t.default
      }
      ],
      execute: function() {
          s._RF.push({}, "5a7352DX7RB55YaYvErN63b", "ResLoader", void 0);
          var o = t("default", function() {
              function t() {
                  this.path = void 0,
                  this.type = void 0,
                  this.isDir = void 0,
                  this.caller = void 0,
                  this.progressValue = 0,
                  this.progress = void 0,
                  this.complete = void 0,
                  this.onProgress = this.onProgress.bind(this),
                  this.onComplete = this.onComplete.bind(this)
              }
              var s = t.prototype;
              return s.reset = function() {}
              ,
              s.load = function() {
                  this.isDir ? e.loadDir(this.path, this.type, this.onProgress, this.onComplete) : e.load(this.path, this.type, this.onProgress, this.onComplete)
              }
              ,
              s.onProgress = function(t, s, e) {
                  this.progressValue = t / s,
                  this.progress.call(this.caller, t, s, e)
              }
              ,
              s.onComplete = function(s, e) {
                  this.complete.call(this.caller, s, e, this),
                  t.POOL.recycle(this)
              }
              ,
              t
          }());
          o.POOL = new i((function() {
              return new o
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ResNode.ts", ["cc"], (function(t) {
  var e;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "91a66LilC5HF4nTin/RYIt6", "ResNode", void 0);
          t("default", (function() {
              this.url = void 0,
              this.type = void 0,
              this.preload = void 0
          }
          ));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ResPool.ts", ["cc"], (function(t) {
  var n;
  return {
      setters: [function(t) {
          n = t.cclegacy
      }
      ],
      execute: function() {
          n._RF.push({}, "e8467DphOBAgrxllOqt6S88", "ResPool", void 0);
          t("default", function() {
              function t(t, n) {
                  this.src = void 0,
                  this.name = void 0,
                  this.commands = [],
                  this.state = void 0,
                  this.asset = void 0,
                  this.name = t.substring(t.lastIndexOf("/") + 1),
                  this.src = t,
                  n ? (this.state = 1,
                  this.asset = n,
                  this.start()) : (this.state = 0,
                  this.load())
              }
              var n = t.prototype;
              return n.start = function() {}
              ,
              n.load = function() {}
              ,
              n.spawnAsyn = function(t, n, l, a, s, i) {
                  if (1 == this.state) {
                      var o = this.onSpawn(t, n, l);
                      o.pool = this,
                      this.handleCallback(o, a, s, i)
                  } else
                      this.commands.push({
                          position: t,
                          rotation: n,
                          isSpawn: !0,
                          caller: a,
                          method: s,
                          args: i,
                          layer: l
                      })
              }
              ,
              n.handleCallback = function(t, n, l, a) {
                  null != l && (t ? a ? l.call.apply(l, [n, t].concat(a)) : l.call(n, t) : a ? l.call.apply(l, [n, null].concat(a)) : l.call(n, null))
              }
              ,
              n.spawn = function(t, n, l) {
                  var a = this.onSpawn(t, n, l);
                  return null == a ? null : (a.pool = this,
                  a)
              }
              ,
              n.onSpawn = function(t, n, l) {}
              ,
              n.recycle = function(t) {}
              ,
              n.recycleAll = function() {}
              ,
              n.handleCommandAll = function() {
                  for (var t = 0; t < this.commands.length; ++t) {
                      var n = this.commands[t];
                      if (n.isSpawn) {
                          var l = this.onSpawn(n.position, n.rotation, n.layer);
                          l.pool = this,
                          this.handleCallback(l, n.caller, n.method, n.args)
                      } else
                          this.handleCallback(null, n.caller, n.method, n.args)
                  }
                  this.commands.splice(0, this.commands.length)
              }
              ,
              n.preload = function(t, n, l) {
                  0 == this.state ? this.commands.push({
                      position: null,
                      rotation: null,
                      isSpawn: !1,
                      caller: t,
                      method: n,
                      args: l,
                      layer: null
                  }) : this.handleCallback(null, t, n, l)
              }
              ,
              t
          }());
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ResPrefabPool.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ResPool.ts", "./LayerSystem.ts"], (function(e) {
  var t, s, i, n, a, c, r, l;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          s = e.cclegacy,
          i = e.resources,
          n = e.Prefab,
          a = e.instantiate,
          c = e.Quat
      }
      , function(e) {
          r = e.default
      }
      , function(e) {
          l = e.default
      }
      ],
      execute: function() {
          s._RF.push({}, "5611f4iTIRF7I0lAmeM6mPm", "ResPrefabPool", void 0);
          e("default", function(e) {
              function s() {
                  for (var t, s = arguments.length, i = new Array(s), n = 0; n < s; n++)
                      i[n] = arguments[n];
                  return (t = e.call.apply(e, [this].concat(i)) || this).active = new Array,
                  t.caches = new Array,
                  t
              }
              t(s, e);
              var r = s.prototype;
              return r.load = function() {
                  var e = this;
                  i.load(this.src, n, (function(t, s) {
                      t && console.error(t),
                      s ? (e.asset = s,
                      e.state = 1,
                      e.handleCommandAll()) : console.error("load Sprite3D fail: " + e.src)
                  }
                  ))
              }
              ,
              r.onSpawn = function(e, t, s) {
                  if (null == this.asset)
                      return null;
                  var i;
                  if (this.caches.length > 0) {
                      var n = this.caches.length - 1;
                      i = this.caches[n],
                      this.caches.splice(n, 1)
                  } else
                      (i = a(this.asset)).name = this.name;
                  return null != s && l.ins.addNode(i, s),
                  e && (i.position = e),
                  t && (t instanceof c ? i.rotation = t : i.angle = t),
                  i.active = !0,
                  this.active.push(i),
                  i
              }
              ,
              r.recycle = function(e) {
                  var t = this.active.indexOf(e);
                  -1 != t && (e.active = !1,
                  e.setParent(null),
                  this.active.splice(t, 1),
                  this.caches.push(e))
              }
              ,
              r.recycleAll = function() {
                  if (this.active.length > 0) {
                      for (var e = 0; e < this.active.length; ++e) {
                          var t = this.active[e];
                          t.active = !1,
                          t.setParent(null),
                          this.caches.push(t)
                      }
                      this.active.splice(0, this.active.length)
                  }
              }
              ,
              s
          }(r));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ResRemoteSpriteFramePool.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ResPool.ts"], (function(e) {
  var t, r, n, o, i, s;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          r = e.cclegacy,
          n = e.assetManager,
          o = e.Texture2D,
          i = e.SpriteFrame
      }
      , function(e) {
          s = e.default
      }
      ],
      execute: function() {
          r._RF.push({}, "ceb35L/JKVBfrN+Ch0EswpQ", "ResRemoteSpriteFramePool", void 0);
          e("default", function(e) {
              function r() {
                  for (var t, r = arguments.length, n = new Array(r), o = 0; o < r; o++)
                      n[o] = arguments[o];
                  return (t = e.call.apply(e, [this].concat(n)) || this).spriteFrame = void 0,
                  t.refCount = void 0,
                  t
              }
              t(r, e);
              var s = r.prototype;
              return s.load = function() {
                  var e = this;
                  n.loadRemote(this.src, o, (function(t, r) {
                      if (r) {
                          e.asset = r;
                          var n = new o;
                          n.image = r,
                          e.spriteFrame = new i,
                          e.spriteFrame.texture = n,
                          e.state = 1,
                          e.handleCommandAll()
                      } else
                          console.error("load Texture2D fail: " + e.src)
                  }
                  ))
              }
              ,
              s.onSpawn = function(e, t, r) {
                  return this.refCount++,
                  this.spriteFrame
              }
              ,
              s.recycle = function(e) {
                  this.refCount--
              }
              ,
              s.recycleAll = function() {
                  this.refCount = 0
              }
              ,
              r
          }(s));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ResRemoteTexturePool.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ResPool.ts"], (function(e) {
  var t, o, n, r, u;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          o = e.cclegacy,
          n = e.assetManager,
          r = e.Texture2D
      }
      , function(e) {
          u = e.default
      }
      ],
      execute: function() {
          o._RF.push({}, "f2953+yKzZEipVZi04mLqcW", "ResRemoteTexturePool", void 0);
          e("default", function(e) {
              function o() {
                  for (var t, o = arguments.length, n = new Array(o), r = 0; r < o; r++)
                      n[r] = arguments[r];
                  return (t = e.call.apply(e, [this].concat(n)) || this).texture = void 0,
                  t.refCount = void 0,
                  t
              }
              t(o, e);
              var u = o.prototype;
              return u.load = function() {
                  var e = this;
                  n.loadRemote(this.src, r, (function(t, o) {
                      o ? (e.asset = o,
                      e.texture = new r,
                      e.texture.image = o,
                      e.state = 1,
                      e.handleCommandAll()) : console.error("load Sprite3D fail: " + e.src)
                  }
                  ))
              }
              ,
              u.onSpawn = function(e, t, o) {
                  return this.refCount++,
                  this.texture
              }
              ,
              u.recycle = function(e) {
                  this.refCount--
              }
              ,
              u.recycleAll = function() {
                  this.refCount = 0
              }
              ,
              o
          }(u));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ResSpinePool.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ResPool.ts", "./LayerSystem.ts"], (function(e) {
  var t, n, s, i, a, c, o;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          n = e.cclegacy,
          s = e.resources,
          i = e.sp,
          a = e.Node
      }
      , function(e) {
          c = e.default
      }
      , function(e) {
          o = e.default
      }
      ],
      execute: function() {
          n._RF.push({}, "92fb69x7OdM9aE0Brzw7Uvs", "ResSpinePool", void 0);
          e("default", function(e) {
              function n() {
                  for (var t, n = arguments.length, s = new Array(n), i = 0; i < n; i++)
                      s[i] = arguments[i];
                  return (t = e.call.apply(e, [this].concat(s)) || this).active = new Array,
                  t.caches = new Array,
                  t
              }
              t(n, e);
              var c = n.prototype;
              return c.load = function() {
                  var e = this;
                  s.load(this.src, i.SkeletonData, (function(t, n) {
                      n ? (e.asset = n,
                      e.state = 1,
                      e.handleCommandAll()) : (console.error(t),
                      console.error("load Sprite3D fail: " + e.src))
                  }
                  ))
              }
              ,
              c.onSpawn = function(e, t, n) {
                  if (null == this.asset)
                      return null;
                  var s;
                  if (this.caches.length > 0) {
                      var c = this.caches.length - 1;
                      s = this.caches[c],
                      this.caches.splice(c, 1)
                  } else {
                      (s = (new a).addComponent(i.Skeleton)).name = this.name,
                      s.skeletonData = this.asset,
                      s.animation = this.name
                  }
                  return n && o.ins.addNode(s.node, n),
                  e && (s.node.position = e),
                  t && (s.node.rotation = t),
                  s.node.active = !0,
                  this.active.push(s),
                  s
              }
              ,
              c.recycle = function(e) {
                  var t = this.active.indexOf(e);
                  -1 != t && (e.node.active = !1,
                  this.active.splice(t, 1),
                  this.caches.push(e))
              }
              ,
              c.recycleAll = function() {
                  if (this.active.length > 0) {
                      for (var e = 0; e < this.active.length; ++e) {
                          var t = this.active[e];
                          t.node.active = !1,
                          this.caches.push(t)
                      }
                      this.active.splice(0, this.active.length)
                  }
              }
              ,
              n
          }(c));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ResSpriteAtlasPool.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ResPool.ts"], (function(t) {
  var e, r, s, n, o;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          r = t.cclegacy,
          s = t.resources,
          n = t.SpriteAtlas
      }
      , function(t) {
          o = t.default
      }
      ],
      execute: function() {
          r._RF.push({}, "2fdb3RtArlGaIlpeAgBZI20", "ResSpriteAtlasPool", void 0);
          t("default", function(t) {
              function r() {
                  for (var e, r = arguments.length, s = new Array(r), n = 0; n < r; n++)
                      s[n] = arguments[n];
                  return (e = t.call.apply(t, [this].concat(s)) || this).refCount = void 0,
                  e
              }
              e(r, t);
              var o = r.prototype;
              return o.start = function() {
                  this.setSpriteFrames(this.asset.getSpriteFrames())
              }
              ,
              o.setSpriteFrames = function(t) {
                  this.spriteFrameDict = {};
                  for (var e = 0; e < t.length; ++e) {
                      var r = t[e].name;
                      this.spriteFrameDict[r] = t[e]
                  }
              }
              ,
              o.load = function() {
                  var t = this;
                  s.load(this.src, n, (function(e, r) {
                      e && console.error(e),
                      r ? (t.asset = r,
                      t.state = 1,
                      t.start(),
                      t.handleCommandAll()) : console.error("load Sprite3D fail: " + t.src)
                  }
                  ))
              }
              ,
              o.onSpawn = function(t, e, r) {
                  return this.refCount++,
                  this.spriteFrameDict
              }
              ,
              o.recycle = function(t) {
                  this.refCount--
              }
              ,
              o.recycleAll = function() {
                  this.refCount = 0
              }
              ,
              r
          }(o));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ResSpriteFramePool.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ResPool.ts"], (function(t) {
  var e, r, n, o, s;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          r = t.cclegacy,
          n = t.resources,
          o = t.SpriteFrame
      }
      , function(t) {
          s = t.default
      }
      ],
      execute: function() {
          r._RF.push({}, "b33c01HiiJNQ6Ns4UlhZRnQ", "ResSpriteFramePool", void 0);
          t("default", function(t) {
              function r() {
                  for (var e, r = arguments.length, n = new Array(r), o = 0; o < r; o++)
                      n[o] = arguments[o];
                  return (e = t.call.apply(t, [this].concat(n)) || this).refCount = void 0,
                  e
              }
              e(r, t);
              var s = r.prototype;
              return s.start = function() {}
              ,
              s.load = function() {
                  var t = this;
                  n.load(this.src, o, (function(e, r) {
                      e && console.error(e),
                      r ? (t.asset = r,
                      t.state = 1,
                      t.start(),
                      t.handleCommandAll()) : console.error("load Sprite3D fail: " + t.src)
                  }
                  ))
              }
              ,
              s.onSpawn = function(t, e, r) {
                  return this.refCount++,
                  this.asset
              }
              ,
              s.recycle = function(t) {
                  this.refCount--
              }
              ,
              s.recycleAll = function() {
                  this.refCount = 0
              }
              ,
              r
          }(s));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ResSpriteFramesPool.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ResPool.ts"], (function(t) {
  var e, r, n, o, s;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          r = t.cclegacy,
          n = t.resources,
          o = t.SpriteFrame
      }
      , function(t) {
          s = t.default
      }
      ],
      execute: function() {
          r._RF.push({}, "4ffc5prUzlO4ozCcZe7+CBi", "ResSpriteFramesPool", void 0);
          t("default", function(t) {
              function r() {
                  for (var e, r = arguments.length, n = new Array(r), o = 0; o < r; o++)
                      n[o] = arguments[o];
                  return (e = t.call.apply(t, [this].concat(n)) || this).refCount = void 0,
                  e
              }
              e(r, t);
              var s = r.prototype;
              return s.start = function() {
                  this.setSpriteFrames(this.asset)
              }
              ,
              s.setSpriteFrames = function(t) {
                  this.spriteFrameDict = {};
                  for (var e = 0; e < t.length; ++e) {
                      var r = t[e].name;
                      this.spriteFrameDict[r] = t[e]
                  }
              }
              ,
              s.load = function() {
                  var t = this;
                  n.loadDir(this.src, o, (function(e, r) {
                      e && console.error(e),
                      r ? (t.asset = r,
                      t.state = 1,
                      t.start(),
                      t.handleCommandAll()) : console.error("load Sprite3D fail: " + t.src)
                  }
                  ))
              }
              ,
              s.onSpawn = function(t, e, r) {
                  return this.refCount++,
                  this.spriteFrameDict
              }
              ,
              s.recycle = function(t) {
                  this.refCount--
              }
              ,
              s.recycleAll = function() {
                  this.refCount = 0
              }
              ,
              r
          }(s));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ResSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ResFrameAnimPool.ts", "./ResSpinePool.ts", "./ResTexturePool.ts", "./ResPrefabPool.ts", "./Singleton.ts", "./ResLoader.ts", "./ResSpriteAtlasPool.ts", "./ResSpriteFramesPool.ts", "./ResSpriteFramePool.ts", "./ResRemoteTexturePool.ts", "./ResRemoteSpriteFramePool.ts"], (function(e) {
  var t, o, n, l, i, s, r, a, u, c, h, d, p, f, m, g, P, w, v, C, y, S, A, F;
  return {
      setters: [function(e) {
          t = e.inheritsLoose,
          o = e.asyncToGenerator,
          n = e.regeneratorRuntime
      }
      , function(e) {
          l = e.cclegacy,
          i = e.Texture2D,
          s = e.SpriteFrame,
          r = e.sp,
          a = e.Animation,
          u = e.SpriteAtlas,
          c = e.Prefab,
          h = e.resources,
          d = e.Sprite,
          p = e.UITransform
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          m = e.default
      }
      , function(e) {
          g = e.default
      }
      , function(e) {
          P = e.default
      }
      , function(e) {
          w = e.default
      }
      , function(e) {
          v = e.default
      }
      , function(e) {
          C = e.default
      }
      , function(e) {
          y = e.default
      }
      , function(e) {
          S = e.default
      }
      , function(e) {
          A = e.default
      }
      , function(e) {
          F = e.default
      }
      ],
      execute: function() {
          l._RF.push({}, "dbf65vYNX1EPJ+foVjk8xAb", "ResSystem", void 0);
          e("default", function(e) {
              function l() {
                  for (var t, o = arguments.length, n = new Array(o), l = 0; l < o; l++)
                      n[l] = arguments[l];
                  return (t = e.call.apply(e, [this].concat(n)) || this).poolDict = {},
                  t.remotePoolDict = {},
                  t.loadQueue = [],
                  t.loadList = [],
                  t.loadCaller = void 0,
                  t.loadProgressHandler = void 0,
                  t.loadCompleteHandler = void 0,
                  t.loadAssetCompleteHandler = void 0,
                  t.loadValue = void 0,
                  t.loadTotal = void 0,
                  t
              }
              t(l, e);
              var w = l.prototype;
              return w.getOrCreateRemotePool = function(e, t) {
                  var o = this.remotePoolDict[e];
                  return null == o && (t === i ? o = new A(e,null) : t == s && (o = new F(e,null)),
                  this.remotePoolDict[e] = o),
                  o
              }
              ,
              w.getOrCreatePool = function(e, t) {
                  var o = this.poolDict[e];
                  return null == o && (o = t === r.SkeletonData ? new m(e,null) : t === i ? new g(e,null) : t === a ? new f(e,null) : t == s ? new S(e,null) : t === u ? new C(e,null) : t === Array ? new y(e,null) : new P(e,null),
                  this.poolDict[e] = o),
                  o
              }
              ,
              w.createPool = function(e, t, o) {
                  var n = this.poolDict[e];
                  null == n && (t instanceof r.SkeletonData ? n = new m(e,t) : t instanceof i ? n = new g(e,null) : t instanceof a ? n = new f(e,t) : t instanceof s ? n = new S(e,t) : !o && t instanceof u ? n = new C(e,t) : o && t[0]instanceof s ? n = new y(e,t) : t instanceof c && (n = new P(e,t)),
                  null != n && (this.poolDict[e] = n))
              }
              ,
              w.spawnAsyn = function(e, t, o, n, l, i, s, r) {
                  this.getOrCreatePool(e, t).spawnAsyn(o, n, l, i, s, r)
              }
              ,
              w.spawn = function(e, t, o, n, l) {
                  return this.getOrCreatePool(e, t).spawn(o, n, l)
              }
              ,
              w.spawnAsynX = function() {
                  var e = o(n().mark((function e(t, o, l, i, s) {
                      var r = this;
                      return n().wrap((function(e) {
                          for (; ; )
                              switch (e.prev = e.next) {
                              case 0:
                                  return e.abrupt("return", new Promise((function(e, n) {
                                      r.getOrCreatePool(t, o).spawnAsyn(l, i, s, r, (function(t) {
                                          e(t)
                                      }
                                      ))
                                  }
                                  )));
                              case 1:
                              case "end":
                                  return e.stop()
                              }
                      }
                      ), e)
                  }
                  )));
                  return function(t, o, n, l, i) {
                      return e.apply(this, arguments)
                  }
              }(),
              w.recycle = function(e) {
                  var t = e.pool;
                  t && (t.recycle(e),
                  delete e.pool)
              }
              ,
              w.recycleAll = function(e) {
                  var t = this.poolDict[e];
                  t && t.recycleAll()
              }
              ,
              w.preload = function(e, t, o, n, l) {
                  this.getOrCreatePool(e, t).preload(o, n, l)
              }
              ,
              w.preloadQueue = function(e, t, o, n, l) {
                  for (var i in this.onProgress = this.onProgress.bind(this),
                  this.onComplete = this.onComplete.bind(this),
                  this.loadCaller = t,
                  this.loadProgressHandler = o,
                  this.loadCompleteHandler = n,
                  this.loadAssetCompleteHandler = l,
                  this.loadValue = 0,
                  this.loadTotal = 0,
                  e) {
                      var s = e[i];
                      s.preload && (this.loadQueue.push({
                          type: s.type,
                          path: s.path,
                          isDir: s.isDir
                      }),
                      this.loadTotal += 1)
                  }
                  this.loadNext()
              }
              ,
              w.loadNext = function() {
                  for (; this.loadList.length < 4 && this.loadQueue.length > 0; ) {
                      var e = this.loadQueue.splice(0, 1)[0]
                        , t = v.POOL.spawn();
                      t.path = e.path,
                      t.type = e.type,
                      t.isDir = e.isDir,
                      t.caller = this,
                      t.progress = this.onProgress,
                      t.complete = this.onComplete,
                      t.load(),
                      this.loadList.push(t)
                  }
              }
              ,
              w.getProgressValue = function() {
                  for (var e = 0, t = 0; t < this.loadList.length; ++t)
                      e += this.loadList[t].progressValue;
                  return this.loadValue + e
              }
              ,
              w.onProgress = function(e, t, o) {
                  var n, l = this.getProgressValue();
                  null == (n = this.loadProgressHandler) || n.call(this.loadCaller, l, this.loadTotal)
              }
              ,
              w.onComplete = function(e, t, o) {
                  if (null == e) {
                      var n = this.loadList.indexOf(o);
                      -1 != n && this.loadList.splice(n, 1),
                      this.createPool(o.path, t, o.isDir),
                      this.loadValue += 1,
                      this.loadAssetCompleteHandler.call(this.loadCaller, t, o.path),
                      0 == this.loadList.length && 0 == this.loadQueue.length ? this.loadCompleteHandler.call(this.loadCaller) : this.loadNext()
                  } else
                      console.error(e)
              }
              ,
              w.loadJson = function(e) {
                  return new Promise((function(t, o) {
                      h.load(e, (function(e, o) {
                          t(o)
                      }
                      ))
                  }
                  ))
              }
              ,
              w.loadText = function(e) {
                  return new Promise((function(t, o) {
                      h.load(e, (function(e, o) {
                          t(o)
                      }
                      ))
                  }
                  ))
              }
              ,
              w.setSpriteFrame = function(e, t) {
                  this.clearSpriteFrame(e),
                  this.spawnAsyn(t, s, null, null, null, this, (function(t) {
                      e.spriteFrame = t
                  }
                  ))
              }
              ,
              w.setSpriteFrameByAtlas = function(e, t, o) {
                  this.clearSpriteFrame(e),
                  this.spawnAsyn(t, u, null, null, null, this, (function(t) {
                      e.spriteFrame = t[o]
                  }
                  ))
              }
              ,
              w.clearSpriteFrame = function(e) {
                  e.spriteFrame && (this.recycle(e.spriteFrame),
                  e.spriteFrame = null)
              }
              ,
              w.setRemoteSpriteFrame = function(e, t, o, n) {
                  (this.clearSpriteFrame(e),
                  null != t && "" != t) && this.getOrCreateRemotePool(t, s).spawnAsyn(null, null, null, this, (function(t) {
                      if (e.sizeMode = d.SizeMode.CUSTOM,
                      e.spriteFrame = t,
                      1 == o) {
                          var l = e.getComponent(p)
                            , i = n
                            , s = i * t.height / t.width;
                          l.setContentSize(i, s)
                      } else if (2 == o) {
                          var r = e.getComponent(p)
                            , a = n
                            , u = a * t.width / t.height;
                          r.setContentSize(u, a)
                      } else if (3 == o) {
                          var c = e.getComponent(p);
                          if (t.width > t.height) {
                              var h = n
                                , f = h * t.height / t.width;
                              c.setContentSize(h, f)
                          } else {
                              var m = n
                                , g = m * t.width / t.height;
                              c.setContentSize(g, m)
                          }
                      }
                  }
                  ))
              }
              ,
              l
          }(w()));
          l._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ResTexturePool.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ResPool.ts"], (function(t) {
  var e, o, n, r, s;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          o = t.cclegacy,
          n = t.resources,
          r = t.Texture2D
      }
      , function(t) {
          s = t.default
      }
      ],
      execute: function() {
          o._RF.push({}, "a9e55sbdDZKaoQNggmlrdck", "ResTexturePool", void 0);
          t("default", function(t) {
              function o() {
                  for (var e, o = arguments.length, n = new Array(o), r = 0; r < o; r++)
                      n[r] = arguments[r];
                  return (e = t.call.apply(t, [this].concat(n)) || this).refCount = void 0,
                  e
              }
              e(o, t);
              var s = o.prototype;
              return s.load = function() {
                  var t = this;
                  n.load(this.src, r, (function(e, o) {
                      o ? (t.asset = o,
                      t.state = 1,
                      t.handleCommandAll()) : console.error("load Sprite3D fail: " + t.src)
                  }
                  ))
              }
              ,
              s.onSpawn = function(t, e, o) {
                  return this.refCount++,
                  this.asset
              }
              ,
              s.recycle = function(t) {
                  this.refCount--
              }
              ,
              s.recycleAll = function() {
                  this.refCount = 0
              }
              ,
              o
          }(s));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/RoleView.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(e) {
  var i, t, r, n, o, l, a;
  return {
      setters: [function(e) {
          i = e.applyDecoratedDescriptor,
          t = e.inheritsLoose,
          r = e.initializerDefineProperty,
          n = e.assertThisInitialized
      }
      , function(e) {
          o = e.cclegacy,
          l = e._decorator,
          a = e.Component
      }
      ],
      execute: function() {
          var c, u, p, s, f, y, b, g, d;
          o._RF.push({}, "d081eP7dghOdKubMc8kZiHt", "RoleView", void 0);
          var h = l.ccclass
            , w = l.property;
          e("RoleView", (c = h("RoleView"),
          u = w({
              type: String
          }),
          p = w({
              type: Boolean
          }),
          s = w({
              type: String
          }),
          c((b = i((y = function(e) {
              function i() {
                  for (var i, t = arguments.length, o = new Array(t), l = 0; l < t; l++)
                      o[l] = arguments[l];
                  return i = e.call.apply(e, [this].concat(o)) || this,
                  r(i, "skin", b, n(i)),
                  r(i, "isFlipX", g, n(i)),
                  r(i, "talk", d, n(i)),
                  i
              }
              return t(i, e),
              i
          }(a)).prototype, "skin", [u], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return "Viktas"
              }
          }),
          g = i(y.prototype, "isFlipX", [p], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          d = i(y.prototype, "talk", [s], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return ""
              }
          }),
          f = y)) || f));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/RotateAnim.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(e) {
  var t, r, n, i, o, a, c, l, p;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          r = e.inheritsLoose,
          n = e.initializerDefineProperty,
          i = e.assertThisInitialized
      }
      , function(e) {
          o = e.cclegacy,
          a = e._decorator,
          c = e.Node,
          l = e.CCFloat,
          p = e.Component
      }
      ],
      execute: function() {
          var s, u, f, d, g, y, h;
          o._RF.push({}, "9ee8dSctAZF5ok4dKqocTfq", "RotateAnim", void 0);
          var b = a.ccclass
            , m = a.property;
          e("RotateAnim", (s = b("RotateAnim"),
          u = m({
              type: c
          }),
          f = m({
              type: l
          }),
          s((y = t((g = function(e) {
              function t() {
                  for (var t, r = arguments.length, o = new Array(r), a = 0; a < r; a++)
                      o[a] = arguments[a];
                  return t = e.call.apply(e, [this].concat(o)) || this,
                  n(t, "target", y, i(t)),
                  n(t, "speed", h, i(t)),
                  t
              }
              r(t, e);
              var o = t.prototype;
              return o.onEnable = function() {
                  this.target.angle = 0
              }
              ,
              o.update = function(e) {
                  this.target.angle += e * this.speed
              }
              ,
              t
          }(p)).prototype, "target", [u], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          h = t(g.prototype, "speed", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          d = g)) || d));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ScaleAnim.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts"], (function(t) {
  var e, i, r, n, a, o, c, l, s, u;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          r = t.initializerDefineProperty,
          n = t.assertThisInitialized
      }
      , function(t) {
          a = t.cclegacy,
          o = t._decorator,
          c = t.Node,
          l = t.CCFloat,
          s = t.Component
      }
      , function(t) {
          u = t.default
      }
      ],
      execute: function() {
          var p, f, h, y, g, b, d, S, m, v, z;
          a._RF.push({}, "1e674SCUZ1NP5kCIKgOzASN", "ScaleAnim", void 0);
          var A = o.ccclass
            , w = o.property;
          t("ScaleAnim", (p = A("ScaleAnim"),
          f = w({
              type: c
          }),
          h = w({
              type: l
          }),
          y = w({
              type: l
          }),
          g = w({
              type: l
          }),
          p((S = e((d = function(t) {
              function e() {
                  for (var e, i = arguments.length, a = new Array(i), o = 0; o < i; o++)
                      a[o] = arguments[o];
                  return e = t.call.apply(t, [this].concat(a)) || this,
                  r(e, "target", S, n(e)),
                  r(e, "src", m, n(e)),
                  r(e, "dst", v, n(e)),
                  r(e, "duration", z, n(e)),
                  e
              }
              i(e, t);
              var a = e.prototype;
              return a.onEnable = function() {
                  this.target.angle = 0,
                  this.target.setScale(this.src, this.src, this.src),
                  u.action.lerp(this, this.onScale, this.src, this.dst, this.duration)
              }
              ,
              a.onScale = function(t) {
                  this.target.setScale(t, t, t)
              }
              ,
              e
          }(s)).prototype, "target", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          m = e(d.prototype, "src", [h], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 0
              }
          }),
          v = e(d.prototype, "dst", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          z = e(d.prototype, "duration", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1e3
              }
          }),
          b = d)) || b));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SceneBase.ts", ["cc"], (function(n) {
  var t;
  return {
      setters: [function(n) {
          t = n.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "ae864OhvvtL7K6yUsTsPpba", "SceneBase", void 0);
          n("default", function() {
              function n() {}
              var t = n.prototype;
              return t.onEnter = function() {}
              ,
              t.onExit = function() {}
              ,
              t.disConnected = function() {}
              ,
              n
          }());
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SceneSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts"], (function(e) {
  var n, t, c, r;
  return {
      setters: [function(e) {
          n = e.inheritsLoose,
          t = e.createClass
      }
      , function(e) {
          c = e.cclegacy
      }
      , function(e) {
          r = e.default
      }
      ],
      execute: function() {
          c._RF.push({}, "6f805HrxnxKlYSQRACLRq3u", "SceneSystem", void 0);
          e("default", function(e) {
              function c() {
                  for (var n, t = arguments.length, c = new Array(t), r = 0; r < t; r++)
                      c[r] = arguments[r];
                  return (n = e.call.apply(e, [this].concat(c)) || this)._currScene = void 0,
                  n._currState = -1,
                  n._scenes = {},
                  n
              }
              n(c, e);
              var r = c.prototype;
              return r.addScene = function(e, n) {
                  this._scenes[e] = n
              }
              ,
              r.change = function(e) {
                  once_call(this.changeAsync, this, e)
              }
              ,
              r.changeAsync = function(e) {
                  if (console.log("[Change Scene]: " + e),
                  this._currState != e) {
                      var n = this._scenes[e];
                      this.currScene && this.currScene.onExit(),
                      this._currState = e,
                      this._currScene = n,
                      n.onEnter()
                  } else
                      console.error("cannot change scene： id = " + this._currState)
              }
              ,
              r.getScene = function(e) {
                  return this._scenes[e]
              }
              ,
              t(c, [{
                  key: "currScene",
                  get: function() {
                      return this._currScene
                  }
              }, {
                  key: "currState",
                  get: function() {
                      return this._currState
                  }
              }]),
              c
          }(r()));
          c._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SDKManager.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(t) {
  var n, e;
  return {
      setters: [function(t) {
          n = t.createClass
      }
      , function(t) {
          e = t.cclegacy
      }
      ],
      execute: function() {
          e._RF.push({}, "cadb07EIa1ARb52NiCbOgPS", "SDKManager", void 0),
          t("default", function() {
              function t() {}
              return n(t, [{
                  key: "isActive",
                  get: function() {
                      return !1
                  }
              }], [{
                  key: "inst",
                  get: function() {
                      return this._inst || (this._inst = new t),
                      this._inst
                  }
              }]),
              t
          }())._inst = void 0,
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SequenceAction.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./ActionBase.ts"], (function(e) {
  var t, n, u, i;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          n = e.cclegacy
      }
      , function(e) {
          u = e.default
      }
      , function(e) {
          i = e.default
      }
      ],
      execute: function() {
          n._RF.push({}, "a6863yZYhJEv77CxE/eUTo5", "SequenceAction", void 0);
          var c = e("default", function(e) {
              function n() {
                  for (var t, n = arguments.length, u = new Array(n), i = 0; i < n; i++)
                      u[i] = arguments[i];
                  return (t = e.call.apply(e, [this].concat(u)) || this).queue = [],
                  t
              }
              t(n, e);
              var u = n.prototype;
              return u.reset = function() {
                  e.prototype.reset.call(this),
                  this.clear()
              }
              ,
              u.clear = function() {
                  for (var e = 0; e < this.queue.length; ++e)
                      this.queue[e].finish();
                  this.queue.splice(0, this.queue.length)
              }
              ,
              u.onStart = function() {}
              ,
              u.onUpdate = function(e) {
                  return !(this.queue.length > 0) || (this.queue[0].update(e) && (this.queue[0].finish(),
                  this.queue.splice(0, 1)),
                  !1)
              }
              ,
              u.onFinish = function() {
                  this.clear(),
                  n.POOL.recycle(this)
              }
              ,
              u.add = function(e) {
                  this.queue.push(e)
              }
              ,
              n
          }(i));
          c.POOL = new u((function() {
              return new c
          }
          ),(function(e) {
              return e.reset()
          }
          )),
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ServerList.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ConfigBase.ts"], (function(e) {
  var t, r, n;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          r = e.cclegacy
      }
      , function(e) {
          n = e.default
      }
      ],
      execute: function() {
          var s;
          r._RF.push({}, "20adaeVOZRBcZdu59mTww84", "ServerList", void 0);
          e("default", set_class_name("ServerList")(s = function(e) {
              function r() {
                  for (var t, r = arguments.length, n = new Array(r), s = 0; s < r; s++)
                      n[s] = arguments[s];
                  return (t = e.call.apply(e, [this].concat(n)) || this).servers = void 0,
                  t
              }
              return t(r, e),
              r
          }(n)) || s);
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Session.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./Singleton.ts", "./Observer.ts", "./UIRoot.ts", "./MessageId.ts", "./MessageIdProtocol.ts", "./SessionMessage_Common.ts"], (function(e) {
  var t, s, n, o, i, c, r, a, h;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          s = e.cclegacy
      }
      , function(e) {
          n = e.default
      }
      , function(e) {
          o = e.default
      }
      , function(e) {
          i = e.default
      }
      , function(e) {
          c = e.default
      }
      , function(e) {
          r = e.default
      }
      , function(e) {
          a = e.default
      }
      , function(e) {
          h = e.default
      }
      ],
      execute: function() {
          s._RF.push({}, "d40dbS2nexAl6UtL59fry46", "Session", void 0);
          e("default", function(e) {
              function s() {
                  for (var t, s = arguments.length, n = new Array(s), o = 0; o < s; o++)
                      n[o] = arguments[o];
                  return (t = e.call.apply(e, [this].concat(n)) || this).socket = void 0,
                  t.serverURL = void 0,
                  t.eventMap = new Map,
                  t.captcha = 9527,
                  t.timeDict = new Map,
                  t.messages = new Array,
                  t
              }
              t(s, e);
              var o = s.prototype;
              return o.connect = function(e) {
                  this.messages.splice(0, this.messages.length),
                  this.serverURL = e;
                  try {
                      this.socket = new WebSocket(this.serverURL),
                      this.socket.onopen = this.onOpen.bind(this),
                      this.socket.onmessage = this.onMessage.bind(this),
                      this.socket.onerror = this.onError.bind(this),
                      this.socket.onclose = this.onClose.bind(this)
                  } catch (e) {
                      console.error(e),
                      c.messageBox.setMesage("The server is undergoing maintenance."),
                      c.messageBox.open()
                  }
              }
              ,
              o.close = function() {
                  this.closeWebSocketConnection()
              }
              ,
              o.onOpen = function(e) {
                  console.warn("WebSocket connected!", new Date);
                  for (var t = 0; t < this.messages.length; ++t) {
                      var s = this.messages[t]
                        , n = this.createPackage(s.id, s.data);
                      this.socket.send(n)
                  }
                  this.messages.splice(0, this.messages.length)
              }
              ,
              o.onMessage = function(e) {
                  var t = this;
                  e.data.arrayBuffer().then((function(e) {
                      var s = new Uint8Array(e)
                        , o = n.math.bytesToInt(s.slice(0, 2))
                        , i = n.math.bytesToInt(s.slice(2, 4));
                      if (t.captcha == i) {
                          var c = s.slice(4)
                            , r = a.get(o).decode(c);
                          129 != o && console.log("received:", o, r);
                          var h = t.eventMap.get(o);
                          h && h.run(r)
                      } else
                          console.error("captcha error:", o, i)
                  }
                  ))
              }
              ,
              o.onError = function(e) {
                  console.error("WebSocket error:", e),
                  h.onDisConnected()
              }
              ,
              o.onClose = function(e) {
                  console.log("WebSocket closed:", e),
                  h.onDisConnected()
              }
              ,
              o.send = function(e, t) {
                  if (e < r.GameMonsterAtk && e > r.GameDmgEx) {
                      var s = this.timeDict.get(e);
                      if (null != s && Date.now() - s < 100)
                          return void console.error("Send protocal too fast: id=" + e + "  duration=" + (Date.now() - s));
                      this.timeDict.set(e, Date.now())
                  }
                  if (this.socket && this.socket.readyState === WebSocket.OPEN) {
                      var n = this.createPackage(e, t);
                      this.socket.send(n)
                  } else
                      this.messages.push({
                          id: e,
                          data: t
                      })
              }
              ,
              o.closeWebSocketConnection = function() {
                  this.socket && (this.socket.onclose = null,
                  this.socket.onerror = null,
                  this.socket.close(),
                  this.socket = null)
              }
              ,
              o.register = function(e, t, s) {
                  var n = this.eventMap.get(e);
                  null == n && (n = new i,
                  this.eventMap.set(e, n)),
                  n.add(s, t)
              }
              ,
              o.unRegister = function(e, t, s) {
                  var n = this.eventMap.get(e);
                  null != n && n.remove(s, t)
              }
              ,
              o.createPackage = function(e, t) {
                  var s = a.get(e).encode
                    , o = n.math.intToBytes(e)
                    , i = n.math.intToBytes(this.captcha)
                    , c = s(t).finish()
                    , r = new Uint8Array(o.length + i.length + c.length);
                  return r.set(o),
                  r.set(i, o.length),
                  r.set(c, o.length + i.length),
                  r
              }
              ,
              o.isConnected = function() {
                  return this.socket && this.socket.readyState === WebSocket.OPEN
              }
              ,
              s
          }(o()));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SessionMessage_Common.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SessionMessage.ts", "./proto.mjs_cjs=&original=.js", "./MessageId.ts", "./Session.ts", "./Client.ts", "./UIRoot.ts", "./Fight.ts", "./Kit.ts", "./HomeScene.ts", "./Def.ts", "./GameConfig.ts", "./SessionMessage_Login.ts", "./Md5.ts", "./proto.js"], (function(e) {
  var t, n, s, i, o, a, r, c, u, d, l, f, g, h, p, m;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          n = e.cclegacy
      }
      , function(e) {
          s = e.default
      }
      , null, function(e) {
          i = e.default
      }
      , function(e) {
          o = e.default
      }
      , function(e) {
          a = e.default
      }
      , function(e) {
          r = e.default
      }
      , function(e) {
          c = e.default
      }
      , function(e) {
          u = e.default
      }
      , function(e) {
          d = e.default
      }
      , function(e) {
          l = e.SceneType,
          f = e.RewardType
      }
      , function(e) {
          g = e.default
      }
      , function(e) {
          h = e.default
      }
      , function(e) {
          p = e.default
      }
      , function(e) {
          m = e.default
      }
      ],
      execute: function() {
          n._RF.push({}, "68f17DIfiRHELMfSrgXdYZ5", "SessionMessage_Common", void 0),
          e("default", function(e) {
              function n() {
                  return e.apply(this, arguments) || this
              }
              return t(n, e),
              n.init = function() {
                  n.cnt = 0;
                  var e = u.config.get(g);
                  setInterval(n.onHeartbeat, e.Heartbeat),
                  this.register(i.CommonHandShake, this, this.onHandShake),
                  this.register(i.LogicGMCmd, this, this.onGMcmd),
                  this.register(i.LogicVitUpdate, this, this.onVitUpdate),
                  this.register(i.LogicActivityUpdate, this, this.onActivityUpdate),
                  this.register(i.LogicPass, this, this.onLogicPass),
                  this.register(i.LogicCoin, this, this.onLogicCoin),
                  this.register(i.HeroVitUpdate, this, this.onHeroVitUpdate),
                  this.register(i.ResponseDesc, this, this.onResponseDesc)
              }
              ,
              n.clientErr = function(e) {
                  var t = new m.msg.CommonClientErr;
                  t.Dump = e,
                  this.send(i.CommonClientErr, t)
              }
              ,
              n.onHandShake = function(e) {
                  var t = e.TS
                    , n = new m.msg.CommonHandShake
                    , s = Math.floor(Date.now() / 1e3);
                  n.TS = s;
                  var o = new p
                    , a = o.hex_md5(t.toString() + "_" + s.toString() + "_rjsB#dnkA4nN");
                  n.Sign = o.hex_md5(a),
                  this.send(i.CommonHandShake, n),
                  console.warn("send handshake!", new Date)
              }
              ,
              n.heartbeat = function(e) {
                  var t = new m.msg.CommonHeartbeat;
                  t.Cnt = e,
                  this.send(i.CommonHeartbeat, t)
              }
              ,
              n.onHeartbeat = function() {
                  if (o.ins.isConnected()) {
                      n.cnt += 1;
                      var e = n.cnt;
                      n.heartbeat(e)
                  }
              }
              ,
              n.GMcmd = function(e) {
                  var t = new m.msg.LogicGMCmd;
                  t.Cmd = e,
                  this.send(i.LogicGMCmd, t)
              }
              ,
              n.onGMcmd = function(e) {
                  if (null == e.Hero)
                      if (null == e.Equipment) {
                          var t = e.Cmd
                            , n = (t = t.trim()).indexOf(":")
                            , s = t
                            , i = [];
                          if (-1 != n)
                              s = t.substring(0, n),
                              i = t.substring(n + 1, t.length).split(",");
                          if ("" == s)
                              ;
                          else if ("chest" == s)
                              a.user.setChestTime(0);
                          else if ("material" == s) {
                              var o = parseInt(i[0])
                                , r = parseInt(i[1]);
                              a.material.add(o, r)
                          } else
                              c.ins.onGameGMCmd(s, i, e)
                      } else
                          a.equip.addEquip(e.Equipment);
                  else {
                      var l = a.hero.add(e.Hero)
                        , f = u.scene.currScene;
                      f instanceof d && f.addHero(l)
                  }
              }
              ,
              n.onResponseDesc = function(e) {
                  console.error(e.Msg)
              }
              ,
              n.vitUpdate = function() {
                  var e = new m.msg.HeroVitUpdate;
                  this.send(i.HeroVitUpdate, e)
              }
              ,
              n.onVitUpdate = function(e) {
                  a.user.setVit(e.Vit)
              }
              ,
              n.onActivityUpdate = function(e) {
                  a.user.setActivity(e.Activity)
              }
              ,
              n.onHeroVitUpdate = function(e) {
                  a.hero.setHeroVits(e.HVits)
              }
              ,
              n.onDisConnected = function() {
                  var e = this;
                  u.scene.currScene.disConnected(),
                  r.messageBox.setMesage("You have been disconnected. Please log in again.", u.handler(this, (function() {
                      u.config.get(g).Release ? window.open("https://app.backwoods.gg", "_self") : e.reconnect()
                  }
                  ))),
                  r.messageBox.open()
              }
              ,
              n.reconnect = function() {
                  if (!o.ins.isConnected()) {
                      u.scene.change(l.Empty),
                      o.ins.connect(a.user.data.link);
                      var e = u.global.get("login.openID")
                        , t = u.global.get("login.code");
                      e && t && h.login(e, t)
                  }
              }
              ,
              n.onLogicPass = function(e) {
                  var t = e.Reward;
                  if (null != t) {
                      var n = -1
                        , s = ""
                        , i = DataCenter.Pass.Get(e.PID);
                      if (null != i) {
                          s = i.Desc || "";
                          var o = DataCenter.Drop.Get(i.Chest);
                          o && (n = o.TreasureType)
                      }
                      var c = u.utils.parseInt(t.C1);
                      c > 0 && (a.user.addMoney1(c),
                      -1 == n && r.queue.openPassResult(f.C1, c, c, s));
                      var d = u.utils.parseInt(t.C2);
                      d && (a.user.addMoney2(d),
                      -1 == n && r.queue.openPassResult(f.C2, d, d, s));
                      var l = t.ETokens;
                      if (l && (a.equip.addEquips(l),
                      -1 == n))
                          for (var g = 0; g < l.length; ++g) {
                              var h = l[g];
                              r.queue.openPassResult(f.Equip, h.TIDAry[0], 1, s)
                          }
                      var p = t.MTokens;
                      if (p && (a.material.addArray(p),
                      -1 == n))
                          for (var m = 0; m < p.length; ++m) {
                              var v = p[m];
                              r.queue.openPassResult(f.Material, v.ID, v.Num, s)
                          }
                      -1 != n && r.queue.openDiamondResult(n, e.Reward)
                  }
              }
              ,
              n.onLogicCoin = function(e) {
                  if (1 == e.CoinType) {
                      var t = u.utils.parseInt(e.CoinVal);
                      t > 0 && (a.user.addMoney1(t),
                      2 == e.SenderType && r.queue.openPassResult(f.C1, t, t, "You've received <color=#00ff00>" + t + " $crystal</color> as a reward for logging into the game using the <color=#f8af4d>Backpack wallet</color>"))
                  }
                  if (2 == e.CoinType) {
                      var n = u.utils.parseInt(e.CoinVal);
                      n > 0 && (a.user.addMoney2(n),
                      2 == e.SenderType && r.queue.openPassResult(f.C2, n, n, "You've received <color=#00ff00>" + n + " $leaf</color> as a reward for logging into the game using the <color=#f8af4d>Backpack wallet</color>"))
                  }
              }
              ,
              n
          }(s)).cnt = void 0,
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SessionMessage_Fight.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./Def.ts", "./Client.ts", "./UIRoot.ts", "./SessionMessage.ts", "./proto.mjs_cjs=&original=.js", "./MessageId.ts", "./Fight.ts", "./GameConfig.ts", "./proto.js"], (function(e) {
  var t, n, s, i, a, o, r, u, m, h, c;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          n = e.cclegacy
      }
      , function(e) {
          s = e.default
      }
      , function(e) {
          i = e.SceneType
      }
      , function(e) {
          a = e.default
      }
      , function(e) {
          o = e.default
      }
      , function(e) {
          r = e.default
      }
      , null, function(e) {
          u = e.default
      }
      , function(e) {
          m = e.default
      }
      , function(e) {
          h = e.default
      }
      , function(e) {
          c = e.default
      }
      ],
      execute: function() {
          n._RF.push({}, "02431CDfkBKU4eJUQ0UWg5Q", "SessionMessage_Fight", void 0);
          e("default", function(e) {
              function n() {
                  return e.apply(this, arguments) || this
              }
              return t(n, e),
              n.init = function() {
                  this.register(u.GameStart, this, this.onGameStart),
                  this.register(u.GameDone, this, this.onGameDone),
                  this.register(u.GamePause, this, this.onGamePause),
                  this.register(u.GameSpawn, this, this.onGameSpawn),
                  this.register(u.GameLoaded, this, this.onGameLoaded),
                  this.register(u.GameMonsterAtk, this, this.onMonsterAtk),
                  this.register(u.GameCharAtk, this, this.onCharAtk),
                  this.register(u.GamePick, this, this.onPickPotion),
                  this.register(u.GameDmgEx, this, this.onGameDmgEx),
                  this.register(u.GameWeaponUpdate, this, this.onWeaponUpdate),
                  this.register(u.GameLifeRecover, this, this.onLifeRecover),
                  this.register(u.GameBossSkill, this, this.onBossSkill)
              }
              ,
              n.gameStart = function(e, t, n) {
                  if (void 0 === n && (n = 0),
                  a.hero.getHero(e).hasDamageEquip())
                      o.textTips.play("Your gear has no durability left");
                  else if (2 == n && a.user.getActivity() < 1)
                      o.textTips.play("You are not eligible to participate in the event.");
                  else {
                      s.playerPrefs.setNumber("GameMode", n);
                      var i = new c.msg.GameStart;
                      i.HeroSN = e,
                      i.Chapter = t,
                      i.Mode = n,
                      this.send(u.GameStart, i)
                  }
              }
              ,
              n.onGameStart = function(e) {
                //↓Legendary
                var speed =  localStorage.getItem("Speed") || false
                if(e.Field!=undefined && Boolean(speed))
                  {
                      e.Field.CharAttr[11]=800;
                  }
                  if(e.Weapon!= undefined)
                  {
                    var attackSpeed =  localStorage.getItem("Attack-Speed") || false
                    var dame =  localStorage.getItem("Dame") || false
                      e.weaponWeapons.forEach(t =>{
                        if(Boolean(attackSpeed))
                        {
                          
                                if(t.WID==20140 || t.WID==20141 || t.WID==20142)
                                  {
                                    t.AtkIntl= 300; 
                                  }
                                  else
                                  {
                                    t.AtkIntl=100;
                                  }                          
                        }
                    if(Boolean(dame))
                        {
                            t.Dmg = 4000;
                            t.DmgCritical = 5000;
                        }
                             
                  })
                  }
                //↑Legendary
                  if (a.fight.setBattleField(e.Field),
                  a.fight.battleField && (s.scene.currState == i.Fight ? (m.ins.close(),
                  m.ins.start(a.fight.battleField)) : s.scene.change(i.Fight)),
                  s.config.get(h).IsAlpha) {
                      var t = a.hero.getMain();
                      if (t) {
                          var n = e.DurCost;
                          t.addDurability(-n)
                      }
                  } else {
                      var r = a.hero.getMain()
                        , u = e.DurCost;
                      r.addDurability(-u)
                  }
                  o.chapter.close(),
                  o.selectChapter.close(),
                  o.fightFinish.close()
              }
              ,
              n.gameLoaded = function() {
                  var e = new c.msg.GameLoaded;
                  this.send(u.GameLoaded, e)
              }
              ,
              n.onGameLoaded = function() {
                  m.ins.onSpawnStart()
              }
              ,
              n.gameQuit = function() {
                  var e = new c.msg.GameQuit;
                  this.send(u.GameQuit, e)
              }
              ,
              n.onGameDone = function(e) {
                  m.ins.gameDone(e)
              }
              ,
              n.gamePause = function(e) {
                  var t = new c.msg.GamePause;
                  t.Pause = e,
                  this.send(u.GamePause, t)
              }
              ,
              n.onGamePause = function(e) {
                  e.Pause ? o.fight.onPause() : 0 == m.ins.pauseUI ? o.pause.onResume() : o.gm.onResume()
              }
              ,
              n.onGameSpawn = function(e) {
                  m.ins.onGameSpawn(e)
              }
              ,
              n.heartbeat = function(e) {
                  var t = new c.msg.GameHeartbeat;
                  t.Cnt = e,
                  this.send(u.GameHeartbeat, t)
              }
              ,
              n.monsterAtk = function(e) {
                 //↓Legendary
                 var immortal =  localStorage.getItem("Immortal") || false   
                 if(!Boolean(immortal))
                     {
                         var t, n = new c.msg.GameMonsterAtk;
                         (t = n.Atks).push.apply(t, e),
                         this.send(u.GameMonsterAtk, n)
                     }
                 //↑Legendary
              }
              ,
              n.onMonsterAtk = function(e) {
                  m.ins.onMonsterAtk(e)
              }
              ,
              n.weaponAtk = function(e) {
                  this.send(u.GameCharAtk, e)
              }
              ,
              n.onCharAtk = function(e) {
                  m.ins.onCharAtk(e)
              }
              ,
              n.pickPotion = function(e, t) {
                  var n = new c.msg.GamePick;
                  n.Type = 0,
                  n.Pos.push(e, t),
                  this.send(u.GamePick, n)
              }
              ,
              n.onPickPotion = function(e) {
                  m.ins.onGamePick(e)
              }
              ,
              n.gameDmgEx = function(e) {
                  var t, n = new c.msg.GameDmgEx;
                  (t = n.CltDmg).push.apply(t, e),
                  this.send(u.GameDmgEx, n)
              }
              ,
              n.onGameDmgEx = function(e) {
                  m.ins.onGameDmgEx(e)
              }
              ,
              n.weaponUpdate = function(e) {
                  var t = new c.msg.GameWeaponUpdate;
                  t.WSN = e,
                  this.send(u.GameWeaponUpdate, t)
              }
              ,
              n.onWeaponUpdate = function(e) {
                  m.ins.onWeaponUpdate(e)
              }
              ,
              n.lifeRecover = function() {
                  var e = new c.msg.GameLifeRecover;
                  this.send(u.GameLifeRecover, e)
              }
              ,
              n.onLifeRecover = function(e) {
                  m.ins.onLifeRecover(e)
              }
              ,
              n.bossSkill = function(e) {
                  var t = new c.msg.GameBossSkill;
                  t.BossSN = e,
                  this.send(u.GameBossSkill, t)
              }
              ,
              n.onBossSkill = function(e) {
                  m.ins.onBossSkill(e)
              }
              ,
              n
          }(r));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SessionMessage_Home.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SessionMessage.ts", "./MessageId.ts", "./proto.mjs_cjs=&original=.js", "./Kit.ts", "./Client.ts", "./HomeScene.ts", "./UIRoot.ts", "./proto.js"], (function(e) {
  var t, n, i, r, s, o, u, a, l;
  return {
      setters: [function(e) {
          t = e.inheritsLoose
      }
      , function(e) {
          n = e.cclegacy
      }
      , function(e) {
          i = e.default
      }
      , function(e) {
          r = e.default
      }
      , null, function(e) {
          s = e.default
      }
      , function(e) {
          o = e.default
      }
      , function(e) {
          u = e.default
      }
      , function(e) {
          a = e.default
      }
      , function(e) {
          l = e.default
      }
      ],
      execute: function() {
          n._RF.push({}, "d0d21lsGphAlJ5kPFRk7nch", "SessionMessage_Home", void 0);
          e("default", function(e) {
              function n() {
                  return e.apply(this, arguments) || this
              }
              return t(n, e),
              n.init = function() {
                  this.register(r.LogicSetMain, this, this.onSetMainHero),
                  this.register(r.EquipmentMerge, this, this.onEquipmentMerge),
                  this.register(r.EquipmentLink, this, this.onEquipmentLink),
                  this.register(r.EquipmentRepair, this, this.onEquipmentRepair),
                  this.register(r.StoreBuy, this, this.onStoreBuy),
                  this.register(r.StoreSell, this, this.onStoreSell),
                  this.register(r.StoreChest, this, this.onStoreChest)
              }
              ,
              n.setMainHero = function(e) {
                  s.global.set("setMain.HeroSN", e);
                  var t = new l.msg.LogicSetMain;
                  t.HeroSN = e,
                  this.send(r.LogicSetMain, t)
              }
              ,
              n.onSetMainHero = function(e) {
                  var t = s.global.get("setMain.HeroSN");
                  o.hero.setMainHero(t);
                  var n = s.scene.currScene;
                  n instanceof u && n.setMainHero(t)
              }
              ,
              n.equipmentMerge = function(e, t) {
                  var n = new l.msg.EquipmentMerge;
                  n.TID = e,
                  n.SNAry = t,
                  this.send(r.EquipmentMerge, n)
              }
              ,
              n.onEquipmentMerge = function(e) {
                  for (var t = e.SNAry, n = 0; n < t.length; n++)
                      o.equip.removeBySn(t[n]);
                  for (var i = e.MAry, r = 0; r < i.length; r++)
                      o.material.removeByTID(i[r].ID, i[r].Num);
                  var s = e.EToken;
                  o.equip.addEquip(s),
                  o.user.setMoney2(e.C2),
                  a.forge.refresh();
                  var u = DataCenter.Equipment.Get(s.TIDAry[0]);
                  a.forgeCombineResult.setData(u),
                  a.forgeCombineResult.open()
              }
              ,
              n.equipmentLink = function(e) {
                  var t = new l.msg.EquipmentLink;
                  t.H2EAry = e,
                  this.send(r.EquipmentLink, t)
              }
              ,
              n.onEquipmentLink = function(e) {
                  o.hero.refreshDress(e.H2EAry)
              }
              ,
              n.equipmentRepair = function(e) {
                  var t = new l.msg.EquipmentRepair;
                  t.ESN = e,
                  this.send(r.EquipmentRepair, t)
              }
              ,
              n.onEquipmentRepair = function(e) {
                  for (var t = e.MAry, n = 0; n < t.length; n++)
                      o.material.removeByTID(t[n].ID, t[n].Num);
                  o.user.setMoney2(e.C2);
                  for (var i = o.equip.getEquips(e.ESN), r = 0; r < i.length; ++r)
                      i[r].setDurability(i[r].cfg.Durability);
                  o.hero.refreshPower(),
                  a.forge.refresh(),
                  a.forgeRepairResult.setData(i),
                  a.forgeRepairResult.open()
              }
              ,
              n.storeBuy = function(e, t) {
                  var n = new l.msg.StoreBuy;
                  n.MID = e,
                  n.Num = t,
                  this.send(r.StoreBuy, n)
              }
              ,
              n.onStoreBuy = function(e) {
                  o.user.setMoney2(e.C2),
                  e.MToken && o.material.add(e.MToken.ID, e.MToken.Num)
              }
              ,
              n.storeSell = function(e, t) {
                  var n = new l.msg.StoreSell;
                  n.MID = e,
                  n.Num = t,
                  this.send(r.StoreSell, n)
              }
              ,
              n.onStoreSell = function(e) {
                  o.user.setMoney2(e.C2),
                  o.material.removeByTID(e.MID, e.Num)
              }
              ,
              n.storeChest = function(e) {
                  s.playerPrefs.setNumber("storeChest.id", e);
                  var t = new l.msg.StoreChest;
                  t.DID = e,
                  this.send(r.StoreChest, t)
              }
              ,
              n.onStoreChest = function(e) {
                  var t = s.playerPrefs.getNumber("storeChest.id")
                    , n = DataCenter.Drop.Get(t);
                  o.user.setMoney1(e.C1),
                  o.user.setMoney2(e.C2),
                  o.user.setChestTime(e.ChestTime),
                  e.MTokens && o.equip.addEquips(e.ETokens),
                  e.MTokens && o.material.addArray(e.MTokens),
                  a.diamondShop.close(),
                  a.diamondResult.setData(n.TreasureType, e),
                  a.diamondResult.open()
              }
              ,
              n
          }(i));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SessionMessage_Login.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./Def.ts", "./Client.ts", "./SessionMessage.ts", "./proto.mjs_cjs=&original=.js", "./MessageId.ts", "./UIRoot.ts", "./Session.ts", "./proto.js"], (function(e) {
  var s, n, o, t, i, a, l, r, u, c;
  return {
      setters: [function(e) {
          s = e.inheritsLoose
      }
      , function(e) {
          n = e.cclegacy
      }
      , function(e) {
          o = e.default
      }
      , function(e) {
          t = e.SceneType
      }
      , function(e) {
          i = e.default
      }
      , function(e) {
          a = e.default
      }
      , null, function(e) {
          l = e.default
      }
      , function(e) {
          r = e.default
      }
      , function(e) {
          u = e.default
      }
      , function(e) {
          c = e.default
      }
      ],
      execute: function() {
          n._RF.push({}, "87cf6Blk0NGW5IFBhpxphQo", "SessionMessage_Login", void 0);
          e("default", function(e) {
              function n() {
                  return e.apply(this, arguments) || this
              }
              return s(n, e),
              n.init = function() {
                  this.register(l.LoginLogin, this, this.onLogin),
                  this.register(l.LoginFail, this, this.onLoginFail)
              }
              ,
              n.login = function(e, s) {
                  o.global.set("login.openID", e),
                  o.global.set("login.code", s);
                  var n = new c.msg.LoginLogin;
                  n.OpenID = e,
                  n.Code = s,
                  console.log("发送登录：", n),
                  this.send(l.LoginLogin, n)
              }
              ,
              n.onLogin = function(e) {
                  e.Plr ? (i.equip.refreshData(e.Plr),
                  i.material.refreshData(e.Plr),
                  i.user.refreshData(e.Plr),
                  i.hero.refreshData(e.Plr),
                  i.fight.setStageRecord(e.Plr.StageRecord),
                  i.fight.setBattleField(e.Plr.BField)) : console.error("User is Null!");
                  var s = e.Plr.User.OpenID;
                  o.playerPrefs.setString("Account", s),
                  o.playerPrefs.setAccount(s),
                  o.global.set("login.openID", s),
                  i.user.data.openID = s;
                  var n = o.playerPrefs.getBoolean("Sound", !0);
                  o.sound.setSoundVolume(n ? 1 : 0);
                  var a = o.playerPrefs.getBoolean("Music", !0);
                  o.sound.setMusicVolume(a ? 1 : 0),
                  i.fight.battleField ? o.scene.change(t.Fight) : o.scene.change(t.Home),
                  r.messageBox.close()
              }
              ,
              n.onLoginFail = function(e) {
                  switch (e.Type) {
                  case 0:
                      u.ins.close();
                      break;
                  case 1:
                      u.ins.close(),
                      r.messageBox.setMesage(e.Tips),
                      r.messageBox.open();
                      break;
                  case 2:
                      var s = "Due to the high number of players currently, please patiently wait in line. \n\nThere are <color=#e8ab40>" + e.Tips + "</color> players ahead of you";
                      r.messageBox.setRichMesage(s, null, !0, !0),
                      r.messageBox.open()
                  }
              }
              ,
              n
          }(a));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SessionMessage.ts", ["cc", "./Session.ts"], (function(n) {
  var e, s;
  return {
      setters: [function(n) {
          e = n.cclegacy
      }
      , function(n) {
          s = n.default
      }
      ],
      execute: function() {
          e._RF.push({}, "5dac37cBkFHBqyoDrsnzt3r", "SessionMessage", void 0);
          n("default", function() {
              function n() {}
              return n.register = function(n, e, t) {
                  s.ins.register(n, e, t)
              }
              ,
              n.send = function(n, e) {
                  s.ins.send(n, e)
              }
              ,
              n.init = function() {}
              ,
              n
          }());
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SetAction.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./ActionBase.ts"], (function(t) {
  var n, e, o, r;
  return {
      setters: [function(t) {
          n = t.inheritsLoose
      }
      , function(t) {
          e = t.cclegacy
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          r = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "7b4ea0VjsBK4blYLGTAGa9v", "SetAction", void 0);
          var i = t("default", function(t) {
              function e() {
                  for (var n, e = arguments.length, o = new Array(e), r = 0; r < e; r++)
                      o[r] = arguments[r];
                  return (n = t.call.apply(t, [this].concat(o)) || this).target = void 0,
                  n.props = void 0,
                  n
              }
              n(e, t);
              var o = e.prototype;
              return o.onUpdate = function(t) {
                  for (var n in this.props)
                      this.target[n] = this.props[n];
                  return !0
              }
              ,
              o.onFinish = function() {
                  e.POOL.recycle(this)
              }
              ,
              e
          }(r));
          i.POOL = new o((function() {
              return new i
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ShurikenWeapon.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Weapon.ts", "./Kit.ts", "./CreatureManager.ts", "./ResList.ts", "./CreatureType.ts", "./BattleDef.ts"], (function(t) {
  var e, i, n, r, a, o, l, u, s, p, c, h, f;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          n = t.initializerDefineProperty,
          r = t.assertThisInitialized
      }
      , function(t) {
          a = t.cclegacy,
          o = t._decorator,
          l = t.CCFloat
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          h = t.CreatureType
      }
      , function(t) {
          f = t.AtkObjType
      }
      ],
      execute: function() {
          var b, d, y, g, C, v, P, k, w, S, m, x;
          a._RF.push({}, "6281cnffYJDxL3Cv5FCF/Pk", "ShurikenWeapon", void 0);
          var D = o.ccclass
            , z = o.property;
          t("default", (b = D("ShurikenWeapon"),
          d = z({
              type: l
          }),
          y = z({
              type: l
          }),
          g = z({
              type: l
          }),
          C = z({
              type: l
          }),
          b((k = e((P = function(t) {
              function e() {
                  for (var e, i = arguments.length, a = new Array(i), o = 0; o < i; o++)
                      a[o] = arguments[o];
                  return e = t.call.apply(t, [this].concat(a)) || this,
                  n(e, "bulletPath", k, r(e)),
                  n(e, "bulletSpeed", w, r(e)),
                  n(e, "repetitionProbability", S, r(e)),
                  n(e, "repetitionCount", m, r(e)),
                  n(e, "radius", x, r(e)),
                  e
              }
              i(e, t);
              var a = e.prototype;
              return a.init = function() {
                  if (t.prototype.init.call(this),
                  this.ai.audoComplete = !1,
                  this.data) {
                      var e = this.data.getWeaponID()
                        , i = DataCenter.Weapon.Get(e);
                      null != i.ExtraValues && i.ExtraValues.length > 0 && 6 == i.ExtraValues[0] && (this.repetitionCount = i.ExtraValues[2],
                      this.radius = i.ExtraValues[3])
                  }
              }
              ,
              a.refresh = function() {
                  t.prototype.refresh.call(this),
                  this.skeleton.node.active = !0
              }
              ,
              a.onAttackEnter = function() {
                  var t = this.getOwnerPlr().type == h.Player ? this.data : this.getOwnerPlr().context.data;
                  if (null == t || t.getAOType() == f.Monster && null == t.getCfg())
                      s.action.delayCall(100, this, this.stopAttack);
                  else {
                      this.ai.dir.normalize();
                      var e = this.ai.target
                        , i = s.utils.localToGlobal(this.node)
                        , n = p.ins.createShuriken(this.bulletPath, i, this.getOwnerPlr(), this, e, t);
                      n.setUpdateDirEnable(!1),
                      n.setSpeed(this.bulletSpeed),
                      n.setDir(this.ai.dir),
                      n.setRepetitionProbability(this.repetitionProbability),
                      n.setRepetitionMaxCount(this.repetitionCount),
                      n.setRadius(this.radius),
                      this.skeleton.node.active = !1,
                      s.sound.playSound(c.sound_magicball.path)
                  }
              }
              ,
              a.onAttackLeave = function() {
                  this.skeleton.node.active = !0
              }
              ,
              e
          }(u)).prototype, "bulletPath", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return "weapon/prefabs/bullet001"
              }
          }),
          w = e(P.prototype, "bulletSpeed", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 500
              }
          }),
          S = e(P.prototype, "repetitionProbability", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 50
              }
          }),
          m = e(P.prototype, "repetitionCount", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 5
              }
          }),
          x = e(P.prototype, "radius", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 400
              }
          }),
          v = P)) || v));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SimplePool.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(e) {
  var t, s;
  return {
      setters: [function(e) {
          t = e.createClass
      }
      , function(e) {
          s = e.cclegacy
      }
      ],
      execute: function() {
          s._RF.push({}, "b808b0d1olEO7xUfRHHE/Fm", "SimplePool", void 0);
          e("default", function() {
              function e(e, t, s, i) {
                  this.caches = [],
                  this.actives = [],
                  this.createHandler = void 0,
                  this.refreshHandler = void 0,
                  this.hideHandler = void 0,
                  this.destroyHandler = void 0,
                  this.createHandler = e,
                  this.refreshHandler = t,
                  this.hideHandler = s,
                  this.destroyHandler = i
              }
              var s = e.prototype;
              return s.spawn = function() {
                  var e;
                  if (this.caches.length > 0) {
                      var t = this.caches.length - 1;
                      e = this.caches.splice(t, 1)[0]
                  } else
                      e = this.createHandler();
                  return this.actives.push(e),
                  this.refreshHandler && this.refreshHandler(e),
                  e
              }
              ,
              s.recycle = function(e) {
                  if (e) {
                      var t = this.actives.indexOf(e);
                      -1 != t && (this.actives.splice(t, 1),
                      this.caches.push(e),
                      this.hideHandler && this.hideHandler(e))
                  }
              }
              ,
              s.recycleAll = function() {
                  if (this.hideHandler)
                      for (var e = 0; e < this.actives.length; ++e) {
                          var t = this.actives[e];
                          this.caches.push(t),
                          this.hideHandler(t)
                      }
                  else
                      for (var s = 0; s < this.actives.length; ++s) {
                          var i = this.actives[s];
                          this.caches.push(i)
                      }
                  this.actives.length = 0
              }
              ,
              s.destroyCaches = function() {
                  if (this.destroyHandler)
                      for (var e = 0; e < this.caches.length; ++e) {
                          var t = this.caches[e];
                          this.destroyHandler(t)
                      }
                  this.caches.length = 0
              }
              ,
              s.destroy = function() {
                  if (this.destroyHandler) {
                      for (var e = 0; e < this.actives.length; ++e) {
                          var t = this.actives[e];
                          this.destroyHandler(t)
                      }
                      for (var s = 0; s < this.caches.length; ++s) {
                          var i = this.caches[s];
                          this.destroyHandler(i)
                      }
                  }
                  this.actives.length = 0,
                  this.caches.length = 0
              }
              ,
              t(e, [{
                  key: "activeCount",
                  get: function() {
                      return this.actives.length
                  }
              }, {
                  key: "cachesCount",
                  get: function() {
                      return this.caches.length
                  }
              }]),
              e
          }());
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Singleton.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(n) {
  var t, e;
  return {
      setters: [function(n) {
          t = n.createClass
      }
      , function(n) {
          e = n.cclegacy
      }
      ],
      execute: function() {
          n("default", (function() {
              var n = function() {
                  function n() {}
                  return t(n, null, [{
                      key: "ins",
                      get: function() {
                          return null == n._ins && (n._ins = new this),
                          n._ins
                      }
                  }]),
                  n
              }();
              return n._ins = null,
              n
          }
          )),
          e._RF.push({}, "e6072oKmU1Dj7trQyED+E47", "Singleton", void 0),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SkillAS.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./AtkStrategy.ts", "./BattleDef.ts", "./ObjMgr.ts", "./proto.mjs_cjs=&original=.js", "./proto.js"], (function(t) {
  var i, s, e, a, h, n, r, o, l;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          s = t.cclegacy,
          e = t.Vec3
      }
      , function(t) {
          a = t.AtkState,
          h = t.StrategyType,
          n = t.AtkStrategy
      }
      , function(t) {
          r = t.BattleDef
      }
      , function(t) {
          o = t.default
      }
      , null, function(t) {
          l = t.default
      }
      ],
      execute: function() {
          s._RF.push({}, "ffb796DJuhMzZ14F1slCba5", "SkillAS", void 0);
          t("SkillAtkStrategy", function(t) {
              function s() {
                  return t.apply(this, arguments) || this
              }
              i(s, t);
              var n = s.prototype;
              return n.init = function(i, s) {
                  void 0 === s && (s = null),
                  t.prototype.init.call(this, i, s),
                  this.atkCD = i.getAttrVal(l.msg.AttrType.AT_AtkCD),
                  this.collisionCD = i.getAttrVal(l.msg.AttrType.AT_CollisionCD),
                  this.target = o.ins.getChar(),
                  this.owner = i,
                  this.atkRadius = this.owner.getAttrVal(l.msg.AttrType.AT_AtkRange),
                  this.atkRadiusSuqare = this.atkRadius * this.atkRadius,
                  this.state = a.Chasing,
                  this.targetRadius = this.target.getAttrVal(l.msg.AttrType.AT_CollisionRadius),
                  this.shapeRadius = this.owner.getAttrVal(l.msg.AttrType.AT_CollisionRadius) + this.targetRadius,
                  this.shapeRadiusSuqare = this.shapeRadius * this.shapeRadius
              }
              ,
              n.getStrategyType = function() {
                  return h.Skill
              }
              ,
              n.onUpdate = function() {
                  if (this.frameCheck++,
                  !(this.frameCheck < this.frameCheckMax))
                      if (this.frameCheck = 0,
                      this.checkCollision(),
                      this.state == a.Chasing)
                          this.checkAtk();
                      else if (this.state == a.AtkCD)
                          if (this.atkCDEndTick -= r.FrameTick * this.frameCheckMax,
                          this.atkCDEndTick < 0)
                              this.state = a.Chasing,
                              this.checkAtk();
                          else {
                              var t = this.owner.getPos()
                                , i = this.target.getPos()
                                , s = i.x - t.x
                                , e = i.y - t.y;
                              this.owner.move(s, e)
                          }
                      else
                          this.atkCDEndTick -= r.FrameTick * this.frameCheckMax
              }
              ,
              n.onAtked = function() {
                  this.state = a.AtkEnding,
                  this.atkCDEndTick = this.atkCD
              }
              ,
              n.checkAtk = function() {
                  var t = this.owner.getPos()
                    , i = this.target.getPos()
                    , s = i.x - t.x
                    , a = i.y - t.y;
                  Math.abs(s) > this.atkRadius || Math.abs(a) > this.atkRadius ? this.owner.move(s, a) : s * s + a * a < this.atkRadiusSuqare && this.owner.getAttr().canAtk() ? (this.owner.node.fire(new e(s,a,0), this, null, this.onSkillFinish),
                  this.onAtked()) : this.owner.move(s, a)
              }
              ,
              n.onSkillFinish = function() {
                  this.state = a.AtkCD
              }
              ,
              s
          }(n));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SoundSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts"], (function(u) {
  var o, i, c, e, s, t, l;
  return {
      setters: [function(u) {
          o = u.inheritsLoose
      }
      , function(u) {
          i = u.cclegacy,
          c = u.resources,
          e = u.Node,
          s = u.director,
          t = u.AudioSource
      }
      , function(u) {
          l = u.default
      }
      ],
      execute: function() {
          i._RF.push({}, "0c5d0GxpX1OaooDKv3aKPh3", "SoundSystem", void 0);
          u("default", function(u) {
              function i() {
                  var o;
                  (o = u.call(this) || this)._audioSource = null,
                  o._musicSource1 = null,
                  o._musicSource2 = null,
                  o._assetDict = new Map,
                  o._soundVolume = 1,
                  o._musicVolume = 1,
                  o._lastDict = new Map;
                  var i = new e;
                  return i.name = "__SoundSystem__",
                  s.getScene().addChild(i),
                  s.addPersistRootNode(i),
                  o._audioSource = i.addComponent(t),
                  o._audioSource.playOnAwake = !1,
                  o._audioSource.loop = !0,
                  o._musicSource1 = i.addComponent(t),
                  o._musicSource1.playOnAwake = !1,
                  o._musicSource1.loop = !0,
                  o._musicSource2 = i.addComponent(t),
                  o._musicSource2.playOnAwake = !1,
                  o._musicSource2.loop = !0,
                  o
              }
              o(i, u);
              var l = i.prototype;
              return l.playSound = function(u, o) {
                  var i = this;
                  void 0 === o && (o = 1),
                  this.loadAudioClip(u, (function(c) {
                      var e = i._lastDict.get(u);
                      null != e && Date.now() - e < 100 || (i._lastDict.set(u, Date.now()),
                      i._audioSource.playOneShot(c, i._soundVolume * o * .5))
                  }
                  ))
              }
              ,
              l.playMusic1 = function(u, o) {
                  var i = this;
                  void 0 === o && (o = 1),
                  this.loadAudioClip(u, (function(u) {
                      i._musicSource1.clip != u && (i._musicSource1.stop(),
                      i._musicSource1.clip = u,
                      i._musicSource1.play(),
                      i._musicSource1.volume = i._musicVolume * o)
                  }
                  ))
              }
              ,
              l.playMusic2 = function(u, o) {
                  var i = this;
                  void 0 === o && (o = 1),
                  this.loadAudioClip(u, (function(u) {
                      i._musicSource2.clip != u && (i._musicSource2.stop(),
                      i._musicSource2.clip = u,
                      i._musicSource2.play(),
                      i._musicSource2.volume = i._musicVolume * o)
                  }
                  ))
              }
              ,
              l.loadAudioClip = function(u, o) {
                  var i = this
                    , e = this._assetDict.get(u);
                  e ? o.call(this, e) : c.load(u, (function(c, e) {
                      c ? console.log(c) : (i._assetDict.set(u, e),
                      o.call(i, e))
                  }
                  ))
              }
              ,
              l.setSoundVolume = function(u) {
                  this._soundVolume = u,
                  this._audioSource.volume = this._soundVolume
              }
              ,
              l.setMusicVolume = function(u) {
                  this._musicVolume = u,
                  this._musicSource1.volume = this._musicVolume,
                  this._musicSource2.volume = this._musicVolume
              }
              ,
              l.stop = function() {
                  this._audioSource.stop(),
                  this._audioSource.clip = null,
                  this._musicSource1.stop(),
                  this._musicSource1.clip = null,
                  this._musicSource2.stop(),
                  this._musicSource2.clip = null
              }
              ,
              l.pause = function() {
                  this._audioSource.pause(),
                  this._musicSource1.pause(),
                  this._musicSource2.pause()
              }
              ,
              l.resume = function() {
                  this._audioSource.play()
              }
              ,
              i
          }(l()));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SpineAutoPlay.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts"], (function(e) {
  var t, n, i, o, a, r, l, s, c;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          n = e.inheritsLoose,
          i = e.initializerDefineProperty,
          o = e.assertThisInitialized
      }
      , function(e) {
          a = e.cclegacy,
          r = e._decorator,
          l = e.sp,
          s = e.Component
      }
      , function(e) {
          c = e.default
      }
      ],
      execute: function() {
          var u, p, y, h;
          a._RF.push({}, "cb7d4xkVUVI1oeBHnAWe4A/", "SpineAutoPlay", void 0);
          var f = r.ccclass
            , m = r.property;
          e("SpineAutoPlay", f("SpineAutoPlay")((y = t((p = function(e) {
              function t() {
                  for (var t, n = arguments.length, a = new Array(n), r = 0; r < n; r++)
                      a[r] = arguments[r];
                  return t = e.call.apply(e, [this].concat(a)) || this,
                  i(t, "anim", y, o(t)),
                  i(t, "loop", h, o(t)),
                  t.skeleton = void 0,
                  t.delay = 0,
                  t
              }
              return n(t, e),
              t.prototype.onEnable = function() {
                  var e = this;
                  this.skeleton = this.getComponent(l.Skeleton),
                  this.skeleton && (this.delay = c.math.random(500, 2500),
                  this.skeleton.timeScale = c.math.random(.8, 1),
                  c.action.delayCall(this.delay, this, (function() {
                      e.skeleton.clearAnimation(),
                      e.skeleton.setAnimation(0, e.anim, e.loop)
                  }
                  )))
              }
              ,
              t
          }(s)).prototype, "anim", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return ""
              }
          }),
          h = t(p.prototype, "loop", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return !0
              }
          }),
          u = p)) || u);
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SpineEditor.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIListView.ts"], (function(e) {
  var n, i, t, s, o, a, r, p, l, u, h, d, c, m, w;
  return {
      setters: [function(e) {
          n = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          t = e.initializerDefineProperty,
          s = e.assertThisInitialized
      }
      , function(e) {
          o = e.cclegacy,
          a = e._decorator,
          r = e.sp,
          p = e.RigidBody2D,
          l = e.ProgressBar,
          u = e.Label,
          h = e.resources,
          d = e.Node,
          c = e.Button,
          m = e.Component
      }
      , function(e) {
          w = e.UIListView
      }
      ],
      execute: function() {
          var k, f, g, y, b, L, v, S, _, C, B, R, E, x, I, z, P;
          o._RF.push({}, "d085dQN3xpPOp7lHn9PcTQJ", "SpineEditor", void 0);
          var A = a.ccclass
            , D = a.property;
          e("SpineEditor", (k = A("SpineEditor"),
          f = D({
              type: r.Skeleton
          }),
          g = D({
              type: p
          }),
          y = D({
              type: w
          }),
          b = D({
              type: w
          }),
          L = D({
              type: w
          }),
          v = D({
              type: l
          }),
          S = D({
              type: u
          }),
          k((B = n((C = function(e) {
              function n() {
                  for (var n, i = arguments.length, o = new Array(i), a = 0; a < i; a++)
                      o[a] = arguments[a];
                  return (n = e.call.apply(e, [this].concat(o)) || this).path = "",
                  t(n, "skele", B, s(n)),
                  t(n, "skeleBody", R, s(n)),
                  t(n, "spineList", E, s(n)),
                  t(n, "animList", x, s(n)),
                  t(n, "skinList", I, s(n)),
                  t(n, "timeLine", z, s(n)),
                  t(n, "timeText", P, s(n)),
                  n.asset = void 0,
                  n.spines = ["weapon/spine/weapon_Bazooka", "weapon/spine/weapon_Dagger", "weapon/spine/weapon_Fingertiger", "weapon/spine/weapon_IceWond", "weapon/spine/weapon_Poker", "weapon/spine/weapon_Revolver", "weapon/spine/weapon_Rifle", "weapon/spine/weapon_SamuraiSword", "weapon/spine/weapon_Shotgun", "weapon/spine/weapon_Snipergun", "weapon/spine/weapon_Spear", "weapon/spine/weapon_Warrior", "weapon/spine/weapon_Wolverine", "weapon/spine/weapon_CrusadeSword", "weapon/spine/weapon_BloodAxe", "weapon/spine/weapon_Crossbow", "weapon/spine/weapon_IronPick", "weapon/spine/weapon_GoldGlove", "weapon/spine/weapon_Lightsaber", "weapon/spine/weapon_MonkeyKing", "weapon/spine/weapon_Gatling", "weapon/spine/weapon_Baseballbat", "weapon/spine/weapon_Kungfu", "map/home/spine/fanye", "map/home/spine/shenzhenye", "map/home/spine/suiye", "creature/spine/boar", "creature/spine/Bull", "creature/spine/Ironbull", "creature/spine/dragon", "creature/spine/skeletonWiz", "creature/spine/FireDragon", "creature/spine/Chomper", "creature/spine/Gorilla", "creature/spine/Pharaoh", "creature/spine/Tree Leader", "creature/spine/YetiBoos", "creature/spine/Crocodile", "creature/spine/RedShark", "creature/spine/SkeletonLord", "creature/spine/Pumpkin"],
                  n.skins = [],
                  n.anims = [],
                  n.index = 0,
                  n.loop = !0,
                  n.speed = 0,
                  n
              }
              i(n, e);
              var o = n.prototype;
              return o.onEnable = function() {
                  this.initSpineList()
              }
              ,
              o.loadSpine = function(e) {
                  var n = this;
                  h.load(e, r.SkeletonData, (function(i, t) {
                      if (t) {
                          n.asset = t,
                          n.init(),
                          n.skele && (n.skele.node.destroy(),
                          n.skele = null);
                          var s = new d;
                          n.skele = s.addComponent(r.Skeleton),
                          n.skele.skeletonData = n.asset,
                          n.skele.setSkin(n.skins[0]),
                          n.skele.setAnimation(0, n.anims[0].name, n.loop),
                          n.node.addChild(s),
                          n.initEvent()
                      } else
                          console.error("load Sprite3D fail: " + e),
                          console.error(i)
                  }
                  ))
              }
              ,
              o.init = function() {
                  this.skins = [],
                  this.anims = [];
                  var e = this.asset.getSkinsEnum();
                  for (var n in e)
                      this.skins.push(n);
                  var i = this.asset.getAnimsEnum();
                  for (var t in i)
                      this.anims.push({
                          name: t,
                          duration: 0
                      });
                  this.initSkinList(),
                  this.initAnimList()
              }
              ,
              o.initSpineList = function() {
                  this.spineList.itemRenderer = this.spineRenderer.bind(this),
                  this.spineList.numItems = this.spines.length
              }
              ,
              o.initSkinList = function() {
                  this.skinList.itemRenderer = this.skinRenderer.bind(this),
                  this.skinList.numItems = this.skins.length
              }
              ,
              o.initAnimList = function() {
                  this.animList.itemRenderer = this.animRenderer.bind(this),
                  this.animList.numItems = this.anims.length
              }
              ,
              o.initEvent = function() {
                  var e = this;
                  this.skele.setCompleteListener((function() {
                      console.log("play end"),
                      e.skeleBody && (e.skeleBody.enabled = !1)
                  }
                  ))
              }
              ,
              o.spineRenderer = function(e, n) {
                  var i = this
                    , t = this.spines[e]
                    , s = t.substring(t.lastIndexOf("/") + 1);
                  n.getChildByName("Label").getComponent(u).string = s,
                  n.on(c.EventType.CLICK, (function() {
                      i.path = t,
                      i.loadSpine(i.path)
                  }
                  ), this)
              }
              ,
              o.skinRenderer = function(e, n) {
                  var i = this;
                  n.getChildByName("Label").getComponent(u).string = this.skins[e],
                  n.on(c.EventType.CLICK, (function() {
                      i.skele.setSkin(i.skins[e])
                  }
                  ), this)
              }
              ,
              o.animRenderer = function(e, n) {
                  var i = this;
                  n.getChildByName("Label").getComponent(u).string = this.anims[e].name,
                  n.on(c.EventType.CLICK, (function() {
                      i.index = e,
                      i.skele.setAnimation(0, i.anims[e].name, i.loop)
                  }
                  ), this)
              }
              ,
              o.onPause = function() {
                  this.skele.paused = !0
              }
              ,
              o.onResume = function() {
                  this.skele.paused = !1
              }
              ,
              o.onPlay = function() {
                  this.skele.setAnimation(0, this.anims[this.index].name, this.loop),
                  this.skeleBody && (this.skeleBody.enabled = !0)
              }
              ,
              o.onLoop = function(e) {
                  this.loop = e.isChecked,
                  this.skele.setAnimation(0, this.anims[this.index].name, this.loop)
              }
              ,
              o.onSpeed = function(e) {
                  this.speed = e.progress,
                  this.skele.timeScale = this.speed
              }
              ,
              o.onHide = function() {
                  this.skele.node.active = !this.skele.node.active
              }
              ,
              o.update = function(e) {
                  if (this.skele) {
                      var n = this.skele.getCurrent(0);
                      n && (this.timeText.string = n.animationLast.toFixed(2) + "/" + n.animationEnd.toFixed(2),
                      this.timeLine.progress = n.animationLast / n.animationEnd)
                  }
              }
              ,
              n
          }(m)).prototype, "skele", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          R = n(C.prototype, "skeleBody", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          E = n(C.prototype, "spineList", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          x = n(C.prototype, "animList", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          I = n(C.prototype, "skinList", [L], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          z = n(C.prototype, "timeLine", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          P = n(C.prototype, "timeText", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          _ = C)) || _));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SpineEffect.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./EffectBase.ts", "./Kit.ts"], (function(t) {
  var i, n, o, e, s, a, r, c;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy,
          o = t.Prefab,
          e = t.sp,
          s = t.Vec3
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          c = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "62236o2jURPdrfgHb+5tRFZ", "SpineEffect", void 0);
          var h = t("default", function(t) {
              function n() {
                  for (var i, n = arguments.length, o = new Array(n), e = 0; e < n; e++)
                      o[e] = arguments[e];
                  return (i = t.call.apply(t, [this].concat(o)) || this).src = void 0,
                  i.position = new s,
                  i.rotation = 0,
                  i.pivot = void 0,
                  i.layer = void 0,
                  i.loop = void 0,
                  i.anim = void 0,
                  i.node = void 0,
                  i.time = void 0,
                  i.isPlaying = void 0,
                  i.switchDuration = void 0,
                  i.switchLayer = void 0,
                  i
              }
              i(n, t);
              var a = n.prototype;
              return a.onPreLoad = function() {
                  this.preload(this.src, o, this.position, this.rotation)
              }
              ,
              a.onStart = function() {
                  this.node = this.getAsset(this.src, this.layer),
                  this.anim = this.node.getComponent(e.Skeleton),
                  this.anim.setCompleteListener(this.onPlayComplete.bind(this)),
                  this.anim.setAnimation(0, this.anim.animation, this.loop),
                  this.isPlaying = !0
              }
              ,
              a.onUpdate = function(t) {
                  null != this.switchLayer && (this.anim.getCurrent(0).animationLast > this.switchDuration && (c.layer.addNode(this.node, this.switchLayer),
                  this.switchLayer = null));
                  return !this.isPlaying
              }
              ,
              a.onFinish = function() {
                  this.anim = null,
                  n.POOL.recycle(this),
                  t.prototype.onFinish.call(this)
              }
              ,
              a.stopAnim = function() {
                  this.anim.paused = !0
              }
              ,
              a.onPlayComplete = function() {
                  this.isPlaying = !1
              }
              ,
              a.destroy = function() {
                  t.prototype.destroy.call(this),
                  this.isPlaying = !1
              }
              ,
              n
          }(r));
          h.POOL = new a((function() {
              return new h
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SpineSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts"], (function(t) {
  var e, i, n, a, o, r;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          i = t.cclegacy,
          n = t.error,
          a = t.sp,
          o = t.js
      }
      , function(t) {
          r = t.default
      }
      ],
      execute: function() {
          i._RF.push({}, "f0dd9ByUy5HNaAlC54XTE5T", "SpineSystem", void 0);
          t("default", function(t) {
              function i() {
                  return t.call(this) || this
              }
              e(i, t);
              var r = i.prototype;
              return r.updatePartialSkin = function(t, e, i, o) {
                  var r;
                  if (void 0 === o && (o = ""),
                  r = i || t.findSlot(o)) {
                      r.color.a = 1;
                      var u = r.getAttachment();
                      if (null != e)
                          if (u) {
                              u = u.copy(),
                              r.setAttachment(u);
                              var l = new a.SkeletonTexture({
                                  width: e.width,
                                  height: e.height
                              });
                              e && l.setRealTexture(e);
                              var s = new a.spine.TextureAtlasRegion;
                              e && (s.width = e.width,
                              s.height = e.height,
                              s.originalWidth = e.width,
                              s.originalHeight = e.height),
                              s.rotate = !1,
                              s.u = 0,
                              s.v = 0,
                              s.u2 = 1,
                              s.v2 = 1,
                              s.texture = l,
                              s.renderObject = s,
                              u.region = s,
                              e && (u.width = e.width,
                              u.height = e.height),
                              u instanceof a.spine.MeshAttachment ? u.updateUVs() : (u.setRegion(s),
                              u.updateOffset())
                          } else
                              n("updatePartialSkin attachment null:", o);
                      else
                          n("tex2d null:", o)
                  } else
                      n("updatePartialSkin:", o)
              }
              ,
              r.copySkeletonData = function(t, e, i) {
                  void 0 === i && (i = !0);
                  var n = new Date
                    , r = t.animation
                    , u = e
                    , l = new a.SkeletonData;
                  o.mixin(l, u),
                  l._uuid = u._uuid + "_" + n.getTime() + "_copy";
                  var s = l.name
                    , h = l.name + "_copy";
                  l.name = h,
                  l.atlasText = l.atlasText.replace(s, h),
                  l.textureNames[0] = h + ".png",
                  l.init && l.init(),
                  i && (t.skeletonData = l,
                  t.setAnimation(0, r, !0))
              }
              ,
              i
          }(r()));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SpineTest.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreatureSkinDress.ts", "./CreatureImgDress.ts", "./Kit.ts", "./DressConfig.ts", "./ResList.ts"], (function(e) {
  var t, s, i, r, n, a, l, o, u, c, p, h, m, f, g, b;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          s = e.inheritsLoose,
          i = e.initializerDefineProperty,
          r = e.assertThisInitialized,
          n = e.asyncToGenerator,
          a = e.regeneratorRuntime
      }
      , function(e) {
          l = e.cclegacy,
          o = e._decorator,
          u = e.sp,
          c = e.Texture2D,
          p = e.Component
      }
      , function(e) {
          h = e.default
      }
      , function(e) {
          m = e.default
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          g = e.default
      }
      , function(e) {
          b = e.default
      }
      ],
      execute: function() {
          var y, D, d, k, _, w, z, A, v, S, C, T, x, O, P, R, I, K, L, j, F, G, J, B, H, M, N;
          l._RF.push({}, "67bc2GP9jJP9I50+ay5sACO", "SpineTest", void 0);
          var q = o.ccclass
            , E = o.property;
          e("SpineTest", (y = q("SpineTest"),
          D = E({
              type: u.Skeleton
          }),
          d = E({
              type: u.SkeletonData
          }),
          k = E({
              type: u.Skeleton
          }),
          _ = E({
              type: c
          }),
          w = E({
              type: c
          }),
          z = E({
              type: h
          }),
          A = E({
              type: m
          }),
          v = E({
              type: m
          }),
          S = E({
              type: m
          }),
          C = E({
              type: m
          }),
          T = E({
              type: m
          }),
          x = E({
              type: m
          }),
          y((R = t((P = function(e) {
              function t() {
                  for (var t, s = arguments.length, n = new Array(s), a = 0; a < s; a++)
                      n[a] = arguments[a];
                  return t = e.call.apply(e, [this].concat(n)) || this,
                  i(t, "skeleton", R, r(t)),
                  i(t, "skeletonData", I, r(t)),
                  i(t, "skeleton2", K, r(t)),
                  i(t, "hat_f", L, r(t)),
                  i(t, "hat_b", j, r(t)),
                  i(t, "skinDress", F, r(t)),
                  i(t, "imagDress1", G, r(t)),
                  i(t, "imagDress2", J, r(t)),
                  i(t, "imagDress3", B, r(t)),
                  i(t, "imagDress4", H, r(t)),
                  i(t, "imagDress5", M, r(t)),
                  i(t, "imagDress6", N, r(t)),
                  t
              }
              s(t, e);
              var l = t.prototype;
              return l.start = function() {
                  this.preload()
              }
              ,
              l.update = function(e) {}
              ,
              l.preload = function() {
                  var e = n(a().mark((function e() {
                      var t;
                      return a().wrap((function(e) {
                          for (; ; )
                              switch (e.prev = e.next) {
                              case 0:
                                  return e.next = 2,
                                  f.res.loadJson(b.dress_data.path);
                              case 2:
                                  t = e.sent,
                                  f.config.set(g, t);
                              case 4:
                              case "end":
                                  return e.stop()
                              }
                      }
                      ), e)
                  }
                  )));
                  return function() {
                      return e.apply(this, arguments)
                  }
              }(),
              l.onClickOK = function() {
                  console.log("onClickOK"),
                  this.dress(this.imagDress1, "aircraft"),
                  this.dress(this.imagDress2, "angel"),
                  this.dress(this.imagDress3, "bazooka"),
                  this.dress(this.imagDress4, "bear"),
                  this.dress(this.imagDress5, "blackmith"),
                  this.dress(this.imagDress6, "cardmaster")
              }
              ,
              l.onClickNO = function() {
                  this.dress(this.imagDress1, null),
                  this.dress(this.imagDress2, null),
                  this.dress(this.imagDress3, null),
                  this.dress(this.imagDress4, null),
                  this.dress(this.imagDress5, null),
                  this.dress(this.imagDress6, null)
              }
              ,
              l.dress = function(e, t) {}
              ,
              l.clear = function(e) {
                  null != e && (e.setAttachment("clothes_b", null),
                  e.setAttachment("clothes_f", null),
                  e.setAttachment("eye", null),
                  e.setAttachment("hat_b", null),
                  e.setAttachment("hat_f", null),
                  e.setAttachment("hat_m", null),
                  e.setAttachment("pant_l", null),
                  e.setAttachment("pant_r", null),
                  e.setAttachment("shoe_l", null),
                  e.setAttachment("shoe_r", null))
              }
              ,
              t
          }(p)).prototype, "skeleton", [D], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          I = t(P.prototype, "skeletonData", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          K = t(P.prototype, "skeleton2", [k], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          L = t(P.prototype, "hat_f", [_], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          j = t(P.prototype, "hat_b", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          F = t(P.prototype, "skinDress", [z], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          G = t(P.prototype, "imagDress1", [A], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          J = t(P.prototype, "imagDress2", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          B = t(P.prototype, "imagDress3", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          H = t(P.prototype, "imagDress4", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          M = t(P.prototype, "imagDress5", [T], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          N = t(P.prototype, "imagDress6", [x], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          O = P)) || O));
          l._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SpriteColorAnim.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(t) {
  var i, e, r, o, n, s, a, l, u, c, h;
  return {
      setters: [function(t) {
          i = t.applyDecoratedDescriptor,
          e = t.inheritsLoose,
          r = t.initializerDefineProperty,
          o = t.assertThisInitialized
      }
      , function(t) {
          n = t.cclegacy,
          s = t._decorator,
          a = t.CCFloat,
          l = t.Sprite,
          u = t.CCBoolean,
          c = t.Color,
          h = t.Component
      }
      ],
      execute: function() {
          var p, y, d, f, m, g, b, C, w, v, z, S, A;
          n._RF.push({}, "420c4rcWKRNjaMt7grRdHhI", "SpriteColorAnim", void 0);
          var P = s.ccclass
            , R = s.property;
          t("SpriteColorAnim", (p = P("SpriteColorAnim"),
          y = R({
              type: a
          }),
          d = R({
              type: a
          }),
          f = R({
              type: l
          }),
          m = R({
              type: u
          }),
          p((C = i((b = function(t) {
              function i() {
                  for (var i, e = arguments.length, n = new Array(e), s = 0; s < e; s++)
                      n[s] = arguments[s];
                  return i = t.call.apply(t, [this].concat(n)) || this,
                  r(i, "delay", C, o(i)),
                  r(i, "duration", w, o(i)),
                  r(i, "src", v, o(i)),
                  r(i, "dst", z, o(i)),
                  r(i, "target", S, o(i)),
                  r(i, "autoPlay", A, o(i)),
                  i.color = new c,
                  i.time = void 0,
                  i.state = 2,
                  i.isTurn = !1,
                  i
              }
              e(i, t);
              var n = i.prototype;
              return n.onEnable = function() {
                  null == this.target && (this.target = this.getComponent(l)),
                  this.autoPlay && this.play(!1)
              }
              ,
              n.play = function(t) {
                  this.time = 0,
                  this.isTurn = t,
                  this.target.color = t ? this.dst : this.src,
                  this.state = this.delay > 0 ? 0 : 1
              }
              ,
              n.update = function(t) {
                  0 == this.state ? (this.time += t,
                  this.time > this.delay && (this.time = 0,
                  this.state = 1)) : 1 == this.state && (this.time += t,
                  this.isTurn ? this.time < this.duration ? (c.lerp(this.color, this.dst, this.src, this.time / this.duration),
                  this.target.color = this.color) : (this.target.color = this.src,
                  this.state = 2) : this.time < this.duration ? (c.lerp(this.color, this.src, this.dst, this.time / this.duration),
                  this.target.color = this.color) : (this.target.color = this.dst,
                  this.state = 2))
              }
              ,
              i
          }(h)).prototype, "delay", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 0
              }
          }),
          w = i(b.prototype, "duration", [d], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          v = i(b.prototype, "src", [R], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new c
              }
          }),
          z = i(b.prototype, "dst", [R], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new c
              }
          }),
          S = i(b.prototype, "target", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return null
              }
          }),
          A = i(b.prototype, "autoPlay", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return !0
              }
          }),
          g = b)) || g));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Stage.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./ObjMgr.ts", "./BattleDef.ts", "./BattleMgr.ts", "./UIRoot.ts", "./MonsterSpawn.ts", "./proto.mjs_cjs=&original=.js", "./CreatureManager.ts", "./DropItemType.ts", "./proto.js"], (function(t) {
  var e, n, i, a, s, r, o, h, p, g, c;
  return {
      setters: [function(t) {
          e = t.createForOfIteratorHelperLoose
      }
      , function(t) {
          n = t.cclegacy,
          i = t.Vec3
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          s = t.BattleDef
      }
      , function(t) {
          r = t.BattleMgr
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          h = t.MonsterSpawn
      }
      , null, function(t) {
          p = t.default
      }
      , function(t) {
          g = t.DropItemType
      }
      , function(t) {
          c = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "451aab0XTNH9JMvgSah0i9f", "Stage", void 0);
          var f = t("StageState", function(t) {
              return t[t.Loaidng = 0] = "Loaidng",
              t[t.Spawn = 1] = "Spawn",
              t[t.Shopping = 2] = "Shopping",
              t[t.Win = 3] = "Win",
              t[t.Loose = 4] = "Loose",
              t
          }({}));
          t("Stage", function() {
              function t(t) {
                  this.stageCfg = null,
                  this.tick = 0,
                  this.state = f.Loaidng,
                  this.remainTick = 0,
                  this.spawns = void 0,
                  this.spawnDel = void 0,
                  this.towerPrePos = void 0,
                  this.stageCfg = DataCenter.Stage.Get(t)
              }
              var n = t.prototype;
              return n.destroy = function() {
                  this.stageCfg = null
              }
              ,
              n.onStart = function() {
                  this.tick = 0,
                  this.remainTick = this.stageCfg.Duration,
                  this.state = f.Loaidng,
                  this.towerPrePos = [],
                  this.spawnStart(),
                  a.ins.getChar().onStageStart(),
                  p.ins.resetAtkBatch()
              }
              ,
              n.onUpdate = function() {
                  this.tick += s.FrameTick,
                  this.remainTick -= s.FrameTick,
                  this.updateRemainTick();
                  for (var t, n = e(this.spawns); !(t = n()).done; ) {
                      var r = t.value
                        , o = r[0]
                        , h = r[1];
                      if (this.tick >= h.tick) {
                          var g = DataCenter.Monster.Get(h.mid);
                          a.ins.createMonster(o, h.mid, g.ResPath, new i(h.x,h.y,0), h.attrs, h.append),
                          h.preShow && p.ins.closeBirth(h.preShow),
                          h.destroy(),
                          this.spawnDel.push(o)
                      }
                  }
                  if (this.spawnDel.length > 0) {
                      for (var c = 0; c < this.spawnDel.length; c++)
                          this.spawns.delete(this.spawnDel[c]);
                      this.spawnDel.splice(0, this.spawnDel.length)
                  }
              }
              ,
              n.getCfg = function() {
                  return this.stageCfg
              }
              ,
              n.getState = function() {
                  return this.state
              }
              ,
              n.setState = function(t) {
                  this.state = t
              }
              ,
              n.isShopping = function() {
                  return this.state == f.Shopping
              }
              ,
              n.nextWave = function() {
                  var t = this.stageCfg.Next;
                  this.stageCfg = DataCenter.Stage.Get(t)
              }
              ,
              n.gmSet = function(t) {
                  this.stageCfg = DataCenter.Stage.Get(t)
              }
              ,
              n.getID = function() {
                  return this.getCfg().Id
              }
              ,
              n.getStageName = function() {
                  return this.stageCfg.Name
              }
              ,
              n.getStageTime = function() {
                  return Math.floor(this.tick / 1e3)
              }
              ,
              n.getWave = function() {
                  return this.stageCfg.Wave
              }
              ,
              n.getStageDuration = function() {
                  return this.tick
              }
              ,
              n.spawnStart = function() {
                  this.spawns = new Map,
                  this.spawnDel = new Array
              }
              ,
              n.syncSpawn = function(t) {
                  if (this.state == f.Spawn)
                      for (var e = 0; e < t.Spawn.length; e++) {
                          var n = t.Spawn[e];
                          if (0 == n.Type) {
                              var o = r.ins.randNextEx(0, r.ins.getMap().getWidth() - 1)
                                , g = r.ins.randNextEx(0, r.ins.getMap().getHeight() - 1);
                              o = r.ins.getMap().getCoordinateMin().x + o,
                              g = r.ins.getMap().getCoordinateMin().y + g;
                              var u = p.ins.createBirth(new i(o,g,0))
                                , l = new h;
                              l.mid = t.Spawn[e].ID,
                              l.x = o,
                              l.y = g,
                              l.preShow = u,
                              l.tick = this.tick + s.SpawnPreShown,
                              l.attrs = n.CrtAttr,
                              l.append = n.AppendBuff,
                              this.spawns.set(t.Spawn[e].SN, l)
                          } else {
                              var w = DataCenter.Tower.Get(n.ID)
                                , d = n.CrtAttr
                                , S = this.findTowerPos(d[c.msg.AttrType.AT_CollisionRadius])
                                , m = n.From[0];
                              if (0 == m) {
                                  var C = a.ins.getChar().getWeapon(n.From[1]);
                                  if (!C) {
                                      console.error("tower's weapon error, sn:", n.From[1]);
                                      continue
                                  }
                                  a.ins.createTower(n.SN, n.ID, w.ResPath, S, m, C.getWSN(), n.CrtAttr, n.AppendBuff)
                              } else
                                  1 == m && a.ins.createTower(n.SN, n.ID, w.ResPath, S, m, n.From[1], n.CrtAttr, n.AppendBuff)
                          }
                      }
              }
              ,
              n.BossSummon = function(t, e) {
                  var n = r.ins.randNextEx(0, r.ins.getMap().getWidth() - 1)
                    , a = r.ins.randNextEx(0, r.ins.getMap().getHeight() - 1);
                  n = r.ins.getMap().getCoordinateMin().x + n,
                  a = r.ins.getMap().getCoordinateMin().y + a;
                  var o = new h;
                  if (e) {
                      var g = p.ins.createDoorBirth(new i(n,a,0));
                      o.preShow = g
                  }
                  o.mid = t.ID,
                  o.x = n,
                  o.y = a,
                  o.tick = this.tick + s.SpawnPreShown,
                  o.attrs = t.CrtAttr,
                  o.append = t.AppendBuff,
                  this.spawns.set(t.SN, o)
              }
              ,
              n.onMonsterDrop = function(t) {
                  if (t)
                      for (var e = 0; e < t.length; e++) {
                          var n = t[e];
                          n.Type == c.msg.BattleTileItemType.BTI_Coin ? p.ins.createDropItem(g.Coin, new i(n.X,n.Y,0), {
                              type: g.Coin,
                              char: a.ins.getChar(),
                              gold: n.Val
                          }) : n.Type == c.msg.BattleTileItemType.BTI_Chest ? p.ins.createDropItem(g.Treasure, new i(n.X,n.Y,0), {
                              type: g.Treasure,
                              char: a.ins.getChar()
                          }) : n.Type == c.msg.BattleTileItemType.BTI_Potion && p.ins.createDropItem(g.Blood, new i(n.X,n.Y,0), {
                              type: g.Blood,
                              char: a.ins.getChar()
                          })
                      }
              }
              ,
              n.updateRemainView = function() {
                  o.fight.setTime(this.remainTick)
              }
              ,
              n.updateWaveView = function() {
                  o.fight.setWave(this.getWave())
              }
              ,
              n.onKillMonster = function(t) {
                  a.ins.getChar().onKillMonster(t),
                  a.ins.onMonsterDie(t)
              }
              ,
              n.setRemainTick = function(t) {
                  this.remainTick = t
              }
              ,
              n.updateRemainTick = function() {
                  this.remainTick < 0 && (this.remainTick = 0),
                  this.updateRemainView()
              }
              ,
              n.isBossStage = function() {
                  return !1
              }
              ,
              n.findTowerPos = function(t) {
                  if (0 == this.towerPrePos.length)
                      for (var e = DataCenter.Config.Get("TowerSummonRadius").Value, n = r.ins.getMap().getCoordinateCenter(), a = Math.floor(2 * e / t), s = Math.floor(a / 2), o = -s; o <= s; o++)
                          for (var h = -s; h <= s; h++) {
                              var p = n.x + o * t
                                , g = n.y + h * t;
                              this.towerPrePos.push(p),
                              this.towerPrePos.push(g)
                          }
                  var c = r.ins.randNextEx(0, this.towerPrePos.length / 2 - 1)
                    , f = this.towerPrePos[2 * c]
                    , u = this.towerPrePos[2 * c + 1];
                  return this.towerPrePos.splice(2 * c, 2),
                  new i(f,u,0)
              }
              ,
              t
          }());
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/StartFight.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Player.ts", "./Kit.ts", "./Def.ts"], (function(t) {
  var e, i, n, o, r, l, a, c, s, u, p, f, d;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          n = t.initializerDefineProperty,
          o = t.assertThisInitialized
      }
      , function(t) {
          r = t.cclegacy,
          l = t._decorator,
          a = t.Collider2D,
          c = t.RigidBody2D,
          s = t.Contact2DType,
          u = t.Component
      }
      , function(t) {
          p = t.default
      }
      , function(t) {
          f = t.default
      }
      , function(t) {
          d = t.SceneType
      }
      ],
      execute: function() {
          var g, h, y, C, b, D, B;
          r._RF.push({}, "adc78J8KDdEf7yQxbDR192M", "StartFight", void 0);
          var v = l.ccclass
            , F = l.property;
          t("StartFight", (g = v("StartFight"),
          h = F({
              type: a
          }),
          y = F({
              type: c
          }),
          g((D = e((b = function(t) {
              function e() {
                  for (var e, i = arguments.length, r = new Array(i), l = 0; l < i; l++)
                      r[l] = arguments[l];
                  return e = t.call.apply(t, [this].concat(r)) || this,
                  n(e, "collider", D, o(e)),
                  n(e, "rigidBody", B, o(e)),
                  e
              }
              i(e, t);
              var r = e.prototype;
              return r.onEnable = function() {
                  this.collider.on(s.BEGIN_CONTACT, this.onBeginContact, this)
              }
              ,
              r.onDisable = function() {
                  this.collider.off(s.BEGIN_CONTACT, this.onBeginContact, this)
              }
              ,
              r.onBeginContact = function(t, e, i) {
                  console.log(e.name),
                  e.getComponent(p) && f.scene.change(d.Fight)
              }
              ,
              e
          }(u)).prototype, "collider", [h], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          B = e(b.prototype, "rigidBody", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          C = b)) || C));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Stopwatch.ts", ["cc"], (function(t) {
  var c;
  return {
      setters: [function(t) {
          c = t.cclegacy
      }
      ],
      execute: function() {
          c._RF.push({}, "3cd5aq+CX1KQZ/BZgK3NgfF", "Stopwatch", void 0),
          t("Stopwatch", function() {
              function t() {}
              return t.start = function(t) {
                  void 0 === t && (t = 0),
                  this.dict[t] = Date.now()
              }
              ,
              t.stop = function(t, c) {
                  void 0 === t && (t = 0),
                  void 0 === c && (c = !0);
                  var n = this.dict[t];
                  if (!n)
                      return 0;
                  var i = Date.now() - n;
                  return c && (this.dict[t] = Date.now()),
                  i
              }
              ,
              t
          }()).dict = {},
          c._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SummonAS.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./AtkStrategy.ts", "./BattleDef.ts", "./ObjMgr.ts", "./proto.mjs_cjs=&original=.js", "./BattleMgr.ts", "./proto.js"], (function(t) {
  var s, i, e, a, n, h, o, r, u;
  return {
      setters: [function(t) {
          s = t.inheritsLoose
      }
      , function(t) {
          i = t.cclegacy
      }
      , function(t) {
          e = t.AtkState,
          a = t.StrategyType,
          n = t.AtkStrategy
      }
      , function(t) {
          h = t.BattleDef
      }
      , function(t) {
          o = t.default
      }
      , null, function(t) {
          r = t.BattleMgr
      }
      , function(t) {
          u = t.default
      }
      ],
      execute: function() {
          i._RF.push({}, "e0064olsWRFpr12NoxEXWua", "SummonAS", void 0);
          t("SummonAtkStrategy", function(t) {
              function i() {
                  return t.apply(this, arguments) || this
              }
              s(i, t);
              var n = i.prototype;
              return n.init = function(s, i) {
                  void 0 === i && (i = null),
                  t.prototype.init.call(this, s, i),
                  this.atkCD = s.getAttrVal(u.msg.AttrType.AT_AtkCD),
                  this.collisionCD = s.getAttrVal(u.msg.AttrType.AT_CollisionCD),
                  this.target = o.ins.getChar(),
                  this.owner = s,
                  this.atkRadius = this.owner.getAttrVal(u.msg.AttrType.AT_AtkRange),
                  this.atkRadiusSuqare = this.atkRadius * this.atkRadius,
                  this.state = e.Chasing,
                  this.targetRadius = this.target.getAttrVal(u.msg.AttrType.AT_CollisionRadius),
                  this.shapeRadius = this.owner.getAttrVal(u.msg.AttrType.AT_CollisionRadius) + this.targetRadius,
                  this.shapeRadiusSuqare = this.shapeRadius * this.shapeRadius
              }
              ,
              n.destory = function() {
                  t.prototype.destory.call(this)
              }
              ,
              n.getStrategyType = function() {
                  return a.Skill
              }
              ,
              n.onUpdate = function() {
                  if (this.frameCheck++,
                  !(this.frameCheck < this.frameCheckMax))
                      if (this.frameCheck = 0,
                      this.checkCollision(),
                      this.state == e.Chasing)
                          this.checkAtk();
                      else if (this.state == e.AtkCD)
                          if (this.atkCDEndTick -= h.FrameTick * this.frameCheckMax,
                          this.atkCDEndTick < 0)
                              this.state = e.Chasing,
                              this.checkAtk();
                          else {
                              var t = this.owner.getPos()
                                , s = this.target.getPos()
                                , i = s.x - t.x
                                , a = s.y - t.y;
                              this.owner.move(i, a)
                          }
                      else
                          this.atkCDEndTick -= h.FrameTick * this.frameCheckMax
              }
              ,
              n.onAtked = function() {
                  this.state = e.AtkEnding,
                  this.atkCDEndTick = this.atkCD
              }
              ,
              n.checkAtk = function() {
                  var t = this.owner.getPos()
                    , s = this.target.getPos()
                    , i = s.x - t.x
                    , e = s.y - t.y;
                  Math.abs(i) > this.atkRadius || Math.abs(e) > this.atkRadius ? this.owner.move(i, e) : i * i + e * e < this.atkRadiusSuqare && this.owner.getAttr().canAtk() ? (this.owner.node.attack(this, null, null, this.onSummonFinish),
                  this.onAtked()) : this.owner.move(i, e)
              }
              ,
              n.onSummonFinish = function() {
                  this.state = e.AtkCD;
                  var t = new u.msg.BattleMonsterAtk;
                  t.Type = 2,
                  t.MInfo.push(this.owner.getSN(), 0),
                  r.ins.MonsterAtks.push(t)
              }
              ,
              i
          }(n));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SystemBase.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(t) {
  var e, n, r;
  return {
      setters: [function(t) {
          e = t.asyncToGenerator,
          n = t.regeneratorRuntime
      }
      , function(t) {
          r = t.cclegacy
      }
      ],
      execute: function() {
          r._RF.push({}, "42922S3BJtFG6a63a8lBVlx", "SystemBase", void 0);
          t("default", function() {
              function t() {}
              return t.prototype.start = function() {
                  var t = e(n().mark((function t() {
                      return n().wrap((function(t) {
                          for (; ; )
                              switch (t.prev = t.next) {
                              case 0:
                              case "end":
                                  return t.stop()
                              }
                      }
                      ), t)
                  }
                  )));
                  return function() {
                      return t.apply(this, arguments)
                  }
              }(),
              t
          }());
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/SystemInfo.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./QueryVariable.ts"], (function(t) {
  var e, n, i;
  return {
      setters: [function(t) {
          e = t.createClass
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          i = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "1ef89q/4IVA1a1TCUbrrWxV", "SystemInfo", void 0),
          t("default", function() {
              function t() {
                  this.data = {}
              }
              return t.prototype.setData = function(t) {
                  this.data = t
              }
              ,
              e(t, [{
                  key: "model",
                  get: function() {
                      return this.data.model || "null"
                  }
              }, {
                  key: "pixelRatio",
                  get: function() {
                      return this.data.appName || "null"
                  }
              }, {
                  key: "brand",
                  get: function() {
                      return this.data.brand || "null"
                  }
              }, {
                  key: "screenWidth",
                  get: function() {
                      return this.data.screenWidth || 720
                  }
              }, {
                  key: "screenHeight",
                  get: function() {
                      return this.data.screenHeight || 1280
                  }
              }, {
                  key: "windowWidth",
                  get: function() {
                      return this.data.windowWidth || 0
                  }
              }, {
                  key: "windowHeight",
                  get: function() {
                      return this.data.windowHeight || 0
                  }
              }, {
                  key: "gameLeft",
                  get: function() {
                      return this.data.gameLeft || 0
                  }
              }, {
                  key: "gameTop",
                  get: function() {
                      return this.data.gameTop || 0
                  }
              }, {
                  key: "gameRight",
                  get: function() {
                      return this.data.gameRight || 0
                  }
              }, {
                  key: "gameBottom",
                  get: function() {
                      return this.data.gameBottom || 0
                  }
              }, {
                  key: "statusBarHeight",
                  get: function() {
                      return this.data.statusBarHeight || 0
                  }
              }, {
                  key: "clientVersion",
                  get: function() {
                      return this.data.clientVersion || "null"
                  }
              }, {
                  key: "language",
                  get: function() {
                      return this.data.language || "null"
                  }
              }, {
                  key: "system",
                  get: function() {
                      return this.data.system || "null"
                  }
              }, {
                  key: "platform",
                  get: function() {
                      return this.data.platform || "null"
                  }
              }, {
                  key: "appName",
                  get: function() {
                      return this.data.appName || "null"
                  }
              }, {
                  key: "deviceID",
                  get: function() {
                      return this.data.deviceID || "null"
                  }
              }, {
                  key: "from",
                  get: function() {
                      return i.getValue("from")
                  }
              }], [{
                  key: "inst",
                  get: function() {
                      return this._inst || (this._inst = new t),
                      this._inst
                  }
              }]),
              t
          }())._inst = void 0,
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/TalentCom.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./proto.mjs_cjs=&original=.js", "./CreatureManager.ts", "./BattleMgr.ts", "./BattleDef.ts", "./ClassType.ts", "./ObjMgr.ts", "./CharCom.ts", "./proto.js"], (function(t) {
  var e, n, i, a, s, l, r, o, h, g;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy
      }
      , null, function(t) {
          i = t.default
      }
      , function(t) {
          a = t.BattleMgr
      }
      , function(t) {
          s = t.BattleDef,
          l = t.AtkObjType
      }
      , function(t) {
          r = t.ClassType
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          h = t.CharCom
      }
      , function(t) {
          g = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "6d63dGa7vBAk7+Z6y4Tfois", "TalentCom", void 0);
          t("TalentCom", function(t) {
              function n() {
                  for (var e, n = arguments.length, i = new Array(n), a = 0; a < n; a++)
                      i[a] = arguments[a];
                  return (e = t.call.apply(t, [this].concat(i)) || this).active = !1,
                  e.dmg = 0,
                  e.frameNum = 0,
                  e.talentCfg = void 0,
                  e.talentVal = void 0,
                  e.aosn = 0,
                  e.atkTick = 0,
                  e.atkTime = 0,
                  e
              }
              e(n, t);
              var h = n.prototype;
              return h.init = function(e, n) {
                  t.prototype.init.call(this, e, n);
                  var i = this.owner.getClassType();
                  if (i == r.FireFolk || i == r.Lightling) {
                      var a;
                      this.active = !0,
                      this.talentCfg = new Array,
                      this.talentVal = new Array;
                      var s = e.getCfg().ClassVal;
                      (a = this.talentCfg).push.apply(a, s),
                      this.aosn = o.ins.generateAtkObjSN(),
                      i == r.FireFolk ? (this.talentVal.push(this.talentCfg[0]),
                      this.atkTime = this.talentCfg[0]) : (this.talentVal.push(this.talentCfg[2], this.talentCfg[3] * this.talentCfg[3], this.talentCfg[4] * this.talentCfg[4]),
                      this.atkTime = this.talentCfg[2])
                  }
              }
              ,
              h.destoy = function() {}
              ,
              h.afterInit = function() {
                  this.calcFirefolk(),
                  this.calcLightling()
              }
              ,
              h.onStageStart = function() {
                  this.active && (this.owner.getClassType() == r.FireFolk ? (this.talentVal[0] = this.talentCfg[0],
                  this.calcFirefolk()) : this.owner.getClassType() == r.Lightling && (this.talentVal[0] = this.talentCfg[2],
                  this.calcLightling()))
              }
              ,
              h.onUpdate = function() {
                  if (this.active && (this.frameNum++,
                  !(this.frameNum < 3))) {
                      if (this.owner.getClassType() == r.FireFolk)
                          this.talentVal[0] -= this.frameNum * s.FrameTick,
                          this.talentVal[0] <= 0 && (this.talentVal[0] += this.talentCfg[0],
                          this.owner.node && this.owner.node.burstFire(this));
                      else if (this.talentVal[0] -= this.frameNum * s.FrameTick,
                      this.talentVal[0] <= 0) {
                          var t = this.owner.getPos()
                            , e = o.ins.findRandMonster(t, this.talentCfg[3], this.talentVal[1]);
                          null != e && (this.owner.node && this.owner.node.lightning(e.getSN(), this, this.onLightingAtk),
                          this.talentVal[0] = this.talentCfg[2])
                      }
                      this.frameNum = 0
                  }
              }
              ,
              h.calcFirefolk = function() {
                  if (this.owner.getClassType() == r.FireFolk) {
                      var t = this.talentCfg[1] / s.UnitePct
                        , e = this.talentCfg[2] / s.UnitePct;
                      this.dmg = Math.floor(this.owner.getAttrVal(g.msg.AttrType.AT_MaxLife) * (a.ins.getStage().getWave() * t - e)),
                      this.dmg < 1 && (this.dmg = 1)
                  }
              }
              ,
              h.calcLightling = function() {
                  if (this.owner.getClassType() == r.Lightling) {
                      var t = this.talentCfg[6] / s.UnitePct
                        , e = this.talentCfg[7] / s.UnitePct;
                      this.dmg = Math.floor(this.owner.getAttrVal(g.msg.AttrType.AT_Dmg) * (a.ins.getStage().getWave() * t - e)),
                      this.dmg < 1 && (this.dmg = 1)
                  }
              }
              ,
              h.onLightingAtk = function(t) {
                  var e = i.ins.generateAtkBatch(this);
                  if (t.damageCrt(e),
                  t.context && t.context.data && this.talentCfg[5] > 1)
                      for (var n = o.ins.findRandMonsterByMonster(t.context.data, this.talentCfg[4], this.talentVal[2], this.talentCfg[5]), a = 0; a < n.length; a++)
                          n[a].beAtk(e, !1)
              }
              ,
              h.isDead = function() {
                  return !1
              }
              ,
              h.getDmg = function() {
                  return this.dmg
              }
              ,
              h.getDmgCritical = function() {
                  return this.dmg
              }
              ,
              h.getAOType = function() {
                  return l.Talent
              }
              ,
              h.getAOID = function() {
                  return this.owner.getCfgID()
              }
              ,
              h.getKnockBack = function() {
                  return 0
              }
              ,
              h.getTargetMax = function() {
                  return 0
              }
              ,
              h.getOwnerSN = function() {
                  return this.owner.getSN()
              }
              ,
              h.getAOSN = function() {
                  return this.aosn
              }
              ,
              h.getWeaponID = function() {
                  return 0
              }
              ,
              h.setAtkTick = function(t) {
                  this.atkTick = t
              }
              ,
              h.getLastAtkTick = function() {
                  return this.atkTick
              }
              ,
              h.getAtkTime = function() {
                  return this.atkTime
              }
              ,
              n
          }(h));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/TalkPanel.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(e) {
  var t, i, n, o, r, a, l, s, c;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          o = e.assertThisInitialized
      }
      , function(e) {
          r = e.cclegacy,
          a = e._decorator,
          l = e.Label,
          s = e.Vec3,
          c = e.Component
      }
      ],
      execute: function() {
          var u, p, f, h, y, b, d, m;
          r._RF.push({}, "6a036NlFkNECqZdQCeBPPqn", "TalkPanel", void 0);
          var v = a.ccclass
            , P = a.property;
          e("TalkPanel", (u = v("TalkPanel"),
          p = P({
              type: l
          }),
          f = P({
              type: s
          }),
          u((b = t((y = function(e) {
              function t() {
                  for (var t, i = arguments.length, r = new Array(i), a = 0; a < i; a++)
                      r[a] = arguments[a];
                  return t = e.call.apply(e, [this].concat(r)) || this,
                  n(t, "label", b, o(t)),
                  n(t, "offset", d, o(t)),
                  n(t, "stayTime", m, o(t)),
                  t.time = void 0,
                  t
              }
              i(t, e);
              var r = t.prototype;
              return r.onEnable = function() {}
              ,
              r.update = function(e) {
                  this.time += e,
                  this.time > this.stayTime && (this.node.active = !1)
              }
              ,
              r.show = function(e) {
                  this.node.active = e,
                  this.time = 0
              }
              ,
              r.setText = function(e) {
                  this.label.string = e
              }
              ,
              r.setPosition = function(e) {
                  var t = new s(this.offset);
                  t.add(e),
                  this.node.position = t
              }
              ,
              t
          }(c)).prototype, "label", [p], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          d = t(y.prototype, "offset", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new s
              }
          }),
          m = t(y.prototype, "stayTime", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 8
              }
          }),
          h = y)) || h));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/TalkView.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(t) {
  var i, e, a, n, r, o, s, l, c;
  return {
      setters: [function(t) {
          i = t.applyDecoratedDescriptor,
          e = t.inheritsLoose,
          a = t.initializerDefineProperty,
          n = t.assertThisInitialized
      }
      , function(t) {
          r = t.cclegacy,
          o = t._decorator,
          s = t.Node,
          l = t.Animation,
          c = t.Component
      }
      ],
      execute: function() {
          var p, u, h, m, y, f, b, g, T;
          r._RF.push({}, "47425GThxpG5ZNF36KsHtls", "TalkView", void 0);
          var v = o.ccclass
            , w = o.property;
          t("TalkView", (p = v("TalkView"),
          u = w({
              type: s
          }),
          h = w({
              type: l
          }),
          p((f = i((y = function(t) {
              function i() {
                  for (var i, e = arguments.length, r = new Array(e), o = 0; o < e; o++)
                      r[o] = arguments[o];
                  return i = t.call.apply(t, [this].concat(r)) || this,
                  a(i, "target", f, n(i)),
                  a(i, "animation", b, n(i)),
                  a(i, "playTime", g, n(i)),
                  a(i, "stayTime", T, n(i)),
                  i.time = void 0,
                  i.state = 0,
                  i
              }
              e(i, t);
              var r = i.prototype;
              return r.onEnable = function() {
                  this.time = 0,
                  this.state = 0,
                  this.target.active = !1
              }
              ,
              r.update = function(t) {
                  this.time += t,
                  0 == this.state ? this.time > this.playTime && (this.time = 0,
                  this.state = 1,
                  this.target.active = !0,
                  this.animation && this.animation.play()) : 1 == this.state && this.time > this.stayTime && (this.time = 0,
                  this.state = 0,
                  this.target.active = !1)
              }
              ,
              i
          }(c)).prototype, "target", [u], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          b = i(y.prototype, "animation", [h], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          g = i(y.prototype, "playTime", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 10
              }
          }),
          T = i(y.prototype, "stayTime", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 8
              }
          }),
          m = y)) || m));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/TempUtils.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts"], (function(e) {
  var n, c, t, r, i;
  return {
      setters: [function(e) {
          n = e.inheritsLoose
      }
      , function(e) {
          c = e.cclegacy,
          t = e.Vec2,
          r = e.Vec3
      }
      , function(e) {
          i = e.default
      }
      ],
      execute: function() {
          c._RF.push({}, "baaa6bhL7lNz5UerG3aEblR", "TempUtils", void 0);
          e("default", function(e) {
              function c() {
                  for (var n, c = arguments.length, i = new Array(c), l = 0; l < c; l++)
                      i[l] = arguments[l];
                  return (n = e.call.apply(e, [this].concat(i)) || this).aVec2 = new t,
                  n.bVec2 = new t,
                  n.cVec2 = new t,
                  n.dVec2 = new t,
                  n.aVec3 = new r,
                  n.bVec3 = new r,
                  n.cVec3 = new r,
                  n.dVec3 = new r,
                  n
              }
              return n(c, e),
              c
          }(i()));
          c._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/TextTips.ts", ["cc", "./Kit.ts", "./LayerType.ts", "./TextTipsView.ts"], (function(t) {
  var e, n, i, s, o, u;
  return {
      setters: [function(t) {
          e = t.cclegacy,
          n = t.Prefab,
          i = t.Vec3
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          o = t.Layer2DType
      }
      , function(t) {
          u = t.TextTipsView
      }
      ],
      execute: function() {
          e._RF.push({}, "04e7fuEwLhOKIPvUMCQX0uU", "TextTips", void 0);
          t("default", function() {
              function t(t) {
                  this.src = void 0,
                  this.src = t
              }
              var e = t.prototype;
              return e.play = function(t) {
                  null != t && "" != t && s.res.spawnAsyn(this.src, n, i.ZERO, null, o.UITips, this, this.onLoadComplete, [t])
              }
              ,
              e.onLoadComplete = function(t, e) {
                  t.getComponent(u).play(e)
              }
              ,
              t
          }());
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/TextTipsView.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts"], (function(t) {
  var e, i, n, r, a, l, o, s, p, c, u;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          n = t.initializerDefineProperty,
          r = t.assertThisInitialized
      }
      , function(t) {
          a = t.cclegacy,
          l = t._decorator,
          o = t.Label,
          s = t.Animation,
          p = t.UITransform,
          c = t.Component
      }
      , function(t) {
          u = t.default
      }
      ],
      execute: function() {
          var h, b, f, y, m, T, g, d, v, w, x;
          a._RF.push({}, "6db80S7zhBHUa+rII2PyJcg", "TextTipsView", void 0);
          var z = l.ccclass
            , F = l.property;
          t("TextTipsView", (h = z("TextTipsView"),
          b = F({
              type: o
          }),
          f = F({
              type: s
          }),
          y = F({
              type: p
          }),
          m = F({
              type: p
          }),
          h((d = e((g = function(t) {
              function e() {
                  for (var e, i = arguments.length, a = new Array(i), l = 0; l < i; l++)
                      a[l] = arguments[l];
                  return e = t.call.apply(t, [this].concat(a)) || this,
                  n(e, "label", d, r(e)),
                  n(e, "animation", v, r(e)),
                  n(e, "bgTF", w, r(e)),
                  n(e, "txTF", x, r(e)),
                  e.time = void 0,
                  e.state = void 0,
                  e
              }
              i(e, t);
              var a = e.prototype;
              return a.play = function(t) {
                  this.label.string = t,
                  this.state = 0,
                  this.time = 0
              }
              ,
              a.update = function(t) {
                  if (0 == this.state) {
                      if (this.time += t,
                      this.time > .05) {
                          this.state = 1;
                          var e = Math.max(418, this.txTF.contentSize.width + 162);
                          this.bgTF.setContentSize(e, 32),
                          this.animation.play()
                      }
                  } else
                      1 == this.state && (this.time += t,
                      this.time > 2 && (this.state = 2,
                      u.res.recycle(this.node)))
              }
              ,
              e
          }(c)).prototype, "label", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          v = e(g.prototype, "animation", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return null
              }
          }),
          w = e(g.prototype, "bgTF", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          x = e(g.prototype, "txTF", [m], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          T = g)) || T));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/TextUTF8.ts", ["cc"], (function(e) {
  var n;
  return {
      setters: [function(e) {
          n = e.cclegacy
      }
      ],
      execute: function() {
          n._RF.push({}, "77af2MuQ61BuKFuQ6HApEvb", "TextUTF8", void 0);
          e("default", function() {
              function e() {
                  this.EOF_byte = -1,
                  this.EOF_code_point = -1
              }
              e.encode = function(n) {
                  return (new e).encode(n)
              }
              ,
              e.decode = function(n) {
                  return (new e).decode(n)
              }
              ;
              var n = e.prototype;
              return n.encoderError = function(e) {
                  console.error("UTF8 encoderError", e)
              }
              ,
              n.decoderError = function(e, n) {
                  return e && console.error("UTF8 decoderError", n),
                  n || 65533
              }
              ,
              n.inRange = function(e, n, r) {
                  return n <= e && e <= r
              }
              ,
              n.div = function(e, n) {
                  return Math.floor(e / n)
              }
              ,
              n.stringToCodePoints = function(e) {
                  for (var n = [], r = 0, t = e.length; r < e.length; ) {
                      var i = e.charCodeAt(r);
                      if (this.inRange(i, 55296, 57343))
                          if (this.inRange(i, 56320, 57343))
                              n.push(65533);
                          else if (r == t - 1)
                              n.push(65533);
                          else {
                              var o = e.charCodeAt(r + 1);
                              if (this.inRange(o, 56320, 57343)) {
                                  var s = 1023 & i
                                    , h = 1023 & o;
                                  r += 1,
                                  n.push(65536 + (s << 10) + h)
                              } else
                                  n.push(65533)
                          }
                      else
                          n.push(i);
                      r += 1
                  }
                  return n
              }
              ,
              n.encode = function(e) {
                  for (var n = 0, r = this.stringToCodePoints(e), t = []; r.length > n; ) {
                      var i = r[n++];
                      if (this.inRange(i, 55296, 57343))
                          this.encoderError(i);
                      else if (this.inRange(i, 0, 127))
                          t.push(i);
                      else {
                          var o = 0
                            , s = 0;
                          for (this.inRange(i, 128, 2047) ? (o = 1,
                          s = 192) : this.inRange(i, 2048, 65535) ? (o = 2,
                          s = 224) : this.inRange(i, 65536, 1114111) && (o = 3,
                          s = 240),
                          t.push(this.div(i, Math.pow(64, o)) + s); o > 0; ) {
                              var h = this.div(i, Math.pow(64, o - 1));
                              t.push(128 + h % 64),
                              o -= 1
                          }
                      }
                  }
                  return new Uint8Array(t)
              }
              ,
              n.decode = function(e) {
                  for (var n, r = !1, t = 0, i = "", o = 0, s = 0, h = 0, a = 0; e.length > t; ) {
                      var c = e[t++];
                      if (c == this.EOF_byte)
                          n = 0 != s ? this.decoderError(r) : this.EOF_code_point;
                      else if (0 == s)
                          this.inRange(c, 0, 127) ? n = c : (this.inRange(c, 194, 223) ? (s = 1,
                          a = 128,
                          o = c - 192) : this.inRange(c, 224, 239) ? (s = 2,
                          a = 2048,
                          o = c - 224) : this.inRange(c, 240, 244) ? (s = 3,
                          a = 65536,
                          o = c - 240) : this.decoderError(r),
                          o *= Math.pow(64, s),
                          n = null);
                      else if (this.inRange(c, 128, 191))
                          if (h += 1,
                          o += (c - 128) * Math.pow(64, s - h),
                          h !== s)
                              n = null;
                          else {
                              var u = o
                                , d = a;
                              o = 0,
                              s = 0,
                              h = 0,
                              a = 0,
                              n = this.inRange(u, d, 1114111) && !this.inRange(u, 55296, 57343) ? u : this.decoderError(r, c)
                          }
                      else
                          o = 0,
                          s = 0,
                          h = 0,
                          a = 0,
                          t--,
                          n = this.decoderError(r, c);
                      null !== n && n !== this.EOF_code_point && (n <= 65535 ? n > 0 && (i += String.fromCharCode(n)) : (n -= 65536,
                      i += String.fromCharCode(55296 + (n >> 10 & 1023)),
                      i += String.fromCharCode(56320 + (1023 & n))))
                  }
                  return i
              }
              ,
              e
          }());
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/TextUtils.ts", ["cc"], (function(r) {
  var t;
  return {
      setters: [function(r) {
          t = r.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "4b01c8djO9NPY+1uKUX1bAl", "TextUtils", void 0);
          r("default", function() {
              function r() {}
              return r.isEmpty = function(r) {
                  return "" == r || null == r
              }
              ,
              r.compress = function(r) {
                  var t = ""
                    , n = new Array;
                  for (c = 0; c < 128; c++)
                      n[c] = c;
                  for (var e = 128, o = 0, u = 0, i = 0, s = 0, a = 0, c = 0; c < r.length; c++)
                      null != n[a = i << 8 | (s = r.charCodeAt(c))] ? i = n[a] : (u <<= 12,
                      u |= i,
                      i = s,
                      (o += 12) >= 16 && (t += String.fromCharCode(u >> o - 16),
                      u &= Math.pow(2, o - 16) - 1,
                      o -= 16),
                      e < 4096 && (e++,
                      n[a] = e - 1));
                  return 0 != i && (o += 12,
                  u <<= 12,
                  u |= i),
                  o >= 16 && (t += String.fromCharCode(u >> o - 16),
                  u &= Math.pow(2, o - 16) - 1,
                  o -= 16),
                  o > 0 && (u <<= 16 - o,
                  t += String.fromCharCode(u)),
                  t
              }
              ,
              r.decompress = function(r) {
                  var t = ""
                    , n = new Array;
                  for (c = 0; c < 128; c++)
                      n[c] = String.fromCharCode(c);
                  for (var e = 128, o = 0, u = 0, i = 0, s = 0, a = "0", c = 0; c < r.length; c++)
                      for (o += 16,
                      u <<= 16,
                      u |= r.charCodeAt(c); o >= 12; )
                          void 0 !== (a = n[i = u >> o - 12]) ? (t += a,
                          e > 128 && (n[n.length] = n[s] + a.substr(0, 1)),
                          s = i) : (t += a = n[s] + n[s].substr(0, 1),
                          n[n.length] = n[s] + a.substr(0, 1),
                          s = n.length - 1),
                          e++,
                          o -= 12,
                          u &= Math.pow(2, o) - 1;
                  return t
              }
              ,
              r.str2ArrNum = function(r, t) {
                  if (void 0 === t && (t = "_"),
                  null == r || "" == r)
                      return [];
                  for (var n = r.split(t), e = 0; e < n.length; ++e)
                      n[e] = parseInt(n[e]);
                  return n
              }
              ,
              r
          }());
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/TimeSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts"], (function(t) {
  var e, a, s;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          a = t.cclegacy
      }
      , function(t) {
          s = t.default
      }
      ],
      execute: function() {
          a._RF.push({}, "bad1dxXrchKvY++VZJTNPRD", "TimeSystem", void 0);
          t("default", function(t) {
              function a() {
                  var e;
                  return (e = t.call(this) || this).updates = [],
                  e.lateUpdates = [],
                  e
              }
              e(a, t);
              var s = a.prototype;
              return s.update = function(t) {
                  for (var e = 0; e < this.updates.length; ++e)
                      this.updates[e].update(t)
              }
              ,
              s.lateUpdate = function(t) {
                  for (var e = 0; e < this.lateUpdates.length; ++e)
                      this.lateUpdates[e].lateUpdate(t)
              }
              ,
              s.addUpdate = function(t) {
                  -1 == this.updates.indexOf(t) && this.updates.push(t)
              }
              ,
              s.addLateUpdate = function(t) {
                  this.lateUpdates.push(t)
              }
              ,
              s.removeUpdate = function(t) {
                  var e = this.updates.indexOf(t);
                  -1 != e && this.updates.splice(e, 1)
              }
              ,
              s.removeLateUpdate = function(t) {
                  var e = this.lateUpdates.indexOf(t);
                  -1 != e && this.lateUpdates.splice(e, 1)
              }
              ,
              a
          }(s()));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/TipsEffect.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./EffectBase.ts", "./EffectUtils.ts", "./FrameAnimView.ts"], (function(t) {
  var i, n, e, o, s, r, c, a, u;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy,
          e = t.Prefab,
          o = t.Animation,
          s = t.Vec3
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          c = t.default
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          u = t.FrameAnimView
      }
      ],
      execute: function() {
          n._RF.push({}, "dc3aapQbqdFCo/yG2wDCVrG", "TipsEffect", void 0);
          var l = t("default", function(t) {
              function n() {
                  for (var i, n = arguments.length, e = new Array(n), o = 0; o < n; o++)
                      e[o] = arguments[o];
                  return (i = t.call.apply(t, [this].concat(e)) || this).src = void 0,
                  i.position = new s,
                  i.rotation = void 0,
                  i.scale = new s(1,1,1),
                  i.duration = void 0,
                  i.onInit = void 0,
                  i.time = void 0,
                  i.object = void 0,
                  i
              }
              i(n, t);
              var r = n.prototype;
              return r.onPreLoad = function() {
                  this.preload(this.src, e, this.position, this.rotation)
              }
              ,
              r.onStart = function() {
                  this.object = this.getAsset(this.src, this.layer),
                  this.object.scale = this.scale;
                  var t = this.object.getComponent(u);
                  if (t)
                      t.play("default");
                  else {
                      var i = this.object.getComponent(o);
                      i && i.play()
                  }
                  this.onInit && (this.onInit.run(this.object),
                  this.onInit = null),
                  a.playParticle(this.object)
              }
              ,
              r.onUpdate = function(t) {
                  return this.time += t,
                  this.time > this.duration
              }
              ,
              r.onFinish = function() {
                  t.prototype.onFinish.call(this),
                  this.object = null,
                  n.POOL.recycle(this)
              }
              ,
              r.destroy = function() {
                  t.prototype.destroy.call(this),
                  this.time = this.duration
              }
              ,
              n
          }(c));
          l.POOL = new r((function() {
              return new l
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ToAction.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./MathSystem.ts", "./ActionBase.ts"], (function(t) {
  var i, s, r, n, e;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          s = t.cclegacy
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          e = t.default
      }
      ],
      execute: function() {
          s._RF.push({}, "e7a8e96/uZN3ohN/OQIPK8F", "ToAction", void 0);
          var o = t("default", function(t) {
              function s() {
                  for (var i, s = arguments.length, r = new Array(s), n = 0; n < s; n++)
                      r[n] = arguments[n];
                  return (i = t.call.apply(t, [this].concat(r)) || this).time = void 0,
                  i.duration = 1e3,
                  i.target = void 0,
                  i.srcProps = {},
                  i.dstProps = void 0,
                  i.ease = void 0,
                  i
              }
              i(s, t);
              var r = s.prototype;
              return r.onStart = function() {
                  for (var t in this.time = 0,
                  this.dstProps)
                      this.srcProps[t] = this.target[t]
              }
              ,
              r.onUpdate = function(t) {
                  if (this.time += t,
                  this.time < this.duration) {
                      var i = this.ease.call(this, this.time / this.duration);
                      for (var s in this.dstProps)
                          this.target[s] = n.ins.lerp(this.srcProps[s], this.dstProps[s], i);
                      return !1
                  }
                  for (var r in this.dstProps)
                      this.target[r] = this.dstProps[r];
                  return !0
              }
              ,
              r.onFinish = function() {
                  s.POOL.recycle(this)
              }
              ,
              s
          }(e));
          o.POOL = new r((function() {
              return new o
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/ToVec3Action.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./SimplePool.ts", "./ActionBase.ts"], (function(t) {
  var i, o, e, n, s;
  return {
      setters: [function(t) {
          i = t.inheritsLoose
      }
      , function(t) {
          o = t.cclegacy,
          e = t.Vec3
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          s = t.default
      }
      ],
      execute: function() {
          o._RF.push({}, "27822rvEYpMYquvkK/BQTdP", "ToVec3Action", void 0);
          var r = t("default", function(t) {
              function o() {
                  for (var i, o = arguments.length, n = new Array(o), s = 0; s < o; s++)
                      n[s] = arguments[s];
                  return (i = t.call.apply(t, [this].concat(n)) || this).time = void 0,
                  i.duration = 1e3,
                  i.target = void 0,
                  i.curPos = new e,
                  i.srcPos = new e,
                  i.dstPos = new e,
                  i.ease = void 0,
                  i
              }
              i(o, t);
              var n = o.prototype;
              return n.onStart = function() {
                  this.time = 0,
                  e.copy(this.srcPos, this.target.position),
                  e.copy(this.curPos, this.target.position)
              }
              ,
              n.onUpdate = function(t) {
                  if (this.time += t,
                  this.time < this.duration) {
                      var i = this.ease.call(this, this.time / this.duration);
                      return this.target.position = e.lerp(this.curPos, this.srcPos, this.dstPos, i),
                      !1
                  }
                  return this.target.position = this.dstPos,
                  !0
              }
              ,
              n.onFinish = function() {
                  o.POOL.recycle(this)
              }
              ,
              o
          }(s));
          r.POOL = new n((function() {
              return new r
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Tower.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Creature.ts", "./EffectFactory.ts", "./EffectType.ts", "./SimplePool.ts", "./TowerContext.ts"], (function(t) {
  var e, i, n, o, s, a, c, r, l, f, h, u;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          i = t.cclegacy,
          n = t.Node,
          o = t.UITransform,
          s = t.Size,
          a = t.Vec3,
          c = t.Label
      }
      , function(t) {
          r = t.default
      }
      , function(t) {
          l = t.default
      }
      , function(t) {
          f = t.EffectType
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          u = t.default
      }
      ],
      execute: function() {
          i._RF.push({}, "099a1hKj3dDLIikMEqOOnli", "Tower", void 0);
          var d = t("default", function(t) {
              function i() {
                  for (var e, i = arguments.length, n = new Array(i), o = 0; o < i; o++)
                      n[o] = arguments[o];
                  return (e = t.call.apply(t, [this].concat(n)) || this).context = new u,
                  e.infoText = void 0,
                  e
              }
              e(i, t);
              var r = i.prototype;
              return r.onEnable = function() {
                  t.prototype.onEnable.call(this);
                  var e = new n
                    , i = e.addComponent(o);
                  this.node.addChild(e),
                  i.contentSize = new s(100,30),
                  e.position = new a(0,100,0),
                  this.infoText = e.addComponent(c),
                  this.infoText.fontSize = 18,
                  this.infoText.string = ""
              }
              ,
              r.onDisable = function() {
                  t.prototype.onDisable.call(this),
                  null != this.infoText && (this.infoText.node.destroy(),
                  this.infoText = null)
              }
              ,
              r.onDamaged = function(t, e) {
                  e.et == f.BeDmg ? (this.isLive && l.playDamage(e.dmg, this.view.node.position, e.critical, this.view.headHeight, !0),
                  this.playFlash()) : e.et == f.BeDmgToDie ? this.isLive && l.playDamage(e.dmg, this.view.node.position, e.critical, this.view.headHeight, !0) : e.et == f.Dodge && this.isLive && l.playMiss(this.view.node.position, this.view.headHeight)
              }
              ,
              r.damageCrt = function(t) {
                  this.context.data.beAtk(t, !1)
              }
              ,
              r.onDestroy = function() {
                  t.prototype.onDestroy.call(this),
                  i.POOL.recycle(this)
              }
              ,
              r.setDebug = function(t) {
                  this.active ? this.infoText && (this.infoText.string = t) : this.delayHandle(this.setDebug, t)
              }
              ,
              i
          }(r));
          d.POOL = new h((function() {
              return new d
          }
          ),(function(t) {
              return t.reset()
          }
          )),
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/TowerAS.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./AtkStrategy.ts", "./BattleDef.ts", "./ObjMgr.ts", "./proto.mjs_cjs=&original=.js", "./proto.js"], (function(t) {
  var e, i, s, n, a, r, o, h, c;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          i = t.cclegacy,
          s = t.Vec3
      }
      , function(t) {
          n = t.AtkState,
          a = t.StrategyType,
          r = t.AtkStrategy
      }
      , function(t) {
          o = t.BattleDef
      }
      , function(t) {
          h = t.default
      }
      , null, function(t) {
          c = t.default
      }
      ],
      execute: function() {
          i._RF.push({}, "7bfd8qS4dFGebe3GuIxDP5A", "TowerAS", void 0);
          t("TowerAtkStrategy", function(t) {
              function i() {
                  for (var e, i = arguments.length, s = new Array(i), n = 0; n < i; n++)
                      s[n] = arguments[n];
                  return (e = t.call.apply(t, [this].concat(s)) || this).targetSn = 0,
                  e
              }
              e(i, t);
              var r = i.prototype;
              return r.init = function(e, i) {
                  void 0 === i && (i = null),
                  t.prototype.init.call(this, e, i),
                  this.atkCD = e.getAttrVal(c.msg.AttrType.AT_AtkCD),
                  this.owner = e,
                  this.atkRadius = this.owner.getAttrVal(c.msg.AttrType.AT_AtkRange),
                  this.atkRadiusSuqare = this.atkRadius * this.atkRadius,
                  this.state = n.Idle
              }
              ,
              r.getStrategyType = function() {
                  return a.Tower
              }
              ,
              r.onUpdate = function() {
                  this.frameCheck++,
                  this.frameCheck < this.frameCheckMax || (this.frameCheck = 0,
                  this.state == n.Idle ? this.checkAtk() : this.state == n.AtkCD ? (this.atkCDEndTick -= o.FrameTick * this.frameCheckMax,
                  this.atkCDEndTick < 0 && (this.state = n.Idle,
                  this.checkAtk())) : this.atkCDEndTick -= o.FrameTick * this.frameCheckMax)
              }
              ,
              r.onAtked = function() {
                  this.state = n.AtkEnding,
                  this.atkCDEndTick = this.atkCD
              }
              ,
              r.checkAtk = function() {
                  var t = null
                    , e = this.owner.getPos();
                  if (0 != this.targetSn) {
                      var i = h.ins.getMonster(this.targetSn);
                      if (null != i && !i.isDead()) {
                          var n = i.getPos().x - e.x
                            , a = i.getPos().y - e.y;
                          n * n + a * a <= this.atkRadiusSuqare && (t = i)
                      }
                  }
                  if (null == t && (t = h.ins.findCloseMonsterEx(e, this.atkRadius)),
                  null != t) {
                      var r = t.getPos()
                        , o = r.x - e.x
                        , c = r.y - e.y;
                      this.owner.node.fire(new s(o,c,0), this, null, this.onSkillFinish),
                      this.onAtked()
                  }
              }
              ,
              r.onSkillFinish = function() {
                  this.state = n.AtkCD
              }
              ,
              i
          }(r));
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/TowerContext.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreatureContext.ts"], (function(t) {
  var e, n, o;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          o = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "0ebc8ObzN9KHoO/FriIwajY", "TowerContext", void 0);
          t("default", function(t) {
              function n() {
                  return t.apply(this, arguments) || this
              }
              return e(n, t),
              n
          }(o));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/TowerLaserAS.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./AtkStrategy.ts", "./BattleDef.ts", "./ObjMgr.ts", "./CreatureManager.ts", "./proto.mjs_cjs=&original=.js", "./proto.js"], (function(t) {
  var e, a, r, s, i, n, o, h, u, f;
  return {
      setters: [function(t) {
          e = t.inheritsLoose,
          a = t.createForOfIteratorHelperLoose
      }
      , function(t) {
          r = t.cclegacy
      }
      , function(t) {
          s = t.AtkState,
          i = t.StrategyType,
          n = t.AtkStrategy
      }
      , function(t) {
          o = t.BattleDef
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          u = t.default
      }
      , null, function(t) {
          f = t.default
      }
      ],
      execute: function() {
          r._RF.push({}, "7b3d40DJSFCRLsKgxUAIRiI", "TowerLaserAS", void 0);
          t("TowerLaserAtkStrategy", function(t) {
              function r() {
                  for (var e, a = arguments.length, r = new Array(a), s = 0; s < a; s++)
                      r[s] = arguments[s];
                  return (e = t.call.apply(t, [this].concat(r)) || this).targetMax = 0,
                  e.findCD = 0,
                  e.targets = new Map,
                  e
              }
              e(r, t);
              var n = r.prototype;
              return n.init = function(e, a) {
                  void 0 === a && (a = null),
                  t.prototype.init.call(this, e, a),
                  this.atkCD = e.getAttrVal(f.msg.AttrType.AT_AtkCD),
                  this.owner = e,
                  this.atkRadius = this.owner.getAttrVal(f.msg.AttrType.AT_AtkRange),
                  this.atkRadiusSuqare = this.atkRadius * this.atkRadius,
                  this.state = s.Idle,
                  this.targetMax = a[0]
              }
              ,
              n.getStrategyType = function() {
                  return i.TowerLaser
              }
              ,
              n.onUpdate = function() {
                  var t = this;
                  if (this.frameCheck++,
                  !(this.frameCheck < this.frameCheckMax)) {
                      if (this.frameCheck = 0,
                      0 == this.findCD) {
                          this.findCD = 3;
                          for (var e, r = this.owner.getPos(), s = [], i = a(this.targets); !(e = i()).done; ) {
                              var n = e.value
                                , f = n[0]
                                , g = (n[1],
                              h.ins.getMonster(f))
                                , l = !1;
                              if (null != g && !g.isDead()) {
                                  var c = g.getPos().x - r.x
                                    , d = g.getPos().y - r.y;
                                  c * c + d * d <= this.atkRadiusSuqare && (l = !0)
                              }
                              l || s.push(f)
                          }
                          for (var k = 0; k < s.length; k++)
                              this.targets.delete(s[k]),
                              this.owner.node && this.owner.node.unLink(s[k]);
                          var v = this.targetMax - this.targets.size;
                          if (v > 0) {
                              var p = []
                                , y = [];
                              if (h.ins.monsterForeach((function(e) {
                                  if (!e.isDead() && !t.targets.has(e.getSN())) {
                                      var a = e.getPos()
                                        , s = a.x - r.x
                                        , i = a.y - r.y;
                                      if (Math.abs(s) > t.atkRadius || Math.abs(i) > t.atkRadius)
                                          ;
                                      else {
                                          var n = s * s + i * i;
                                          n < t.atkRadiusSuqare && (y.push(n),
                                          p.push(e.getSN()))
                                      }
                                  }
                              }
                              )),
                              y.length > 1)
                                  for (var A = 0; A < y.length - 1; A++)
                                      for (var w = 0; w < y.length - 1 - A; w++)
                                          if (y[w] > y[w + 1]) {
                                              var C = p[w];
                                              p[w] = p[w + 1],
                                              p[w + 1] = C
                                          }
                              for (var S = 0; S < v && S < p.length; S++)
                                  this.targets.set(p[S], this.atkCD / 2),
                                  this.owner.node && this.owner.node.link(p[S])
                          }
                      } else
                          this.findCD--;
                      for (var D, M = [], R = a(this.targets); !(D = R()).done; ) {
                          var m = D.value
                            , x = m[0]
                            , T = m[1] - o.FrameTick * this.frameCheckMax;
                          if (T <= 0) {
                              var L = h.ins.getMonster(x);
                              null == L || L.isDead() ? M.push(x) : (L.beAtk(u.ins.generateAtkBatch(this.owner), !1),
                              T += this.atkCD)
                          }
                          this.targets.set(x, T)
                      }
                      for (var b = 0; b < M.length; b++)
                          this.targets.delete(M[b]),
                          this.owner.node && this.owner.node.unLink(M[b])
                  }
              }
              ,
              r
          }(n));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/TowerObj.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./AtkStrategy.ts", "./CreatureObj.ts", "./BattleDef.ts", "./TowerAS.ts", "./TowerLaserAS.ts", "./ObjMgr.ts", "./proto.mjs_cjs=&original=.js", "./proto.js"], (function(t) {
  var e, n, r, i, s, o, a, c, u, f, g;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy
      }
      , function(t) {
          r = t.StrategyType
      }
      , function(t) {
          i = t.default
      }
      , function(t) {
          s = t.ObjType,
          o = t.CampType,
          a = t.AtkObjType
      }
      , function(t) {
          c = t.TowerAtkStrategy
      }
      , function(t) {
          u = t.TowerLaserAtkStrategy
      }
      , function(t) {
          f = t.default
      }
      , null, function(t) {
          g = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "6ac86rjRv1N44GskVIKfzWN", "TowerObj", void 0);
          t("default", function(t) {
              function n() {
                  for (var e, n = arguments.length, r = new Array(n), i = 0; i < n; i++)
                      r[i] = arguments[i];
                  return (e = t.call.apply(t, [this].concat(r)) || this).atkStrategy = void 0,
                  e.aosn = 0,
                  e.appendBuff = 0,
                  e.srcWeaponSN = 0,
                  e.srcWeaponObj = null,
                  e.srcItemID = 0,
                  e.atkTick = 0,
                  e
              }
              e(n, t);
              var i = n.prototype;
              return i.getAtkStratege = function() {
                  return this.atkStrategy
              }
              ,
              i.init = function(e, n, r, i) {
                  t.prototype.init.call(this, e, n, r, i),
                  this.oType = s.Tower,
                  this.cType = o.Hero;
                  var a = DataCenter.Tower.Get(n);
                  this.cfg = a,
                  this.getAttr().init(i.attrs),
                  this.appendBuff = i.append,
                  this.aosn = f.ins.generateAtkObjSN(),
                  0 == i.fromtype ? (this.srcWeaponSN = i.fromsn,
                  this.srcWeaponObj = f.ins.getChar().getWeapon(this.srcWeaponSN)) : 1 == i.fromType && (this.srcItemID = i.fromsn)
              }
              ,
              i.destroy = function() {
                  t.prototype.destroy.call(this),
                  this.cfg = null,
                  this.atkStrategy.destory(),
                  this.atkStrategy = null
              }
              ,
              i.afterInit = function() {
                  this.onAttrChanged(),
                  this.startAI()
              }
              ,
              i.isDead = function() {
                  return !this.cfg
              }
              ,
              i.getDmg = function() {
                  return this.getAttrVal(g.msg.AttrType.AT_Dmg)
              }
              ,
              i.getDmgCritical = function() {
                  return this.getAttrVal(g.msg.AttrType.AT_Dmg)
              }
              ,
              i.getAOType = function() {
                  return a.Tower
              }
              ,
              i.getAOID = function() {
                  return this.cfgID
              }
              ,
              i.getKnockBack = function() {
                  return 0
              }
              ,
              i.getTargetMax = function() {
                  return this.cfg.AtkTargetMax
              }
              ,
              i.getOwnerSN = function() {
                  return this.getSN()
              }
              ,
              i.getAOSN = function() {
                  return this.aosn
              }
              ,
              i.getWeaponID = function() {
                  return 0
              }
              ,
              i.setAtkTick = function(t) {
                  this.atkTick = t
              }
              ,
              i.getLastAtkTick = function() {
                  return this.atkTick
              }
              ,
              i.getAtkTime = function() {
                  return this.getAttrVal(g.msg.AttrType.AT_AtkCD)
              }
              ,
              i.startAI = function() {
                  var t = this.cfg.AI;
                  t == r.Tower ? this.atkStrategy = new c : t == r.TowerLaser && (this.atkStrategy = new u),
                  this.atkStrategy.init(this, this.cfg.AIVal)
              }
              ,
              i.update = function() {
                  this.atkStrategy && this.atkStrategy.onUpdate()
              }
              ,
              i.getAppendBuff = function() {
                  return this.appendBuff
              }
              ,
              i.getSrcWeaponSN = function() {
                  return this.srcWeaponSN
              }
              ,
              i.getSrcWeapon = function() {
                  return this.srcWeaponObj
              }
              ,
              i.getSrcItemID = function() {
                  return this.srcItemID
              }
              ,
              n
          }(i));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/UIAroundBall.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(e) {
  var t, i, r, n, a, o, l, c, s;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          r = e.initializerDefineProperty,
          n = e.assertThisInitialized
      }
      , function(e) {
          a = e.cclegacy,
          o = e._decorator,
          l = e.Node,
          c = e.Vec3,
          s = e.Component
      }
      ],
      execute: function() {
          var u, p, y, b, h, f, d, m, g;
          a._RF.push({}, "9c1406NVklMdIJQ11ORaMG5", "UIAroundBall", void 0);
          var v = o.ccclass
            , w = o.property;
          e("UIAroundBall", (u = v("UIAroundBall"),
          p = w({
              type: l
          }),
          u((h = t((b = function(e) {
              function t() {
                  for (var t, i = arguments.length, a = new Array(i), o = 0; o < i; o++)
                      a[o] = arguments[o];
                  return t = e.call.apply(e, [this].concat(a)) || this,
                  r(t, "body", h, n(t)),
                  r(t, "targetY", f, n(t)),
                  r(t, "minScale", d, n(t)),
                  r(t, "maxScale", m, n(t)),
                  r(t, "intensity", g, n(t)),
                  t.scale = new c(1,1,1),
                  t
              }
              i(t, e);
              var a = t.prototype;
              return a.start = function() {}
              ,
              a.update = function(e) {
                  var t = this.body.worldPosition
                    , i = this.targetY - t.y
                    , r = Math.abs(i) / 100;
                  r < 0 && (r = 0),
                  r > 1 && (r = 1),
                  r = 1 - r;
                  var n = this.minScale + (this.maxScale - this.minScale) * r;
                  this.scale.x = n,
                  this.scale.y = n,
                  this.body.scale = this.scale;
                  var a = Math.abs(i) * this.intensity;
                  this.body.setPosition(-a, 0, 0)
              }
              ,
              t
          }(s)).prototype, "body", [p], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          f = t(b.prototype, "targetY", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 0
              }
          }),
          d = t(b.prototype, "minScale", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          m = t(b.prototype, "maxScale", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          g = t(b.prototype, "intensity", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          y = b)) || y));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/UIHelper.ts", ["cc", "./Kit.ts", "./ResList.ts", "./DataDef.ts"], (function(e) {
  var t, a, i, n, r, s;
  return {
      setters: [function(e) {
          t = e.cclegacy,
          a = e.Color,
          i = e.SpriteFrame
      }
      , function(e) {
          n = e.default
      }
      , function(e) {
          r = e.default
      }
      , function(e) {
          s = e.EquipType
      }
      ],
      execute: function() {
          t._RF.push({}, "71193CwkKxJ6KMfypBmmKuP", "UIHelper", void 0);
          var l = e("default", function() {
              function e() {}
              return e.getItemFrame = function(e) {
                  return null == this.itemFrame && (this.itemFrame = n.res.spawn(r.iconFrame.path, Array)),
                  1 == e ? this.itemFrame.pick_kuang_grey : 2 == e ? this.itemFrame.pick_kuang_green : 3 == e ? this.itemFrame.pick_kuang_blue : 4 == e ? this.itemFrame.pick_kuang_purple : 5 == e ? this.itemFrame.pick_kuang_orange : this.itemFrame.pick_kuang_odinary
              }
              ,
              e.getItemSmallFrame = function(e) {
                  return null == this.smallFrame && (this.smallFrame = n.res.spawn(r.smallFrame.path, Array)),
                  1 == e ? this.smallFrame.zb_small_grey_f : 2 == e ? this.smallFrame.zb_small_green_f : 3 == e ? this.smallFrame.zb_small_blue_f : 4 == e ? this.smallFrame.zb_small_purple_f_ : 5 == e ? this.smallFrame.zb_small_orange_f_ : this.getComIcon("zb_di_small")
              }
              ,
              e.getItemSmallBackground = function(e) {
                  return null == this.smallFrame && (this.smallFrame = n.res.spawn(r.smallFrame.path, Array)),
                  1 == e ? this.smallFrame.zb_small_grey_b : 2 == e ? this.smallFrame.zb_small_green_b : 3 == e ? this.smallFrame.zb_small_blue_b : 4 == e ? this.smallFrame.zb_small_purple_b_ : 5 == e ? this.smallFrame.zb_small_orange_b : null
              }
              ,
              e.getItemLargeFrame = function(e) {
                  return null == this.largeFrame && (this.largeFrame = n.res.spawn(r.smallFrame.path, Array)),
                  1 == e ? this.largeFrame.zb_big_grey_f : 2 == e ? this.largeFrame.zb_big_green_f : 3 == e ? this.largeFrame.zb_big_blue_f : 4 == e ? this.largeFrame.zb_big_purple_f : 5 == e ? this.largeFrame.zb_big_orange_f : this.getComIcon("zb_di")
              }
              ,
              e.getItemLargeBackground = function(e) {
                  return null == this.largeFrame && (this.largeFrame = n.res.spawn(r.largeFrame.path, Array)),
                  1 == e ? this.largeFrame.zb_big_grey_b : 2 == e ? this.largeFrame.zb_big_green_b : 3 == e ? this.largeFrame.zb_big_blue_b : 4 == e ? this.largeFrame.zb_big_purple_b : 5 == e ? this.largeFrame.zb_big_orange_b : null
              }
              ,
              e.getGoodsBackground = function(e) {
                  return null == this.itemBg && (this.itemBg = n.res.spawn(r.iconBg.path, Array)),
                  1 == e ? this.itemBg.pick_grey : 2 == e ? this.itemBg.pick_green : 3 == e ? this.itemBg.pick_blue : 4 == e ? this.itemBg.pick_purple : 5 == e ? this.itemBg.pick_orange : this.itemBg.pick_grey
              }
              ,
              e.getGoodsFrame = function(e) {
                  return null == this.itemFrame && (this.itemFrame = n.res.spawn(r.iconFrame.path, Array)),
                  1 == e ? this.itemFrame.pick_kuang_grey : 2 == e ? this.itemFrame.pick_kuang_green : 3 == e ? this.itemFrame.pick_kuang_blue : 4 == e ? this.itemFrame.pick_kuang_purple : 5 == e ? this.itemFrame.pick_kuang_orange : this.itemFrame.pick_kuang_grey
              }
              ,
              e.getItemIcon = function(e) {
                  return null == this.itemIcon && (this.itemIcon = n.res.spawn(r.iconItems.path, Array)),
                  this.itemIcon[e]
              }
              ,
              e.getWeaponIcon = function(e, t) {
                  return t ? (null == this.weaponLargeIcon && (this.weaponLargeIcon = n.res.spawn(r.iconWeaponLarge.path, Array)),
                  this.weaponLargeIcon[e]) : (null == this.weaponSmallIcon && (this.weaponSmallIcon = n.res.spawn(r.iconWeaponSmall.path, Array)),
                  this.weaponSmallIcon[e])
              }
              ,
              e.getHeadIcon = function(e) {
                  return null == this.headIcon && (this.headIcon = n.res.spawn(r.iconHead.path, Array)),
                  this.headIcon[e]
              }
              ,
              e.getRandomHeadIcon = function() {
                  if (null == this.headIcon && (this.headIcon = n.res.spawn(r.iconHead.path, Array)),
                  null == this.tempHeadIcon) {
                      var e = n.math.randomInt(0, 3)
                        , t = 0;
                      for (var a in this.headIcon) {
                          var s = this.headIcon[a];
                          if (s instanceof i && t >= e) {
                              this.tempHeadIcon = s;
                              break
                          }
                          t += 1
                      }
                      null == this.tempHeadIcon && (this.tempHeadIcon = this.headIcon.qs)
                  }
                  return this.tempHeadIcon
              }
              ,
              e.getComIcon = function(e) {
                  return null == this.comIcon && (this.comIcon = n.res.spawn(r.iconCom.path, Array)),
                  this.comIcon[e]
              }
              ,
              e.getItemColor = function(e) {
                  return this.itemColors[e]
              }
              ,
              e.getEquipIcon = function(e) {
                  return null == this.equipIcon && (this.equipIcon = n.res.spawn(r.iconEquip.path, Array)),
                  this.equipIcon[e]
              }
              ,
              e.getEquipTypeName = function(e) {
                  return this.equipTypeName[e]
              }
              ,
              e.getEquipClassName = function(e) {
                  return this.equipClassName[e]
              }
              ,
              e.getEquipCloth = function(e) {
                  return null == this.clothAtlas && (this.clothAtlas = n.res.spawn(r.clothAtlas.path, Array)),
                  this.clothAtlas[e]
              }
              ,
              e.getEquipHat = function(e) {
                  return null == this.hatAtlas && (this.hatAtlas = n.res.spawn(r.hatAtlas.path, Array)),
                  this.hatAtlas[e]
              }
              ,
              e.getEquipPant = function(e) {
                  return null == this.pantAtlas && (this.pantAtlas = n.res.spawn(r.pantAtlas.path, Array)),
                  this.pantAtlas[e]
              }
              ,
              e.getEquipShoe = function(e) {
                  return null == this.shoeAtlas && (this.shoeAtlas = n.res.spawn(r.shoeAtlas.path, Array)),
                  this.shoeAtlas[e]
              }
              ,
              e.getEquipWeaponL = function(e) {
                  return null == this.weaponLAtlas && (this.weaponLAtlas = n.res.spawn(r.weaponLAtlas.path, Array)),
                  this.weaponLAtlas[e]
              }
              ,
              e.getEquipWeaponR = function(e) {
                  return null == this.weaponRAtlas && (this.weaponRAtlas = n.res.spawn(r.weaponRAtlas.path, Array)),
                  this.weaponRAtlas[e]
              }
              ,
              e.getEquipSpriteFrame = function(t, a) {
                  return a == s.Weapon ? e.getEquipWeaponL(t) : a == s.WeaponR ? e.getEquipWeaponR(t) : a == s.Armor ? e.getEquipCloth(t) : a == s.Hat ? e.getEquipHat(t) : a == s.Pant ? e.getEquipPant(t) : a == s.Shoe ? e.getEquipShoe(t) : null
              }
              ,
              e.getMaterialIcon = function(e) {
                  return null == this.materialIcon && (this.materialIcon = n.res.spawn(r.iconMaterial.path, Array)),
                  this.materialIcon[e]
              }
              ,
              e.getItemLightPath = function(e) {
                  return 1 == e ? "ui/icon/pass/light_grey/spriteFrame" : 2 == e ? "ui/icon/pass/light_green/spriteFrame" : 3 == e ? "ui/icon/pass/light_blue/spriteFrame" : 4 == e ? "ui/icon/pass/light_purple/spriteFrame" : 5 == e ? "ui/icon/pass/light_orange/spriteFrame" : null
              }
              ,
              e
          }());
          l.clothAtlas = void 0,
          l.hatAtlas = void 0,
          l.pantAtlas = void 0,
          l.shoeAtlas = void 0,
          l.weaponLAtlas = void 0,
          l.weaponRAtlas = void 0,
          l.itemFrame = void 0,
          l.smallFrame = void 0,
          l.largeFrame = void 0,
          l.itemBg = void 0,
          l.itemIcon = void 0,
          l.weaponSmallIcon = void 0,
          l.weaponLargeIcon = void 0,
          l.headIcon = void 0,
          l.comIcon = void 0,
          l.equipIcon = void 0,
          l.materialIcon = void 0,
          l.itemColors = [a.WHITE, a.fromHEX(new a, "#FFFFFF"), a.fromHEX(new a, "#27e057"), a.fromHEX(new a, "#39adff"), a.fromHEX(new a, "#b456e1"), a.fromHEX(new a, "#ff8b39")],
          l.equipTypeName = ["weapon", "clothes", "hat", "pant", "shoes"],
          l.equipClassName = ["weapon", "cloth", "pant", "shoes"],
          l.tempHeadIcon = void 0,
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/UIListener.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(e) {
  var n, t, r, s, i;
  return {
      setters: [function(e) {
          n = e.inheritsLoose
      }
      , function(e) {
          t = e.cclegacy,
          r = e._decorator,
          s = e.EventHandler,
          i = e.Component
      }
      ],
      execute: function() {
          var c;
          t._RF.push({}, "1cb4cnEhrNIcb5dbYnrUXVE", "UIListener", void 0);
          var l = r.ccclass;
          r.property,
          e("UIListener", l("UIListener")(c = function(e) {
              function t() {
                  for (var n, t = arguments.length, r = new Array(t), s = 0; s < t; s++)
                      r[s] = arguments[s];
                  return (n = e.call.apply(e, [this].concat(r)) || this).listeners = new Map,
                  n
              }
              n(t, e);
              var r = t.prototype;
              return r.addListener = function(e, n, t) {
                  var r;
                  this.listeners.has(e) ? r = this.listeners.get(e) : (r = new Array,
                  this.listeners.set(e, r)),
                  r.push({
                      caller: n,
                      callback: t
                  })
              }
              ,
              r.removeListener = function(e, n, t) {
                  if (this.listeners.has(e))
                      for (var r = this.listeners.get(e), s = 0; s < r.length; ++s) {
                          var i = r[s];
                          if (i.caller == n && i.callback == t) {
                              r.splice(s, 1);
                              break
                          }
                      }
              }
              ,
              r.removeAllListener = function() {
                  this.listeners.clear()
              }
              ,
              r.removeListenerAll = function() {
                  this.listeners.clear()
              }
              ,
              r.onCheck = function(e) {
                  if (this.listeners.has("onCheck"))
                      for (var n = this.listeners.get("onCheck"), t = 0; t < n.length; ++t) {
                          var r = n[t];
                          r.callback.call(r.caller, e)
                      }
              }
              ,
              r.listenCheckEvents = function(e) {
                  if (0 == e.checkEvents.length) {
                      var n = new s;
                      n.target = this.node,
                      n.component = "UIWindowView",
                      n.handler = "onCheck",
                      e.checkEvents.push(n)
                  }
              }
              ,
              t
          }(i)) || c);
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/UIListView.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIToggle.ts", "./Kit.ts"], (function(t) {
  var e, i, r, n, o, l, s, a, c, h, u, p, m, f, y, d, g, v;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          r = t.initializerDefineProperty,
          n = t.assertThisInitialized,
          o = t.createClass
      }
      , function(t) {
          l = t.cclegacy,
          s = t._decorator,
          a = t.Node,
          c = t.Layout,
          h = t.ScrollView,
          u = t.PageView,
          p = t.EventHandler,
          m = t.instantiate,
          f = t.Button,
          y = t.Vec3,
          d = t.Component
      }
      , function(t) {
          g = t.UIToggle
      }
      , function(t) {
          v = t.default
      }
      ],
      execute: function() {
          var w, b, A, _, I, S, T, k, E, V, L, N, C, O, P, z, R, H, x;
          l._RF.push({}, "2c5ab6Y4rlExoQWiinVQ+sI", "UIListView", void 0);
          var U = s.ccclass
            , B = s.property;
          t("UIListView", (w = U("UIListView"),
          b = B({
              type: a
          }),
          A = B({
              type: a
          }),
          _ = B({
              type: c
          }),
          I = B({
              type: h
          }),
          S = B({
              type: u
          }),
          T = B({
              type: a
          }),
          k = B({
              type: a
          }),
          E = B({
              type: a
          }),
          w((N = e((L = function(t) {
              function e() {
                  for (var e, i = arguments.length, o = new Array(i), l = 0; l < i; l++)
                      o[l] = arguments[l];
                  return e = t.call.apply(t, [this].concat(o)) || this,
                  r(e, "itemPrefab", N, n(e)),
                  r(e, "content", C, n(e)),
                  r(e, "layout", O, n(e)),
                  r(e, "scroll", P, n(e)),
                  r(e, "pageView", z, n(e)),
                  r(e, "selectNode", R, n(e)),
                  r(e, "topArrow", H, n(e)),
                  r(e, "btmArrow", x, n(e)),
                  e._itemArray = [],
                  e._numItems = 0,
                  e._selectIndex = 0,
                  e.clickEventHandler = void 0,
                  e.itemRenderer = void 0,
                  e.itemSelected = void 0,
                  e.itemUnSelected = void 0,
                  e
              }
              i(e, t);
              var l = e.prototype;
              return l.start = function() {
                  this.itemPrefab.active = !1,
                  this.scroll && (this.scroll.node.on(h.EventType.SCROLL_TO_TOP, this.onScrolToTop, this),
                  this.scroll.node.on(h.EventType.SCROLL_TO_BOTTOM, this.onScrolToBottom, this),
                  this.scroll.node.on(h.EventType.SCROLLING, this.onScrolling, this))
              }
              ,
              l.onScrolling = function(t) {
                  this.refreshArrow()
              }
              ,
              l.onScrolToTop = function(t) {
                  console.log("scroll-to-top"),
                  this.topArrow && (this.topArrow.active = !1)
              }
              ,
              l.onScrolToBottom = function(t) {
                  console.log("scroll-to-bottom"),
                  this.btmArrow && (this.btmArrow.active = !1)
              }
              ,
              l.refreshArrow = function() {
                  if (null != this.scroll) {
                      var t = this.scroll.getScrollOffset()
                        , e = this.scroll.getMaxScrollOffset();
                      this.topArrow && (this.topArrow.active = t.y > 0),
                      this.btmArrow && (this.btmArrow.active = t.y < e.y)
                  }
              }
              ,
              l.onNumChanged = function() {}
              ,
              l.clear = function() {
                  for (var t = 0; t < this._itemArray.length; ++t)
                      this._itemArray[t].destroy();
                  this._itemArray.splice(0, this._itemArray.length)
              }
              ,
              l.listen = function(t) {
                  null == this.clickEventHandler && (this.clickEventHandler = new p,
                  this.clickEventHandler.target = this.node,
                  this.clickEventHandler.component = "UIListView",
                  this.clickEventHandler.handler = "onClick"),
                  t.clickEvents.length <= 0 && t.clickEvents.push(this.clickEventHandler)
              }
              ,
              l.onClick = function(t) {
                  var e = t.target;
                  this.selectIndex = parseInt(e.name)
              }
              ,
              l.stopScroll = function() {
                  this.scroll && this.scroll.stopAutoScroll()
              }
              ,
              l.refreshItemRenderer = function(t) {
                  if (t < this._itemArray.length) {
                      var e, i = this._itemArray[t];
                      null == (e = this.itemRenderer) || e.call(null, t, i)
                  }
              }
              ,
              o(e, [{
                  key: "itemArray",
                  get: function() {
                      return this._itemArray
                  }
              }, {
                  key: "numItems",
                  get: function() {
                      return this._numItems
                  },
                  set: function(t) {
                      for (this._numItems = t; this._itemArray.length < t; ) {
                          var e = m(this.itemPrefab);
                          this.content.addChild(e),
                          this._itemArray.push(e);
                          var i = e.getComponent(f);
                          i && this.listen(i)
                      }
                      this.pageView && this.pageView.removeAllPages();
                      for (var r = 0; r < this._itemArray.length; ++r) {
                          var n, o = this._itemArray[r];
                          if (r < t)
                              o.active = !0,
                              o.name = r.toString(),
                              null == (n = this.itemRenderer) || n.call(null, r, o),
                              this.pageView && this.pageView.addPage(o);
                          else
                              o.active = !1
                      }
                      this.scroll && (this.btmArrow || this.topArrow) && v.action.delayCall(100, this, this.refreshArrow),
                      this.onNumChanged()
                  }
              }, {
                  key: "selectIndex",
                  get: function() {
                      return this._selectIndex
                  },
                  set: function(t) {
                      var e;
                      this._selectIndex = t;
                      var i = this._itemArray[t];
                      this.selectNode && (i ? (this.selectNode.setParent(i),
                      this.selectNode.active = !0,
                      this.selectNode.position = y.ZERO) : (this.selectNode.setParent(this.node),
                      this.selectNode.active = !1));
                      for (var r = 0; r < this._itemArray.length; ++r) {
                          var n = this._itemArray[r].getComponent(g);
                          n && n.setIsOnNotNotify(r == t)
                      }
                      i && (null == (e = this.itemSelected) || e.call(null, t, i))
                  }
              }]),
              e
          }(d)).prototype, "itemPrefab", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          C = e(L.prototype, "content", [A], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          O = e(L.prototype, "layout", [_], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          P = e(L.prototype, "scroll", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          z = e(L.prototype, "pageView", [S], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          R = e(L.prototype, "selectNode", [T], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          H = e(L.prototype, "topArrow", [k], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          x = e(L.prototype, "btmArrow", [E], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          V = L)) || V));
          l._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/UIPageView.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIListView.ts", "./Kit.ts"], (function(t) {
  var e, n, i, r, o, a, s, l, c;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          n = t.inheritsLoose,
          i = t.initializerDefineProperty,
          r = t.assertThisInitialized
      }
      , function(t) {
          o = t.cclegacy,
          a = t._decorator,
          s = t.ScrollView
      }
      , function(t) {
          l = t.UIListView
      }
      , function(t) {
          c = t.default
      }
      ],
      execute: function() {
          var u, h, d, p, f, m, g, I;
          o._RF.push({}, "0cafdGZlgNMEKZgocA2yOr+", "UIPageView", void 0);
          var y = a.ccclass
            , b = a.property;
          t("UIPageView", y("UIPageView")((d = e((h = function(t) {
              function e() {
                  for (var e, n = arguments.length, o = new Array(n), a = 0; a < n; a++)
                      o[a] = arguments[a];
                  return e = t.call.apply(t, [this].concat(o)) || this,
                  i(e, "contentItemNum", d, r(e)),
                  i(e, "enableAround", p, r(e)),
                  i(e, "aroundTargetY", f, r(e)),
                  i(e, "aroundMinScale", m, r(e)),
                  i(e, "aroundMaxScale", g, r(e)),
                  i(e, "aroundIntensity", I, r(e)),
                  e.isScrolling = !0,
                  e
              }
              n(e, t);
              var o = e.prototype;
              return o.start = function() {
                  t.prototype.start.call(this),
                  this.onUpdatePage = this.onUpdatePage.bind(this),
                  this.scroll.inertia = !1,
                  this.scroll.node.on(s.EventType.SCROLL_BEGAN, this.onScrolBegan, this),
                  this.scroll.node.on(s.EventType.SCROLL_ENDED, this.onScrolEnded, this)
              }
              ,
              o.onScrolBegan = function(t) {
                  this.isScrolling = !0
              }
              ,
              o.onScrolEnded = function(t) {
                  this.isScrolling = !1,
                  setTimeout(this.onUpdatePage, 33)
              }
              ,
              o.onUpdatePage = function() {
                  var t = this.scroll.getScrollOffset()
                    , e = Math.round(t.y / 100);
                  this.setTopIndex(e),
                  this.selectIndex = e + Math.floor(.5 * this.contentItemNum)
              }
              ,
              o.update = function(t) {
                  this.enableAround && this.updateAround()
              }
              ,
              o.updateAround = function() {
                  for (var t = 0; t < this._itemArray.length; ++t) {
                      var e = this._itemArray[t]
                        , n = e.worldPosition
                        , i = this.aroundTargetY - n.y
                        , r = Math.abs(i) / 100;
                      r < 0 && (r = 0),
                      r > 1 && (r = 1),
                      r = 1 - r;
                      var o = this.aroundMinScale + (this.aroundMaxScale - this.aroundMinScale) * r;
                      e.setScale(o, o);
                      var a = Math.abs(i) * this.aroundIntensity
                        , s = e.getPosition();
                      e.setPosition(-a, s.y, s.z)
                  }
              }
              ,
              o.setTopIndex = function(t, e) {
                  t = this.numItems - t - this.contentItemNum;
                  var n = this.numItems - this.contentItemNum;
                  this.scroll.scrollToPercentVertical(1 / n * t, e),
                  this.refreshArrow()
              }
              ,
              o.setBtmIndex = function(t, e) {
                  var n = this.numItems - this.contentItemNum;
                  this.scroll.scrollToPercentVertical(1 / n * t, e),
                  this.refreshArrow()
              }
              ,
              o.test = function() {
                  var t = c.math.randomInt(0, 10);
                  console.log(t),
                  this.setTopIndex(t)
              }
              ,
              o.onClick = function(t) {
                  var e = Math.floor(this.contentItemNum / 2)
                    , n = t.target
                    , i = parseInt(n.name);
                  i >= e && i < this.numItems - e && (this.selectIndex = i,
                  this.setTopIndex(i - e, .3))
              }
              ,
              e
          }(l)).prototype, "contentItemNum", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          p = e(h.prototype, "enableAround", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return !1
              }
          }),
          f = e(h.prototype, "aroundTargetY", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 0
              }
          }),
          m = e(h.prototype, "aroundMinScale", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          g = e(h.prototype, "aroundMaxScale", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          I = e(h.prototype, "aroundIntensity", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1
              }
          }),
          u = h)) || u);
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/UIQueue.ts", ["cc", "./UIRoot.ts"], (function(t) {
  var e, s;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      , function(t) {
          s = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "37529lnoyNNDZ/Fi/v+uwsw", "UIQueue", void 0);
          var i = function(t, e) {
              this.id = void 0,
              this.data = void 0,
              this.id = t,
              this.data = e
          };
          t("default", function() {
              function t() {
                  this.queue = new Array,
                  this.isOpened = void 0
              }
              var e = t.prototype;
              return e.openPassResult = function(t, e, s, n) {
                  void 0 === s && (s = 1),
                  this.queue.push(new i("PassResult",{
                      type: t,
                      data: e,
                      num: s,
                      desc: n
                  })),
                  this.nextWindow()
              }
              ,
              e.openDiamondResult = function(t, e) {
                  this.queue.push(new i("DiamondResult",{
                      type: t,
                      data: e
                  })),
                  this.nextWindow()
              }
              ,
              e.nextWindow = function() {
                  if (!this.isOpened && this.queue.length > 0) {
                      var t = this.queue.splice(0, 1)[0];
                      this.isOpened = !0,
                      this.startTask(t)
                  }
              }
              ,
              e.closeWindow = function() {
                  this.isOpened = !1,
                  this.nextWindow()
              }
              ,
              e.startTask = function(t) {
                  switch (t.id) {
                  case "PassResult":
                      s.passResult.closeCall(this, this.closeWindow),
                      s.passResult.open(t.data);
                      break;
                  case "DiamondResult":
                      s.diamondResult.closeCall(this, this.closeWindow),
                      s.diamondResult.setData3(t.data.type, t.data.data),
                      s.diamondResult.open()
                  }
              }
              ,
              t
          }());
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/UIRoot.ts", ["cc", "./FightWindow.ts", "./PauseWindow.ts", "./FightShopWindow.ts", "./HomeWindow.ts", "./LoadingWindow.ts", "./LoginWindow.ts", "./FightFinishWindow.ts", "./EquipWindow.ts", "./GmWindow.ts", "./FightSelectWindow.ts", "./ItemTips.ts", "./WeaponTips.ts", "./PlayerTips.ts", "./ForgeWindow.ts", "./MessageWindow.ts", "./EquipDressTips.ts", "./ChapterWindow.ts", "./ChapterSelectWindow.ts", "./TextTips.ts", "./ForgeMaterialTips.ts", "./JoystickWindow.ts", "./ForgeUpgradeResultWindow.ts", "./ForgeRepairResultWindow.ts", "./FightRewardWindow.ts", "./LaunchWindow.ts", "./ForgeCombineResultWindow.ts", "./HeroSelectWindow.ts", "./DifficultySelectWindow.ts", "./MateriaShopWindow.ts", "./MaterialTips.ts", "./GoodsBuyTips.ts", "./DiamondShopWindow.ts", "./DiamondResultWindow.ts", "./UIQueue.ts", "./PassResultWindow.ts"], (function(i) {
  var e, t, n, o, u, s, d, a, f, w, l, p, c, r, g, W, h, m, T, R, F, S, y, q, C, D, M, L, k, P, U, x, E, G, I, b;
  return {
      setters: [function(i) {
          e = i.cclegacy
      }
      , function(i) {
          t = i.default
      }
      , function(i) {
          n = i.default
      }
      , function(i) {
          o = i.default
      }
      , function(i) {
          u = i.default
      }
      , function(i) {
          s = i.default
      }
      , function(i) {
          d = i.default
      }
      , function(i) {
          a = i.default
      }
      , function(i) {
          f = i.default
      }
      , function(i) {
          w = i.default
      }
      , function(i) {
          l = i.default
      }
      , function(i) {
          p = i.default
      }
      , function(i) {
          c = i.default
      }
      , function(i) {
          r = i.default
      }
      , function(i) {
          g = i.default
      }
      , function(i) {
          W = i.default
      }
      , function(i) {
          h = i.default
      }
      , function(i) {
          m = i.default
      }
      , function(i) {
          T = i.default
      }
      , function(i) {
          R = i.default
      }
      , function(i) {
          F = i.default
      }
      , function(i) {
          S = i.default
      }
      , function(i) {
          y = i.default
      }
      , function(i) {
          q = i.default
      }
      , function(i) {
          C = i.default
      }
      , function(i) {
          D = i.default
      }
      , function(i) {
          M = i.default
      }
      , function(i) {
          L = i.default
      }
      , function(i) {
          k = i.default
      }
      , function(i) {
          P = i.default
      }
      , function(i) {
          U = i.default
      }
      , function(i) {
          x = i.default
      }
      , function(i) {
          E = i.default
      }
      , function(i) {
          G = i.default
      }
      , function(i) {
          I = i.default
      }
      , function(i) {
          b = i.default
      }
      ],
      execute: function() {
          e._RF.push({}, "98db1mWtp5EQ50LGewCoWj6", "UIRoot", void 0);
          var v = i("default", (function() {}
          ));
          v.queue = new I,
          v.launch = new D("ui/launch/LaunchWindow"),
          v.loading = new s("ui/loading/LoadingWindow"),
          v.login = new d("ui/login/LoginWindow"),
          v.home = new u("ui/home/HomeWindow"),
          v.fight = new t("ui/fight/FightWindow"),
          v.pause = new n("ui/fight/PauseWindow"),
          v.fightShop = new o("ui/fight-skill/ShopWindow"),
          v.fightSelect = new l("ui/fight-skill/SelectWindow"),
          v.fightFinish = new a("ui/fight-finish/FinishWindow"),
          v.fightReward = new C("ui/fight-reward/FightRewardWindow"),
          v.equip = new f("ui/equip/EquipWindow"),
          v.equipDressTips = new h("ui/equip/EquipDressTips"),
          v.forge = new g("ui/forge/ForgeWindow"),
          v.forgeMaterialTips = new F("ui/forge/ForgeMaterialTips"),
          v.forgeUpgradeResult = new y("ui/forge/ForgeUpgradeResultWindow"),
          v.forgeCombineResult = new M("ui/forge/ForgeCombineResultWindow"),
          v.forgeRepairResult = new q("ui/forge/ForgeRepairResultWindow"),
          v.gm = new w("ui/gm/GmWindow"),
          v.itemTips = new p("ui/tips/ItemTips"),
          v.weaponTips = new c("ui/tips/WeaponTips"),
          v.playerTips = new r("ui/tips/PlayerTips"),
          v.messageBox = new W("ui/tips/MessageWindow"),
          v.chapter = new m("ui/chapter/ChapterWindow"),
          v.selectChapter = new T("ui/chapter/ChapterSelectWindow"),
          v.textTips = new R("ui/tips/TextTips"),
          v.joystic = new S("ui/joystick/JoystickWindow"),
          v.heroSelect = new L("ui/home/HeroSelectWindow"),
          v.difficulty = new k("ui/difficulty/DifficultySelectWindow"),
          v.materiaShop = new P("ui/shop/MateriaShopWindow"),
          v.materialTips = new U("ui/shop/MaterialTips"),
          v.goodsBuyTips = new x("ui/shop/GoodsBuyTips"),
          v.diamondShop = new E("ui/shop/DiamondShopWindow"),
          v.diamondResult = new G("ui/shop/DiamondResultWindow"),
          v.passResult = new b("ui/home/PassResultWindow"),
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/UITest.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIPageView.ts", "./bignumber.mjs_cjs=&original=.js", "./bignumber.js"], (function(e) {
  var t, i, n, o, r, a, l, c, s, u;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          o = e.assertThisInitialized
      }
      , function(e) {
          r = e.cclegacy,
          a = e._decorator,
          l = e.Label,
          c = e.Component
      }
      , function(e) {
          s = e.UIPageView
      }
      , null, function(e) {
          u = e.default
      }
      ],
      execute: function() {
          var g, p, d, y, f;
          r._RF.push({}, "b8cddl5UC5KU6h3RoYvniML", "UITest", void 0);
          var h = a.ccclass
            , v = a.property;
          e("UITest", (g = h("UITest"),
          p = v({
              type: s
          }),
          g((f = t((y = function(e) {
              function t() {
                  for (var t, i = arguments.length, r = new Array(i), a = 0; a < i; a++)
                      r[a] = arguments[a];
                  return t = e.call.apply(e, [this].concat(r)) || this,
                  n(t, "pageView", f, o(t)),
                  t
              }
              i(t, e);
              var r = t.prototype;
              return r.start = function() {
                  var e = u("9223372036854775807")
                    , t = u("1")
                    , i = e.plus(t)
                    , n = i.plus("467");
                  console.log(e.toString()),
                  console.log(t.toString()),
                  console.log(i.toString()),
                  console.log(n.toString())
              }
              ,
              r.onTestClick = function() {
                  this.pageView.test()
              }
              ,
              r.itemRenderer = function(e, t) {
                  t.getChildByName("Label").getComponent(l).string = e.toString(),
                  t.getChildByPath("Body/Mask").active = e >= 2 && e < 8
              }
              ,
              r.itemSelected = function(e, t) {
                  var i = t.getChildByPath("Body/pick_an")
                    , n = t.getChildByPath("Body/pick_di");
                  i.active = !1,
                  n.active = !0
              }
              ,
              t
          }(c)).prototype, "pageView", [p], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          d = y)) || d));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/UIToggle.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(t) {
  var e, i, o, n, r, s, l, c, a, u;
  return {
      setters: [function(t) {
          e = t.applyDecoratedDescriptor,
          i = t.inheritsLoose,
          o = t.initializerDefineProperty,
          n = t.assertThisInitialized,
          r = t.createClass
      }
      , function(t) {
          s = t.cclegacy,
          l = t._decorator,
          c = t.Node,
          a = t.Button,
          u = t.Component
      }
      ],
      execute: function() {
          var h, f, p, d, g, y, v;
          s._RF.push({}, "6d53d7WmT1JIIcQArpgXHj6", "UIToggle", void 0);
          var N = l.ccclass
            , I = l.property;
          t("UIToggle", (h = N("UIToggle"),
          f = I({
              type: c
          }),
          p = I({
              type: c
          }),
          h((y = e((g = function(t) {
              function e() {
                  for (var e, i = arguments.length, r = new Array(i), s = 0; s < i; s++)
                      r[s] = arguments[s];
                  return e = t.call.apply(t, [this].concat(r)) || this,
                  o(e, "onNode", y, n(e)),
                  o(e, "offNode", v, n(e)),
                  e._isOn = void 0,
                  e.caller = void 0,
                  e.onCheck = void 0,
                  e
              }
              i(e, t);
              var s = e.prototype;
              return s.start = function() {
                  this.node.on(a.EventType.CLICK, this.onClick, this)
              }
              ,
              s.onClick = function() {
                  var t;
                  null == (t = this.onCheck) || t.call(this.caller, this)
              }
              ,
              s.setIsOnNotNotify = function(t) {
                  this._isOn = t,
                  this.onNode && (this.onNode.active = this._isOn),
                  this.offNode && (this.offNode.active = !this._isOn)
              }
              ,
              r(e, [{
                  key: "isOn",
                  get: function() {
                      return this._isOn
                  },
                  set: function(t) {
                      var e;
                      this.setIsOnNotNotify(t),
                      null == (e = this.onCheck) || e.call(this.caller, this)
                  }
              }]),
              e
          }(u)).prototype, "onNode", [f], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          v = e(g.prototype, "offNode", [p], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          d = g)) || d));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/UIToggleGroup.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIToggle.ts"], (function(e) {
  var t, o, n, l, i, r, s, c, a;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          o = e.inheritsLoose,
          n = e.initializerDefineProperty,
          l = e.assertThisInitialized,
          i = e.createClass
      }
      , function(e) {
          r = e.cclegacy,
          s = e._decorator,
          c = e.Component
      }
      , function(e) {
          a = e.UIToggle
      }
      ],
      execute: function() {
          var g, u, h, f, p;
          r._RF.push({}, "b2191brnAlEBJGqxrHDfkoI", "UIToggleGroup", void 0);
          var d = s.ccclass
            , I = s.property;
          e("UIToggleGroup", (g = d("UIToggleGroup"),
          u = I({
              type: [a]
          }),
          g((p = t((f = function(e) {
              function t() {
                  for (var t, o = arguments.length, i = new Array(o), r = 0; r < o; r++)
                      i[r] = arguments[r];
                  return t = e.call.apply(e, [this].concat(i)) || this,
                  n(t, "toggles", p, l(t)),
                  t._selectIndex = -1,
                  t.caller = void 0,
                  t.onSelectChanged = void 0,
                  t
              }
              o(t, e);
              var r = t.prototype;
              return r.start = function() {
                  for (var e = 0; e < this.toggles.length; ++e)
                      this.toggles[e].caller = this,
                      this.toggles[e].onCheck = this.onCheck
              }
              ,
              r.setSelectIndexNotify = function(e) {
                  this._selectIndex = e;
                  for (var t = 0; t < this.toggles.length; ++t)
                      this.toggles[t].setIsOnNotNotify(t == e)
              }
              ,
              r.onCheck = function(e) {
                  var t, o = this.toggles.indexOf(e);
                  this.setSelectIndexNotify(o),
                  null == (t = this.onSelectChanged) || t.call(this.caller, o)
              }
              ,
              i(t, [{
                  key: "selectIndex",
                  get: function() {
                      return this._selectIndex
                  },
                  set: function(e) {
                      var t;
                      this.setSelectIndexNotify(e),
                      null == (t = this.onSelectChanged) || t.call(this.caller, e)
                  }
              }]),
              t
          }(c)).prototype, "toggles", [u], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return []
              }
          }),
          h = f)) || h));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/UIWindow.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./LayerType.ts", "./BehaviorBase.ts", "./ResSystem.ts", "./UIWindowView.ts", "./EventSystem.ts", "./Session.ts", "./Kit.ts", "./ResList.ts"], (function(n) {
  var t, e, i, o, s, r, a, l, c, d, u, h, f, v, p, g, C, y, $, w;
  return {
      setters: [function(n) {
          t = n.inheritsLoose,
          e = n.createForOfIteratorHelperLoose,
          i = n.createClass,
          o = n.asyncToGenerator,
          s = n.regeneratorRuntime
      }
      , function(n) {
          r = n.cclegacy,
          a = n.Prefab,
          l = n.Vec3,
          c = n.Node,
          d = n.Button,
          u = n.ToggleContainer,
          h = n.Toggle
      }
      , function(n) {
          f = n.Layer2DType
      }
      , function(n) {
          v = n.default
      }
      , function(n) {
          p = n.default
      }
      , function(n) {
          g = n.UIWindowView
      }
      , function(n) {
          C = n.default
      }
      , function(n) {
          y = n.default
      }
      , function(n) {
          $ = n.default
      }
      , function(n) {
          w = n.default
      }
      ],
      execute: function() {
          r._RF.push({}, "7882a5z0WVKhLdezZfxoEmY", "UIWindow", void 0);
          var L = function(n) {
              return n[n.Closed = 0] = "Closed",
              n[n.Opening = 1] = "Opening",
              n[n.Opened = 2] = "Opened",
              n
          }(L || {});
          n("default", function(n) {
              function r(t) {
                  var e;
                  return (e = n.call(this) || this).loadDict = new Map,
                  e.isClosing = void 0,
                  e.src = "ui/loading/LoadingWindow.prefab",
                  e.$node = void 0,
                  e.view = void 0,
                  e.state = L.Closed,
                  e.layer = f.UIMain,
                  e.$injects = void 0,
                  e.$resPath = void 0,
                  e.$objName = void 0,
                  e.$resDeps = void 0,
                  e.$listeners = void 0,
                  e.$args = void 0,
                  e.closeHandler = void 0,
                  e.src = t,
                  e
              }
              t(r, n);
              var v = r.prototype;
              return v.register = function(n, t, e) {
                  y.ins.register(n, t, e)
              }
              ,
              v.unRegister = function(n, t, e) {
                  y.ins.unRegister(n, t, e)
              }
              ,
              v.send = function(n, t) {
                  y.ins.send(n, t)
              }
              ,
              v.open = function(n) {
                  this.state == L.Closed && (this.state = L.Opening,
                  this.$args = n,
                  this.preload(this.src),
                  this.onPreLoad(),
                  this.startLoad())
              }
              ,
              v.waitOpen = function() {
                  var n = o(s().mark((function n() {
                      var t = this;
                      return s().wrap((function(n) {
                          for (; ; )
                              switch (n.prev = n.next) {
                              case 0:
                                  return n.abrupt("return", new Promise((function(n, e) {
                                      t.state == L.Closed ? (t.state = L.Opening,
                                      t.preload(t.src),
                                      t.onPreLoad(),
                                      t.startLoad(t, (function() {
                                          n(!0)
                                      }
                                      ))) : t.state == L.Opened ? n(!0) : n(!1)
                                  }
                                  )));
                              case 1:
                              case "end":
                                  return n.stop()
                              }
                      }
                      ), n)
                  }
                  )));
                  return function() {
                      return n.apply(this, arguments)
                  }
              }(),
              v.startLoad = function(n, t) {
                  for (var i, o = this, s = this.loadDict.size, r = e(this.loadDict.values()); !(i = r()).done; ) {
                      var l = i.value;
                      p.ins.preload(l.src, a, this, (function() {
                          --s <= 0 && (o.isClosing ? (o.isClosing = !1,
                          o.state = L.Closed) : (o.start(),
                          null == t || t.call(n)))
                      }
                      ))
                  }
              }
              ,
              v.close = function() {
                  if (this.state == L.Opened ? (this.state = L.Closed,
                  this.onCloseAnim(this, this.onRecycle)) : this.state == L.Opening && (this.isClosing = !0),
                  null != this.closeHandler) {
                      var n = this.closeHandler;
                      this.closeHandler = null,
                      n.runOne()
                  }
              }
              ,
              v.onCloseAnim = function(n, t) {
                  t.call(n)
              }
              ,
              v.onRecycle = function() {
                  this.onDisable(),
                  this.onDestroy(),
                  this.$node && (p.ins.recycle(this.$node),
                  this.$node = null),
                  C.ins.clear(this)
              }
              ,
              v.start = function() {
                  this.state = L.Opened,
                  this.$node = p.ins.spawn(this.src, a, new l(0,0,0), null, this.layer),
                  this.view = this.$node.getComponent(g),
                  null == this.view && (this.view = this.$node.addComponent(g)),
                  this.view.removeListenerAll(),
                  this.initInject(),
                  this.onStart(),
                  this.onEnable()
              }
              ,
              v.getPrototype = function() {}
              ,
              v.initInject = function() {
                  var n = this.getPrototype();
                  if (n && (this.$injects = n.$injects),
                  this.$injects) {
                      for (var t in this.$injects) {
                          var e = this.$injects[t]
                            , i = e[1]
                            , o = e[2]
                            , s = this.$node.getChildByPath(i);
                          if (s)
                              if (o == c)
                                  this[t] = s;
                              else {
                                  var r = s.getComponent(o);
                                  r ? this[t] = r : console.warn("[%s]绑定控件失败：%s", this.getInfo(), e[1])
                              }
                          else
                              console.warn("[%s]绑定控件失败：%s", this.getInfo(), e[1])
                      }
                  }
                  if (n && (this.$listeners = n.$listeners),
                  this.$listeners) {
                      for (var a in this.$listeners) {
                          var l = this[this.$listeners[a]];
                          C.ins.on(a, l, this)
                      }
                  }
              }
              ,
              v.getComponent = function(n, t) {
                  var e = this.$node.getChildByPath(t);
                  return null == e ? (console.error("Window: " + this.$node.name + ", " + t + " is not find"),
                  null) : e.getComponent(n)
              }
              ,
              v.getChildNode = function(n) {
                  var t = this.$node.getChildByPath(n);
                  return null == t ? (console.error("Window: " + this.$node.name + ", " + n + " is not find"),
                  null) : t
              }
              ,
              v.getInfo = function() {
                  return ""
              }
              ,
              v.preload = function(n, t, e) {
                  this.loadDict.has(n) || this.loadDict.set(n, {
                      src: n,
                      pos: t,
                      rot: e,
                      node: null
                  })
              }
              ,
              v.onPreLoad = function() {}
              ,
              v.onStart = function() {}
              ,
              v.onEnable = function() {}
              ,
              v.onDisable = function() {}
              ,
              v.onDestroy = function() {}
              ,
              v.recycleAll = function() {
                  if (this.loadDict) {
                      for (var n in this.loadDict) {
                          var t = this.loadDict[n];
                          t.node && p.ins.recycle(t.node)
                      }
                      this.loadDict = null
                  }
              }
              ,
              v.onClick = function(n, t, e) {
                  void 0 === e && (e = !0),
                  e && n.node.off(d.EventType.CLICK),
                  n.node.on(d.EventType.CLICK, t, this),
                  n.node.on(d.EventType.CLICK, this.onClickSound, this)
              }
              ,
              v.onClickSound = function() {
                  $.sound.playSound(w.sound_click.path)
              }
              ,
              v.onCheck = function(n, t, e) {
                  void 0 === e && (e = !0),
                  n instanceof u ? (this.view.listenCheckEvents(n),
                  this.view.addListener("onCheck", this, t)) : (e && n.node.off(h.EventType.TOGGLE),
                  n.node.on(h.EventType.TOGGLE, t, this))
              }
              ,
              v.closeCall = function(n, t) {
                  this.closeHandler = $.handler(n, t)
              }
              ,
              i(r, [{
                  key: "node",
                  get: function() {
                      return this.$node
                  }
              }, {
                  key: "active",
                  get: function() {
                      return this.state == L.Opened
                  }
              }]),
              r
          }(v));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/UIWindowView.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(e) {
  var n, t, r, i, s;
  return {
      setters: [function(e) {
          n = e.inheritsLoose
      }
      , function(e) {
          t = e.cclegacy,
          r = e._decorator,
          i = e.EventHandler,
          s = e.Component
      }
      ],
      execute: function() {
          var c;
          t._RF.push({}, "5eac7SLTrFP+pc3QEbUVwmr", "UIWindowView", void 0);
          var l = r.ccclass;
          r.property,
          e("UIWindowView", l("UIWindowView")(c = function(e) {
              function t() {
                  for (var n, t = arguments.length, r = new Array(t), i = 0; i < t; i++)
                      r[i] = arguments[i];
                  return (n = e.call.apply(e, [this].concat(r)) || this).listeners = new Map,
                  n
              }
              n(t, e);
              var r = t.prototype;
              return r.addListener = function(e, n, t) {
                  var r;
                  this.listeners.has(e) ? r = this.listeners.get(e) : (r = new Array,
                  this.listeners.set(e, r)),
                  r.push({
                      caller: n,
                      callback: t
                  })
              }
              ,
              r.removeListener = function(e, n, t) {
                  if (this.listeners.has(e))
                      for (var r = this.listeners.get(e), i = 0; i < r.length; ++i) {
                          var s = r[i];
                          if (s.caller == n && s.callback == t) {
                              r.splice(i, 1);
                              break
                          }
                      }
              }
              ,
              r.removeListenerAll = function() {
                  this.listeners.clear()
              }
              ,
              r.onCheck = function(e) {
                  if (this.listeners.has("onCheck"))
                      for (var n = this.listeners.get("onCheck"), t = 0; t < n.length; ++t) {
                          var r = n[t];
                          r.callback.call(r.caller, e)
                      }
              }
              ,
              r.listenCheckEvents = function(e) {
                  if (0 == e.checkEvents.length) {
                      var n = new i;
                      n.target = this.node,
                      n.component = "UIWindowView",
                      n.handler = "onCheck",
                      e.checkEvents.push(n)
                  }
              }
              ,
              t
          }(s)) || c);
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/UserData.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./EntityBase.ts", "./bignumber.mjs_cjs=&original=.js", "./bignumber.js"], (function(i) {
  var o, e, t, n;
  return {
      setters: [function(i) {
          o = i.inheritsLoose
      }
      , function(i) {
          e = i.cclegacy
      }
      , function(i) {
          t = i.default
      }
      , null, function(i) {
          n = i.default
      }
      ],
      execute: function() {
          e._RF.push({}, "28105wWmPBGfq2lui95wKuu", "UserData", void 0);
          i("default", function(i) {
              function e() {
                  for (var o, e = arguments.length, t = new Array(e), v = 0; v < e; v++)
                      t[v] = arguments[v];
                  return (o = i.call.apply(i, [this].concat(t)) || this).IsGUESS = void 0,
                  o.DISCORD_CODE = void 0,
                  o.DISCORD_TOKEN_TYPE = void 0,
                  o.DISCORD_ACCESS_TOKEN = void 0,
                  o.DISCORD_USER_ID = void 0,
                  o.DISCORD_NICK = void 0,
                  o.DISCORD_AVATAR = void 0,
                  o.CLIENT_ID = "1122092755137605712",
                  o.CLIENT_SECRET = "4gdQVVfZcwgBu2gIm40Lqxg8So27qVLK",
                  o.session = void 0,
                  o.userID = void 0,
                  o.openID = void 0,
                  o.code = void 0,
                  o.link = void 0,
                  o.createTime = void 0,
                  o.coin = 0,
                  o.money1 = n(0),
                  o.money2 = n(0),
                  o.heroSN = void 0,
                  o.gameUUID = void 0,
                  o.stageRecord = void 0,
                  o.vit = void 0,
                  o.vitMax = 1,
                  o.vitLastTime = void 0,
                  o.vitNextTime = void 0,
                  o.nick = void 0,
                  o.avatarUrl = void 0,
                  o.activity = void 0,
                  o.chestNextTime = void 0,
                  o
              }
              return o(e, i),
              e
          }(t));
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/UserPart.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./EntityPart.ts", "./UserData.ts", "./EntityPartDef.ts", "./bignumber.mjs_cjs=&original=.js", "./Kit.ts", "./bignumber.js"], (function(t) {
  var i, e, a, n, s, o, h, r, d, c, u;
  return {
      setters: [function(t) {
          i = t.applyDecoratedDescriptor,
          e = t.inheritsLoose,
          a = t.assertThisInitialized,
          n = t.createClass
      }
      , function(t) {
          s = t.cclegacy
      }
      , function(t) {
          o = t.default
      }
      , function(t) {
          h = t.default
      }
      , function(t) {
          r = t.EntityPartId,
          d = t.UserEventId
      }
      , null, function(t) {
          c = t.default
      }
      , function(t) {
          u = t.default
      }
      ],
      execute: function() {
          var _, l, y, f;
          s._RF.push({}, "d261ddA/7BKVo2EwlX0j3rd", "UserPart", void 0);
          t("default", (_ = set_class_name(r.UserPart),
          l = listenEvent(r.UserPart),
          _((i((f = function(t) {
              function i() {
                  var i;
                  return (i = t.call(this) || this)._data = new h,
                  i.oneday = 864e5,
                  i.pollTimer = void 0,
                  i._DISCORD_STATE = void 0,
                  i.updateVite = i.updateVite.bind(a(i)),
                  setInterval(i.updateVite, 4e3),
                  i
              }
              e(i, t);
              var s = i.prototype;
              return s.refreshData = function(t) {
                  this._data.userID = t.User.UserID,
                  this._data.openID = t.User.OpenID,
                  this._data.stageRecord = t.StageRecord,
                  this._data.money1 = c.utils.isEmpty(t.User.C1) ? u(0) : u(t.User.C1),
                  this._data.money2 = c.utils.isEmpty(t.User.C2) ? u(0) : u(t.User.C2),
                  this._data.vit = 0 | t.User.Vit,
                  this._data.vitMax = 0 | DataCenter.Config.Get("Vit").ValueEx[0],
                  this._data.nick = t.Third.Nick,
                  this._data.avatarUrl = t.Third.AvatarUrl,
                  this._data.activity = t.User.Activity,
                  this.setChestTime(t.User.ChestTime)
              }
              ,
              s.setMoney1 = function(t) {
                  this.data.money1 = u(t),
                  this.dispatch(d.Money1Change, this.data.money1)
              }
              ,
              s.addMoney1 = function(t) {
                  this.data.money1 = this.data.money1.plus(t),
                  this.dispatch(d.Money1Change, this.data.money1)
              }
              ,
              s.setMoney2 = function(t) {
                  this.data.money2 = u(t),
                  this.dispatch(d.Money2Change, this.data.money2)
              }
              ,
              s.addMoney2 = function(t) {
                  this.data.money2 = this.data.money2.plus(t),
                  this.dispatch(d.Money2Change, this.data.money2)
              }
              ,
              s.setCoin = function(t) {
                  this.data.coin = t,
                  this.dispatch(d.CoinChange, this.data.coin)
              }
              ,
              s.addCoin = function(t) {
                  this.data.coin += t,
                  this.dispatch(d.CoinChange, this.data.coin)
              }
              ,
              s.setVit = function(t) {
                  this._data.vit = t,
                  this.dispatch(d.ViteChange, this.data.coin)
              }
              ,
              s.addVit = function(t) {
                  this._data.vit -= t,
                  this._data.vit < 0 && (this._data.vit = 0),
                  this.dispatch(d.ViteChange, this.data.coin)
              }
              ,
              s.setVitTime = function(t) {
                  this._data.vitLastTime = 1e3 * t,
                  this._data.vitNextTime = 1e3 * (t + 86400)
              }
              ,
              s.setChestTime = function(t) {
                  this._data.chestNextTime = 1e3 * (t + 86400)
              }
              ,
              s.isInChestTime = function() {
                  return this._data.chestNextTime <= 0 || Date.now() > this._data.chestNextTime
              }
              ,
              s.setActivity = function(t) {
                  this._data.activity = t
              }
              ,
              s.getActivity = function() {
                  return this._data.activity
              }
              ,
              s.onUserEvent = function(t, i, e, a, n) {
                  t == d.CoinChange && console.log("++++++++++")
              }
              ,
              s.updateVite = function() {
                  Date.now() > this.data.vitNextTime && (this.data.vitNextTime += this.oneday,
                  this._data.vit = this._data.vitMax)
              }
              ,
              n(i, [{
                  key: "data",
                  get: function() {
                      return this._data
                  }
              }, {
                  key: "TICK",
                  get: function() {
                      return Math.floor(Date.now() / 1e3)
                  }
              }, {
                  key: "DISCORD_STATE",
                  get: function() {
                      return null == this._DISCORD_STATE && (this._DISCORD_STATE = localStorage.getItem("DISCORD_STATE")),
                      null == this._DISCORD_STATE && (this._DISCORD_STATE = "orehmraftib" + this.TICK,
                      localStorage.setItem("DISCORD_STATE", this._DISCORD_STATE)),
                      this._DISCORD_STATE
                  }
              }]),
              i
          }(o)).prototype, "onUserEvent", [l], Object.getOwnPropertyDescriptor(f.prototype, "onUserEvent"), f.prototype),
          y = f)) || y));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/UtilsSystem.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Singleton.ts", "./LayerSystem.ts", "./CameraManager.ts"], (function(t) {
  var n, e, r, o, i, u, a, c;
  return {
      setters: [function(t) {
          n = t.inheritsLoose,
          e = t.asyncToGenerator,
          r = t.regeneratorRuntime
      }
      , function(t) {
          o = t.cclegacy,
          i = t.Vec3
      }
      , function(t) {
          u = t.default
      }
      , function(t) {
          a = t.default
      }
      , function(t) {
          c = t.default
      }
      ],
      execute: function() {
          o._RF.push({}, "7fafdhumGtC2akiRWFAmc1n", "UtilsSystem", void 0);
          t("default", function(t) {
              function o() {
                  for (var n, e = arguments.length, r = new Array(e), o = 0; o < e; o++)
                      r[o] = arguments[o];
                  return (n = t.call.apply(t, [this].concat(r)) || this).queryDict = void 0,
                  n
              }
              n(o, t);
              var u = o.prototype;
              return u.wait = function() {
                  var t = e(r().mark((function t(n) {
                      return r().wrap((function(t) {
                          for (; ; )
                              switch (t.prev = t.next) {
                              case 0:
                                  return t.abrupt("return", new Promise((function(t, e) {
                                      setTimeout((function() {
                                          t(!0)
                                      }
                                      ), 1e3 * n)
                                  }
                                  )));
                              case 1:
                              case "end":
                                  return t.stop()
                              }
                      }
                      ), t)
                  }
                  )));
                  return function(n) {
                      return t.apply(this, arguments)
                  }
              }(),
              u.waitDone = function() {
                  var t = e(r().mark((function t(n, e) {
                      return r().wrap((function(t) {
                          for (; ; )
                              switch (t.prev = t.next) {
                              case 0:
                                  return t.abrupt("return", new Promise((function(t, r) {
                                      var o = setInterval((function() {
                                          n.call(e) && (clearInterval(o),
                                          t(!0))
                                      }
                                      ), 50)
                                  }
                                  )));
                              case 1:
                              case "end":
                                  return t.stop()
                              }
                      }
                      ), t)
                  }
                  )));
                  return function(n, e) {
                      return t.apply(this, arguments)
                  }
              }(),
              u.imageScale = function(t, n, e) {
                  var r = document.createElement("canvas")
                    , o = r.getContext("2d");
                  if (!o)
                      return null;
                  r.width = n,
                  r.height = e,
                  o.clearRect(0, 0, n, e),
                  o.drawImage(t, 0, 0, n, e);
                  var i = new Image;
                  return i.src = r.toDataURL("image/png"),
                  i.width = n,
                  i.height = e,
                  i
              }
              ,
              u.localToGlobal = function(t, n) {
                  return (n = n || new i).set(t.worldPosition),
                  n.subtract(a.ins.root.worldPosition),
                  n
              }
              ,
              u.globalToWorld2D = function(t, n) {
                  n = n || new i,
                  i.copy(n, t);
                  var e = c.ins.context.camera2D;
                  return n.x += e.node.position.x,
                  n.y += e.node.position.y,
                  n
              }
              ,
              u.getQueryValue = function(t) {
                  if (!this.queryDict) {
                      this.queryDict = {};
                      for (var n = window.location.search.substring(1), e = n.split("&"), r = 0; r < e.length; r++) {
                          var o = e[r].split("=");
                          this.queryDict[o[0]] = o[1]
                      }
                      console.log("[query] " + n)
                  }
                  return this.queryDict[t]
              }
              ,
              u.isEmpty = function(t) {
                  return null == t || "" == t
              }
              ,
              u.parseInt = function(t) {
                  function n(n) {
                      return t.apply(this, arguments)
                  }
                  return n.toString = function() {
                      return t.toString()
                  }
                  ,
                  n
              }((function(t) {
                  try {
                      return this.isEmpty(t) ? 0 : parseInt(t)
                  } catch (t) {
                      console.error(t)
                  }
                  return 0
              }
              )),
              u.getComponent = function(t, n, e) {
                  var r = t.getChildByPath(e);
                  return r ? r.getComponent(n) : null
              }
              ,
              o
          }(u()));
          o._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Weapon.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Kit.ts", "./WeaponState.ts", "./WeaponAI.ts"], (function(t) {
  var i, e, n, a, s, o, r, l, c, h, u, d, k, f, p;
  return {
      setters: [function(t) {
          i = t.applyDecoratedDescriptor,
          e = t.inheritsLoose,
          n = t.initializerDefineProperty,
          a = t.assertThisInitialized
      }
      , function(t) {
          s = t.cclegacy,
          o = t._decorator,
          r = t.sp,
          l = t.RigidBody2D,
          c = t.Collider2D,
          h = t.Vec2,
          u = t.Vec3,
          d = t.Component
      }
      , function(t) {
          k = t.default
      }
      , function(t) {
          f = t.WeaponAttackState
      }
      , function(t) {
          p = t.default
      }
      ],
      execute: function() {
          var m, g, A, y, b, v, I, S, w, C, D, B, R, x, N, E, T;
          s._RF.push({}, "1bb99VmyfNAIbtR/eddgrtp", "Weapon", void 0);
          var z = o.ccclass
            , F = o.property;
          t("default", (m = z("Weapon"),
          g = F({
              type: r.Skeleton
          }),
          A = F({
              type: l
          }),
          y = F({
              type: c
          }),
          b = F({
              type: [h]
          }),
          v = F({
              type: Boolean
          }),
          I = F({
              type: Number
          }),
          m((C = i((w = function(t) {
              function i() {
                  for (var i, e = arguments.length, s = new Array(e), o = 0; o < e; o++)
                      s[o] = arguments[o];
                  return i = t.call.apply(t, [this].concat(s)) || this,
                  n(i, "skeleton", C, a(i)),
                  n(i, "rigidBody", D, a(i)),
                  n(i, "collider", B, a(i)),
                  n(i, "atkName", R, a(i)),
                  n(i, "idleName", x, a(i)),
                  n(i, "atkEvents", N, a(i)),
                  n(i, "isForceddirection", E, a(i)),
                  n(i, "windupTime", T, a(i)),
                  i.data = void 0,
                  i.owner = void 0,
                  i.atkIndex = 0,
                  i.atkBatch = null,
                  i.attackRegion = 100,
                  i.searchRegion = 2e3,
                  i.attackSpeed = 1,
                  i.scale = new u(1,1,1),
                  i.dir = new h(1,1),
                  i.lastAttackTick = void 0,
                  i.timeId = void 0,
                  i.onAnimComplete = void 0,
                  i.attackState = f.Idle,
                  i.ai = void 0,
                  i
              }
              e(i, t);
              var s = i.prototype;
              return s.getOwnerPlr = function() {
                  return this.owner
              }
              ,
              s.getSkeleton = function() {
                  return this.skeleton
              }
              ,
              s.getRigidBody = function() {
                  return this.rigidBody
              }
              ,
              s.getCollider = function() {
                  return this.collider
              }
              ,
              s.getAttackRegion = function() {
                  return this.attackRegion
              }
              ,
              s.getSearchRegion = function() {
                  return this.searchRegion
              }
              ,
              s.getAttackSpeed = function() {
                  return this.attackSpeed
              }
              ,
              s.getAttackEvent = function() {
                  return this.atkEvents
              }
              ,
              s.getForceddirection = function() {
                  return this.isForceddirection
              }
              ,
              s.init = function() {
                  if (this.ai = new p(this),
                  this.ai.caller = this,
                  this.ai.fireNode = this.getFireNode(),
                  this.ai.attackEnter = this.onAttackEnter,
                  this.ai.attacking = this.onAttacking,
                  this.ai.attackLeave = this.onAttackLeave,
                  this.ai.attackBegin = this.onAttackBegin,
                  this.ai.attackEnded = this.onAttackEnded,
                  this.ai.skeleton = this.skeleton,
                  this.ai.rigidBody = this.rigidBody,
                  this.ai.collider = this.collider,
                  this.ai.atkName = this.atkName,
                  this.ai.idleName = this.idleName,
                  this.ai.attackRegion = this.attackRegion,
                  this.ai.searchRegion = this.searchRegion,
                  this.ai.attackSpeed = this.attackSpeed,
                  this.ai.atkEvents = this.atkEvents,
                  this.ai.windupTime = this.windupTime,
                  this.ai.init(),
                  this.ai.setScale(this.scale),
                  this.ai.setDir(this.dir.x, this.dir.y),
                  this.onPlayComplete = this.onPlayComplete.bind(this),
                  this.skeleton) {
                      this.skeleton.paused = !1;
                      for (var t = this.skeleton.skeletonData.textures, i = 0; i < t.length; ++i)
                          t[i].setFilters(0, 0);
                      this.skeleton.setCompleteListener(this.onPlayComplete)
                  }
              }
              ,
              s.unInit = function() {
                  this.ai && (this.ai.unInit(),
                  this.ai = null),
                  k.res.recycle(this.node)
              }
              ,
              s.refresh = function() {
                  this.ai && this.ai.refresh()
              }
              ,
              s.getFireNode = function() {
                  return this.node
              }
              ,
              s.setData = function(t) {
                  this.data = t
              }
              ,
              s.onUpdate = function(t) {
                  this.ai.onUpdate(t)
              }
              ,
              s.onAttackEnter = function() {}
              ,
              s.onAttacking = function() {}
              ,
              s.onAttackLeave = function() {}
              ,
              s.onAttackBegin = function() {}
              ,
              s.onAttackEnded = function() {}
              ,
              s.stopAttack = function() {
                  null != this.timeId && (clearTimeout(this.timeId),
                  this.timeId = null),
                  this.ai && this.ai.stopAttack()
              }
              ,
              s.setCD = function(t) {
                  this.ai && this.ai.setCD(t)
              }
              ,
              s.setAttackSpeed = function(t) {
                  this.ai && this.ai.setAttackSpeed(t)
              }
              ,
              s.setAttackDuration = function(t) {
                  this.ai && this.ai.setAttackDuration(t)
              }
              ,
              s.setSearchRegion = function(t) {
                  this.ai && this.ai.setSearchRegion(t)
              }
              ,
              s.setAttackRegion = function(t) {
                  this.ai && this.ai.setAttackRegion(t)
              }
              ,
              s.setBulletCount = function(t) {
                  this.ai && this.ai.setBulletCount(t)
              }
              ,
              s.setDartleCount = function(t) {
                  this.ai && this.ai.setDartleCount(t)
              }
              ,
              s.setDartleInterval = function(t) {
                  this.ai && this.ai.setDartleInterval(t)
              }
              ,
              s.pause = function() {
                  this.skeleton && (this.skeleton.paused = !0)
              }
              ,
              s.resume = function() {
                  this.skeleton && (this.skeleton.paused = !1)
              }
              ,
              s.setOwner = function(t) {
                  this.owner = t
              }
              ,
              s.setDir = function(t, i) {
                  this.dir.x = t,
                  this.dir.y = i,
                  this.ai && this.ai.setDir(t, i)
              }
              ,
              s.getAtkIndex = function() {
                  return this.atkIndex
              }
              ,
              s.setAtkIndex = function(t) {
                  this.atkIndex = t,
                  this.atkBatch && this.atkBatch.setSegment(this.atkIndex)
              }
              ,
              s.increaseAtkIndex = function() {
                  this.atkIndex++,
                  this.atkBatch && this.atkBatch.setSegment(this.atkIndex)
              }
              ,
              s.fire = function(t) {}
              ,
              s.setScale = function(t) {
                  u.copy(this.scale, t),
                  this.ai && this.ai.setScale(t)
              }
              ,
              s.playAnimation = function(t, i, e) {
                  void 0 === e && (e = 1),
                  this.skeleton && (this.skeleton.timeScale = e,
                  this.skeleton.setAnimation(0, t, i))
              }
              ,
              s.setCompleteListener = function(t) {
                  this.skeleton && this.skeleton.setCompleteListener(t)
              }
              ,
              s.playAttackAnimation = function(t, i, e, n, a) {
                  this.lastAttackTick = Date.now();
                  var s = !0;
                  this.skeleton && (this.skeleton.findAnimation(t) ? (this.onAnimComplete = a,
                  this.skeleton.timeScale = e,
                  this.skeleton.setAnimation(0, t, !1),
                  s = !1) : (this.skeleton.timeScale = e,
                  this.skeleton.setAnimation(0, i, !1),
                  s = !0)),
                  null != this.timeId && (clearTimeout(this.timeId),
                  this.timeId = null),
                  s && n > 0 && null != a && (this.timeId = setTimeout(a, n))
              }
              ,
              s.onPlayComplete = function() {
                  null != this.onAnimComplete && (this.onAnimComplete(),
                  this.onAnimComplete = null)
              }
              ,
              s.getAnimationDuration = function(t) {
                  if (this.skeleton) {
                      var i = this.skeleton.findAnimation(t);
                      if (i)
                          return i.duration
                  }
                  return 0
              }
              ,
              s.getCurrentAnimationTime = function(t) {
                  return void 0 === t && (t = 1),
                  this.skeleton ? this.skeleton.getCurrent(0).animationLast : .001 * (Date.now() - this.lastAttackTick) * t
              }
              ,
              i
          }(d)).prototype, "skeleton", [g], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          D = i(w.prototype, "rigidBody", [A], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          B = i(w.prototype, "collider", [y], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          R = i(w.prototype, "atkName", [F], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return "attack"
              }
          }),
          x = i(w.prototype, "idleName", [F], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return "idle"
              }
          }),
          N = i(w.prototype, "atkEvents", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return []
              }
          }),
          E = i(w.prototype, "isForceddirection", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          T = i(w.prototype, "windupTime", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 1e3
              }
          }),
          S = w)) || S));
          s._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/Weapon2.ts", ["cc", "./SessionMessage_Fight.ts", "./BattleMgr.ts", "./BattleDef.ts", "./ExtraEffectType.ts", "./ObjMgr.ts", "./proto.mjs_cjs=&original=.js", "./proto.js"], (function(t) {
  var e, n, i, o, s, a, r;
  return {
      setters: [function(t) {
          e = t.cclegacy
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          i = t.BattleMgr
      }
      , function(t) {
          o = t.AtkObjType
      }
      , function(t) {
          s = t.WeaponExtraEffectType
      }
      , function(t) {
          a = t.default
      }
      , null, function(t) {
          r = t.default
      }
      ],
      execute: function() {
          e._RF.push({}, "8e369dsdk1Iwr2SQOyBqPJW", "Weapon", void 0);
          t("WeaponObj", function() {
              function t() {
                  this.owner = void 0,
                  this.mgr = void 0,
                  this.cfgWeapon = null,
                  this.aosn = void 0,
                  this.wInfo = null,
                  this.atkTick = 0,
                  this.atkTime = 0,
                  this.node = void 0,
                  this.extraType = 0,
                  this.extraCfg = [],
                  this.extraVal = [],
                  this.stageDmg = 0
              }
              var e = t.prototype;
              return e.init = function(t, e, n) {
                  this.cfgWeapon = DataCenter.Weapon.Get(t.WID);
                  var i, o = this.cfgWeapon.ExtraValues;
                  o && o.length > 0 && (this.extraType = o[0],
                  (i = this.extraCfg).push.apply(i, o),
                  this.extraType == s.AtkSpeed && this.extraVal.push(0));
                  this.owner = e,
                  this.mgr = n,
                  this.aosn = a.ins.generateAtkObjSN(),
                  this.syncInfo(t)
              }
              ,
              e.destroy = function() {
                  this.cfgWeapon = null,
                  this.owner = null,
                  this.mgr = null,
                  this.node = null
              }
              ,
              e.syncInfo = function(t) {
                  this.wInfo = t,
                  this.atkTime = this.wInfo.AtkIntl + this.wInfo.AtkCD,
                  this.node && this.updateWeaponViewNode()
              }
              ,
              e.updateAttr = function(t, e) {
                  for (var n = 0; n < t.length; n++) {
                      var i = t[n]
                        , o = e[n];
                      switch (i) {
                      case r.msg.WeaponAttrType.WAT_Dmg:
                          this.wInfo.Dmg = o;
                          break;
                      case r.msg.WeaponAttrType.WAT_DmgCritical:
                          this.wInfo.DmgCritical = o;
                          break;
                      case r.msg.WeaponAttrType.WAT_AtkLength:
                          this.wInfo.AtkIntl = o,
                          this.atkTime = this.wInfo.AtkIntl + this.wInfo.AtkCD,
                          this.updateWeaponViewNode();
                          break;
                      case r.msg.WeaponAttrType.WAT_AtkRange:
                          this.wInfo.AtkRange = o,
                          this.updateWeaponViewNode();
                          break;
                      case r.msg.WeaponAttrType.WAT_Knockback:
                          this.wInfo.Knockback = o
                      }
                  }
              }
              ,
              e.getWSN = function() {
                  return this.wInfo.SN
              }
              ,
              e.getCfgID = function() {
                  return this.wInfo.WID
              }
              ,
              e.getName = function() {
                  return this.cfgWeapon.Name
              }
              ,
              e.getWeaponConfig = function() {
                  return this.cfgWeapon
              }
              ,
              e.getAttrEffect = function() {
                  return this.cfgWeapon.AttrEffect
              }
              ,
              e.getBuffs = function() {
                  return this.cfgWeapon.Buff
              }
              ,
              e.getAppendBuff = function() {
                  return this.cfgWeapon.AppendBuff
              }
              ,
              e.getExtraVals = function() {
                  return this.cfgWeapon.ExtraValues
              }
              ,
              e.isMaxLvl = function() {
                  return 0 == this.cfgWeapon.NextID
              }
              ,
              e.setWeaponViewNode = function(t) {
                  this.node = t,
                  this.updateWeaponViewNode()
              }
              ,
              e.isDead = function() {
                  return !1
              }
              ,
              e.getDmg = function() {
                  return this.wInfo.Dmg
              }
              ,
              e.getDmgCritical = function() {
                  return this.wInfo.DmgCritical
              }
              ,
              e.getAOType = function() {
                  return o.Weapon
              }
              ,
              e.getAOID = function() {
                  return this.wInfo.WID
              }
              ,
              e.getKnockBack = function() {
                  return this.wInfo.Knockback
              }
              ,
              e.getTargetMax = function() {
                  return this.wInfo.AtkMax
              }
              ,
              e.getOwnerSN = function() {
                  return this.owner.getSN()
              }
              ,
              e.getAOSN = function() {
                  return this.aosn
              }
              ,
              e.getWeaponID = function() {
                  return this.wInfo.WID
              }
              ,
              e.setAtkTick = function(t) {
                  this.atkTick = t
              }
              ,
              e.getLastAtkTick = function() {
                  return this.atkTick
              }
              ,
              e.getAtkIntl = function() {
                  return this.wInfo.AtkIntl
              }
              ,
              e.getAtkTime = function() {
                  return this.atkTime
              }
              ,
              e.onStageStart = function() {
                  var t = !1;
                  return this.stageDmg = 0,
                  this.extraType == s.AtkSpeed && (t = !0,
                  this.extraVal[0] = this.extraCfg[1],
                  i.ins.getStage().getWave() > 1 && n.weaponUpdate(this.getWSN())),
                  t
              }
              ,
              e.onUpdate = function() {
                  this.extraType == s.AtkSpeed && i.ins.getStage().getStageDuration() >= this.extraVal[0] && (this.extraVal[0] += this.extraCfg[1],
                  n.weaponUpdate(this.getWSN()))
              }
              ,
              e.getAtkLength = function() {
                  return this.wInfo.AtkIntl
              }
              ,
              e.getAtkCD = function() {
                  return this.wInfo.AtkCD
              }
              ,
              e.getAtkRadius = function() {
                  return this.wInfo.AtkRange
              }
              ,
              e.getNode = function() {
                  return this.node
              }
              ,
              e.canAtk = function() {
                  return this.owner.getAttr().canAtk()
              }
              ,
              e.getAtkX = function() {
                  return this.cfgWeapon.AtkX
              }
              ,
              e.updateWeaponViewNode = function() {
                  this.node && (this.node.setAttackDuration(this.getAtkLength()),
                  this.node.setAttackRegion(this.getAtkRadius()),
                  this.getAtkCD() > 0 && this.node.setCD(this.getAtkCD()),
                  this.cfgWeapon.DartleCount > 0 && this.node.setDartleCount(this.cfgWeapon.DartleCount),
                  this.cfgWeapon.DartleInterval > 0 && this.node.setDartleInterval(this.cfgWeapon.DartleInterval),
                  this.cfgWeapon.BulletCount > 0 && this.node.setBulletCount(this.cfgWeapon.BulletCount))
              }
              ,
              e.onAtked = function(t, e, n, i, o) {
                  this.stageDmg += n
              }
              ,
              e.addStageDmg = function(t) {
                  this.stageDmg += t
              }
              ,
              e.getStageDmg = function() {
                  return this.stageDmg
              }
              ,
              t
          }());
          e._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/WeaponAgent.ts", ["cc", "./Weapon.ts", "./Kit.ts"], (function(i) {
  var t, e, s, n, h, a, o;
  return {
      setters: [function(i) {
          t = i.cclegacy,
          e = i.Prefab,
          s = i.Vec3,
          n = i.Layers,
          h = i.Vec2
      }
      , function(i) {
          a = i.default
      }
      , function(i) {
          o = i.default
      }
      ],
      execute: function() {
          t._RF.push({}, "0a6c7aPfKFKu5SgEfK1MJlw", "WeaponAgent", void 0);
          i("default", function() {
              function i() {
                  this.owner = void 0,
                  this.data = void 0,
                  this.path = void 0,
                  this.view = void 0,
                  this.parent = void 0,
                  this.index = 0,
                  this.active = !1,
                  this.position = new s(0,0,0),
                  this.angle = 0,
                  this.isPause = !1,
                  this.layer = n.Enum.DEFAULT,
                  this.scale = new s(1,1,1),
                  this.dir = new h(1,1)
              }
              var t = i.prototype;
              return t.init = function() {
                  this.active = !0,
                  this.isPause = !1,
                  o.res.spawnAsyn(this.path, e, this.position, this.angle, this.parent, this, this.onLoadCompleted)
              }
              ,
              t.onLoadCompleted = function(i) {
                  var t;
                  this.active ? (this.view = i.getComponent(a),
                  this.view.setData(this.data),
                  this.view.setOwner(this.owner),
                  this.view.init(),
                  this.view.setScale(this.scale),
                  this.view.setDir(this.dir.x, this.dir.y),
                  this.parent.addChild(i),
                  null == (t = this.data) || t.setWeaponViewNode(this.view),
                  this.isPause ? this.view.pause() : this.view.resume(),
                  o.layer.setLayer(i, this.layer)) : o.res.recycle(i)
              }
              ,
              t.unInit = function() {
                  this.active = !1,
                  this.view && (this.view.unInit(),
                  this.view = null)
              }
              ,
              t.update = function(i) {
                  var t;
                  null == (t = this.view) || t.onUpdate(i)
              }
              ,
              t.setPosition = function(i) {
                  this.position.x = i.x,
                  this.position.y = i.y,
                  this.position.y = i.y,
                  this.view && this.view.node.setPosition(i)
              }
              ,
              t.setAngle = function(i) {
                  this.angle = i,
                  this.view && (this.view.node.angle = i)
              }
              ,
              t.refresh = function() {
                  this.view && this.view.refresh()
              }
              ,
              t.pause = function() {
                  this.isPause = !0,
                  this.view && this.view.pause()
              }
              ,
              t.resume = function() {
                  this.isPause = !1,
                  this.view && this.view.resume()
              }
              ,
              t.setDir = function(i, t) {
                  this.dir.x = i,
                  this.dir.y = t,
                  this.view && this.view.setDir(i, t)
              }
              ,
              t.setAttackSpeed = function(i) {
                  this.view && this.view.setAttackSpeed(i)
              }
              ,
              t.setLayer = function(i) {
                  this.layer = i,
                  this.view && o.layer.setLayer(this.view.node, i)
              }
              ,
              t.setScale = function(i) {
                  s.copy(this.scale, i),
                  this.view && this.view.setScale(this.scale)
              }
              ,
              i
          }());
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/WeaponAI.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./CreatureManager.ts", "./Kit.ts", "./WeaponState.ts"], (function(t) {
  var e, i, a, s, n, h, o;
  return {
      setters: [function(t) {
          e = t.createClass
      }
      , function(t) {
          i = t.cclegacy,
          a = t.Vec3
      }
      , function(t) {
          s = t.default
      }
      , function(t) {
          n = t.default
      }
      , function(t) {
          h = t.WeaponAttackState,
          o = t.WeaponState
      }
      ],
      execute: function() {
          i._RF.push({}, "d8d9dqtBu5JCImZptWlbq0/", "WeaponAI", void 0);
          t("default", function() {
              function t(t) {
                  this.node = void 0,
                  this.fireNode = void 0,
                  this.weapon = void 0,
                  this.skeleton = void 0,
                  this.rigidBody = void 0,
                  this.collider = void 0,
                  this.atkName = "attack",
                  this.idleName = "idle",
                  this.attackRegion = 100,
                  this.searchRegion = 2e3,
                  this.attackSpeed = 1,
                  this.attackDuration = 1,
                  this.atkEvents = [],
                  this.dir = new a,
                  this.target = void 0,
                  this.audoComplete = !0,
                  this.windupTime = 1e3,
                  this._bulletCount = 0,
                  this._dartleCount = 0,
                  this._dartleInterval = 0,
                  this.dartleIndex = 0,
                  this.targetId = -1,
                  this.state = o.Search,
                  this.states = new Array,
                  this.searchRegionx2 = 4e6,
                  this.attackRegionx2 = 1e4,
                  this.duration = 1e3,
                  this.scale = new a(1,1,1),
                  this.time = 0,
                  this.cdTime = 0,
                  this.caller = void 0,
                  this.attackEnter = void 0,
                  this.attacking = void 0,
                  this.attackLeave = void 0,
                  this.attackBegin = void 0,
                  this.attackEnded = void 0,
                  this.weapon = t,
                  this.node = t.node
              }
              var i = t.prototype;
              return i.init = function() {
                  this.onPlayComplete = this.onPlayComplete.bind(this),
                  this.time = 0,
                  this.cdTime = 0,
                  this.weapon.attackState = h.Idle,
                  this.attackRegionx2 = this.attackRegion * this.attackRegion,
                  this.searchRegionx2 = this.searchRegion * this.searchRegion,
                  this.weapon.playAnimation(this.idleName, !0),
                  this.node.setScale(this.scale),
                  this.rigidBody && (this.rigidBody.enabled = !1),
                  this.state = o.Search,
                  this.states.length = 0,
                  this.states.push(this.onSearchState),
                  this.states.push(this.onAttackBeginState),
                  this.states.push(this.onAttackingState),
                  this.states.push(this.onAttackEndedState),
                  this.states.push(this.onCDState)
              }
              ,
              i.unInit = function() {}
              ,
              i.refresh = function() {
                  this.state = o.Search
              }
              ,
              i.onUpdate = function(t) {
                  this.states[this.state].call(this, t)
              }
              ,
              i.onSearchState = function(t) {
                  var e = s.ins.findClosestEnemy(this.node.worldPosition);
                  e && e.isLive && !e.isInvincible ? (a.subtract(this.dir, e.worldCenter, this.fireNode.worldPosition),
                  this.updateDir(),
                  this.dir.lengthSqr() < this.attackRegionx2 && (this.target = e,
                  this.dartleIndex = 0,
                  this.changeState(o.AttackBegin))) : (this.node.setScale(this.scale.x, this.scale.y),
                  this.node.angle = 0)
              }
              ,
              i.onAttackBeginState = function(t) {
                  this.rigidBody && (this.rigidBody.enabled = !0);
                  var e = 1e3 * (this.dartleCount > 1 ? this.dartleInterval : this.attackDuration);
                  this.audoComplete ? this.weapon.playAttackAnimation(this.atkName, this.idleName, this.attackSpeed, e, this.onPlayComplete) : this.weapon.playAttackAnimation(this.atkName, this.idleName, this.attackSpeed),
                  this.weapon.setAtkIndex(0),
                  this.changeState(o.Attacking),
                  this.weapon.attackState = h.Begin,
                  this.attackEnter.call(this.caller),
                  this.dartleCount > 1 && (this.weapon.attackState = h.Running,
                  this.attackBegin.call(this.caller))
              }
              ,
              i.onAttackingState = function(t) {
                  if (this.time += t,
                  this.weapon.getForceddirection()) {
                      if (!this.target.isLive) {
                          var e = s.ins.findClosestEnemy(this.node.worldPosition);
                          e && (this.target = e)
                      }
                      a.subtract(this.dir, this.target.worldCenter, this.fireNode.worldPosition),
                      this.updateDir()
                  } else
                      this.weapon.attackState == h.Begin && (a.subtract(this.dir, this.target.worldCenter, this.fireNode.worldPosition),
                      this.updateDir());
                  if (this.attacking.call(this.caller),
                  this.dartleCount > 1)
                      this.time > this.dartleInterval && (this.weapon.attackState = h.Ended,
                      this.attackEnded.call(this.caller),
                      this.changeState(o.AttackEnded));
                  else {
                      var i = this.atkEvents;
                      if (this.weapon.getAtkIndex() < i.length) {
                          var n = this.weapon.getCurrentAnimationTime(this.attackSpeed)
                            , c = i[this.weapon.getAtkIndex()];
                          this.weapon.attackState == h.Begin && n > c.x && (this.weapon.attackState = h.Running,
                          this.attackBegin.call(this.caller)),
                          this.weapon.attackState == h.Running && n > c.y && (this.weapon.increaseAtkIndex(),
                          this.weapon.getAtkIndex() < i.length ? this.weapon.attackState = h.Begin : (this.weapon.attackState = h.Ended,
                          this.attackEnded.call(this.caller)))
                      }
                  }
              }
              ,
              i.onAttackEndedState = function(t) {
                  this.dartleIndex < this.dartleCount ? (this.dartleIndex += 1,
                  this.changeState(o.AttackBegin)) : (this.weapon.playAnimation(this.idleName, !1),
                  this.changeState(o.CD))
              }
              ,
              i.onCDState = function(t) {
                  if (this.time += t,
                  this.time < this.cdTime) {
                      var e = s.ins.findClosestEnemy(this.node.worldPosition);
                      e && e.isLive && (a.subtract(this.dir, e.worldCenter, this.fireNode.worldPosition),
                      this.updateDir())
                  } else
                      this.changeState(o.Search)
              }
              ,
              i.updateDir = function() {
                  if (this.dir.x > 0) {
                      var t = Math.atan(this.dir.y / this.dir.x);
                      this.scale.x = Math.abs(this.scale.x),
                      this.node.setScale(this.scale.x, this.scale.y),
                      this.node.angle = n.math.getAngle(t)
                  } else if (this.dir.x < 0) {
                      var e = Math.atan(this.dir.y / this.dir.x);
                      this.scale.x = -Math.abs(this.scale.x),
                      this.node.setScale(this.scale.x, this.scale.y),
                      this.node.angle = n.math.getAngle(e)
                  } else
                      this.scale.x = Math.abs(this.scale.x),
                      this.node.setScale(this.scale.x, this.scale.y),
                      this.dir.y > 0 ? this.node.angle = 90 : this.node.angle = -90
              }
              ,
              i.stopAttack = function() {
                  this.state == o.Attacking && this.onAttackLeave()
              }
              ,
              i.onPlayComplete = function() {
                  this.state == o.Attacking && this.onAttackLeave()
              }
              ,
              i.onAttackLeave = function() {
                  this.weapon.playAnimation(this.idleName, !0),
                  this.rigidBody && (this.rigidBody.enabled = !1),
                  this.dartleIndex < this.dartleCount ? this.changeState(o.AttackEnded) : this.changeState(o.CD),
                  this.weapon.attackState = h.Idle,
                  this.attackLeave.call(this.caller)
              }
              ,
              i.changeState = function(t) {
                  this.time = 0,
                  this.state = t
              }
              ,
              i.setCD = function(t) {
                  this.cdTime = .001 * t
              }
              ,
              i.setAttackSpeed = function(t) {
                  this.attackSpeed = t,
                  this.attackDuration = this.weapon.getAnimationDuration(this.atkName) / t
              }
              ,
              i.setAttackDuration = function(t) {
                  var e = .001 * t
                    , i = this.weapon.getAnimationDuration(this.atkName);
                  i > 0 ? e > i ? (this.attackDuration = e,
                  this.attackSpeed = 1) : (this.attackDuration = e,
                  this.attackSpeed = i / e) : (this.attackDuration = e,
                  this.attackSpeed = this.windupTime / e)
              }
              ,
              i.setSearchRegion = function(t) {
                  this.searchRegion = t,
                  this.searchRegionx2 = t * t
              }
              ,
              i.setAttackRegion = function(t) {
                  this.attackRegion = t,
                  this.attackRegionx2 = t * t
              }
              ,
              i.setBulletCount = function(t) {
                  this._bulletCount = t
              }
              ,
              i.setDartleCount = function(t) {
                  this._dartleCount = t
              }
              ,
              i.setDartleInterval = function(t) {
                  this._dartleInterval = .001 * t
              }
              ,
              i.setDir = function(t, e) {
                  t > 0 ? this.scale.x = Math.abs(this.scale.x) : t < 0 && (this.scale.x = -Math.abs(this.scale.x))
              }
              ,
              i.setScale = function(t) {
                  a.copy(this.scale, t),
                  this.node && this.node.setScale(this.scale)
              }
              ,
              e(t, [{
                  key: "bulletCount",
                  get: function() {
                      return this._bulletCount
                  }
              }, {
                  key: "dartleCount",
                  get: function() {
                      return this._dartleCount
                  }
              }, {
                  key: "dartleInterval",
                  get: function() {
                      return this._dartleInterval
                  }
              }]),
              t
          }());
          i._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/WeaponCom.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./proto.mjs_cjs=&original=.js", "./CharCom.ts", "./Weapon2.ts", "./proto.js"], (function(t) {
  var e, n, o, a, s;
  return {
      setters: [function(t) {
          e = t.inheritsLoose
      }
      , function(t) {
          n = t.cclegacy
      }
      , null, function(t) {
          o = t.CharCom
      }
      , function(t) {
          a = t.WeaponObj
      }
      , function(t) {
          s = t.default
      }
      ],
      execute: function() {
          n._RF.push({}, "177ba3gJllEyqq+KvaCxm0s", "WeaponCom", void 0);
          t("WeaponCom", function(t) {
              function n() {
                  for (var e, n = arguments.length, o = new Array(n), a = 0; a < n; a++)
                      o[a] = arguments[a];
                  return (e = t.call.apply(t, [this].concat(o)) || this).weapons = new Array,
                  e.weaponNum = new Map,
                  e.ulist = new Array,
                  e.ulistLen = 0,
                  e.uFrame = 0,
                  e
              }
              e(n, t);
              var o = n.prototype;
              return o.init = function(e, n) {
                  t.prototype.init.call(this, e, n)
              }
              ,
              o.destoy = function() {
                  t.prototype.destroy.call(this);
                  for (var e = 0; e < this.weapons.length; e++) {
                      var n = this.weapons[e];
                      n.destroy(),
                      n = null
                  }
                  this.weapons = null
              }
              ,
              o.onUpdate = function() {
                  if (0 != this.ulistLen && (this.uFrame++,
                  !(this.uFrame < 5))) {
                      for (var t = 0; t < this.ulist.length; t++) {
                          this.ulist[t].onUpdate()
                      }
                      this.uFrame = 0
                  }
              }
              ,
              o.onStageStart = function() {
                  this.ulistLen = 0,
                  this.ulist.splice(0, this.ulist.length);
                  for (var t = 0; t < this.weapons.length; t++) {
                      var e = this.weapons[t];
                      e.onStageStart() && (this.ulist.push(e),
                      this.ulistLen++)
                  }
              }
              ,
              o.reset = function(t) {
                  for (var e = 0; e < this.weapons.length; e++) {
                      var n = this.weapons[e];
                      n.destroy(),
                      n = null
                  }
                  this.weapons.splice(0, this.weapons.length);
                  for (var o = 0; o < t.length; o++)
                      this.addWeapon(t[o])
              }
              ,
              o.addWeapon = function(t) {
                  var e = this.create(t);
                  return null != e && this.insert(e),
                  e
              }
              ,
              o.removeWeapon = function(t) {
                  for (var e = -1, n = 0; n < this.weapons.length; n++) {
                      if (this.weapons[n].getWSN() == t) {
                          e = n;
                          break
                      }
                  }
                  -1 != e && this.remove(e)
              }
              ,
              o.getWeapons = function() {
                  return this.weapons
              }
              ,
              o.getWeaponSNAry = function() {
                  for (var t = [], e = 0; e < this.weapons.length; e++) {
                      var n = this.weapons[e];
                      t.push(n.getWSN())
                  }
                  return t
              }
              ,
              o.getCount = function() {
                  return this.weapons.length
              }
              ,
              o.getWeapon = function(t) {
                  for (var e = 0; e < this.weapons.length; e++) {
                      var n = this.weapons[e];
                      if (n.getWSN() == t)
                          return n
                  }
                  return null
              }
              ,
              o.getNameNum = function(t) {
                  return this.weaponNum.has(t) ? this.weaponNum.get(t) : 0
              }
              ,
              o.getTypeNumByID = function(t) {
                  for (var e = 0, n = DataCenter.Weapon.Get(t).Type, o = 0; o < this.weapons.length; o++) {
                      this.weapons[o].getWeaponConfig().Type == n && e++
                  }
                  return e
              }
              ,
              o.getIDNum = function(t) {
                  for (var e = 0, n = 0; n < this.weapons.length; n++) {
                      this.weapons[n].getCfgID() == t && e++
                  }
                  return e
              }
              ,
              o.getStageDmg = function(t) {
                  var e = this.getWeapon(t);
                  return e ? e.getStageDmg() : 0
              }
              ,
              o.haveMerge = function(t) {
                  var e = this.getWeapon(t);
                  if (!e)
                      return 0;
                  if (0 == e.getWeaponConfig().NextID)
                      return 0;
                  for (var n = 0; n < this.weapons.length; n++) {
                      var o = this.weapons[n];
                      if (o.getWSN() != t && o.getCfgID() == e.getCfgID())
                          return o.getWSN()
                  }
                  return 0
              }
              ,
              o.canBuy = function(t) {
                  if (this.getCount() >= this.owner.getAttrVal(s.msg.AttrType.AT_WeaponMax)) {
                      for (var e = 0; e < this.weapons.length; e++) {
                          if (this.weapons[e].getCfgID() == t)
                              return !0
                      }
                      return !1
                  }
                  return !0
              }
              ,
              o.create = function(t) {
                  if (null == DataCenter.Weapon.Get(t.WID))
                      return null;
                  var e = new a;
                  return e.init(t, this.owner, this),
                  e
              }
              ,
              o.insert = function(t) {
                  if (this.weapons.push(t),
                  this.weaponNum.has(t.getWeaponConfig().Name)) {
                      var e = this.weaponNum.get(t.getWeaponConfig().Name);
                      this.weaponNum.set(t.getWeaponConfig().Name, e + 1)
                  } else
                      this.weaponNum.set(t.getWeaponConfig().Name, 1)
              }
              ,
              o.remove = function(t) {
                  var e = this.weapons[t]
                    , n = e.getWeaponConfig().Name;
                  e.destroy(),
                  this.weapons.splice(t, 1);
                  var o = this.weaponNum.get(n);
                  1 == o ? this.weaponNum.delete(n) : this.weaponNum.set(n, o - 1)
              }
              ,
              n
          }(o));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/WeaponEditor.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./Weapon.ts", "./Kit.ts"], (function(e) {
  var t, n, i, o, r, a, c, p, u, l, s, d, f, y;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          n = e.inheritsLoose,
          i = e.initializerDefineProperty,
          o = e.assertThisInitialized
      }
      , function(e) {
          r = e.cclegacy,
          a = e._decorator,
          c = e.Node,
          p = e.CCFloat,
          u = e.PhysicsSystem2D,
          l = e.EPhysics2DDrawFlags,
          s = e.Component,
          d = e.Vec3
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          y = e.default
      }
      ],
      execute: function() {
          var w, b, h, g, v, D, m, z;
          r._RF.push({}, "3c113iCwkJDl6ObgfUVH3Bx", "WeaponEditor", void 0);
          var C = a.ccclass
            , E = a.property;
          e("WeaponEditor", (w = C("WeaponEditor"),
          b = E({
              type: c
          }),
          h = E({
              type: p
          }),
          w((D = t((v = function(e) {
              function t() {
                  for (var t, n = arguments.length, r = new Array(n), a = 0; a < n; a++)
                      r[a] = arguments[a];
                  return t = e.call.apply(e, [this].concat(r)) || this,
                  i(t, "weaponNode", D, o(t)),
                  i(t, "dir", m, o(t)),
                  i(t, "duration", z, o(t)),
                  t.weapon = void 0,
                  t
              }
              n(t, e);
              var r = t.prototype;
              return r.start = function() {
                  u.instance.enable = !0,
                  u.instance.debugDrawFlags = l.Shape,
                  this.weapon = this.weaponNode.getComponent(f),
                  this.weapon.init()
              }
              ,
              r.update = function(e) {
                  y.update(e)
              }
              ,
              r.onAttack = function() {}
              ,
              t
          }(s)).prototype, "weaponNode", [b], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          m = t(v.prototype, "dir", [E], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return new d
              }
          }),
          z = t(v.prototype, "duration", [h], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: function() {
                  return 600
              }
          }),
          g = v)) || g));
          r._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/WeaponState.ts", ["cc"], (function(t) {
  var n;
  return {
      setters: [function(t) {
          n = t.cclegacy
      }
      ],
      execute: function() {
          n._RF.push({}, "1017fxxiDxH46qc7Ff+0e/K", "WeaponState", void 0);
          t("WeaponState", function(t) {
              return t[t.Search = 0] = "Search",
              t[t.AttackBegin = 1] = "AttackBegin",
              t[t.Attacking = 2] = "Attacking",
              t[t.AttackEnded = 3] = "AttackEnded",
              t[t.CD = 4] = "CD",
              t
          }({})),
          t("WeaponAttackState", function(t) {
              return t[t.Idle = 0] = "Idle",
              t[t.Begin = 1] = "Begin",
              t[t.Running = 2] = "Running",
              t[t.Ended = 3] = "Ended",
              t
          }({}));
          n._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/WeaponTips.ts", ["./rollupPluginModLoBabelHelpers.js", "cc", "./UIWindow.ts", "./UIHelper.ts", "./ObjMgr.ts", "./UIRoot.ts", "./proto.mjs_cjs=&original=.js", "./MessageId.ts", "./BattleMgr.ts", "./BattleDef.ts", "./proto.js"], (function(e) {
  var t, i, n, o, a, l, r, s, p, c, u, h, g, f, m, S, y, b, D;
  return {
      setters: [function(e) {
          t = e.applyDecoratedDescriptor,
          i = e.inheritsLoose,
          n = e.initializerDefineProperty,
          o = e.assertThisInitialized
      }
      , function(e) {
          a = e.cclegacy,
          l = e.Button,
          r = e.Node,
          s = e.Sprite,
          p = e.Label,
          c = e.RichText,
          u = e.Vec3
      }
      , function(e) {
          h = e.default
      }
      , function(e) {
          g = e.default
      }
      , function(e) {
          f = e.default
      }
      , function(e) {
          m = e.default
      }
      , null, function(e) {
          S = e.default
      }
      , function(e) {
          y = e.BattleMgr
      }
      , function(e) {
          b = e.BattleDef
      }
      , function(e) {
          D = e.default
      }
      ],
      execute: function() {
          var d, v, P, B, I, T, G, O, C, w, W, j, M, E, z, N, _, k, x, F, R, U, A, V, L, q, H;
          a._RF.push({}, "9508ej28DRGNZX8ikOBsSwA", "WeaponTips", void 0);
          e("default", (d = uiBind("fgui/pause", "WeaponTips"),
          v = uiInject("CloseBtn", l),
          P = uiInject("Panel", r),
          B = uiInject("Panel/BackFrame", s),
          I = uiInject("Panel/Title", p),
          T = uiInject("Panel/Icon", s),
          G = uiInject("Panel/Desc", c),
          O = uiInject("Panel/TypeText", p),
          C = uiInject("Panel/MergeBtn", l),
          w = uiInject("Panel/SaleBtn", l),
          W = uiInject("Panel/SaleBtn/Label", p),
          j = uiInject("Panel/Property/Desc", c),
          M = uiInject("Panel/Tips/Desc", c),
          d((N = t((z = function(e) {
              function t() {
                  for (var t, i = arguments.length, a = new Array(i), l = 0; l < i; l++)
                      a[l] = arguments[l];
                  return t = e.call.apply(e, [this].concat(a)) || this,
                  n(t, "CloseBtn", N, o(t)),
                  n(t, "Panel", _, o(t)),
                  n(t, "BackFrame", k, o(t)),
                  n(t, "Title", x, o(t)),
                  n(t, "Icon", F, o(t)),
                  n(t, "Desc", R, o(t)),
                  n(t, "Type", U, o(t)),
                  n(t, "MergeBtn", A, o(t)),
                  n(t, "SaleBtn", V, o(t)),
                  n(t, "SaleText", L, o(t)),
                  n(t, "PropertyDesc", q, o(t)),
                  n(t, "TipsDesc", H, o(t)),
                  t.id = void 0,
                  t.sn = void 0,
                  t.suitCount = void 0,
                  t.caller = void 0,
                  t.onEvent = void 0,
                  t.position = new u,
                  t
              }
              i(t, e);
              var a = t.prototype;
              return a.getPrototype = function() {
                  return t.prototype
              }
              ,
              a.onEnable = function() {
                  var e = this;
                  this.Panel.position = this.position;
                  var t = DataCenter.Weapon.Get(this.id)
                    , i = DataCenter.Build.Get(t.Type);
                  this.BackFrame.spriteFrame = g.getGoodsBackground(t.Rarity),
                  this.Icon.spriteFrame = g.getWeaponIcon(t.IconId),
                  this.Title.string = t.Name,
                  this.Title.color = g.getItemColor(t.Rarity),
                  this.Desc.string = t.Desc;
                  var n = y.ins.getStage().getWave()
                    , o = t.Price
                    , a = DataCenter.Shop.Get(y.ins.getStage().getCfg().Shop)
                    , l = DataCenter.Config.Get("SellX")
                    , r = o * (b.UnitePct + a.IncreaseSell * (n - 1)) / b.UnitePct;
                  this.SaleText.string = Math.floor(r * l.Value / b.UnitePct).toString(),
                  this.Type.string = i.Name;
                  var s = f.ins.getChar().getWeaponStageDmg(this.sn);
                  this.TipsDesc.string = "THIS WEAPON INFLICTED <color=#00ff00>" + s + "</color> DAMAGE IN THE PREVIOUS WAVE",
                  this.refreshPropertyDesc();
                  var p = this.SaleBtn.node.position;
                  0 == t.NextID ? (this.MergeBtn.node.active = !1,
                  this.SaleBtn.node.setPosition(12, p.y)) : (this.MergeBtn.node.active = !0,
                  this.SaleBtn.node.setPosition(74, p.y)),
                  this.onClick(this.MergeBtn, (function() {
                      e.requestWeaponMerge(e.id, e.sn)
                  }
                  )),
                  this.onClick(this.SaleBtn, (function() {
                      e.requestWeaponSell(e.sn)
                  }
                  )),
                  this.onClick(this.CloseBtn, (function() {
                      e.close()
                  }
                  )),
                  this.register(S.GameShopOperate, this, this.onGameShopOperate)
              }
              ,
              a.onDisable = function() {
                  this.unRegister(S.GameShopOperate, this, this.onGameShopOperate)
              }
              ,
              a.refreshPropertyDesc = function() {
                  for (var e = DataCenter.Weapon.Get(this.id), t = DataCenter.Build.Get(e.Type), i = [t.N2_Desc, t.N3_Desc, t.N4_Desc, t.N5_Desc, t.N6_Desc], n = "", o = 0; o < i.length; ++o) {
                      var a = o + 2;
                      a <= this.suitCount ? n += "<color=#fff173>[" + a + "] " + i[o] + "</color>\n" : n += "<color=#8f8f8f>[" + a + "] " + i[o] + "</color>\n"
                  }
                  this.PropertyDesc.string = n
              }
              ,
              a.setData = function(e, t, i) {
                  this.id = e,
                  this.sn = t,
                  this.suitCount = i
              }
              ,
              a.listen = function(e, t) {
                  this.caller = e,
                  this.onEvent = t
              }
              ,
              a.setPosition = function(e) {
                  this.position.x = e.x + 95,
                  this.position.y = e.y + 160,
                  this.Panel && (this.Panel.position = this.position)
              }
              ,
              a.requestWeaponSell = function(e) {
                  var t = new D.msg.GameShopOperate;
                  t.Op = D.msg.GameShopOpType.GSO_WeaponSell,
                  t.OpVal.push(e),
                  this.send(S.GameShopOperate, t)
              }
              ,
              a.requestWeaponMerge = function(e, t) {
                  var i = f.ins.getChar().haveWeaponMerge(t);
                  if (0 != i) {
                      var n = new D.msg.GameShopOperate;
                      n.Op = D.msg.GameShopOpType.GSO_WeaponMerge,
                      n.OpVal.push(t, i),
                      this.send(S.GameShopOperate, n)
                  } else
                      m.textTips.play("You have no weapons to merge")
              }
              ,
              a.onGameShopOperate = function(e) {
                  switch (e.Op) {
                  case D.msg.GameShopOpType.GSO_WeaponSell:
                      this.onEvent && (this.onEvent.call(this.caller, "sale"),
                      this.onEvent = null,
                      this.caller = null);
                      break;
                  case D.msg.GameShopOpType.GSO_WeaponMerge:
                      this.onEvent && (this.onEvent.call(this.caller, "merge"),
                      this.onEvent = null,
                      this.caller = null)
                  }
                  this.close()
              }
              ,
              t
          }(h)).prototype, "CloseBtn", [v], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          _ = t(z.prototype, "Panel", [P], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          k = t(z.prototype, "BackFrame", [B], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          x = t(z.prototype, "Title", [I], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          F = t(z.prototype, "Icon", [T], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          R = t(z.prototype, "Desc", [G], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          U = t(z.prototype, "Type", [O], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          A = t(z.prototype, "MergeBtn", [C], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          V = t(z.prototype, "SaleBtn", [w], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          L = t(z.prototype, "SaleText", [W], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          q = t(z.prototype, "PropertyDesc", [j], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          H = t(z.prototype, "TipsDesc", [M], {
              configurable: !0,
              enumerable: !0,
              writable: !0,
              initializer: null
          }),
          E = z)) || E));
          a._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/WeaponType.ts", ["cc"], (function(e) {
  var t;
  return {
      setters: [function(e) {
          t = e.cclegacy
      }
      ],
      execute: function() {
          t._RF.push({}, "fbf80A4DHVAV5ogIjfC/RR6", "WeaponType", void 0);
          e("WeaponType", function(e) {
              return e[e.MiddleAge = 1] = "MiddleAge",
              e[e.Martial = 2] = "Martial",
              e[e.Elemental = 3] = "Elemental",
              e[e.Firearms = 4] = "Firearms",
              e[e.Melee = 5] = "Melee",
              e[e.Max = 6] = "Max",
              e
          }({}));
          t._RF.pop()
      }
  }
}
));

System.register("chunks:///_virtual/WWW.ts", ["./rollupPluginModLoBabelHelpers.js", "cc"], (function(t) {
  var e, n, r;
  return {
      setters: [function(t) {
          e = t.asyncToGenerator,
          n = t.regeneratorRuntime
      }
      , function(t) {
          r = t.cclegacy
      }
      ],
      execute: function() {
          r._RF.push({}, "e64c3KLODFH5obvsCCyo3NS", "WWW", void 0),
          t("default", function() {
              function t() {}
              return t.safetyCall = function(t, e) {
                  for (var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), u = 2; u < n; u++)
                      r[u - 2] = arguments[u];
                  t && (e ? t.apply(e, r) : t(r))
              }
              ,
              t.Get = function() {
                  var t = e(n().mark((function t(e, r, u, a) {
                      return n().wrap((function(t) {
                          for (; ; )
                              switch (t.prev = t.next) {
                              case 0:
                                  return t.abrupt("return", new Promise((function(t, n) {
                                      var s = "";
                                      if (a)
                                          for (var o in a)
                                              s += o + "=" + a[o] + "&";
                                      var l = new XMLHttpRequest;
                                      l.onreadystatechange = function() {
                                          if (console.log("Get: readyState:" + l.readyState + " status:" + l.status),
                                          4 === l.readyState || 200 === l.readyState)
                                              if (l.status >= 200 && l.status < 400) {
                                                  var e = l.responseText;
                                                  r && (u ? r.apply(u, [e, null]) : r(e, null)),
                                                  t(e)
                                              } else
                                                  null != r && (u ? r.apply(u, [null, {
                                                      status: l.status
                                                  }]) : r(null, {
                                                      status: l.status
                                                  })),
                                                  t(null)
                                      }
                                      ,
                                      l.withCredentials = !0,
                                      l.open("GET", e, !0),
                                      l.timeout = 8e3,
                                      l.send(s)
                                  }
                                  )));
                              case 1:
                              case "end":
                                  return t.stop()
                              }
                      }
                      ), t)
                  }
                  )));
                  return function(e, n, r, u) {
                      return t.apply(this, arguments)
                  }
              }(),
              t.Post = function() {
                  var t = e(n().mark((function t(e, r, u, a) {
                      return n().wrap((function(t) {
                          for (; ; )
                              switch (t.prev = t.next) {
                              case 0:
                                  return t.abrupt("return", new Promise((function(t, n) {
                                      var s = new XMLHttpRequest;
                                      s.onreadystatechange = function() {
                                          if (4 === s.readyState || 200 === s.readyState)
                                              if (s.status >= 200 && s.status < 400) {
                                                  var e = s.responseText;
                                                  r && (u ? r.apply(u, [e, null]) : r(e, null)),
                                                  t(e)
                                              } else
                                                  null != r && (u ? r.apply(u, [null, {
                                                      status: s.status
                                                  }]) : r(null, {
                                                      status: s.status
                                                  })),
                                                  t(null)
                                      }
                                      ,
                                      s.open("POST", e, !0),
                                      s.timeout = 8e3,
                                      a ? s.send(JSON.stringify(a)) : s.send()
                                  }
                                  )));
                              case 1:
                              case "end":
                                  return t.stop()
                              }
                      }
                      ), t)
                  }
                  )));
                  return function(e, n, r, u) {
                      return t.apply(this, arguments)
                  }
              }(),
              t.stringToUint8Array = function(t) {
                  for (var e = Array(t.length), n = 0, r = t.length; n < r; ++n)
                      e[n] = t.charCodeAt(n);
                  return new Uint8Array(e)
              }
              ,
              t.stringToUint8Array2 = function(t) {
                  var e, n;
                  e = t.length;
                  for (var r = [], u = 0; u < e; u++)
                      (n = t.charCodeAt(u)) >= 65536 && n <= 1114111 ? (r.push(n >> 18 & 7 | 240),
                      r.push(n >> 12 & 63 | 128),
                      r.push(n >> 6 & 63 | 128),
                      r.push(63 & n | 128)) : n >= 2048 && n <= 65535 ? (r.push(n >> 12 & 15 | 224),
                      r.push(n >> 6 & 63 | 128),
                      r.push(63 & n | 128)) : n >= 128 && n <= 2047 ? (r.push(n >> 6 & 31 | 192),
                      r.push(63 & n | 128)) : r.push(255 & n);
                  return new Uint8Array(r)
              }
              ,
              t.uint8ArrayToString = function(t) {
                  for (var e = "", n = 0; n < t.length; n++)
                      e += String.fromCharCode(t[n]);
                  return e
              }
              ,
              t.PostProtoEx = function(e, n, r, u, a, s, o, l) {
                  if (void 0 === l && (l = !0),
                  t.isStop)
                      s.call(o, null);
                  else {
                      l && console.log("请求：" + e + "=>" + JSON.stringify(n));
                      var i = new XMLHttpRequest;
                      i.onreadystatechange = function() {
                          if (4 === i.readyState || 200 === i.readyState)
                              if (i.status >= 200 && i.status < 400) {
                                  var t, n = i.response, r = new Uint8Array(n);
                                  try {
                                      (t = u(r)) && (t.url = e)
                                  } catch (t) {
                                      return console.error("protocal decode error：" + t),
                                      void s.call(o, null)
                                  }
                                  if (l && console.log("请求成功：" + e + "=>" + JSON.stringify(t)),
                                  a && a(t))
                                      return void s.call(o, null);
                                  s.call(o, t)
                              } else {
                                  if (a && a(null))
                                      return void s.call(o, null);
                                  l && console.log("请求失败：" + e + "=>" + i.status),
                                  s.call(o, null)
                              }
                      }
                      ,
                      i.open("POST", e, !0),
                      i.responseType = "arraybuffer",
                      i.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                      var c = r(n).finish()
                        , p = new Blob([c],{
                          type: "buffer"
                      });
                      i.send(p)
                  }
              }
              ,
              t.PostProto = function() {
                  var r = e(n().mark((function e(r, u, a, s, o, l, i, c) {
                      var p = this;
                      return n().wrap((function(e) {
                          for (; ; )
                              switch (e.prev = e.next) {
                              case 0:
                                  return void 0 === c && (c = !0),
                                  e.abrupt("return", new Promise((function(e, n) {
                                      try {
                                          t.PostProtoEx(r, u, a, s, o, (function(t) {
                                              l && i && l.call(i, t),
                                              e(t)
                                          }
                                          ), p, c)
                                      } catch (t) {
                                          console.error("post error：" + r + "=>" + t),
                                          e(null)
                                      }
                                  }
                                  )));
                              case 2:
                              case "end":
                                  return e.stop()
                              }
                      }
                      ), e)
                  }
                  )));
                  return function(t, e, n, u, a, s, o, l) {
                      return r.apply(this, arguments)
                  }
              }(),
              t
          }()).isStop = !1,
          r._RF.pop()
      }
  }
}
));

(function(r) {
  r('virtual:///prerequisite-imports/main', 'chunks:///_virtual/main');
}
)(function(mid, cid) {
  System.register(mid, [cid], function(_export, _context) {
      return {
          setters: [function(_m) {
              var _exportObj = {};

              for (var _key in _m) {
                  if (_key !== "default" && _key !== "__esModule")
                      _exportObj[_key] = _m[_key];
              }

              _export(_exportObj);
          }
          ],
          execute: function() {}
      };
  });
});
